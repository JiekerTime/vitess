package vtgate

import (
	"testing"
)

func TestOne(t *testing.T) {
	mcmp, closer := start(t)
	defer closer()
	//因为分表会在plan层依赖库名这里要加个use ks语句
	mcmp.Exec("use user")
	mcmp.Exec("insert into t_user(id,col,f_key,f_tinyint,f_bit) values (1, 'a', 'aaa', 1, false),(2, 'b', 'bbb', 2, false)")
	mcmp.ExecWithColumnCompare("select id,col,f_key,f_tinyint,f_bit from t_user")

	// table_select_case.json
	mcmp.ExecWithColumnCompare("select 1 from t_user")
	mcmp.ExecWithColumnCompare("select t_user.* from t_user")
	mcmp.ExecWithColumnCompare("select * from t_user")
	mcmp.ExecWithColumnCompare("select t_user.* from t_user")
	mcmp.ExecWithColumnCompare("select user.t_user.* from user.t_user")
	//table t_authoritative not found
	//mcmp.ExecWithColumnCompare("select * from t_authoritative")
	//mcmp.ExecWithColumnCompare("select a.* from t_authoritative a")
	//You have an error in your SQL syntax
	//mcmp.ExecWithColumnCompare("select 42, id from dual, t_user")
	//table t_music not found
	//mcmp.ExecWithColumnCompare("select user_id from t_music order by user_id limit 10, 20")
	mcmp.ExecWithColumnCompare("select * from t_user where name ='abc' AND (id = 4) and (col = 123) limit 5")
	mcmp.ExecWithColumnCompare("select * from t_user where (id = 4) AND (name ='abc') AND (col = 'abc') limit 5")
	mcmp.ExecWithColumnCompare("select * from t_user where (id = 4 AND name ='abc' AND col = 'abc') limit 5")
	mcmp.ExecWithColumnCompare("select user0_.col as col0_ from t_user user0_ where id = 1 and col = 3 order by user0_.col desc limit 2")
	mcmp.ExecWithColumnCompare("select user0_.col as col0_ from t_user user0_ where id = 1 and col = 12 order by col0_ desc limit 3")
	mcmp.ExecWithColumnCompare("select user0_.col as col0_ from t_user user0_ where id = 1 order by user0_.col desc limit 2")
	mcmp.ExecWithColumnCompare("select user0_.col as col0_ from t_user user0_ where id = 1 order by col0_ desc limit 3")
	mcmp.ExecWithColumnCompare("select * from t_user where (id = 1) and (col = 12) AND name = true limit 5")
	mcmp.ExecWithColumnCompare("select * from t_user where (id = 1) and (col = 12) AND name limit 5")
	mcmp.ExecWithColumnCompare("select * from t_user where (id = 5) and (col = 12) AND name = true limit 5")

	// table_filter_cases.json
	mcmp.ExecWithColumnCompare("select id from t_user")
	mcmp.ExecWithColumnCompare("select id from t_user where someColumn = null")
	mcmp.ExecWithColumnCompare("SELECT id from t_user where someColumn <=> null")
	mcmp.ExecWithColumnCompare("select id from t_user where (col, name) in (('aa', 'bb')) and id = 5")
	//Operand should contain 2 column(s) (errno 1241) (sqlstate 21000)
	//mcmp.ExecWithColumnCompare("select id from t_user where ((col1, name), col2) in (('aa', 'bb', 'cc'), (('dd', 'ee'), 'ff'))")
	mcmp.ExecWithColumnCompare("select Id from t_user where 1 in ('aa', 'bb')")
	mcmp.ExecWithColumnCompare("select id from t_user where name in (col, 'bb')")
	mcmp.ExecWithColumnCompare("select id from t_user where t_user.id = 5")
	mcmp.ExecWithColumnCompare("select id from t_user where t_user.id = 5+5")
	// missing bind var __vals
	//mcmp.ExecWithColumnCompare("select id from t_user where t_user.col = 5 and t_user.id in (1, 2)")
	//mcmp.ExecWithColumnCompare("select id from t_user where t_user.col = case t_user.col when 'foo' then true else false end and t_user.id in (1, 2)")
	mcmp.ExecWithColumnCompare("select id from t_user where t_user.col = 5 and t_user.id in (1, 2) and t_user.name = 'aa' and t_user.id = 1")
	mcmp.ExecWithColumnCompare("select id from t_user where t_user.id = 1 and t_user.name = 'aa' and t_user.id in (1, 2) and t_user.col = 5")
	mcmp.ExecWithColumnCompare("select id from t_user where t_user.id = 1 or t_user.name = 'aa' and t_user.id in (1, 2)")
	mcmp.ExecWithColumnCompare("select id from t_user where database()")
	mcmp.ExecWithColumnCompare("select id from t_user where t_user.id > 5")
	mcmp.ExecWithColumnCompare("select id from t_user where t_user.id = t_user.col and t_user.col = 5")
	mcmp.ExecWithColumnCompare("select id from t_user where (id, name) = (34, 'apa')")
	//missing bind var __vals
	//mcmp.ExecWithColumnCompare("select col from t_user where id = 1 or id = 2")
	//mcmp.ExecWithColumnCompare("select col from t_user where id = 1 or id = 2 or id = 3")
	//mcmp.ExecWithColumnCompare("select col from t_user where (id = 1 or id = 2) or (id = 3 or id = 4)")
	mcmp.ExecWithColumnCompare("select a+2 as a from t_user having a = 42")
	mcmp.ExecWithColumnCompare("select t_user.col + 2 as a from t_user having a = 42")
	mcmp.ExecWithColumnCompare("select id from t_user where (id = 5 and name ='apa') or (id = 5 and foo = 'bar')")
	mcmp.ExecWithColumnCompare("select id from t_user where (id = 5 and name ='foo') or (id = 12 and name = 'bar')")
	mcmp.ExecWithColumnCompare("select textcol1 from t_user where foo = 42 and t_user.foo = 42")
	mcmp.ExecWithColumnCompare("select id from t_user where t_user.col = 5")
	mcmp.ExecWithColumnCompare("select id from t_user where 5 = col")
	mcmp.ExecWithColumnCompare("select id from t_user where t_user.col in (5)")
	mcmp.ExecWithColumnCompare("select id from t_user where t_user.col in (5, 6, 7)")
	mcmp.ExecWithColumnCompare("select id from t_user where t_user.col in (5, 6, 7) and col = 9")
	mcmp.ExecWithColumnCompare("select id from t_user where t_user.col is null")
	mcmp.ExecWithColumnCompare("select id from t_user where t_user.col = null")
	mcmp.ExecWithColumnCompare("select id from t_user where not (not col = 3)")
	mcmp.ExecWithColumnCompare("select id from t_user where (col in (1, 5) and B or C and col in (5, 7))")
	mcmp.ExecWithColumnCompare("select id from t_user where t_user.col = 5+5")
	mcmp.ExecWithColumnCompare("select id from t_user where id = 123 and t_user.col = 5+5")

	// table_postprocess_cases.json
	mcmp.ExecWithColumnCompare("select predef1 from t_user where id = 5 order by predef2")
	mcmp.ExecWithColumnCompare("select predef1 from t_user where id = 5 and col = 6 order by col")
	mcmp.ExecWithColumnCompare("select col from t_user order by col")
	mcmp.ExecWithColumnCompare("select id from t_user order by id")
	mcmp.ExecWithColumnCompare("select col from t_user order by id")
	mcmp.ExecWithColumnCompare("select col from t_user order by 1")
	mcmp.ExecWithColumnCompare("select id as foo from t_user order by 1")
	mcmp.ExecAllowAndCompareError("select col from t_user order by 2")
	mcmp.ExecWithColumnCompare("select col from t_user order by null")
	mcmp.ExecWithColumnCompare("select * from t_user where id = 5 and col = 6 order by a")
	mcmp.ExecWithColumnCompare("select t_user.* from t_user where id = 5 and col = 6 order by t_user.a")
	mcmp.ExecWithColumnCompare("select * from t_user where id = 5 and col = 6 order by t_user.a")
	//VT12001: unsupported: '*' expression in cross-shard query
	//mcmp.ExecWithColumnCompare("select t.*, t.col from t_user t order by t.col")
	//mcmp.ExecWithColumnCompare("select *, col from t_user order by col")
	//mcmp.ExecWithColumnCompare("select t.*, t.name, t.*, t.col from t_user t order by t.col")
	//mcmp.ExecWithColumnCompare("select *, name, *, col from t_user order by col")
	mcmp.ExecWithColumnCompare("select col from t_user order by a,b")
	mcmp.ExecWithColumnCompare("select id,col,a,b from t_user order by 2,3")
	mcmp.ExecWithColumnCompare("select col from t_user order by RAND()")
	mcmp.ExecAllowAndCompareError("select t_user.* from t_user where id = 5 order by e.col")
	//error parsing column number: 18446744073709551616
	//mcmp.ExecWithColumnCompare("select col from t_user where id = 5 order by 18446744073709551616")
	mcmp.ExecAllowAndCompareError("select col from t_user where id = 5 order by 2")
	mcmp.ExecWithColumnCompare("select * from t_user where id = 5 and col = 6 order by -col1")
	mcmp.ExecWithColumnCompare("select * from t_user where id = 5 and col = 6 order by concat(col,col1) collate utf8_general_ci desc")
	mcmp.ExecWithColumnCompare("select * from t_user where id = 5 and col = 6 order by id+col collate utf8_general_ci desc")
	mcmp.ExecWithColumnCompare("select col from t_user where id = 1  and col = 6 order by col")
	mcmp.ExecWithColumnCompare("select col as foo from t_user order by foo")
	mcmp.ExecWithColumnCompare("select col as foo,col2 as col from t_user order by col")
	mcmp.ExecWithColumnCompare("select col, col from t_user order by col")
	mcmp.ExecWithColumnCompare("select col from t_user order by col+1")
	mcmp.ExecWithColumnCompare("select t_user.col1 as a from t_user order by 1 collate utf8_general_ci")
}
