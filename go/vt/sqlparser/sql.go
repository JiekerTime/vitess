// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func markBindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const SELECT = 57351
const STREAM = 57352
const VSTREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const DEFAULT = 57374
const SET = 57375
const LOCK = 57376
const UNLOCK = 57377
const KEYS = 57378
const DO = 57379
const CALL = 57380
const DISTINCTROW = 57381
const PARSER = 57382
const GENERATED = 57383
const ALWAYS = 57384
const OUTFILE = 57385
const S3 = 57386
const DATA = 57387
const LOAD = 57388
const LINES = 57389
const TERMINATED = 57390
const ESCAPED = 57391
const ENCLOSED = 57392
const DUMPFILE = 57393
const CSV = 57394
const HEADER = 57395
const MANIFEST = 57396
const OVERWRITE = 57397
const STARTING = 57398
const OPTIONALLY = 57399
const VALUES = 57400
const LAST_INSERT_ID = 57401
const NEXT = 57402
const VALUE = 57403
const SHARE = 57404
const MODE = 57405
const SQL_NO_CACHE = 57406
const SQL_CACHE = 57407
const SQL_CALC_FOUND_ROWS = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const ON = 57419
const USING = 57420
const INPLACE = 57421
const COPY = 57422
const INSTANT = 57423
const ALGORITHM = 57424
const NONE = 57425
const SHARED = 57426
const EXCLUSIVE = 57427
const SUBQUERY_AS_EXPR = 57428
const STRING = 57429
const ID = 57430
const AT_ID = 57431
const AT_AT_ID = 57432
const HEX = 57433
const NCHAR_STRING = 57434
const INTEGRAL = 57435
const FLOAT = 57436
const DECIMAL = 57437
const HEXNUM = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BITNUM = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const VALUE_ARG = 57444
const LIST_ARG = 57445
const OFFSET_ARG = 57446
const JSON_PRETTY = 57447
const JSON_STORAGE_SIZE = 57448
const JSON_STORAGE_FREE = 57449
const JSON_CONTAINS = 57450
const JSON_CONTAINS_PATH = 57451
const JSON_EXTRACT = 57452
const JSON_KEYS = 57453
const JSON_OVERLAPS = 57454
const JSON_SEARCH = 57455
const JSON_VALUE = 57456
const EXTRACT = 57457
const NULL = 57458
const TRUE = 57459
const FALSE = 57460
const OFF = 57461
const DISCARD = 57462
const IMPORT = 57463
const ENABLE = 57464
const DISABLE = 57465
const TABLESPACE = 57466
const VIRTUAL = 57467
const STORED = 57468
const BOTH = 57469
const LEADING = 57470
const TRAILING = 57471
const KILL = 57472
const EMPTY_FROM_CLAUSE = 57473
const LOWER_THAN_CHARSET = 57474
const CHARSET = 57475
const UNIQUE = 57476
const KEY = 57477
const EXPRESSION_PREC_SETTER = 57478
const OR = 57479
const XOR = 57480
const AND = 57481
const NOT = 57482
const BETWEEN = 57483
const CASE = 57484
const WHEN = 57485
const THEN = 57486
const ELSE = 57487
const END = 57488
const LE = 57489
const GE = 57490
const NE = 57491
const NULL_SAFE_EQUAL = 57492
const IS = 57493
const LIKE = 57494
const REGEXP = 57495
const RLIKE = 57496
const IN = 57497
const ASSIGNMENT_OPT = 57498
const SHIFT_LEFT = 57499
const SHIFT_RIGHT = 57500
const DIV = 57501
const MOD = 57502
const UNARY = 57503
const COLLATE = 57504
const BINARY = 57505
const UNDERSCORE_ARMSCII8 = 57506
const UNDERSCORE_ASCII = 57507
const UNDERSCORE_BIG5 = 57508
const UNDERSCORE_BINARY = 57509
const UNDERSCORE_CP1250 = 57510
const UNDERSCORE_CP1251 = 57511
const UNDERSCORE_CP1256 = 57512
const UNDERSCORE_CP1257 = 57513
const UNDERSCORE_CP850 = 57514
const UNDERSCORE_CP852 = 57515
const UNDERSCORE_CP866 = 57516
const UNDERSCORE_CP932 = 57517
const UNDERSCORE_DEC8 = 57518
const UNDERSCORE_EUCJPMS = 57519
const UNDERSCORE_EUCKR = 57520
const UNDERSCORE_GB18030 = 57521
const UNDERSCORE_GB2312 = 57522
const UNDERSCORE_GBK = 57523
const UNDERSCORE_GEOSTD8 = 57524
const UNDERSCORE_GREEK = 57525
const UNDERSCORE_HEBREW = 57526
const UNDERSCORE_HP8 = 57527
const UNDERSCORE_KEYBCS2 = 57528
const UNDERSCORE_KOI8R = 57529
const UNDERSCORE_KOI8U = 57530
const UNDERSCORE_LATIN1 = 57531
const UNDERSCORE_LATIN2 = 57532
const UNDERSCORE_LATIN5 = 57533
const UNDERSCORE_LATIN7 = 57534
const UNDERSCORE_MACCE = 57535
const UNDERSCORE_MACROMAN = 57536
const UNDERSCORE_SJIS = 57537
const UNDERSCORE_SWE7 = 57538
const UNDERSCORE_TIS620 = 57539
const UNDERSCORE_UCS2 = 57540
const UNDERSCORE_UJIS = 57541
const UNDERSCORE_UTF16 = 57542
const UNDERSCORE_UTF16LE = 57543
const UNDERSCORE_UTF32 = 57544
const UNDERSCORE_UTF8 = 57545
const UNDERSCORE_UTF8MB4 = 57546
const UNDERSCORE_UTF8MB3 = 57547
const INTERVAL = 57548
const WINDOW_EXPR = 57549
const JSON_EXTRACT_OP = 57550
const JSON_UNQUOTE_EXTRACT_OP = 57551
const CREATE = 57552
const ALTER = 57553
const DROP = 57554
const RENAME = 57555
const ANALYZE = 57556
const ADD = 57557
const FLUSH = 57558
const CHANGE = 57559
const MODIFY = 57560
const DEALLOCATE = 57561
const REVERT = 57562
const QUERIES = 57563
const SCHEMA = 57564
const TABLE = 57565
const INDEX = 57566
const VIEW = 57567
const TO = 57568
const IGNORE = 57569
const IF = 57570
const PRIMARY = 57571
const COLUMN = 57572
const SPATIAL = 57573
const FULLTEXT = 57574
const KEY_BLOCK_SIZE = 57575
const CHECK = 57576
const INDEXES = 57577
const ACTION = 57578
const CASCADE = 57579
const CONSTRAINT = 57580
const FOREIGN = 57581
const NO = 57582
const REFERENCES = 57583
const RESTRICT = 57584
const SHOW = 57585
const DESCRIBE = 57586
const EXPLAIN = 57587
const DATE = 57588
const ESCAPE = 57589
const REPAIR = 57590
const OPTIMIZE = 57591
const TRUNCATE = 57592
const COALESCE = 57593
const EXCHANGE = 57594
const REBUILD = 57595
const PARTITIONING = 57596
const REMOVE = 57597
const PREPARE = 57598
const EXECUTE = 57599
const MAXVALUE = 57600
const PARTITION = 57601
const REORGANIZE = 57602
const LESS = 57603
const THAN = 57604
const PROCEDURE = 57605
const TRIGGER = 57606
const VINDEX = 57607
const VINDEXES = 57608
const DIRECTORY = 57609
const NAME = 57610
const UPGRADE = 57611
const STATUS = 57612
const VARIABLES = 57613
const WARNINGS = 57614
const CASCADED = 57615
const DEFINER = 57616
const OPTION = 57617
const SQL = 57618
const UNDEFINED = 57619
const SEQUENCE = 57620
const MERGE = 57621
const TEMPORARY = 57622
const TEMPTABLE = 57623
const INVOKER = 57624
const SECURITY = 57625
const FIRST = 57626
const AFTER = 57627
const LAST = 57628
const VITESS_MIGRATION = 57629
const CANCEL = 57630
const RETRY = 57631
const LAUNCH = 57632
const COMPLETE = 57633
const CLEANUP = 57634
const THROTTLE = 57635
const UNTHROTTLE = 57636
const EXPIRE = 57637
const RATIO = 57638
const VITESS_THROTTLER = 57639
const BEGIN = 57640
const START = 57641
const TRANSACTION = 57642
const COMMIT = 57643
const ROLLBACK = 57644
const SAVEPOINT = 57645
const RELEASE = 57646
const WORK = 57647
const CONSISTENT = 57648
const SNAPSHOT = 57649
const BIT = 57650
const TINYINT = 57651
const SMALLINT = 57652
const MEDIUMINT = 57653
const INT = 57654
const INTEGER = 57655
const BIGINT = 57656
const INTNUM = 57657
const REAL = 57658
const DOUBLE = 57659
const FLOAT_TYPE = 57660
const FLOAT4_TYPE = 57661
const FLOAT8_TYPE = 57662
const DECIMAL_TYPE = 57663
const NUMERIC = 57664
const TIME = 57665
const TIMESTAMP = 57666
const DATETIME = 57667
const YEAR = 57668
const CHAR = 57669
const VARCHAR = 57670
const BOOL = 57671
const CHARACTER = 57672
const VARBINARY = 57673
const NCHAR = 57674
const TEXT = 57675
const TINYTEXT = 57676
const MEDIUMTEXT = 57677
const LONGTEXT = 57678
const BLOB = 57679
const TINYBLOB = 57680
const MEDIUMBLOB = 57681
const LONGBLOB = 57682
const JSON = 57683
const JSON_SCHEMA_VALID = 57684
const JSON_SCHEMA_VALIDATION_REPORT = 57685
const ENUM = 57686
const GEOMETRY = 57687
const POINT = 57688
const LINESTRING = 57689
const POLYGON = 57690
const GEOMCOLLECTION = 57691
const GEOMETRYCOLLECTION = 57692
const MULTIPOINT = 57693
const MULTILINESTRING = 57694
const MULTIPOLYGON = 57695
const ASCII = 57696
const UNICODE = 57697
const NULLX = 57698
const AUTO_INCREMENT = 57699
const APPROXNUM = 57700
const SIGNED = 57701
const UNSIGNED = 57702
const ZEROFILL = 57703
const PURGE = 57704
const BEFORE = 57705
const CODE = 57706
const COLLATION = 57707
const COLUMNS = 57708
const DATABASES = 57709
const ENGINES = 57710
const EVENT = 57711
const EXTENDED = 57712
const FIELDS = 57713
const FULL = 57714
const FUNCTION = 57715
const GTID_EXECUTED = 57716
const KEYSPACES = 57717
const OPEN = 57718
const PLUGINS = 57719
const PRIVILEGES = 57720
const PROCESSLIST = 57721
const SCHEMAS = 57722
const TABLES = 57723
const TRIGGERS = 57724
const USER = 57725
const VGTID_EXECUTED = 57726
const VITESS_KEYSPACES = 57727
const VITESS_METADATA = 57728
const VITESS_MIGRATIONS = 57729
const VITESS_REPLICATION_STATUS = 57730
const VITESS_SHARDS = 57731
const VITESS_TABLETS = 57732
const VITESS_TARGET = 57733
const VSCHEMA = 57734
const VITESS_THROTTLED_APPS = 57735
const NAMES = 57736
const GLOBAL = 57737
const SESSION = 57738
const ISOLATION = 57739
const LEVEL = 57740
const READ = 57741
const WRITE = 57742
const ONLY = 57743
const REPEATABLE = 57744
const COMMITTED = 57745
const UNCOMMITTED = 57746
const SERIALIZABLE = 57747
const ADDDATE = 57748
const CURRENT_TIMESTAMP = 57749
const DATABASE = 57750
const CURRENT_DATE = 57751
const CURDATE = 57752
const DATE_ADD = 57753
const DATE_SUB = 57754
const NOW = 57755
const SUBDATE = 57756
const CURTIME = 57757
const CURRENT_TIME = 57758
const LOCALTIME = 57759
const LOCALTIMESTAMP = 57760
const CURRENT_USER = 57761
const UTC_DATE = 57762
const UTC_TIME = 57763
const UTC_TIMESTAMP = 57764
const SYSDATE = 57765
const DAY = 57766
const DAY_HOUR = 57767
const DAY_MICROSECOND = 57768
const DAY_MINUTE = 57769
const DAY_SECOND = 57770
const HOUR = 57771
const HOUR_MICROSECOND = 57772
const HOUR_MINUTE = 57773
const HOUR_SECOND = 57774
const MICROSECOND = 57775
const MINUTE = 57776
const MINUTE_MICROSECOND = 57777
const MINUTE_SECOND = 57778
const MONTH = 57779
const QUARTER = 57780
const SECOND = 57781
const SECOND_MICROSECOND = 57782
const YEAR_MONTH = 57783
const WEEK = 57784
const SQL_TSI_DAY = 57785
const SQL_TSI_WEEK = 57786
const SQL_TSI_HOUR = 57787
const SQL_TSI_MINUTE = 57788
const SQL_TSI_MONTH = 57789
const SQL_TSI_QUARTER = 57790
const SQL_TSI_SECOND = 57791
const SQL_TSI_MICROSECOND = 57792
const SQL_TSI_YEAR = 57793
const REPLACE = 57794
const CONVERT = 57795
const CAST = 57796
const SUBSTR = 57797
const SUBSTRING = 57798
const SEPARATOR = 57799
const TIMESTAMPADD = 57800
const TIMESTAMPDIFF = 57801
const WEIGHT_STRING = 57802
const LTRIM = 57803
const RTRIM = 57804
const TRIM = 57805
const JSON_ARRAY = 57806
const JSON_OBJECT = 57807
const JSON_QUOTE = 57808
const JSON_DEPTH = 57809
const JSON_TYPE = 57810
const JSON_LENGTH = 57811
const JSON_VALID = 57812
const JSON_ARRAY_APPEND = 57813
const JSON_ARRAY_INSERT = 57814
const JSON_INSERT = 57815
const JSON_MERGE = 57816
const JSON_MERGE_PATCH = 57817
const JSON_MERGE_PRESERVE = 57818
const JSON_REMOVE = 57819
const JSON_REPLACE = 57820
const JSON_SET = 57821
const JSON_UNQUOTE = 57822
const COUNT = 57823
const AVG = 57824
const MAX = 57825
const MIN = 57826
const SUM = 57827
const GROUP_CONCAT = 57828
const BIT_AND = 57829
const BIT_OR = 57830
const BIT_XOR = 57831
const STD = 57832
const STDDEV = 57833
const STDDEV_POP = 57834
const STDDEV_SAMP = 57835
const VAR_POP = 57836
const VAR_SAMP = 57837
const VARIANCE = 57838
const ANY_VALUE = 57839
const REGEXP_INSTR = 57840
const REGEXP_LIKE = 57841
const REGEXP_REPLACE = 57842
const REGEXP_SUBSTR = 57843
const ExtractValue = 57844
const UpdateXML = 57845
const GET_LOCK = 57846
const RELEASE_LOCK = 57847
const RELEASE_ALL_LOCKS = 57848
const IS_FREE_LOCK = 57849
const IS_USED_LOCK = 57850
const LOCATE = 57851
const POSITION = 57852
const ST_GeometryCollectionFromText = 57853
const ST_GeometryFromText = 57854
const ST_LineStringFromText = 57855
const ST_MultiLineStringFromText = 57856
const ST_MultiPointFromText = 57857
const ST_MultiPolygonFromText = 57858
const ST_PointFromText = 57859
const ST_PolygonFromText = 57860
const ST_GeometryCollectionFromWKB = 57861
const ST_GeometryFromWKB = 57862
const ST_LineStringFromWKB = 57863
const ST_MultiLineStringFromWKB = 57864
const ST_MultiPointFromWKB = 57865
const ST_MultiPolygonFromWKB = 57866
const ST_PointFromWKB = 57867
const ST_PolygonFromWKB = 57868
const ST_AsBinary = 57869
const ST_AsText = 57870
const ST_Dimension = 57871
const ST_Envelope = 57872
const ST_IsSimple = 57873
const ST_IsEmpty = 57874
const ST_GeometryType = 57875
const ST_X = 57876
const ST_Y = 57877
const ST_Latitude = 57878
const ST_Longitude = 57879
const ST_EndPoint = 57880
const ST_IsClosed = 57881
const ST_Length = 57882
const ST_NumPoints = 57883
const ST_StartPoint = 57884
const ST_PointN = 57885
const ST_Area = 57886
const ST_Centroid = 57887
const ST_ExteriorRing = 57888
const ST_InteriorRingN = 57889
const ST_NumInteriorRings = 57890
const ST_NumGeometries = 57891
const ST_GeometryN = 57892
const ST_LongFromGeoHash = 57893
const ST_PointFromGeoHash = 57894
const ST_LatFromGeoHash = 57895
const ST_GeoHash = 57896
const ST_AsGeoJSON = 57897
const ST_GeomFromGeoJSON = 57898
const MATCH = 57899
const AGAINST = 57900
const BOOLEAN = 57901
const LANGUAGE = 57902
const WITH = 57903
const QUERY = 57904
const EXPANSION = 57905
const WITHOUT = 57906
const VALIDATION = 57907
const UNUSED = 57908
const ARRAY = 57909
const BYTE = 57910
const CUME_DIST = 57911
const DESCRIPTION = 57912
const DENSE_RANK = 57913
const EMPTY = 57914
const EXCEPT = 57915
const FIRST_VALUE = 57916
const GROUPING = 57917
const GROUPS = 57918
const JSON_TABLE = 57919
const LAG = 57920
const LAST_VALUE = 57921
const LATERAL = 57922
const LEAD = 57923
const INFILE = 57924
const NTH_VALUE = 57925
const NTILE = 57926
const OF = 57927
const OVER = 57928
const PERCENT_RANK = 57929
const RANK = 57930
const RECURSIVE = 57931
const ROW_NUMBER = 57932
const SYSTEM = 57933
const WINDOW = 57934
const ACTIVE = 57935
const ADMIN = 57936
const AUTOEXTEND_SIZE = 57937
const BUCKETS = 57938
const CLONE = 57939
const COLUMN_FORMAT = 57940
const COMPONENT = 57941
const DEFINITION = 57942
const ENFORCED = 57943
const ENGINE_ATTRIBUTE = 57944
const EXCLUDE = 57945
const FOLLOWING = 57946
const GET_MASTER_PUBLIC_KEY = 57947
const HISTOGRAM = 57948
const HISTORY = 57949
const INACTIVE = 57950
const INVISIBLE = 57951
const LOCKED = 57952
const MASTER_COMPRESSION_ALGORITHMS = 57953
const MASTER_PUBLIC_KEY_PATH = 57954
const MASTER_TLS_CIPHERSUITES = 57955
const MASTER_ZSTD_COMPRESSION_LEVEL = 57956
const NESTED = 57957
const NETWORK_NAMESPACE = 57958
const NOWAIT = 57959
const NULLS = 57960
const OJ = 57961
const OLD = 57962
const OPTIONAL = 57963
const ORDINALITY = 57964
const ORGANIZATION = 57965
const OTHERS = 57966
const PARTIAL = 57967
const PATH = 57968
const PERSIST = 57969
const PERSIST_ONLY = 57970
const PRECEDING = 57971
const PRIVILEGE_CHECKS_USER = 57972
const PROCESS = 57973
const RANDOM = 57974
const REFERENCE = 57975
const REQUIRE_ROW_FORMAT = 57976
const RESOURCE = 57977
const RESPECT = 57978
const RESTART = 57979
const RETAIN = 57980
const REUSE = 57981
const ROLE = 57982
const SECONDARY = 57983
const SECONDARY_ENGINE = 57984
const SECONDARY_ENGINE_ATTRIBUTE = 57985
const SECONDARY_LOAD = 57986
const SECONDARY_UNLOAD = 57987
const SIMPLE = 57988
const SKIP = 57989
const SRID = 57990
const THREAD_PRIORITY = 57991
const TIES = 57992
const UNBOUNDED = 57993
const VCPU = 57994
const VISIBLE = 57995
const RETURNING = 57996
const FORMAT_BYTES = 57997
const FORMAT_PICO_TIME = 57998
const PS_CURRENT_THREAD_ID = 57999
const PS_THREAD_ID = 58000
const GTID_SUBSET = 58001
const GTID_SUBTRACT = 58002
const WAIT_FOR_EXECUTED_GTID_SET = 58003
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 58004
const FORMAT = 58005
const TREE = 58006
const VITESS = 58007
const TRADITIONAL = 58008
const VTEXPLAIN = 58009
const VEXPLAIN = 58010
const PLAN = 58011
const LOCAL = 58012
const LOW_PRIORITY = 58013
const NO_WRITE_TO_BINLOG = 58014
const LOGS = 58015
const ERROR = 58016
const GENERAL = 58017
const HOSTS = 58018
const OPTIMIZER_COSTS = 58019
const USER_RESOURCES = 58020
const SLOW = 58021
const CHANNEL = 58022
const RELAY = 58023
const EXPORT = 58024
const CURRENT = 58025
const ROW = 58026
const ROWS = 58027
const AVG_ROW_LENGTH = 58028
const CONNECTION = 58029
const CHECKSUM = 58030
const DELAY_KEY_WRITE = 58031
const ENCRYPTION = 58032
const ENGINE = 58033
const INSERT_METHOD = 58034
const MAX_ROWS = 58035
const MIN_ROWS = 58036
const PACK_KEYS = 58037
const PASSWORD = 58038
const FIXED = 58039
const DYNAMIC = 58040
const COMPRESSED = 58041
const REDUNDANT = 58042
const COMPACT = 58043
const ROW_FORMAT = 58044
const STATS_AUTO_RECALC = 58045
const STATS_PERSISTENT = 58046
const STATS_SAMPLE_PAGES = 58047
const STORAGE = 58048
const MEMORY = 58049
const DISK = 58050
const PARTITIONS = 58051
const LINEAR = 58052
const RANGE = 58053
const LIST = 58054
const SUBPARTITION = 58055
const SUBPARTITIONS = 58056
const HASH = 58057

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"KILL",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"ASSIGNMENT_OPT",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"PURGE",
	"BEFORE",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ADDDATE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURDATE",
	"DATE_ADD",
	"DATE_SUB",
	"NOW",
	"SUBDATE",
	"CURTIME",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"SYSDATE",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_HOUR",
	"SQL_TSI_MINUTE",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_SECOND",
	"SQL_TSI_MICROSECOND",
	"SQL_TSI_YEAR",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"ANY_VALUE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"ST_GeometryCollectionFromText",
	"ST_GeometryFromText",
	"ST_LineStringFromText",
	"ST_MultiLineStringFromText",
	"ST_MultiPointFromText",
	"ST_MultiPolygonFromText",
	"ST_PointFromText",
	"ST_PolygonFromText",
	"ST_GeometryCollectionFromWKB",
	"ST_GeometryFromWKB",
	"ST_LineStringFromWKB",
	"ST_MultiLineStringFromWKB",
	"ST_MultiPointFromWKB",
	"ST_MultiPolygonFromWKB",
	"ST_PointFromWKB",
	"ST_PolygonFromWKB",
	"ST_AsBinary",
	"ST_AsText",
	"ST_Dimension",
	"ST_Envelope",
	"ST_IsSimple",
	"ST_IsEmpty",
	"ST_GeometryType",
	"ST_X",
	"ST_Y",
	"ST_Latitude",
	"ST_Longitude",
	"ST_EndPoint",
	"ST_IsClosed",
	"ST_Length",
	"ST_NumPoints",
	"ST_StartPoint",
	"ST_PointN",
	"ST_Area",
	"ST_Centroid",
	"ST_ExteriorRing",
	"ST_InteriorRingN",
	"ST_NumInteriorRings",
	"ST_NumGeometries",
	"ST_GeometryN",
	"ST_LongFromGeoHash",
	"ST_PointFromGeoHash",
	"ST_LatFromGeoHash",
	"ST_GeoHash",
	"ST_AsGeoJSON",
	"ST_GeomFromGeoJSON",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"INFILE",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	13, 52,
	14, 52,
	-2, 41,
	-1, 54,
	1, 160,
	733, 160,
	-2, 168,
	-1, 55,
	136, 168,
	178, 168,
	347, 168,
	-2, 524,
	-1, 63,
	36, 775,
	241, 775,
	252, 775,
	287, 789,
	288, 789,
	-2, 777,
	-1, 68,
	243, 813,
	-2, 811,
	-1, 115,
	599, 1615,
	-2, 2256,
	-1, 124,
	240, 1588,
	-2, 134,
	-1, 126,
	1, 161,
	733, 161,
	-2, 168,
	-1, 137,
	137, 409,
	246, 409,
	-2, 513,
	-1, 156,
	136, 168,
	178, 168,
	347, 168,
	-2, 533,
	-1, 735,
	164, 42,
	-2, 46,
	-1, 941,
	87, 1605,
	-2, 1459,
	-1, 942,
	87, 1606,
	223, 1610,
	-2, 1460,
	-1, 943,
	223, 1609,
	-2, 43,
	-1, 1025,
	60, 887,
	-2, 902,
	-1, 1115,
	251, 44,
	256, 44,
	-2, 420,
	-1, 1200,
	1, 581,
	733, 581,
	-2, 168,
	-1, 1502,
	223, 1610,
	-2, 1460,
	-1, 1710,
	60, 888,
	-2, 907,
	-1, 1711,
	60, 889,
	-2, 908,
	-1, 1763,
	136, 168,
	178, 168,
	347, 168,
	-2, 459,
	-1, 1844,
	137, 409,
	246, 409,
	-2, 513,
	-1, 1853,
	251, 45,
	256, 45,
	-2, 421,
	-1, 2291,
	223, 1614,
	-2, 1608,
	-1, 2292,
	223, 1610,
	-2, 1606,
	-1, 2393,
	136, 168,
	178, 168,
	347, 168,
	-2, 460,
	-1, 2400,
	26, 189,
	-2, 191,
	-1, 2855,
	78, 99,
	88, 99,
	-2, 966,
	-1, 2924,
	708, 699,
	-2, 673,
	-1, 3132,
	50, 1556,
	-2, 1550,
	-1, 3957,
	708, 699,
	-2, 687,
	-1, 4059,
	90, 631,
	95, 631,
	105, 631,
	180, 631,
	181, 631,
	182, 631,
	183, 631,
	184, 631,
	185, 631,
	186, 631,
	187, 631,
	188, 631,
	189, 631,
	190, 631,
	191, 631,
	192, 631,
	193, 631,
	194, 631,
	195, 631,
	196, 631,
	197, 631,
	198, 631,
	199, 631,
	200, 631,
	201, 631,
	202, 631,
	203, 631,
	204, 631,
	205, 631,
	206, 631,
	207, 631,
	208, 631,
	209, 631,
	210, 631,
	211, 631,
	212, 631,
	213, 631,
	214, 631,
	215, 631,
	216, 631,
	217, 631,
	218, 631,
	219, 631,
	220, 631,
	221, 631,
	-2, 1998,
}

const yyPrivate = 57344

const yyLast = 55664

var yyAct = [...]int{
	1718, 952, 4141, 944, 3612, 3938, 4154, 4106, 4030, 945,
	4107, 3610, 2390, 2097, 3414, 1267, 4057, 1972, 3562, 1766,
	3988, 4018, 3285, 3185, 3192, 2320, 3152, 3918, 2340, 3843,
	3243, 907, 736, 910, 3248, 3245, 43, 3244, 3242, 3247,
	3246, 3916, 2028, 3234, 3644, 5, 3148, 3145, 2750, 1041,
	3549, 1018, 3906, 2788, 2464, 3085, 1265, 739, 3200, 3146,
	3263, 3149, 2827, 3459, 3453, 2322, 3649, 906, 3265, 3480,
	766, 2344, 905, 2364, 2988, 911, 2360, 3143, 1147, 3133,
	3445, 2814, 2921, 2432, 2452, 734, 3262, 2890, 2495, 733,
	2427, 2891, 1077, 2378, 1042, 2889, 165, 1725, 2840, 1020,
	3292, 2366, 44, 2970, 2365, 2820, 1712, 2806, 2790, 2243,
	2473, 2352, 2242, 2287, 42, 1851, 2451, 2962, 151, 1213,
	1022, 2434, 1026, 1822, 1869, 2512, 2882, 1755, 2857, 1105,
	2275, 1734, 749, 101, 2368, 1691, 2124, 1514, 105, 1426,
	1084, 1044, 1858, 106, 1441, 3611, 1968, 2449, 2056, 1081,
	1116, 1113, 1950, 2081, 1110, 1085, 1111, 2423, 1112, 1032,
	1062, 1739, 2288, 1754, 2193, 2120, 2345, 1498, 1123, 2424,
	744, 2132, 1064, 100, 2151, 1474, 1029, 108, 2027, 86,
	1980, 169, 1817, 1256, 737, 1263, 129, 127, 128, 1196,
	134, 1028, 1843, 1030, 1242, 135, 1054, 85, 94, 743,
	107, 1518, 192, 1027, 2036, 3947, 99, 2914, 4142, 2466,
	2467, 2468, 3973, 3550, 1523, 3231, 2466, 3253, 2944, 2943,
	2510, 2085, 2912, 3542, 1442, 96, 131, 3505, 96, 96,
	671, 1017, 1149, 1442, 1035, 1935, 130, 4084, 3974, 174,
	2978, 705, 2979, 1688, 2059, 1166, 1167, 1168, 136, 1171,
	1172, 1173, 1174, 1152, 3969, 1177, 1178, 1179, 1180, 1181,
	1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191,
	1192, 1193, 3968, 3251, 711, 1036, 1078, 2, 1049, 1053,
	3615, 2043, 2871, 1103, 1021, 1072, 1019, 2042, 3253, 1071,
	1126, 2041, 961, 962, 963, 171, 2040, 1102, 172, 3257,
	3615, 3250, 2317, 2318, 2039, 2038, 1043, 1127, 130, 1153,
	1156, 1157, 2011, 1101, 1100, 1099, 1212, 668, 1437, 669,
	729, 191, 2786, 112, 113, 114, 711, 4078, 118, 1160,
	96, 124, 1452, 2558, 193, 1058, 1169, 663, 192, 3129,
	2816, 1452, 4031, 2934, 3251, 1070, 1074, 909, 2499, 724,
	725, 1094, 961, 962, 963, 1089, 1016, 1719, 1011, 1012,
	1013, 1014, 131, 4147, 153, 1025, 4088, 3614, 3089, 4164,
	3257, 705, 4086, 4105, 3969, 174, 130, 1070, 1074, 909,
	1458, 3419, 4132, 3418, 2497, 2937, 3919, 3614, 4146, 2751,
	705, 4087, 2498, 2048, 1059, 1060, 4110, 4085, 1748, 3311,
	3839, 3838, 3555, 1151, 1150, 3556, 164, 4120, 87, 3849,
	4082, 89, 152, 3254, 702, 87, 3952, 2567, 4035, 87,
	3574, 1428, 705, 87, 3563, 4019, 4027, 2492, 3848, 2090,
	4062, 171, 3573, 3331, 172, 175, 1832, 2951, 2952, 1756,
	1448, 1757, 705, 1440, 181, 2866, 3181, 2830, 2865, 1448,
	2787, 2867, 706, 140, 141, 163, 162, 191, 3182, 3183,
	2385, 2386, 687, 87, 45, 46, 89, 2977, 3662, 2020,
	2021, 2564, 2831, 2384, 2961, 685, 1232, 1009, 4035, 2443,
	1237, 1238, 2565, 93, 3254, 2348, 96, 50, 77, 78,
	1220, 76, 79, 96, 1260, 1221, 1008, 96, 3939, 3670,
	48, 96, 2437, 1219, 3669, 1218, 2915, 2878, 1098, 1220,
	1205, 1206, 1233, 1976, 1221, 682, 1455, 1226, 1456, 1457,
	2403, 2402, 705, 3289, 697, 3456, 3287, 2823, 2824, 64,
	3319, 705, 1438, 2556, 3317, 3023, 2019, 719, 1199, 692,
	2023, 96, 1208, 705, 723, 1195, 717, 3293, 2963, 695,
	1093, 1695, 2922, 1095, 1752, 3280, 2474, 2947, 157, 138,
	160, 145, 137, 3281, 158, 159, 1096, 3890, 166, 3891,
	2513, 175, 4144, 1170, 2319, 1951, 2519, 1925, 1235, 1236,
	181, 146, 706, 1427, 1239, 1253, 2348, 84, 1258, 2534,
	1956, 2535, 1241, 2536, 1240, 149, 147, 142, 143, 144,
	148, 706, 1201, 1063, 2965, 3544, 1234, 139, 3543, 1259,
	2537, 1227, 1176, 2517, 2515, 3290, 150, 672, 3288, 674,
	688, 1926, 708, 1927, 707, 678, 1175, 676, 680, 689,
	681, 2520, 675, 706, 686, 2477, 192, 677, 690, 691,
	694, 698, 699, 700, 696, 693, 3823, 684, 709, 4111,
	1977, 2436, 1098, 706, 1090, 2516, 2559, 2560, 2562, 2561,
	131, 1092, 1091, 3619, 2361, 1073, 1067, 1065, 2518, 1107,
	4112, 3540, 1136, 174, 1145, 4067, 1106, 2346, 2347, 1144,
	1107, 53, 56, 59, 58, 61, 1134, 75, 1143, 1836,
	83, 80, 1142, 4065, 1097, 1098, 1194, 1073, 1067, 1065,
	3024, 1141, 4071, 4072, 166, 1140, 1139, 1138, 1133, 1698,
	1096, 3202, 3203, 1146, 63, 92, 91, 1489, 4066, 73,
	74, 60, 2565, 3204, 4079, 4165, 4158, 81, 82, 171,
	1489, 4117, 172, 706, 1082, 1447, 1444, 1445, 1446, 1451,
	1453, 1450, 706, 1449, 1447, 1444, 1445, 1446, 1451, 1453,
	1450, 1857, 1449, 1443, 706, 191, 1082, 1118, 1125, 1969,
	1198, 1119, 1443, 1082, 2966, 2450, 1230, 1080, 1055, 65,
	66, 2503, 67, 68, 69, 70, 2502, 3088, 2346, 2347,
	1753, 1155, 1125, 2949, 1500, 1965, 3539, 1118, 3224, 2969,
	1509, 1154, 1216, 1429, 1222, 1223, 1224, 1225, 1163, 3946,
	161, 2913, 2916, 2982, 2946, 1959, 167, 1957, 1958, 1830,
	1960, 1961, 1104, 179, 1829, 1249, 2579, 1251, 1261, 1262,
	3201, 1137, 1828, 3457, 2526, 2522, 2524, 2525, 2523, 2527,
	2528, 3156, 3204, 62, 2932, 1135, 1966, 1826, 1097, 958,
	2791, 2793, 958, 958, 1211, 662, 1955, 2960, 2494, 3097,
	2959, 1490, 1491, 4080, 187, 1248, 1250, 3096, 2496, 3931,
	1856, 1124, 3494, 3475, 4033, 1197, 1128, 1118, 90, 175,
	2862, 1130, 2826, 1419, 2763, 1131, 1129, 2093, 181, 1743,
	1650, 1097, 3255, 3256, 1496, 1124, 1254, 1210, 2972, 1420,
	1421, 2880, 2821, 2971, 1125, 3259, 4032, 168, 173, 170,
	176, 177, 178, 180, 182, 183, 184, 185, 154, 3503,
	3504, 155, 670, 186, 188, 189, 190, 1937, 1936, 1938,
	1939, 1940, 710, 90, 4033, 126, 2391, 1489, 1486, 3180,
	1492, 1493, 1494, 1495, 3572, 2590, 1469, 2936, 1038, 3613,
	1506, 1066, 167, 703, 1162, 1215, 1243, 4156, 2133, 179,
	4157, 1719, 4155, 3255, 3256, 2972, 4032, 1257, 704, 3613,
	2971, 1246, 2134, 1458, 1981, 1247, 3259, 1520, 3960, 1521,
	1522, 1229, 2566, 1066, 1148, 1252, 3535, 95, 3469, 2440,
	1436, 2935, 1231, 2514, 95, 1525, 1526, 1125, 95, 121,
	187, 1686, 95, 2032, 1962, 1758, 1952, 1124, 1953, 3009,
	1245, 1954, 166, 1118, 1121, 1122, 1125, 1082, 2125, 2792,
	2599, 1115, 1119, 2125, 1217, 1207, 2905, 1456, 1457, 1204,
	2441, 1481, 1482, 1484, 1483, 1485, 1486, 2439, 1720, 1722,
	2590, 4121, 95, 168, 173, 170, 176, 177, 178, 180,
	182, 183, 184, 185, 2493, 3658, 1457, 3402, 1458, 186,
	188, 189, 190, 1702, 1475, 3510, 1125, 1706, 3509, 2481,
	1866, 2442, 122, 1022, 1865, 1855, 3188, 2486, 1700, 2491,
	2626, 2438, 1687, 1703, 2486, 2489, 3308, 1458, 1476, 1477,
	1478, 1479, 1480, 1481, 1482, 1484, 1483, 1485, 1486, 1214,
	1124, 1136, 1134, 2131, 1244, 3990, 1118, 1121, 1122, 1455,
	1082, 1456, 1457, 4113, 1115, 1119, 2490, 730, 3011, 1124,
	3495, 3189, 1982, 2488, 1128, 1118, 1034, 1704, 3924, 1130,
	1200, 105, 1705, 1131, 1129, 1114, 106, 1656, 1657, 1658,
	1659, 1660, 1661, 2061, 1719, 3191, 1458, 4166, 1687, 72,
	3991, 2130, 4160, 1692, 1132, 1458, 1945, 2062, 1487, 1488,
	2060, 3831, 1680, 3186, 2050, 2052, 2053, 1458, 1863, 1124,
	108, 1161, 1719, 3925, 3830, 1158, 2571, 2572, 2573, 2353,
	2354, 3202, 3203, 961, 962, 963, 2280, 3821, 3187, 2051,
	2277, 1833, 1834, 1835, 1455, 1898, 1456, 1457, 1901, 2279,
	1903, 1479, 1480, 1481, 1482, 1484, 1483, 1485, 1486, 3585,
	4070, 1721, 2160, 956, 3584, 2989, 1849, 3569, 3517, 3570,
	1944, 3516, 3193, 1455, 3506, 1456, 1457, 1045, 1701, 3232,
	1051, 1051, 1019, 1943, 4167, 1724, 1974, 1021, 1842, 1477,
	1478, 1479, 1480, 1481, 1482, 1484, 1483, 1485, 1486, 1861,
	167, 4126, 1719, 1932, 4069, 1920, 3220, 179, 1910, 1911,
	1902, 2887, 2886, 2885, 1916, 1917, 1749, 1750, 1871, 2446,
	1872, 1946, 1874, 1876, 1930, 1860, 1880, 1882, 1884, 1886,
	1888, 1929, 1455, 1928, 1456, 1457, 1918, 1912, 1825, 1909,
	3201, 1455, 1908, 1456, 1457, 1907, 1878, 1942, 187, 2991,
	1859, 1859, 3204, 1455, 1458, 1456, 1457, 1699, 1852, 1840,
	2152, 1839, 1707, 711, 1838, 2154, 2280, 1931, 3284, 2159,
	2155, 3500, 711, 2156, 2157, 2158, 1423, 1728, 2153, 2161,
	2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 1752, 1458,
	1906, 168, 173, 170, 176, 177, 178, 180, 182, 183,
	184, 185, 2117, 4130, 1458, 4129, 1985, 186, 188, 189,
	190, 2586, 4114, 1989, 1970, 1991, 1992, 1993, 1994, 3001,
	3000, 2999, 1998, 1729, 2993, 4099, 2997, 1475, 2992, 2981,
	2990, 4097, 1831, 4054, 2010, 2995, 2869, 711, 4124, 1719,
	2812, 4143, 130, 3955, 2994, 726, 3954, 1101, 1100, 1099,
	3928, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1484, 1483,
	1485, 1486, 2996, 2998, 1458, 2462, 2461, 3927, 3190, 1987,
	2460, 2459, 3926, 1983, 1984, 1476, 1477, 1478, 1479, 1480,
	1481, 1482, 1484, 1483, 1485, 1486, 3826, 1988, 4041, 1719,
	1455, 3810, 1456, 1457, 1995, 1996, 1997, 2009, 2008, 3809,
	2109, 2098, 2099, 2100, 2101, 2111, 2102, 2103, 2104, 2116,
	2112, 2105, 2106, 2113, 2114, 2115, 2107, 2108, 2110, 3657,
	727, 2458, 2457, 4101, 1719, 1455, 43, 1456, 1457, 43,
	1462, 1463, 1464, 1465, 1466, 1467, 1468, 1460, 3655, 1458,
	1455, 3581, 1456, 1457, 1685, 102, 1684, 2636, 4039, 1719,
	1719, 3309, 2088, 2088, 2086, 2086, 103, 1454, 1719, 3473,
	1719, 1056, 1454, 1719, 3948, 2064, 1683, 2066, 2067, 2068,
	2069, 2070, 2071, 2073, 2075, 2076, 2077, 2078, 2079, 2080,
	2128, 111, 2812, 4026, 3857, 2129, 1458, 2812, 4005, 2812,
	4001, 1500, 110, 3514, 109, 3981, 1719, 3553, 3945, 3856,
	1455, 3499, 1456, 1457, 1686, 111, 2057, 2054, 2126, 1475,
	3294, 1719, 1471, 3291, 1472, 3814, 110, 3223, 109, 1458,
	2171, 2189, 3222, 4037, 1719, 3813, 1475, 104, 1473, 1487,
	1488, 1470, 2896, 1476, 1477, 1478, 1479, 1480, 1481, 1482,
	1484, 1483, 1485, 1486, 2883, 1458, 3834, 1719, 2638, 2185,
	1476, 1477, 1478, 1479, 1480, 1481, 1482, 1484, 1483, 1485,
	1486, 3561, 1719, 2058, 2016, 2017, 1475, 1458, 2578, 86,
	3903, 1719, 86, 1682, 2033, 1455, 2547, 1456, 1457, 2812,
	3822, 3553, 1719, 2923, 1458, 1687, 1719, 2812, 3551, 2901,
	1476, 1477, 1478, 1479, 1480, 1481, 1482, 1484, 1483, 1485,
	1486, 2273, 2546, 3901, 1719, 2399, 1458, 2063, 2508, 3194,
	102, 1458, 1475, 3198, 2507, 1458, 2858, 104, 2065, 2363,
	3197, 103, 1455, 2343, 1456, 1457, 2291, 2092, 2290, 3898,
	1719, 2306, 2325, 1458, 2119, 2121, 1476, 1477, 1478, 1479,
	1480, 1481, 1482, 1484, 1483, 1485, 1486, 2012, 1720, 2313,
	1458, 3880, 1719, 3468, 3199, 1455, 1978, 1456, 1457, 3195,
	2135, 2136, 2137, 2138, 3196, 2486, 1719, 2289, 3444, 1719,
	2276, 2718, 1719, 2089, 2149, 2858, 1719, 3213, 3212, 2859,
	2170, 1455, 2337, 1456, 1457, 3210, 3211, 1454, 1458, 2861,
	3437, 1719, 2278, 3208, 3209, 3434, 1719, 1458, 1941, 3432,
	1719, 3208, 3207, 1455, 104, 1456, 1457, 3326, 1458, 2837,
	1719, 2828, 1458, 2330, 1933, 2331, 1923, 3394, 1719, 2291,
	1455, 2358, 1456, 1457, 2565, 2945, 2294, 2295, 1821, 2926,
	2919, 2920, 2812, 2811, 3392, 1719, 2592, 1719, 2859, 2400,
	2808, 105, 1455, 2372, 1456, 1457, 106, 1455, 2565, 1456,
	1457, 1455, 1919, 1456, 1457, 104, 2091, 1719, 2183, 1915,
	2289, 105, 1914, 1719, 2487, 1913, 106, 1730, 2194, 1455,
	1458, 1456, 1457, 1719, 2293, 1821, 1820, 2296, 2297, 2336,
	1458, 3388, 1719, 2837, 1458, 2447, 1455, 1255, 1456, 1457,
	3144, 2596, 3385, 1719, 1764, 1763, 3383, 1719, 2828, 1459,
	3470, 3468, 3986, 3959, 2812, 2837, 3175, 1458, 2836, 2409,
	2410, 2411, 2412, 2592, 1458, 1035, 2565, 2395, 110, 2324,
	2394, 2312, 2486, 3423, 1455, 2634, 1456, 1457, 1458, 1515,
	3210, 3117, 2335, 1455, 2383, 1456, 1457, 3518, 2267, 2268,
	2269, 2270, 2271, 2338, 1455, 1458, 1456, 1457, 1455, 2592,
	1456, 1457, 2718, 2623, 3852, 2404, 2622, 2405, 2406, 2407,
	2408, 2486, 2356, 2837, 2595, 2435, 2469, 2429, 3381, 1719,
	3468, 2475, 2381, 2415, 2416, 2417, 2418, 2382, 1072, 2398,
	1458, 2397, 1071, 2396, 2380, 2351, 1723, 1454, 3519, 3520,
	3521, 3379, 1719, 2314, 2445, 2315, 2091, 2034, 2194, 1719,
	2018, 2472, 1964, 1458, 1751, 1894, 1455, 1458, 1456, 1457,
	1109, 1458, 3377, 1719, 1108, 2376, 1455, 96, 1456, 1457,
	1455, 1024, 1456, 1457, 4075, 4008, 3845, 2430, 3286, 3375,
	1719, 2480, 2426, 1726, 2483, 3811, 2484, 2444, 2448, 2456,
	2419, 2421, 2422, 1455, 3673, 1456, 1457, 3534, 3235, 3531,
	1455, 3512, 1456, 1457, 2500, 2479, 1895, 1896, 1897, 1126,
	2482, 3336, 2430, 2478, 1455, 4115, 1456, 1457, 3335, 1823,
	2428, 3282, 3237, 2501, 3233, 2927, 1127, 2425, 2420, 2414,
	2413, 1455, 1948, 1456, 1457, 1854, 1859, 3373, 1719, 1850,
	1458, 3371, 1719, 1819, 1458, 3369, 1719, 123, 2893, 96,
	2892, 1199, 1475, 2842, 2845, 2846, 2847, 2843, 3846, 2844,
	2848, 3522, 2443, 3481, 3482, 2328, 1455, 4138, 1456, 1457,
	2504, 3481, 3482, 4136, 2505, 2506, 1476, 1477, 1478, 1479,
	1480, 1481, 1482, 1484, 1483, 1485, 1486, 1890, 4108, 1455,
	3967, 1456, 1457, 1455, 3885, 1456, 1457, 1455, 2893, 1456,
	1457, 3484, 3229, 2584, 2575, 2014, 2577, 2589, 3523, 3524,
	3525, 3228, 3227, 2549, 2550, 2580, 3144, 2581, 2552, 2291,
	2906, 2290, 2541, 2540, 3367, 1719, 667, 2553, 3365, 1719,
	2593, 3487, 2594, 2583, 1891, 1892, 1893, 2601, 3167, 3165,
	3486, 2603, 2604, 3168, 3166, 3169, 2057, 2846, 2847, 3164,
	2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619,
	2585, 2621, 3163, 2511, 1735, 3963, 3847, 2015, 2555, 2342,
	1727, 2334, 3134, 3136, 1458, 3474, 1455, 3122, 1456, 1457,
	1455, 3137, 1456, 1457, 2627, 2628, 2629, 2630, 2631, 2563,
	2633, 1458, 3121, 3997, 2635, 3923, 3648, 3650, 2640, 2641,
	3999, 2642, 728, 2058, 2645, 1824, 2646, 2648, 2650, 2651,
	2652, 2653, 2654, 2655, 2657, 2659, 2660, 2661, 2663, 2574,
	2665, 2666, 2668, 2670, 2672, 2674, 2676, 2678, 2680, 2682,
	2684, 2686, 2688, 2690, 2692, 2694, 2696, 2698, 2700, 2702,
	2703, 2704, 3639, 2706, 3638, 2708, 3464, 2710, 2711, 4052,
	2713, 2715, 2717, 1458, 2117, 3461, 2720, 2576, 3363, 1719,
	2724, 1039, 1458, 3460, 2729, 2730, 2731, 2732, 4049, 1040,
	2598, 1732, 3935, 3933, 3131, 3361, 1719, 2743, 2744, 2745,
	2746, 2747, 2748, 1963, 115, 2752, 2753, 3206, 2876, 1165,
	2897, 1458, 3637, 2755, 1422, 1458, 1164, 2133, 2761, 1458,
	3302, 2892, 2975, 1458, 2764, 2765, 2766, 2767, 2768, 1458,
	1455, 2134, 1456, 1457, 2933, 2775, 2776, 102, 2777, 2835,
	131, 2780, 2782, 2337, 104, 2784, 2632, 1455, 103, 1456,
	1457, 1458, 102, 1979, 3466, 2796, 1458, 1731, 2088, 4152,
	2086, 2353, 2354, 103, 104, 3225, 3359, 1719, 2544, 4046,
	3944, 3841, 2109, 2098, 2099, 2100, 2101, 2111, 2102, 2103,
	2104, 2116, 2112, 2105, 2106, 2113, 2114, 2115, 2107, 2108,
	2110, 3205, 1458, 2850, 2339, 3357, 1719, 1047, 1048, 3355,
	1719, 1458, 3120, 3341, 1719, 2533, 2605, 3324, 1719, 1455,
	3119, 1456, 1457, 2783, 1719, 2532, 2531, 111, 1455, 2795,
	1456, 1457, 1458, 2620, 43, 2530, 2529, 1458, 110, 3446,
	109, 2569, 109, 2832, 2851, 2781, 1719, 2853, 1458, 104,
	2756, 1719, 4098, 3645, 4096, 2813, 2798, 1455, 2800, 1456,
	1457, 1455, 4053, 1456, 1457, 1455, 4050, 1456, 1457, 1455,
	1458, 1456, 1457, 4000, 3911, 1455, 3910, 1456, 1457, 3888,
	1458, 3656, 3654, 2809, 2852, 3653, 2733, 1719, 3646, 3532,
	1692, 2785, 3465, 2822, 1458, 2725, 1719, 1455, 3463, 1456,
	1457, 3238, 1455, 2470, 1456, 1457, 2588, 1837, 111, 2805,
	3454, 1046, 2810, 111, 110, 2828, 2587, 2879, 2881, 110,
	4139, 2716, 1719, 2825, 110, 1687, 109, 4140, 4139, 4140,
	2872, 1458, 2714, 1719, 3623, 2808, 3025, 1458, 1455, 2918,
	1456, 1457, 3668, 3, 2624, 2326, 2860, 1455, 3929, 1456,
	1457, 2863, 1717, 1713, 3489, 2895, 1744, 2942, 2435, 1736,
	2898, 2899, 2870, 3498, 2701, 1719, 1037, 1714, 1455, 2031,
	1456, 1457, 11, 1455, 2940, 1456, 1457, 2029, 2699, 1719,
	10, 2884, 116, 117, 1455, 98, 1456, 1457, 2797, 1,
	2873, 1015, 2332, 2333, 1716, 2894, 1715, 2030, 9, 2902,
	8, 1057, 2044, 2045, 2046, 2047, 1455, 4048, 1456, 1457,
	2907, 2908, 2909, 3996, 2903, 3439, 1455, 2055, 1456, 1457,
	2856, 2697, 1719, 3934, 2939, 3998, 4051, 3667, 1842, 3932,
	1455, 1425, 1456, 1457, 2985, 2986, 1424, 2928, 2929, 3502,
	4064, 683, 2316, 1690, 4109, 4060, 3013, 3014, 3015, 3016,
	3017, 2938, 2094, 2095, 4061, 2987, 1934, 1924, 2118, 1051,
	1051, 2122, 3564, 3004, 2241, 2127, 3022, 1455, 3842, 1456,
	1457, 3241, 2476, 1455, 3530, 1456, 1457, 2433, 1117, 156,
	2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148,
	2964, 2150, 2392, 2393, 4021, 2172, 2173, 2174, 2175, 2176,
	2177, 2179, 3002, 2184, 2983, 2186, 2187, 2188, 120, 2190,
	2191, 2192, 3018, 2195, 2196, 2197, 2198, 2199, 2200, 2201,
	2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211,
	2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221,
	2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231,
	2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2244,
	2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254,
	2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264,
	2265, 2266, 3003, 2973, 1075, 2967, 2974, 2272, 119, 2274,
	1120, 2281, 2282, 2283, 2284, 2285, 2286, 1051, 3006, 1051,
	1051, 1051, 1051, 1051, 2984, 1228, 2471, 1458, 3554, 2877,
	2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2401, 2307,
	2308, 2309, 2310, 2311, 1770, 2842, 2845, 2846, 2847, 2843,
	3027, 2844, 2848, 1768, 1769, 1767, 1772, 1771, 3310, 2625,
	3401, 2022, 3090, 718, 2849, 712, 194, 1759, 1737, 3415,
	1159, 3092, 673, 3214, 1458, 2509, 679, 1051, 1507, 2013,
	3101, 3118, 2276, 2864, 2276, 1069, 1061, 2327, 3063, 2799,
	1068, 3994, 3819, 3458, 3153, 3005, 3130, 1458, 3132, 2349,
	2350, 2815, 2372, 3135, 2278, 3128, 2278, 3073, 3074, 3075,
	3076, 3077, 3943, 3172, 1458, 3922, 3647, 4006, 2874, 1458,
	1733, 3422, 3147, 2597, 2123, 1497, 2389, 1026, 3147, 3124,
	2369, 2372, 2372, 2372, 2372, 2372, 3100, 3141, 1974, 1458,
	3618, 3174, 3125, 3101, 3157, 3091, 2049, 3093, 741, 740,
	738, 2372, 2801, 2829, 2372, 1461, 946, 2789, 3112, 3818,
	1745, 2841, 2839, 1455, 2838, 1456, 1457, 3150, 2542, 2377,
	3483, 3479, 4056, 3123, 2371, 2367, 3126, 2807, 897, 3116,
	896, 2695, 1719, 3138, 3139, 750, 742, 2431, 732, 895,
	894, 3176, 3268, 3269, 3177, 2948, 1028, 3283, 2693, 1719,
	3159, 3160, 3158, 3162, 3536, 3161, 105, 3170, 1027, 2950,
	1455, 106, 1456, 1457, 3240, 3178, 3261, 2875, 3279, 3155,
	3113, 3114, 3115, 2691, 1719, 3065, 1439, 3067, 3184, 1709,
	1088, 3218, 3219, 1455, 3307, 1456, 1457, 3215, 3950, 3217,
	2568, 3304, 3216, 3078, 3079, 3080, 3081, 3330, 1708, 3957,
	1455, 3249, 1456, 1457, 3548, 1455, 3230, 1456, 1457, 2924,
	2463, 1458, 3270, 3321, 3322, 3267, 3323, 3271, 3325, 3327,
	3260, 2435, 3239, 71, 47, 1455, 3917, 1456, 1457, 3987,
	889, 3277, 3334, 1458, 886, 3620, 3621, 3338, 3339, 3340,
	3342, 3343, 3344, 3345, 3346, 3347, 3348, 3349, 3350, 3351,
	3352, 3353, 3354, 3356, 3358, 3360, 3362, 3364, 3366, 3368,
	3370, 3372, 3374, 3376, 3378, 3380, 3382, 3384, 3386, 3387,
	3389, 3390, 3391, 3393, 3298, 3295, 3395, 3305, 3397, 3398,
	3399, 3297, 3622, 3403, 3404, 3405, 3406, 3407, 3408, 3409,
	3410, 3411, 3412, 3413, 3315, 2689, 1719, 3086, 1458, 3087,
	3970, 3971, 3420, 3300, 3301, 885, 3425, 3972, 1458, 2178,
	3429, 3430, 1435, 3431, 3433, 1432, 3436, 3438, 2888, 3440,
	3441, 3442, 3443, 3312, 3313, 4077, 3314, 3449, 2024, 3316,
	97, 3318, 37, 3320, 36, 35, 34, 3424, 33, 3426,
	3427, 3428, 1458, 27, 3417, 1717, 1713, 1455, 26, 1456,
	1457, 3421, 25, 24, 23, 30, 20, 22, 21, 19,
	1714, 3252, 3471, 3472, 4104, 4151, 3476, 1458, 125, 1455,
	57, 1456, 1457, 1458, 54, 52, 133, 3306, 1458, 132,
	55, 51, 2687, 1719, 1202, 1710, 1711, 1716, 49, 1715,
	1458, 32, 2685, 1719, 31, 18, 3452, 17, 1458, 16,
	15, 14, 13, 12, 7, 3447, 3448, 6, 40, 39,
	38, 29, 28, 1458, 41, 4, 2911, 3450, 2465, 2372,
	3455, 0, 3462, 1458, 0, 0, 2683, 1719, 0, 0,
	3478, 0, 0, 3467, 1455, 1458, 1456, 1457, 0, 1458,
	0, 3485, 0, 2600, 1455, 0, 1456, 1457, 0, 3492,
	3493, 2681, 1719, 2606, 2607, 2608, 2609, 2679, 1719, 3491,
	0, 3490, 2677, 1719, 0, 0, 3270, 3497, 0, 3267,
	1458, 3271, 0, 3552, 2675, 1719, 3537, 3538, 1455, 3488,
	1456, 1457, 2673, 1719, 1458, 0, 0, 3507, 3508, 3513,
	0, 3515, 3558, 3559, 0, 0, 1515, 2671, 1719, 1458,
	0, 0, 0, 1455, 1458, 1456, 1457, 2669, 1719, 1455,
	0, 1456, 1457, 0, 1455, 0, 1456, 1457, 3571, 2667,
	1719, 3575, 0, 2662, 1719, 0, 1455, 1458, 1456, 1457,
	0, 0, 1458, 0, 1455, 0, 1456, 1457, 0, 0,
	3541, 0, 1458, 0, 3545, 3546, 3547, 0, 3586, 1455,
	1458, 1456, 1457, 0, 2658, 1719, 0, 1458, 0, 1455,
	0, 1456, 1457, 0, 0, 0, 0, 0, 2656, 1719,
	1458, 1455, 0, 1456, 1457, 1455, 0, 1456, 1457, 0,
	0, 0, 0, 2649, 1719, 0, 3560, 0, 2647, 1719,
	3580, 0, 0, 0, 0, 3576, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1455, 1458, 1456, 1457,
	0, 3435, 3609, 0, 0, 1458, 3400, 0, 0, 0,
	1455, 0, 1456, 1457, 0, 3617, 3396, 0, 957, 0,
	0, 88, 0, 3624, 3333, 1455, 1458, 1456, 1457, 0,
	1455, 3332, 1456, 1457, 1458, 0, 0, 0, 3626, 0,
	3627, 3628, 3629, 0, 3329, 0, 0, 0, 0, 0,
	0, 0, 0, 1455, 0, 1456, 1457, 0, 1455, 1735,
	1456, 1457, 0, 0, 0, 0, 0, 0, 1455, 0,
	1456, 1457, 0, 0, 0, 3642, 1455, 3616, 1456, 1457,
	0, 2779, 0, 1455, 0, 1456, 1457, 0, 0, 2778,
	0, 2088, 0, 2086, 0, 0, 1455, 0, 1456, 1457,
	3147, 0, 0, 0, 0, 1023, 43, 88, 0, 0,
	2774, 0, 0, 0, 0, 3663, 0, 3643, 2773, 0,
	0, 3665, 3652, 0, 3651, 0, 1023, 0, 3659, 0,
	3671, 0, 3661, 1455, 0, 1456, 1457, 0, 0, 0,
	0, 1455, 1087, 1456, 1457, 0, 3150, 0, 0, 3833,
	3150, 0, 0, 3676, 3677, 0, 3679, 0, 3840, 1458,
	0, 0, 1455, 3820, 1456, 1457, 0, 0, 0, 0,
	1455, 0, 1456, 1457, 0, 0, 1458, 0, 3850, 3851,
	1458, 3853, 0, 3854, 3855, 0, 0, 3817, 3858, 3859,
	3860, 3861, 3862, 3863, 3864, 3865, 3866, 3867, 3868, 3869,
	3870, 3871, 3872, 3873, 3874, 3875, 3876, 3877, 3878, 3879,
	3836, 3881, 3884, 3832, 3837, 3883, 3824, 2088, 3816, 2086,
	3844, 3827, 3828, 3829, 3815, 0, 0, 3893, 3894, 3895,
	3896, 3897, 3899, 3900, 3902, 3904, 3905, 3907, 0, 0,
	3607, 0, 0, 2772, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2771, 0, 0, 0, 2770, 0, 0, 0, 0, 0,
	3887, 0, 0, 0, 0, 0, 3889, 0, 2980, 3941,
	3892, 0, 0, 0, 0, 0, 0, 0, 3915, 0,
	0, 0, 0, 3912, 3913, 1455, 3914, 1456, 1457, 0,
	1051, 0, 3937, 3007, 3008, 0, 0, 3010, 0, 3930,
	3012, 3675, 1455, 0, 1456, 1457, 1455, 0, 1456, 1457,
	1458, 3936, 0, 0, 1458, 0, 0, 0, 3940, 0,
	3019, 3020, 3021, 0, 0, 0, 0, 0, 3150, 0,
	0, 0, 3026, 0, 0, 3028, 3029, 3030, 0, 0,
	0, 3031, 3032, 0, 0, 3033, 3882, 3034, 0, 0,
	0, 0, 0, 0, 3035, 1458, 3036, 0, 0, 0,
	3037, 0, 3038, 0, 0, 3039, 0, 3040, 0, 3041,
	1458, 3042, 0, 3043, 0, 3044, 0, 3045, 0, 3046,
	0, 3047, 1458, 3048, 0, 3049, 0, 3050, 0, 3051,
	0, 3052, 0, 3053, 2769, 3054, 0, 3055, 2760, 3056,
	1458, 0, 0, 3057, 1458, 3058, 0, 3059, 0, 0,
	3060, 0, 3061, 0, 3062, 0, 2244, 3064, 0, 0,
	3066, 0, 0, 3068, 3069, 3070, 3071, 3886, 0, 0,
	3942, 3072, 2244, 2244, 2244, 2244, 2244, 1693, 0, 2759,
	0, 0, 0, 0, 0, 0, 1455, 3082, 1456, 1457,
	1455, 0, 1456, 1457, 2758, 3095, 0, 1458, 3099, 0,
	1051, 1458, 0, 0, 3961, 43, 2757, 3102, 3103, 3104,
	3105, 3106, 3107, 3966, 3958, 3956, 3108, 3109, 1458, 3110,
	3921, 3111, 0, 3953, 2754, 0, 0, 0, 2749, 3949,
	1458, 1455, 0, 1456, 1457, 0, 0, 3982, 665, 0,
	0, 0, 0, 3983, 3984, 1458, 1455, 0, 1456, 1457,
	1458, 0, 0, 0, 1458, 0, 0, 1010, 1455, 0,
	1456, 1457, 0, 0, 1458, 0, 3142, 0, 3976, 4002,
	0, 3977, 0, 0, 0, 0, 1455, 0, 1456, 1457,
	1455, 2742, 1456, 1457, 0, 2741, 0, 3985, 0, 0,
	0, 3147, 3173, 1458, 0, 4028, 4029, 0, 0, 0,
	1083, 0, 2740, 0, 0, 0, 0, 3992, 43, 4036,
	4038, 4040, 4034, 0, 2739, 0, 0, 4007, 4012, 4020,
	4004, 4009, 4017, 4014, 0, 4013, 4011, 4016, 4015, 2738,
	1458, 0, 0, 1455, 2737, 1456, 1457, 1455, 2736, 1456,
	1457, 4076, 0, 0, 4044, 0, 3844, 4023, 2735, 0,
	0, 1458, 4047, 3236, 1455, 0, 1456, 1457, 4055, 4073,
	4063, 4068, 0, 0, 0, 0, 1455, 0, 1456, 1457,
	4083, 4034, 0, 0, 0, 0, 0, 2734, 4095, 4081,
	0, 1455, 0, 1456, 1457, 0, 1455, 4100, 1456, 1457,
	1455, 0, 1456, 1457, 0, 0, 4093, 0, 4089, 0,
	1455, 0, 1456, 1457, 0, 0, 0, 0, 4103, 0,
	0, 0, 0, 0, 2728, 0, 0, 0, 0, 0,
	0, 4123, 4125, 4127, 0, 0, 1974, 0, 4118, 1455,
	4119, 1456, 1457, 4122, 4116, 2727, 2088, 0, 2086, 4128,
	0, 0, 0, 0, 0, 4137, 4133, 4135, 4131, 3328,
	1264, 0, 1264, 1264, 3965, 0, 0, 0, 0, 4150,
	4145, 4034, 3975, 3337, 0, 0, 1455, 0, 1456, 1457,
	4153, 0, 0, 0, 0, 0, 4161, 4159, 0, 4162,
	4163, 0, 0, 0, 0, 0, 0, 1455, 0, 1456,
	1457, 0, 0, 0, 0, 0, 2088, 0, 2086, 0,
	1023, 1499, 1504, 1505, 3883, 1508, 1510, 1511, 1512, 1513,
	4169, 1516, 1517, 1519, 1519, 0, 1519, 1519, 1524, 1524,
	1524, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535,
	1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545,
	1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555,
	1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565,
	1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575,
	1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585,
	1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595,
	1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605,
	1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615,
	1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625,
	1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635,
	1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645,
	1646, 1647, 1648, 0, 4170, 4171, 1458, 1649, 0, 1651,
	1652, 1653, 1654, 1655, 0, 0, 4134, 0, 0, 0,
	0, 1524, 1524, 1524, 1524, 1524, 1524, 0, 0, 0,
	0, 3533, 0, 0, 0, 0, 1662, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	0, 0, 4102, 0, 0, 0, 0, 1458, 0, 0,
	0, 0, 1787, 0, 3557, 0, 0, 1689, 1458, 0,
	0, 0, 0, 0, 1458, 0, 4168, 0, 0, 0,
	1458, 0, 0, 0, 1458, 0, 0, 0, 0, 0,
	2726, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1458, 0, 0, 0, 0, 1458, 0, 0, 0, 0,
	1458, 0, 0, 0, 0, 1458, 0, 0, 0, 1694,
	0, 1458, 3577, 0, 3578, 1458, 0, 3579, 1023, 0,
	3582, 3583, 1023, 0, 0, 0, 0, 0, 1023, 3587,
	0, 2723, 1455, 0, 1456, 1457, 0, 1458, 0, 0,
	0, 0, 2722, 3588, 0, 3589, 0, 3590, 2721, 3591,
	0, 3592, 0, 3593, 2719, 3594, 1458, 3595, 2712, 3596,
	1787, 3597, 0, 3598, 0, 3599, 0, 3600, 0, 3601,
	0, 3602, 0, 3603, 2709, 0, 3604, 0, 1458, 2707,
	3605, 0, 3606, 1455, 2705, 1456, 1457, 1458, 3608, 2664,
	1203, 0, 1209, 192, 1455, 2644, 1456, 1457, 1775, 2643,
	1455, 0, 1456, 1457, 2917, 0, 1455, 0, 1456, 1457,
	1455, 3625, 1456, 1457, 0, 0, 0, 131, 0, 153,
	3630, 2639, 3631, 3632, 0, 3633, 1455, 3634, 1456, 1457,
	174, 1455, 3635, 1456, 1457, 0, 1455, 0, 1456, 1457,
	2637, 1455, 0, 1456, 1457, 0, 0, 1455, 0, 1456,
	1457, 1455, 1431, 1456, 1457, 0, 0, 3660, 0, 0,
	0, 164, 2602, 0, 0, 0, 0, 152, 0, 3672,
	0, 2591, 3674, 1455, 0, 1456, 1457, 0, 0, 0,
	0, 0, 1788, 0, 3678, 0, 171, 0, 0, 172,
	0, 0, 1455, 0, 1456, 1457, 0, 0, 0, 0,
	3812, 0, 0, 0, 0, 0, 1775, 0, 1845, 1846,
	163, 162, 191, 0, 1455, 0, 1456, 1457, 0, 0,
	0, 0, 0, 1455, 0, 1456, 1457, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1801, 1804, 1805, 1806, 1807, 1808,
	1809, 1264, 1810, 1811, 1813, 1814, 1812, 1815, 1816, 1789,
	1790, 1791, 1792, 1773, 1774, 1802, 0, 1776, 0, 1777,
	1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 0, 0,
	1786, 1793, 1794, 1795, 1796, 0, 1797, 1798, 1799, 1800,
	1788, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 1847, 160, 0, 1844, 0, 158,
	159, 0, 0, 0, 0, 0, 175, 0, 0, 0,
	0, 0, 0, 3920, 0, 181, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1801, 1804, 1805, 1806, 1807, 1808, 1809, 0,
	1810, 1811, 1813, 1814, 1812, 1815, 1816, 1789, 1790, 1791,
	1792, 1773, 1774, 1802, 0, 1776, 0, 1777, 1778, 1779,
	1780, 1781, 1782, 1783, 1784, 1785, 0, 0, 1786, 1793,
	1794, 1795, 1796, 0, 1797, 1798, 1799, 1800, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	0, 0, 0, 0, 0, 0, 0, 1264, 1264, 0,
	1841, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 88, 0, 131, 88, 153, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 174, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 164, 0, 0,
	0, 0, 1747, 152, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1803, 942, 0, 0, 0,
	0, 0, 171, 0, 1765, 172, 0, 0, 0, 0,
	3700, 3702, 3701, 3765, 3766, 3767, 3768, 3769, 3770, 3771,
	791, 0, 0, 0, 1845, 1846, 163, 162, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3964, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 197, 161, 0, 197, 0, 0,
	0, 716, 0, 0, 0, 0, 722, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 197, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3978, 1904, 0, 3979,
	0, 3980, 197, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1803, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 722, 197,
	722, 0, 1949, 0, 0, 0, 0, 0, 0, 157,
	1847, 160, 0, 1844, 0, 158, 159, 0, 0, 1975,
	0, 0, 175, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 0, 0, 0, 1986, 0, 0, 0, 0,
	0, 0, 1990, 154, 0, 0, 155, 0, 0, 0,
	0, 0, 0, 2001, 2002, 2003, 2004, 2005, 2006, 2007,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4074, 167, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4090, 0, 4091, 0, 4092,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 3706, 0, 2370, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3714, 3715, 0, 0, 3790, 3789, 3788, 0, 0,
	3786, 3787, 3785, 0, 0, 166, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 168, 173,
	170, 176, 177, 178, 180, 182, 183, 184, 185, 0,
	0, 0, 0, 0, 186, 188, 189, 190, 0, 0,
	0, 0, 4148, 0, 4149, 0, 0, 0, 0, 0,
	1087, 0, 0, 0, 0, 3791, 912, 0, 767, 768,
	3792, 3793, 916, 3794, 770, 771, 913, 914, 0, 765,
	769, 915, 917, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1087, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2037, 0,
	0, 161, 0, 0, 0, 0, 0, 3697, 3698, 3699,
	3703, 3704, 3705, 3716, 3763, 3764, 3772, 3774, 868, 3773,
	3775, 3776, 3777, 3780, 3781, 3782, 3783, 3778, 3779, 3784,
	3680, 3684, 3681, 3682, 3683, 3695, 3685, 3686, 3687, 3688,
	3689, 3690, 3691, 3692, 3693, 3694, 3696, 3795, 3796, 3797,
	3798, 3799, 3800, 3709, 3713, 3712, 3710, 3711, 3707, 3708,
	3735, 3734, 3736, 3737, 3738, 3739, 3740, 3741, 3743, 3742,
	3744, 3745, 3746, 3747, 3748, 3749, 3717, 3718, 3721, 3722,
	3720, 3719, 3723, 3732, 3733, 3724, 3725, 3726, 3727, 3728,
	3729, 3731, 3730, 3750, 3751, 3752, 3753, 3754, 3756, 3755,
	3759, 3760, 3758, 3757, 3762, 3761, 0, 0, 0, 154,
	0, 0, 155, 0, 0, 0, 0, 0, 918, 0,
	919, 0, 0, 923, 0, 0, 0, 925, 924, 0,
	926, 0, 888, 887, 0, 0, 920, 921, 0, 922,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2570, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1510, 0, 1510, 3801, 3802, 3803, 3804, 3805, 3806,
	3807, 3808, 0, 0, 0, 0, 0, 0, 0, 2582,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 168, 173, 170, 176, 177, 178,
	180, 182, 183, 184, 185, 0, 0, 0, 0, 0,
	186, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 197,
	0, 197, 0, 0, 2355, 0, 0, 0, 0, 0,
	0, 0, 2359, 0, 2362, 0, 0, 0, 2037, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 722, 0,
	722, 722, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	722, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1502,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2762, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2794, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1023, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2833,
	2834, 0, 0, 0, 0, 0, 0, 0, 0, 2370,
	0, 0, 1023, 2854, 0, 0, 2037, 0, 0, 0,
	0, 0, 0, 2521, 0, 0, 0, 0, 0, 0,
	0, 0, 2538, 2539, 0, 0, 2543, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2548, 0,
	0, 0, 0, 0, 0, 2551, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2554, 0, 0, 0, 0, 0, 0, 0, 1502,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2931, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 197, 0, 0, 0, 722,
	722, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 197, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 722, 0,
	0, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 722, 0, 0, 0,
	0, 0, 0, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	722, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1502, 0, 0, 0, 0, 0, 722,
	722, 0, 722, 0, 722, 722, 0, 722, 722, 722,
	722, 722, 722, 0, 0, 0, 0, 0, 0, 0,
	1502, 0, 0, 1502, 722, 1502, 197, 0, 0, 0,
	0, 0, 959, 0, 2280, 0, 0, 960, 0, 0,
	0, 0, 0, 0, 0, 0, 197, 2087, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 722,
	0, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 722, 0, 197, 197, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 197, 0, 0, 0, 0, 0,
	0, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 722,
	3083, 0, 966, 967, 968, 969, 970, 971, 972, 973,
	974, 975, 976, 977, 978, 979, 980, 981, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2855, 0, 0, 0, 2370, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3151, 0, 88, 0, 0, 0, 2370, 2370, 2370, 2370,
	2370, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2370, 0, 0, 2370,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2904, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 722, 722, 0, 0, 0,
	0, 0, 0, 3258, 0, 0, 0, 0, 722, 0,
	0, 0, 0, 3266, 0, 0, 0, 197, 0, 0,
	0, 0, 0, 2953, 2954, 2955, 2956, 2957, 2958, 96,
	0, 0, 959, 0, 0, 0, 947, 960, 961, 962,
	963, 948, 0, 0, 949, 950, 0, 951, 2037, 2968,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 956, 964, 965, 0, 0, 722, 0, 0, 0,
	0, 0, 0, 2976, 0, 0, 1502, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1502, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3272, 3273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 966, 967, 968, 969, 970, 971, 972, 973,
	974, 975, 976, 977, 978, 979, 980, 981, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1510, 0, 0, 0, 1510, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2292, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2370, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3496, 0, 0,
	197, 0, 0, 0, 0, 722, 0, 0, 0, 0,
	0, 0, 3275, 3276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	197, 0, 0, 722, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 197, 0, 0, 0, 722, 0, 0,
	2292, 197, 0, 197, 0, 0, 197, 197, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 722, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 912, 0, 0, 0,
	0, 0, 916, 0, 0, 0, 913, 914, 0, 0,
	0, 915, 917, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 722, 0,
	0, 0, 0, 0, 0, 0, 941, 0, 0, 0,
	0, 0, 0, 0, 3226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 722, 0, 0, 0, 0,
	0, 722, 0, 0, 0, 0, 0, 0, 0, 0,
	3264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	701, 0, 0, 0, 3296, 0, 721, 3299, 722, 0,
	0, 0, 0, 722, 0, 0, 0, 722, 722, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3636, 197, 3640, 3641, 721, 0,
	721, 0, 197, 0, 0, 0, 0, 0, 0, 0,
	0, 197, 197, 0, 0, 197, 0, 197, 0, 3151,
	0, 88, 0, 3151, 0, 0, 0, 197, 0, 0,
	0, 0, 0, 0, 197, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	197, 0, 0, 0, 0, 0, 0, 0, 0, 722,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3825,
	0, 0, 0, 0, 0, 0, 3451, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3477, 0, 0, 0, 1502, 0,
	2292, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3526, 0, 0, 3527, 3528, 3529, 0, 0,
	0, 3151, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1527,
	1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537,
	1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1547, 1548,
	1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558,
	1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568,
	1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578,
	1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588,
	1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598,
	1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608,
	1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618,
	1619, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1628, 1629,
	1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639,
	1645, 1646, 1647, 1648, 1662, 1663, 1664, 1665, 1666, 1667,
	1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 0, 0,
	0, 0, 197, 0, 0, 0, 0, 0, 0, 0,
	197, 0, 3951, 0, 0, 0, 0, 0, 0, 0,
	0, 722, 0, 0, 0, 0, 0, 0, 0, 0,
	88, 0, 722, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 197, 0, 0,
	0, 0, 197, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3995, 0, 0, 0, 898, 0, 0, 4003, 0,
	722, 0, 0, 88, 0, 0, 197, 0, 0, 0,
	0, 0, 0, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 722, 0, 0,
	0, 0, 0, 0, 722, 0, 0, 0, 0, 0,
	0, 0, 0, 722, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1502,
	0, 0, 0, 0, 0, 720, 0, 0, 0, 0,
	0, 0, 197, 197, 197, 197, 197, 197, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 721, 1418,
	721, 721, 0, 0, 0, 0, 0, 197, 197, 0,
	0, 0, 0, 0, 0, 4094, 0, 0, 0, 0,
	721, 0, 0, 0, 0, 0, 0, 1079, 0, 1086,
	0, 0, 197, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1501,
	0, 0, 0, 0, 0, 722, 0, 0, 899, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 722, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 666,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 666, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1033, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1052, 1052, 0, 0, 0, 0, 0, 0, 0,
	0, 666, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 722, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	722, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3962, 0, 0, 0, 0, 1501,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 722, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 197, 0, 0, 0, 722,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 722, 0, 0, 0, 1502, 0, 0,
	722, 722, 0, 1502, 197, 197, 197, 197, 197, 721,
	721, 0, 0, 0, 0, 0, 197, 0, 0, 0,
	0, 0, 197, 0, 197, 0, 0, 197, 197, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 721, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 721, 0, 0, 0,
	0, 0, 0, 197, 0, 0, 0, 1818, 0, 0,
	0, 0, 0, 0, 0, 0, 722, 1827, 0, 1502,
	0, 0, 0, 0, 722, 0, 0, 0, 0, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	721, 0, 1853, 197, 0, 0, 959, 0, 0, 0,
	1862, 960, 0, 1501, 1864, 0, 0, 1867, 1868, 721,
	721, 2087, 721, 197, 721, 721, 197, 721, 721, 721,
	721, 721, 721, 0, 0, 0, 0, 0, 0, 0,
	1501, 1899, 1900, 1501, 721, 1501, 0, 1905, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 721,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1967, 0, 0, 721, 966, 967, 968, 969,
	970, 971, 972, 973, 974, 975, 976, 977, 978, 979,
	980, 981, 982, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 0, 721,
	722, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1266, 0, 1266,
	1266, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 197, 0, 0, 0, 0, 0, 1430,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 197, 0, 0, 197, 197, 197, 0, 0, 0,
	0, 0, 0, 0, 722, 722, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 721, 721, 0, 0, 0,
	0, 666, 0, 666, 0, 0, 0, 0, 721, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 722, 722, 722, 722, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 666, 0, 0, 721, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1501, 0, 0, 0,
	0, 0, 0, 0, 0, 2096, 0, 0, 0, 0,
	0, 1503, 0, 1501, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 197, 0, 1696, 1697,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1502, 0, 0, 0, 0,
	722, 0, 722, 0, 0, 0, 0, 721, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1741, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1760, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 721, 0, 0, 0, 0,
	0, 722, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1503, 0, 0, 197, 0, 0, 722, 0, 1079,
	0, 0, 0, 721, 0, 0, 0, 0, 0, 0,
	722, 0, 0, 0, 0, 0, 0, 721, 1870, 1870,
	721, 1870, 0, 1870, 1870, 0, 1879, 1870, 1870, 1870,
	1870, 1870, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 721, 0, 1079, 0, 0, 0, 666, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1033, 0, 0, 0, 0, 0, 0, 0, 1947, 0,
	0, 0, 0, 722, 0, 0, 0, 722, 722, 0,
	0, 0, 0, 666, 1971, 0, 0, 0, 721, 0,
	0, 0, 0, 0, 0, 2453, 2454, 2455, 0, 0,
	0, 0, 0, 0, 0, 666, 0, 0, 0, 0,
	722, 0, 0, 0, 0, 721, 0, 0, 0, 0,
	0, 721, 1862, 0, 0, 1862, 0, 1862, 1266, 0,
	0, 0, 0, 2485, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1503, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 721, 0,
	0, 0, 0, 721, 0, 0, 0, 721, 721, 0,
	0, 0, 1503, 0, 0, 1503, 0, 1503, 666, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1921, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 666, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1973,
	666, 0, 0, 0, 0, 0, 0, 0, 722, 0,
	0, 0, 0, 0, 0, 0, 666, 0, 0, 0,
	0, 0, 0, 666, 197, 0, 0, 0, 0, 0,
	0, 0, 1999, 2000, 666, 666, 666, 666, 666, 666,
	666, 0, 722, 197, 0, 0, 0, 0, 0, 721,
	0, 0, 0, 0, 1266, 1266, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2025, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 722, 0, 1501, 0,
	721, 0, 0, 0, 0, 2082, 1502, 0, 722, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 722, 2292, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 722, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 722, 0, 0, 0, 0, 0, 0, 197,
	722, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 666,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 722, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 722, 0, 0, 0, 0, 197, 0, 0,
	0, 0, 0, 0, 0, 0, 1266, 0, 1503, 0,
	0, 722, 0, 0, 0, 0, 0, 0, 722, 0,
	1052, 1052, 0, 0, 0, 1503, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 721, 2341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 721, 0, 0, 0, 1741, 0, 0, 1266,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1079, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2868, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1052, 1973,
	1052, 1052, 1052, 1052, 1052, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1086, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	721, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1921, 0, 1079, 0, 0, 0, 0, 0,
	1086, 0, 0, 0, 0, 0, 0, 721, 1052, 0,
	0, 0, 0, 0, 721, 0, 0, 0, 1862, 1862,
	0, 0, 1033, 721, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 666, 0, 0, 0, 1501,
	2941, 0, 1973, 666, 0, 666, 0, 1079, 666, 2379,
	0, 0, 2082, 0, 0, 0, 2082, 2082, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 721, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2557, 0,
	0, 0, 0, 721, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1266,
	0, 0, 0, 0, 0, 0, 0, 666, 0, 0,
	0, 0, 0, 0, 666, 0, 0, 0, 0, 0,
	0, 0, 0, 666, 666, 0, 0, 666, 0, 2545,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 666,
	0, 0, 0, 0, 0, 0, 666, 0, 721, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	721, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 666, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 721, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 721,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 721, 0, 0, 0, 1501, 0, 0,
	721, 721, 0, 1501, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1503, 0, 1973, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 721, 0, 0, 1501,
	0, 0, 0, 0, 721, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2802, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2817, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3303, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2900,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 666, 0, 2341, 0, 0, 0,
	721, 0, 1921, 2925, 0, 0, 0, 0, 0, 0,
	0, 0, 2930, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 666,
	0, 0, 0, 0, 666, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3501, 0, 0, 0, 2082, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 666, 0,
	0, 0, 0, 0, 0, 2910, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 721, 721, 0, 0, 0, 0,
	0, 0, 2082, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1503, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 666, 666, 666, 666, 666, 666,
	0, 0, 0, 721, 721, 721, 721, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 666,
	666, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 666, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1052, 0, 0, 0, 0, 0, 3084, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1266,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1870, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3127, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1266, 0, 0, 0, 0, 0, 0, 3154,
	1870, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1501, 0, 0, 0, 0,
	721, 0, 721, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1052, 0, 0, 0, 1079, 0, 0, 0, 0,
	0, 721, 0, 2341, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 721, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	721, 0, 0, 0, 0, 0, 0, 666, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1503,
	0, 0, 0, 0, 0, 1503, 666, 666, 666, 666,
	666, 0, 0, 0, 0, 0, 0, 0, 3171, 0,
	0, 0, 0, 0, 1921, 0, 666, 0, 0, 666,
	3179, 1973, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 721, 0, 0, 0, 721, 721, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 666, 0, 0, 0, 0,
	721, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1503, 0, 0, 0, 0, 0, 0, 0, 3416,
	0, 666, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 666, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 666, 0, 0, 666, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 721, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 721, 2341, 2341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 666, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3565, 3566, 3567, 3568, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 666, 721, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1501, 0, 721, 0,
	0, 0, 0, 0, 666, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 721, 721, 0, 0,
	0, 0, 0, 666, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 721, 0,
	0, 0, 0, 666, 0, 0, 666, 666, 666, 0,
	0, 0, 721, 0, 0, 0, 0, 0, 0, 0,
	721, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 721, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 721, 0, 0, 0, 0, 0, 0, 3664,
	0, 3666, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 721, 0, 0, 0, 0, 0, 0, 721, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3835, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1266,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1921, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1503, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3908, 0, 0, 0, 3908, 3908, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1921, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2341, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2341, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3989, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3993, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1266, 1266, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1921, 4042, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3154, 0, 0, 0, 666, 0, 0, 0, 4058,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3989, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2341, 0, 0, 0, 0, 0, 0, 1503, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3416, 0, 0, 0, 0, 0, 0, 4058, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4022,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 0, 0, 0, 1401, 1387,
	522, 1921, 1329, 1404, 1298, 1317, 1414, 1320, 1323, 1366,
	1276, 1344, 413, 1314, 1269, 1302, 1271, 1309, 1272, 1300,
	1331, 271, 1297, 1389, 1348, 1403, 364, 268, 1278, 1303,
	427, 1319, 205, 1368, 483, 253, 375, 372, 577, 283,
	274, 270, 251, 317, 383, 425, 512, 419, 1410, 368,
	1354, 0, 493, 398, 0, 0, 0, 1333, 1393, 1342,
	1380, 1328, 1367, 1286, 1353, 1405, 1315, 1363, 1406, 323,
	249, 325, 204, 410, 494, 287, 0, 0, 0, 1973,
	4024, 943, 0, 0, 0, 0, 4025, 0, 0, 0,
	0, 239, 0, 0, 246, 0, 0, 0, 349, 358,
	357, 338, 339, 341, 343, 348, 355, 361, 1311, 1360,
	1400, 1312, 1362, 266, 321, 273, 265, 574, 1411, 1392,
	1275, 1341, 1399, 1336, 0, 0, 230, 1402, 1335, 0,
	1365, 0, 1417, 1270, 1356, 0, 1273, 1277, 1413, 1397,
	1306, 276, 0, 0, 0, 0, 0, 0, 0, 1332,
	1343, 1377, 1381, 1326, 0, 0, 0, 0, 0, 0,
	0, 0, 1304, 0, 1352, 0, 0, 0, 1282, 1274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1330, 0, 0, 0, 0, 1285, 0, 1305,
	1378, 0, 1268, 298, 1279, 399, 258, 0, 450, 1385,
	1396, 1327, 618, 1398, 1325, 1324, 1372, 1283, 1391, 1318,
	363, 1281, 330, 199, 226, 0, 1316, 409, 458, 470,
	1390, 1301, 1310, 254, 1308, 468, 423, 596, 234, 285,
	455, 429, 466, 437, 288, 1351, 1370, 467, 370, 579,
	447, 593, 619, 620, 264, 403, 605, 516, 613, 637,
	227, 261, 417, 501, 599, 490, 395, 575, 576, 329,
	489, 296, 203, 367, 625, 225, 476, 369, 243, 232,
	581, 602, 290, 453, 632, 214, 511, 591, 240, 480,
	0, 0, 640, 248, 500, 216, 588, 499, 391, 326,
	327, 215, 0, 454, 269, 294, 0, 0, 259, 412,
	583, 584, 257, 641, 229, 612, 221, 1280, 611, 405,
	578, 589, 392, 381, 220, 587, 390, 380, 334, 353,
	354, 281, 307, 444, 373, 445, 306, 308, 401, 400,
	402, 208, 600, 0, 209, 0, 495, 601, 642, 449,
	213, 235, 236, 238, 1296, 280, 284, 292, 295, 303,
	304, 313, 365, 416, 443, 439, 448, 1386, 573, 594,
	606, 617, 623, 624, 626, 627, 628, 629, 630, 633,
	631, 404, 311, 491, 333, 371, 1375, 1416, 422, 469,
	241, 598, 492, 201, 1290, 1295, 1288, 0, 255, 256,
	1357, 569, 1291, 1289, 1346, 1347, 1292, 1407, 1408, 1409,
	1394, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 638,
	502, 508, 503, 504, 505, 506, 507, 0, 509, 1379,
	1284, 0, 1293, 1294, 1388, 585, 586, 661, 382, 482,
	595, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 250, 211,
	388, 396, 572, 312, 217, 218, 219, 518, 519, 520,
	521, 609, 610, 614, 206, 459, 460, 461, 462, 293,
	604, 309, 465, 464, 331, 332, 377, 446, 534, 536,
	547, 551, 553, 555, 561, 564, 535, 537, 548, 552,
	554, 556, 562, 565, 524, 526, 528, 530, 543, 542,
	539, 567, 568, 545, 550, 529, 541, 546, 559, 566,
	563, 523, 527, 531, 540, 558, 557, 538, 549, 560,
	544, 532, 525, 533, 1350, 198, 222, 366, 1412, 451,
	289, 639, 608, 603, 207, 224, 1287, 263, 1299, 1307,
	0, 1313, 1321, 1322, 1334, 1337, 1338, 1339, 1340, 0,
	1358, 1359, 1361, 1369, 1371, 1374, 1376, 1383, 1395, 1415,
	200, 202, 210, 223, 233, 237, 244, 262, 277, 279,
	286, 299, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 406, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 433, 434, 436, 438, 440, 452,
	457, 471, 472, 473, 474, 475, 478, 479, 484, 485,
	486, 487, 488, 496, 497, 510, 580, 582, 597, 615,
	621, 477, 301, 302, 441, 442, 314, 315, 635, 636,
	300, 592, 622, 590, 634, 616, 435, 376, 1349, 1355,
	379, 282, 305, 320, 1364, 607, 498, 228, 463, 291,
	252, 1382, 1384, 212, 247, 231, 260, 275, 278, 324,
	389, 397, 426, 431, 297, 272, 245, 456, 242, 481,
	513, 514, 515, 517, 393, 267, 430, 1345, 1373, 374,
	570, 571, 316, 394, 0, 0, 0, 1401, 1387, 522,
	0, 1329, 1404, 1298, 1317, 1414, 1320, 1323, 1366, 1276,
	1344, 413, 1314, 1269, 1302, 1271, 1309, 1272, 1300, 1331,
	271, 1297, 1389, 1348, 1403, 364, 268, 1278, 1303, 427,
	1319, 205, 1368, 483, 253, 375, 372, 577, 283, 274,
	270, 251, 317, 383, 425, 512, 419, 1410, 368, 1354,
	0, 493, 398, 0, 0, 0, 1333, 1393, 1342, 1380,
	1328, 1367, 1286, 1353, 1405, 1315, 1363, 1406, 323, 249,
	325, 204, 410, 494, 287, 0, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 246, 0, 0, 0, 349, 358, 357,
	338, 339, 341, 343, 348, 355, 361, 1311, 1360, 1400,
	1312, 1362, 266, 321, 273, 265, 574, 1411, 1392, 1275,
	1341, 1399, 1336, 0, 0, 230, 1402, 1335, 0, 1365,
	0, 1417, 1270, 1356, 0, 1273, 1277, 1413, 1397, 1306,
	276, 0, 0, 0, 0, 0, 0, 0, 1332, 1343,
	1377, 1381, 1326, 0, 0, 0, 0, 0, 0, 3180,
	0, 1304, 0, 1352, 0, 0, 0, 1282, 1274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1330, 0, 0, 0, 0, 1285, 0, 1305, 1378,
	0, 1268, 298, 1279, 399, 258, 0, 450, 1385, 1396,
	1327, 618, 1398, 1325, 1324, 1372, 1283, 1391, 1318, 363,
	1281, 330, 199, 226, 0, 1316, 409, 458, 470, 1390,
	1301, 1310, 254, 1308, 468, 423, 596, 234, 285, 455,
	429, 466, 437, 288, 1351, 1370, 467, 370, 579, 447,
	593, 619, 620, 264, 403, 605, 516, 613, 637, 227,
	261, 417, 501, 599, 490, 395, 575, 576, 329, 489,
	296, 203, 367, 625, 225, 476, 369, 243, 232, 581,
	602, 290, 453, 632, 214, 511, 591, 240, 480, 0,
	0, 640, 248, 500, 216, 588, 499, 391, 326, 327,
	215, 0, 454, 269, 294, 0, 0, 259, 412, 583,
	584, 257, 641, 229, 612, 221, 1280, 611, 405, 578,
	589, 392, 381, 220, 587, 390, 380, 334, 353, 354,
	281, 307, 444, 373, 445, 306, 308, 401, 400, 402,
	208, 600, 0, 209, 0, 495, 601, 642, 449, 213,
	235, 236, 238, 1296, 280, 284, 292, 295, 303, 304,
	313, 365, 416, 443, 439, 448, 1386, 573, 594, 606,
	617, 623, 624, 626, 627, 628, 629, 630, 633, 631,
	404, 311, 491, 333, 371, 1375, 1416, 422, 469, 241,
	598, 492, 201, 1290, 1295, 1288, 0, 255, 256, 1357,
	569, 1291, 1289, 1346, 1347, 1292, 1407, 1408, 1409, 1394,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 638, 502,
	508, 503, 504, 505, 506, 507, 0, 509, 1379, 1284,
	0, 1293, 1294, 1388, 585, 586, 661, 382, 482, 595,
	335, 347, 350, 340, 359, 0, 360, 336, 337, 342,
	344, 345, 346, 351, 352, 356, 362, 250, 211, 388,
	396, 572, 312, 217, 218, 219, 518, 519, 520, 521,
	609, 610, 614, 206, 459, 460, 461, 462, 293, 604,
	309, 465, 464, 331, 332, 377, 446, 534, 536, 547,
	551, 553, 555, 561, 564, 535, 537, 548, 552, 554,
	556, 562, 565, 524, 526, 528, 530, 543, 542, 539,
	567, 568, 545, 550, 529, 541, 546, 559, 566, 563,
	523, 527, 531, 540, 558, 557, 538, 549, 560, 544,
	532, 525, 533, 1350, 198, 222, 366, 1412, 451, 289,
	639, 608, 603, 207, 224, 1287, 263, 1299, 1307, 0,
	1313, 1321, 1322, 1334, 1337, 1338, 1339, 1340, 0, 1358,
	1359, 1361, 1369, 1371, 1374, 1376, 1383, 1395, 1415, 200,
	202, 210, 223, 233, 237, 244, 262, 277, 279, 286,
	299, 310, 318, 319, 322, 328, 378, 384, 385, 386,
	387, 406, 407, 408, 411, 414, 415, 418, 420, 421,
	424, 428, 432, 433, 434, 436, 438, 440, 452, 457,
	471, 472, 473, 474, 475, 478, 479, 484, 485, 486,
	487, 488, 496, 497, 510, 580, 582, 597, 615, 621,
	477, 301, 302, 441, 442, 314, 315, 635, 636, 300,
	592, 622, 590, 634, 616, 435, 376, 1349, 1355, 379,
	282, 305, 320, 1364, 607, 498, 228, 463, 291, 252,
	1382, 1384, 212, 247, 231, 260, 275, 278, 324, 389,
	397, 426, 431, 297, 272, 245, 456, 242, 481, 513,
	514, 515, 517, 393, 267, 430, 1345, 1373, 374, 570,
	571, 316, 394, 0, 0, 0, 1401, 1387, 522, 0,
	1329, 1404, 1298, 1317, 1414, 1320, 1323, 1366, 1276, 1344,
	413, 1314, 1269, 1302, 1271, 1309, 1272, 1300, 1331, 271,
	1297, 1389, 1348, 1403, 364, 268, 1278, 1303, 427, 1319,
	205, 1368, 483, 253, 375, 372, 577, 283, 274, 270,
	251, 317, 383, 425, 512, 419, 1410, 368, 1354, 0,
	493, 398, 0, 0, 0, 1333, 1393, 1342, 1380, 1328,
	1367, 1286, 1353, 1405, 1315, 1363, 1406, 323, 249, 325,
	204, 410, 494, 287, 0, 0, 0, 0, 0, 711,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 246, 0, 0, 0, 349, 358, 357, 338,
	339, 341, 343, 348, 355, 361, 1311, 1360, 1400, 1312,
	1362, 266, 321, 273, 265, 574, 1411, 1392, 1275, 1341,
	1399, 1336, 0, 0, 230, 1402, 1335, 0, 1365, 0,
	1417, 1270, 1356, 0, 1273, 1277, 1413, 1397, 1306, 276,
	0, 0, 0, 0, 0, 0, 0, 1332, 1343, 1377,
	1381, 1326, 0, 0, 0, 0, 0, 0, 3140, 0,
	1304, 0, 1352, 0, 0, 0, 1282, 1274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1330, 0, 0, 0, 0, 1285, 0, 1305, 1378, 0,
	1268, 298, 1279, 399, 258, 0, 450, 1385, 1396, 1327,
	618, 1398, 1325, 1324, 1372, 1283, 1391, 1318, 363, 1281,
	330, 199, 226, 0, 1316, 409, 458, 470, 1390, 1301,
	1310, 254, 1308, 468, 423, 596, 234, 285, 455, 429,
	466, 437, 288, 1351, 1370, 467, 370, 579, 447, 593,
	619, 620, 264, 403, 605, 516, 613, 637, 227, 261,
	417, 501, 599, 490, 395, 575, 576, 329, 489, 296,
	203, 367, 625, 225, 476, 369, 243, 232, 581, 602,
	290, 453, 632, 214, 511, 591, 240, 480, 0, 0,
	640, 248, 500, 216, 588, 499, 391, 326, 327, 215,
	0, 454, 269, 294, 0, 0, 259, 412, 583, 584,
	257, 641, 229, 612, 221, 1280, 611, 405, 578, 589,
	392, 381, 220, 587, 390, 380, 334, 353, 354, 281,
	307, 444, 373, 445, 306, 308, 401, 400, 402, 208,
	600, 0, 209, 0, 495, 601, 642, 449, 213, 235,
	236, 238, 1296, 280, 284, 292, 295, 303, 304, 313,
	365, 416, 443, 439, 448, 1386, 573, 594, 606, 617,
	623, 624, 626, 627, 628, 629, 630, 633, 631, 404,
	311, 491, 333, 371, 1375, 1416, 422, 469, 241, 598,
	492, 201, 1290, 1295, 1288, 0, 255, 256, 1357, 569,
	1291, 1289, 1346, 1347, 1292, 1407, 1408, 1409, 1394, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 638, 502, 508,
	503, 504, 505, 506, 507, 0, 509, 1379, 1284, 0,
	1293, 1294, 1388, 585, 586, 661, 382, 482, 595, 335,
	347, 350, 340, 359, 0, 360, 336, 337, 342, 344,
	345, 346, 351, 352, 356, 362, 250, 211, 388, 396,
	572, 312, 217, 218, 219, 518, 519, 520, 521, 609,
	610, 614, 206, 459, 460, 461, 462, 293, 604, 309,
	465, 464, 331, 332, 377, 446, 534, 536, 547, 551,
	553, 555, 561, 564, 535, 537, 548, 552, 554, 556,
	562, 565, 524, 526, 528, 530, 543, 542, 539, 567,
	568, 545, 550, 529, 541, 546, 559, 566, 563, 523,
	527, 531, 540, 558, 557, 538, 549, 560, 544, 532,
	525, 533, 1350, 198, 222, 366, 1412, 451, 289, 639,
	608, 603, 207, 224, 1287, 263, 1299, 1307, 0, 1313,
	1321, 1322, 1334, 1337, 1338, 1339, 1340, 0, 1358, 1359,
	1361, 1369, 1371, 1374, 1376, 1383, 1395, 1415, 200, 202,
	210, 223, 233, 237, 244, 262, 277, 279, 286, 299,
	310, 318, 319, 322, 328, 378, 384, 385, 386, 387,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 433, 434, 436, 438, 440, 452, 457, 471,
	472, 473, 474, 475, 478, 479, 484, 485, 486, 487,
	488, 496, 497, 510, 580, 582, 597, 615, 621, 477,
	301, 302, 441, 442, 314, 315, 635, 636, 300, 592,
	622, 590, 634, 616, 435, 376, 1349, 1355, 379, 282,
	305, 320, 1364, 607, 498, 228, 463, 291, 252, 1382,
	1384, 212, 247, 231, 260, 275, 278, 324, 389, 397,
	426, 431, 297, 272, 245, 456, 242, 481, 513, 514,
	515, 517, 393, 267, 430, 1345, 1373, 374, 570, 571,
	316, 394, 0, 0, 0, 1401, 1387, 522, 0, 1329,
	1404, 1298, 1317, 1414, 1320, 1323, 1366, 1276, 1344, 413,
	1314, 1269, 1302, 1271, 1309, 1272, 1300, 1331, 271, 1297,
	1389, 1348, 1403, 364, 268, 1278, 1303, 427, 1319, 205,
	1368, 483, 253, 375, 372, 577, 283, 274, 270, 251,
	317, 383, 425, 512, 419, 1410, 368, 1354, 0, 493,
	398, 0, 0, 0, 1333, 1393, 1342, 1380, 1328, 1367,
	1286, 1353, 1405, 1315, 1363, 1406, 323, 249, 325, 204,
	410, 494, 287, 0, 0, 0, 0, 0, 943, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 246, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 1311, 1360, 1400, 1312, 1362,
	266, 321, 273, 265, 574, 1411, 1392, 1275, 1341, 1399,
	1336, 0, 0, 230, 1402, 1335, 0, 1365, 0, 1417,
	1270, 1356, 0, 1273, 1277, 1413, 1397, 1306, 276, 0,
	0, 0, 0, 0, 0, 0, 1332, 1343, 1377, 1381,
	1326, 0, 0, 0, 0, 0, 0, 2357, 0, 1304,
	0, 1352, 0, 0, 0, 1282, 1274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1330,
	0, 0, 0, 0, 1285, 0, 1305, 1378, 0, 1268,
	298, 1279, 399, 258, 0, 450, 1385, 1396, 1327, 618,
	1398, 1325, 1324, 1372, 1283, 1391, 1318, 363, 1281, 330,
	199, 226, 0, 1316, 409, 458, 470, 1390, 1301, 1310,
	254, 1308, 468, 423, 596, 234, 285, 455, 429, 466,
	437, 288, 1351, 1370, 467, 370, 579, 447, 593, 619,
	620, 264, 403, 605, 516, 613, 637, 227, 261, 417,
	501, 599, 490, 395, 575, 576, 329, 489, 296, 203,
	367, 625, 225, 476, 369, 243, 232, 581, 602, 290,
	453, 632, 214, 511, 591, 240, 480, 0, 0, 640,
	248, 500, 216, 588, 499, 391, 326, 327, 215, 0,
	454, 269, 294, 0, 0, 259, 412, 583, 584, 257,
	641, 229, 612, 221, 1280, 611, 405, 578, 589, 392,
	381, 220, 587, 390, 380, 334, 353, 354, 281, 307,
	444, 373, 445, 306, 308, 401, 400, 402, 208, 600,
	0, 209, 0, 495, 601, 642, 449, 213, 235, 236,
	238, 1296, 280, 284, 292, 295, 303, 304, 313, 365,
	416, 443, 439, 448, 1386, 573, 594, 606, 617, 623,
	624, 626, 627, 628, 629, 630, 633, 631, 404, 311,
	491, 333, 371, 1375, 1416, 422, 469, 241, 598, 492,
	201, 1290, 1295, 1288, 0, 255, 256, 1357, 569, 1291,
	1289, 1346, 1347, 1292, 1407, 1408, 1409, 1394, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 638, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 1379, 1284, 0, 1293,
	1294, 1388, 585, 586, 661, 382, 482, 595, 335, 347,
	350, 340, 359, 0, 360, 336, 337, 342, 344, 345,
	346, 351, 352, 356, 362, 250, 211, 388, 396, 572,
	312, 217, 218, 219, 518, 519, 520, 521, 609, 610,
	614, 206, 459, 460, 461, 462, 293, 604, 309, 465,
	464, 331, 332, 377, 446, 534, 536, 547, 551, 553,
	555, 561, 564, 535, 537, 548, 552, 554, 556, 562,
	565, 524, 526, 528, 530, 543, 542, 539, 567, 568,
	545, 550, 529, 541, 546, 559, 566, 563, 523, 527,
	531, 540, 558, 557, 538, 549, 560, 544, 532, 525,
	533, 1350, 198, 222, 366, 1412, 451, 289, 639, 608,
	603, 207, 224, 1287, 263, 1299, 1307, 0, 1313, 1321,
	1322, 1334, 1337, 1338, 1339, 1340, 0, 1358, 1359, 1361,
	1369, 1371, 1374, 1376, 1383, 1395, 1415, 200, 202, 210,
	223, 233, 237, 244, 262, 277, 279, 286, 299, 310,
	318, 319, 322, 328, 378, 384, 385, 386, 387, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 615, 621, 477, 301,
	302, 441, 442, 314, 315, 635, 636, 300, 592, 622,
	590, 634, 616, 435, 376, 1349, 1355, 379, 282, 305,
	320, 1364, 607, 498, 228, 463, 291, 252, 1382, 1384,
	212, 247, 231, 260, 275, 278, 324, 389, 397, 426,
	431, 297, 272, 245, 456, 242, 481, 513, 514, 515,
	517, 393, 267, 430, 1345, 1373, 374, 570, 571, 316,
	394, 0, 0, 0, 1401, 1387, 522, 0, 1329, 1404,
	1298, 1317, 1414, 1320, 1323, 1366, 1276, 1344, 413, 1314,
	1269, 1302, 1271, 1309, 1272, 1300, 1331, 271, 1297, 1389,
	1348, 1403, 364, 268, 1278, 1303, 427, 1319, 205, 1368,
	483, 253, 375, 372, 577, 283, 274, 270, 251, 317,
	383, 425, 512, 419, 1410, 368, 1354, 0, 493, 398,
	0, 0, 0, 1333, 1393, 1342, 1380, 1328, 1367, 1286,
	1353, 1405, 1315, 1363, 1406, 323, 249, 325, 204, 410,
	494, 287, 0, 96, 0, 0, 0, 711, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	246, 0, 0, 0, 349, 358, 357, 338, 339, 341,
	343, 348, 355, 361, 1311, 1360, 1400, 1312, 1362, 266,
	321, 273, 265, 574, 1411, 1392, 1275, 1341, 1399, 1336,
	0, 0, 230, 1402, 1335, 0, 1365, 0, 1417, 1270,
	1356, 0, 1273, 1277, 1413, 1397, 1306, 276, 0, 0,
	0, 0, 0, 0, 0, 1332, 1343, 1377, 1381, 1326,
	0, 0, 0, 0, 0, 0, 0, 0, 1304, 0,
	1352, 0, 0, 0, 1282, 1274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1330, 0,
	0, 0, 0, 1285, 0, 1305, 1378, 0, 1268, 298,
	1279, 399, 258, 0, 450, 1385, 1396, 1327, 618, 1398,
	1325, 1324, 1372, 1283, 1391, 1318, 363, 1281, 330, 199,
	226, 0, 1316, 409, 458, 470, 1390, 1301, 1310, 254,
	1308, 468, 423, 596, 234, 285, 455, 429, 466, 437,
	288, 1351, 1370, 467, 370, 579, 447, 593, 619, 620,
	264, 403, 605, 516, 613, 637, 227, 261, 417, 501,
	599, 490, 395, 575, 576, 329, 489, 296, 203, 367,
	625, 225, 476, 369, 243, 232, 581, 602, 290, 453,
	632, 214, 511, 591, 240, 480, 0, 0, 640, 248,
	500, 216, 588, 499, 391, 326, 327, 215, 0, 454,
	269, 294, 0, 0, 259, 412, 583, 584, 257, 641,
	229, 612, 221, 1280, 611, 405, 578, 589, 392, 381,
	220, 587, 390, 380, 334, 353, 354, 281, 307, 444,
	373, 445, 306, 308, 401, 400, 402, 208, 600, 0,
	209, 0, 495, 601, 642, 449, 213, 235, 236, 238,
	1296, 280, 284, 292, 295, 303, 304, 313, 365, 416,
	443, 439, 448, 1386, 573, 594, 606, 617, 623, 624,
	626, 627, 628, 629, 630, 633, 631, 404, 311, 491,
	333, 371, 1375, 1416, 422, 469, 241, 598, 492, 201,
	1290, 1295, 1288, 0, 255, 256, 1357, 569, 1291, 1289,
	1346, 1347, 1292, 1407, 1408, 1409, 1394, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 638, 502, 508, 503, 504,
	505, 506, 507, 0, 509, 1379, 1284, 0, 1293, 1294,
	1388, 585, 586, 661, 382, 482, 595, 335, 347, 350,
	340, 359, 0, 360, 336, 337, 342, 344, 345, 346,
	351, 352, 356, 362, 250, 211, 388, 396, 572, 312,
	217, 218, 219, 518, 519, 520, 521, 609, 610, 614,
	206, 459, 460, 461, 462, 293, 604, 309, 465, 464,
	331, 332, 377, 446, 534, 536, 547, 551, 553, 555,
	561, 564, 535, 537, 548, 552, 554, 556, 562, 565,
	524, 526, 528, 530, 543, 542, 539, 567, 568, 545,
	550, 529, 541, 546, 559, 566, 563, 523, 527, 531,
	540, 558, 557, 538, 549, 560, 544, 532, 525, 533,
	1350, 198, 222, 366, 1412, 451, 289, 639, 608, 603,
	207, 224, 1287, 263, 1299, 1307, 0, 1313, 1321, 1322,
	1334, 1337, 1338, 1339, 1340, 0, 1358, 1359, 1361, 1369,
	1371, 1374, 1376, 1383, 1395, 1415, 200, 202, 210, 223,
	233, 237, 244, 262, 277, 279, 286, 299, 310, 318,
	319, 322, 328, 378, 384, 385, 386, 387, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	433, 434, 436, 438, 440, 452, 457, 471, 472, 473,
	474, 475, 478, 479, 484, 485, 486, 487, 488, 496,
	497, 510, 580, 582, 597, 615, 621, 477, 301, 302,
	441, 442, 314, 315, 635, 636, 300, 592, 622, 590,
	634, 616, 435, 376, 1349, 1355, 379, 282, 305, 320,
	1364, 607, 498, 228, 463, 291, 252, 1382, 1384, 212,
	247, 231, 260, 275, 278, 324, 389, 397, 426, 431,
	297, 272, 245, 456, 242, 481, 513, 514, 515, 517,
	393, 267, 430, 1345, 1373, 374, 570, 571, 316, 394,
	0, 0, 0, 1401, 1387, 522, 0, 1329, 1404, 1298,
	1317, 1414, 1320, 1323, 1366, 1276, 1344, 413, 1314, 1269,
	1302, 1271, 1309, 1272, 1300, 1331, 271, 1297, 1389, 1348,
	1403, 364, 268, 1278, 1303, 427, 1319, 205, 1368, 483,
	253, 375, 372, 577, 283, 274, 270, 251, 317, 383,
	425, 512, 419, 1410, 368, 1354, 0, 493, 398, 0,
	0, 0, 1333, 1393, 1342, 1380, 1328, 1367, 1286, 1353,
	1405, 1315, 1363, 1406, 323, 249, 325, 204, 410, 494,
	287, 0, 0, 0, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 246,
	0, 0, 0, 349, 358, 357, 338, 339, 341, 343,
	348, 355, 361, 1311, 1360, 1400, 1312, 1362, 266, 321,
	273, 265, 574, 1411, 1392, 1275, 1341, 1399, 1336, 0,
	0, 230, 1402, 1335, 0, 1365, 0, 1417, 1270, 1356,
	0, 1273, 1277, 1413, 1397, 1306, 276, 0, 0, 0,
	0, 0, 0, 0, 1332, 1343, 1377, 1381, 1326, 0,
	0, 0, 0, 0, 0, 0, 0, 1304, 0, 1352,
	0, 0, 0, 1282, 1274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1330, 0, 0,
	0, 0, 1285, 0, 1305, 1378, 0, 1268, 298, 1279,
	399, 258, 0, 450, 1385, 1396, 1327, 618, 1398, 1325,
	1324, 1372, 1283, 1391, 1318, 363, 1281, 330, 199, 226,
	0, 1316, 409, 458, 470, 1390, 1301, 1310, 254, 1308,
	468, 423, 596, 234, 285, 455, 429, 466, 437, 288,
	1351, 1370, 467, 370, 579, 447, 593, 619, 620, 264,
	403, 605, 516, 613, 637, 227, 261, 417, 501, 599,
	490, 395, 575, 576, 329, 489, 296, 203, 367, 625,
	225, 476, 369, 243, 232, 581, 602, 290, 453, 632,
	214, 511, 591, 240, 480, 0, 0, 640, 248, 500,
	216, 588, 499, 391, 326, 327, 215, 0, 454, 269,
	294, 0, 0, 259, 412, 583, 584, 257, 641, 229,
	612, 221, 1280, 611, 405, 578, 589, 392, 381, 220,
	587, 390, 380, 334, 353, 354, 281, 307, 444, 373,
	445, 306, 308, 401, 400, 402, 208, 600, 0, 209,
	0, 495, 601, 642, 449, 213, 235, 236, 238, 1296,
	280, 284, 292, 295, 303, 304, 313, 365, 416, 443,
	439, 448, 1386, 573, 594, 606, 617, 623, 624, 626,
	627, 628, 629, 630, 633, 631, 404, 311, 491, 333,
	371, 1375, 1416, 422, 469, 241, 598, 492, 201, 1290,
	1295, 1288, 0, 255, 256, 1357, 569, 1291, 1289, 1346,
	1347, 1292, 1407, 1408, 1409, 1394, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 638, 502, 508, 503, 504, 505,
	506, 507, 0, 509, 1379, 1284, 0, 1293, 1294, 1388,
	585, 586, 661, 382, 482, 595, 335, 347, 350, 340,
	359, 0, 360, 336, 337, 342, 344, 345, 346, 351,
	352, 356, 362, 250, 211, 388, 396, 572, 312, 217,
	218, 219, 518, 519, 520, 521, 609, 610, 614, 206,
	459, 460, 461, 462, 293, 604, 309, 465, 464, 331,
	332, 377, 446, 534, 536, 547, 551, 553, 555, 561,
	564, 535, 537, 548, 552, 554, 556, 562, 565, 524,
	526, 528, 530, 543, 542, 539, 567, 568, 545, 550,
	529, 541, 546, 559, 566, 563, 523, 527, 531, 540,
	558, 557, 538, 549, 560, 544, 532, 525, 533, 1350,
	198, 222, 366, 1412, 451, 289, 639, 608, 603, 207,
	224, 1287, 263, 1299, 1307, 0, 1313, 1321, 1322, 1334,
	1337, 1338, 1339, 1340, 0, 1358, 1359, 1361, 1369, 1371,
	1374, 1376, 1383, 1395, 1415, 200, 202, 210, 223, 233,
	237, 244, 262, 277, 279, 286, 299, 310, 318, 319,
	322, 328, 378, 384, 385, 386, 387, 406, 407, 408,
	411, 414, 415, 418, 420, 421, 424, 428, 432, 433,
	434, 436, 438, 440, 452, 457, 471, 472, 473, 474,
	475, 478, 479, 484, 485, 486, 487, 488, 496, 497,
	510, 580, 582, 597, 615, 621, 477, 301, 302, 441,
	442, 314, 315, 635, 636, 300, 592, 622, 590, 634,
	616, 435, 376, 1349, 1355, 379, 282, 305, 320, 1364,
	607, 498, 228, 463, 291, 252, 1382, 1384, 212, 247,
	231, 260, 275, 278, 324, 389, 397, 426, 431, 297,
	272, 245, 456, 242, 481, 513, 514, 515, 517, 393,
	267, 430, 1345, 1373, 374, 570, 571, 316, 394, 0,
	0, 0, 1401, 1387, 522, 0, 1329, 1404, 1298, 1317,
	1414, 1320, 1323, 1366, 1276, 1344, 413, 1314, 1269, 1302,
	1271, 1309, 1272, 1300, 1331, 271, 1297, 1389, 1348, 1403,
	364, 268, 1278, 1303, 427, 1319, 205, 1368, 483, 253,
	375, 372, 577, 283, 274, 270, 251, 317, 383, 425,
	512, 419, 1410, 368, 1354, 0, 493, 398, 0, 0,
	0, 1333, 1393, 1342, 1380, 1328, 1367, 1286, 1353, 1405,
	1315, 1363, 1406, 323, 249, 325, 204, 410, 494, 287,
	0, 0, 0, 0, 0, 711, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 246, 0,
	0, 0, 349, 358, 357, 338, 339, 341, 343, 348,
	355, 361, 1311, 1360, 1400, 1312, 1362, 266, 321, 273,
	265, 574, 1411, 1392, 1275, 1341, 1399, 1336, 0, 0,
	230, 1402, 1335, 0, 1365, 0, 1417, 1270, 1356, 0,
	1273, 1277, 1413, 1397, 1306, 276, 0, 0, 0, 0,
	0, 0, 0, 1332, 1343, 1377, 1381, 1326, 0, 0,
	0, 0, 0, 0, 0, 0, 1304, 0, 1352, 0,
	0, 0, 1282, 1274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1330, 0, 0, 0,
	0, 1285, 0, 1305, 1378, 0, 1268, 298, 1279, 399,
	258, 0, 450, 1385, 1396, 1327, 618, 1398, 1325, 1324,
	1372, 1283, 1391, 1318, 363, 1281, 330, 199, 226, 0,
	1316, 409, 458, 470, 1390, 1301, 1310, 254, 1308, 468,
	423, 596, 234, 285, 455, 429, 466, 437, 288, 1351,
	1370, 467, 370, 579, 447, 593, 619, 620, 264, 403,
	605, 516, 613, 637, 227, 261, 417, 501, 599, 490,
	395, 575, 576, 329, 489, 296, 203, 367, 625, 225,
	476, 369, 243, 232, 581, 602, 290, 453, 632, 214,
	511, 591, 240, 480, 0, 0, 640, 248, 500, 216,
	588, 499, 391, 326, 327, 215, 0, 454, 269, 294,
	0, 0, 259, 412, 583, 584, 257, 641, 229, 612,
	221, 1280, 611, 405, 578, 589, 392, 381, 220, 587,
	390, 380, 334, 353, 354, 281, 307, 444, 373, 445,
	306, 308, 401, 400, 402, 208, 600, 0, 209, 0,
	495, 601, 642, 449, 213, 235, 236, 238, 1296, 280,
	284, 292, 295, 303, 304, 313, 365, 416, 443, 439,
	448, 1386, 573, 594, 606, 617, 623, 624, 626, 627,
	628, 629, 630, 633, 631, 404, 311, 491, 333, 371,
	1375, 1416, 422, 469, 241, 598, 492, 201, 1290, 1295,
	1288, 0, 255, 256, 1357, 569, 1291, 1289, 1346, 1347,
	1292, 1407, 1408, 1409, 1394, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 638, 502, 508, 503, 504, 505, 506,
	507, 0, 509, 1379, 1284, 0, 1293, 1294, 1388, 585,
	586, 661, 382, 482, 595, 335, 347, 350, 340, 359,
	0, 360, 336, 337, 342, 344, 345, 346, 351, 352,
	356, 362, 250, 211, 388, 396, 572, 312, 217, 218,
	219, 518, 519, 520, 521, 609, 610, 614, 206, 459,
	460, 461, 462, 293, 604, 309, 465, 464, 331, 332,
	377, 446, 534, 536, 547, 551, 553, 555, 561, 564,
	535, 537, 548, 552, 554, 556, 562, 565, 524, 526,
	528, 530, 543, 542, 539, 567, 568, 545, 550, 529,
	541, 546, 559, 566, 563, 523, 527, 531, 540, 558,
	557, 538, 549, 560, 544, 532, 525, 533, 1350, 198,
	222, 366, 1412, 451, 289, 639, 608, 603, 207, 224,
	1287, 263, 1299, 1307, 0, 1313, 1321, 1322, 1334, 1337,
	1338, 1339, 1340, 0, 1358, 1359, 1361, 1369, 1371, 1374,
	1376, 1383, 1395, 1415, 200, 202, 210, 223, 233, 237,
	244, 262, 277, 279, 286, 299, 310, 318, 319, 322,
	328, 378, 384, 385, 386, 387, 406, 407, 408, 411,
	414, 415, 418, 420, 421, 424, 428, 432, 433, 434,
	436, 438, 440, 452, 457, 471, 472, 473, 474, 475,
	478, 479, 484, 485, 486, 487, 488, 496, 497, 510,
	580, 582, 597, 615, 621, 477, 301, 302, 441, 442,
	314, 315, 635, 636, 300, 592, 622, 590, 634, 616,
	435, 376, 1349, 1355, 379, 282, 305, 320, 1364, 607,
	498, 228, 463, 291, 252, 1382, 1384, 212, 247, 231,
	260, 275, 278, 324, 389, 397, 426, 431, 297, 272,
	245, 456, 242, 481, 513, 514, 515, 517, 393, 267,
	430, 1345, 1373, 374, 570, 571, 316, 394, 0, 0,
	0, 1401, 1387, 522, 0, 1329, 1404, 1298, 1317, 1414,
	1320, 1323, 1366, 1276, 1344, 413, 1314, 1269, 1302, 1271,
	1309, 1272, 1300, 1331, 271, 1297, 1389, 1348, 1403, 364,
	268, 1278, 1303, 427, 1319, 205, 1368, 483, 253, 375,
	372, 577, 283, 274, 270, 251, 317, 383, 425, 512,
	419, 1410, 368, 1354, 0, 493, 398, 0, 0, 0,
	1333, 1393, 1342, 1380, 1328, 1367, 1286, 1353, 1405, 1315,
	1363, 1406, 323, 249, 325, 204, 410, 494, 287, 0,
	0, 0, 0, 0, 943, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 246, 0, 0,
	0, 349, 358, 357, 338, 339, 341, 343, 348, 355,
	361, 1311, 1360, 1400, 1312, 1362, 266, 321, 273, 265,
	574, 1411, 1392, 1275, 1341, 1399, 1336, 0, 0, 230,
	1402, 1335, 0, 1365, 0, 1417, 1270, 1356, 0, 1273,
	1277, 1413, 1397, 1306, 276, 0, 0, 0, 0, 0,
	0, 0, 1332, 1343, 1377, 1381, 1326, 0, 0, 0,
	0, 0, 0, 0, 0, 1304, 0, 1352, 0, 0,
	0, 1282, 1274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1330, 0, 0, 0, 0,
	1285, 0, 1305, 1378, 0, 1268, 298, 1279, 399, 258,
	0, 450, 1385, 1396, 1327, 618, 1398, 1325, 1324, 1372,
	1283, 1391, 1318, 363, 1281, 330, 199, 226, 0, 1316,
	409, 458, 470, 1390, 1301, 1310, 254, 1308, 468, 423,
	596, 234, 285, 455, 429, 466, 437, 288, 1351, 1370,
	467, 370, 579, 447, 593, 619, 620, 264, 403, 605,
	516, 613, 637, 227, 261, 417, 501, 599, 490, 395,
	575, 576, 329, 489, 296, 203, 367, 625, 225, 476,
	369, 243, 232, 581, 602, 290, 453, 632, 214, 511,
	591, 240, 480, 0, 0, 640, 248, 500, 216, 588,
	499, 391, 326, 327, 215, 0, 454, 269, 294, 0,
	0, 259, 412, 583, 584, 257, 641, 229, 612, 221,
	1280, 611, 405, 578, 589, 392, 381, 220, 587, 390,
	380, 334, 353, 354, 281, 307, 444, 373, 445, 306,
	308, 401, 400, 402, 208, 600, 0, 209, 0, 495,
	601, 642, 449, 213, 235, 236, 238, 1296, 280, 284,
	292, 295, 303, 304, 313, 365, 416, 443, 439, 448,
	1386, 573, 594, 606, 617, 623, 624, 626, 627, 628,
	629, 630, 633, 631, 404, 311, 491, 333, 371, 1375,
	1416, 422, 469, 241, 598, 492, 201, 1290, 1295, 1288,
	0, 255, 256, 1357, 569, 1291, 1289, 1346, 1347, 1292,
	1407, 1408, 1409, 1394, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 638, 502, 508, 503, 504, 505, 506, 507,
	0, 509, 1379, 1284, 0, 1293, 1294, 1388, 585, 586,
	661, 382, 482, 595, 335, 347, 350, 340, 359, 0,
	360, 336, 337, 342, 344, 345, 346, 351, 352, 356,
	362, 250, 211, 388, 396, 572, 312, 217, 218, 219,
	518, 519, 520, 521, 609, 610, 614, 206, 459, 460,
	461, 462, 293, 604, 309, 465, 464, 331, 332, 377,
	446, 534, 536, 547, 551, 553, 555, 561, 564, 535,
	537, 548, 552, 554, 556, 562, 565, 524, 526, 528,
	530, 543, 542, 539, 567, 568, 545, 550, 529, 541,
	546, 559, 566, 563, 523, 527, 531, 540, 558, 557,
	538, 549, 560, 544, 532, 525, 533, 1350, 198, 222,
	366, 1412, 451, 289, 639, 608, 603, 207, 224, 1287,
	263, 1299, 1307, 0, 1313, 1321, 1322, 1334, 1337, 1338,
	1339, 1340, 0, 1358, 1359, 1361, 1369, 1371, 1374, 1376,
	1383, 1395, 1415, 200, 202, 210, 223, 233, 237, 244,
	262, 277, 279, 286, 299, 310, 318, 319, 322, 328,
	378, 384, 385, 386, 387, 406, 407, 408, 411, 414,
	415, 418, 420, 421, 424, 428, 432, 433, 434, 436,
	438, 440, 452, 457, 471, 472, 473, 474, 475, 478,
	479, 484, 485, 486, 487, 488, 496, 497, 510, 580,
	582, 597, 615, 621, 477, 301, 302, 441, 442, 314,
	315, 635, 636, 300, 592, 622, 590, 634, 616, 435,
	376, 1349, 1355, 379, 282, 305, 320, 1364, 607, 498,
	228, 463, 291, 252, 1382, 1384, 212, 247, 231, 260,
	275, 278, 324, 389, 397, 426, 431, 297, 272, 245,
	456, 242, 481, 513, 514, 515, 517, 393, 267, 430,
	1345, 1373, 374, 570, 571, 316, 394, 0, 0, 0,
	0, 0, 522, 0, 763, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 0, 0, 0, 0, 751,
	0, 0, 0, 271, 756, 0, 0, 0, 364, 268,
	0, 0, 427, 0, 205, 0, 483, 253, 375, 372,
	577, 283, 274, 270, 251, 317, 383, 425, 512, 419,
	762, 368, 0, 0, 493, 398, 0, 0, 0, 0,
	0, 758, 759, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 249, 325, 204, 410, 494, 287, 0, 96,
	0, 0, 959, 943, 735, 909, 947, 960, 961, 962,
	963, 948, 0, 239, 949, 950, 246, 951, 0, 908,
	793, 795, 794, 858, 859, 860, 861, 862, 863, 864,
	791, 956, 964, 965, 0, 266, 321, 273, 265, 574,
	0, 0, 2180, 2181, 2182, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 731, 748, 0, 761,
	0, 0, 0, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	745, 746, 0, 0, 0, 0, 903, 0, 747, 0,
	0, 755, 966, 967, 968, 969, 970, 971, 972, 973,
	974, 975, 976, 977, 978, 979, 980, 981, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 757, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 0, 399, 258, 0,
	450, 902, 0, 0, 618, 0, 0, 900, 0, 0,
	0, 0, 363, 0, 330, 199, 226, 0, 0, 409,
	458, 470, 0, 0, 0, 953, 0, 468, 423, 596,
	234, 285, 455, 429, 466, 437, 288, 0, 0, 467,
	370, 579, 447, 593, 619, 620, 264, 403, 605, 516,
	613, 637, 227, 261, 417, 501, 599, 490, 395, 575,
	576, 329, 489, 296, 203, 367, 625, 225, 476, 369,
	243, 232, 581, 602, 290, 453, 632, 214, 511, 591,
	240, 480, 0, 0, 640, 248, 500, 216, 588, 499,
	391, 326, 327, 215, 0, 454, 269, 294, 0, 0,
	259, 412, 954, 955, 257, 641, 799, 612, 221, 0,
	611, 405, 578, 589, 392, 381, 220, 587, 390, 380,
	334, 807, 808, 281, 307, 884, 883, 882, 306, 308,
	880, 881, 879, 208, 600, 0, 209, 0, 495, 601,
	642, 449, 213, 235, 236, 238, 0, 280, 284, 292,
	295, 303, 304, 313, 365, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 311, 491, 333, 371, 0, 0,
	422, 469, 241, 598, 492, 890, 912, 901, 767, 768,
	891, 892, 916, 893, 770, 771, 913, 914, 764, 765,
	769, 915, 917, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 904, 754, 753, 0, 760, 0, 789, 790, 792,
	796, 797, 798, 809, 856, 857, 865, 867, 868, 866,
	869, 870, 871, 874, 875, 876, 877, 872, 873, 878,
	772, 776, 773, 774, 775, 787, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 788, 927, 928, 929,
	930, 931, 932, 802, 806, 805, 803, 804, 800, 801,
	828, 827, 829, 830, 831, 832, 833, 834, 836, 835,
	837, 838, 839, 840, 841, 842, 810, 811, 814, 815,
	813, 812, 816, 825, 826, 817, 818, 819, 820, 821,
	822, 824, 823, 843, 844, 845, 846, 847, 849, 848,
	852, 853, 851, 850, 855, 854, 752, 198, 222, 366,
	0, 451, 289, 639, 608, 603, 207, 224, 918, 263,
	919, 0, 0, 923, 0, 0, 0, 925, 924, 0,
	926, 0, 888, 887, 0, 0, 920, 921, 0, 922,
	0, 0, 200, 202, 210, 223, 233, 237, 244, 262,
	277, 279, 286, 299, 310, 318, 319, 322, 328, 378,
	384, 385, 386, 387, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 933, 934, 935, 936, 937, 938,
	939, 940, 300, 592, 622, 590, 634, 616, 435, 376,
	0, 0, 379, 282, 305, 320, 0, 607, 498, 228,
	463, 291, 252, 958, 0, 212, 247, 231, 260, 275,
	278, 324, 389, 397, 426, 431, 297, 272, 245, 456,
	242, 481, 513, 514, 515, 517, 393, 267, 430, 394,
	0, 374, 570, 571, 316, 522, 0, 763, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 751, 0, 0, 0, 271, 756, 0, 0,
	0, 364, 268, 0, 0, 427, 0, 205, 0, 483,
	253, 375, 372, 577, 283, 274, 270, 251, 317, 383,
	425, 512, 419, 762, 368, 0, 0, 493, 398, 0,
	0, 0, 0, 0, 758, 759, 0, 0, 0, 0,
	0, 0, 2387, 0, 323, 249, 325, 204, 410, 494,
	287, 0, 96, 0, 0, 959, 943, 735, 909, 947,
	960, 961, 962, 963, 948, 0, 239, 949, 950, 246,
	951, 0, 908, 793, 795, 794, 858, 859, 860, 861,
	862, 863, 864, 791, 956, 964, 965, 2388, 266, 321,
	273, 265, 574, 0, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 0, 731,
	748, 0, 761, 0, 0, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 745, 746, 0, 0, 0, 0, 903,
	0, 747, 0, 0, 755, 966, 967, 968, 969, 970,
	971, 972, 973, 974, 975, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 757, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 0,
	399, 258, 0, 450, 902, 0, 0, 618, 0, 0,
	900, 0, 0, 0, 0, 363, 0, 330, 199, 226,
	0, 0, 409, 458, 470, 0, 0, 0, 953, 0,
	468, 423, 596, 234, 285, 455, 429, 466, 437, 288,
	0, 0, 467, 370, 579, 447, 593, 619, 620, 264,
	403, 605, 516, 613, 637, 227, 261, 417, 501, 599,
	490, 395, 575, 576, 329, 489, 296, 203, 367, 625,
	225, 476, 369, 243, 232, 581, 602, 290, 453, 632,
	214, 511, 591, 240, 480, 0, 0, 640, 248, 500,
	216, 588, 499, 391, 326, 327, 215, 0, 454, 269,
	294, 0, 0, 259, 412, 954, 955, 257, 641, 799,
	612, 221, 0, 611, 405, 578, 589, 392, 381, 220,
	587, 390, 380, 334, 807, 808, 281, 307, 884, 883,
	882, 306, 308, 880, 881, 879, 208, 600, 0, 209,
	0, 495, 601, 642, 449, 213, 235, 236, 238, 0,
	280, 284, 292, 295, 303, 304, 313, 365, 416, 443,
	439, 448, 0, 573, 594, 606, 617, 623, 624, 626,
	627, 628, 629, 630, 633, 631, 404, 311, 491, 333,
	371, 0, 0, 422, 469, 241, 598, 492, 890, 912,
	901, 767, 768, 891, 892, 916, 893, 770, 771, 913,
	914, 764, 765, 769, 915, 917, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 638, 502, 508, 503, 504, 505,
	506, 507, 0, 509, 904, 754, 753, 0, 760, 0,
	789, 790, 792, 796, 797, 798, 809, 856, 857, 865,
	867, 868, 866, 869, 870, 871, 874, 875, 876, 877,
	872, 873, 878, 772, 776, 773, 774, 775, 787, 777,
	778, 779, 780, 781, 782, 783, 784, 785, 786, 788,
	927, 928, 929, 930, 931, 932, 802, 806, 805, 803,
	804, 800, 801, 828, 827, 829, 830, 831, 832, 833,
	834, 836, 835, 837, 838, 839, 840, 841, 842, 810,
	811, 814, 815, 813, 812, 816, 825, 826, 817, 818,
	819, 820, 821, 822, 824, 823, 843, 844, 845, 846,
	847, 849, 848, 852, 853, 851, 850, 855, 854, 752,
	198, 222, 366, 0, 451, 289, 639, 608, 603, 207,
	224, 918, 263, 919, 0, 0, 923, 0, 0, 0,
	925, 924, 0, 926, 0, 888, 887, 0, 0, 920,
	921, 0, 922, 0, 0, 200, 202, 210, 223, 233,
	237, 244, 262, 277, 279, 286, 299, 310, 318, 319,
	322, 328, 378, 384, 385, 386, 387, 406, 407, 408,
	411, 414, 415, 418, 420, 421, 424, 428, 432, 433,
	434, 436, 438, 440, 452, 457, 471, 472, 473, 474,
	475, 478, 479, 484, 485, 486, 487, 488, 496, 497,
	510, 580, 582, 597, 615, 621, 477, 933, 934, 935,
	936, 937, 938, 939, 940, 300, 592, 622, 590, 634,
	616, 435, 376, 0, 0, 379, 282, 305, 320, 0,
	607, 498, 228, 463, 291, 252, 958, 0, 212, 247,
	231, 260, 275, 278, 324, 389, 397, 426, 431, 297,
	272, 245, 456, 242, 481, 513, 514, 515, 517, 393,
	267, 430, 0, 394, 374, 570, 571, 316, 87, 522,
	0, 763, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 751, 0, 0, 0,
	271, 756, 0, 0, 0, 364, 268, 0, 0, 427,
	0, 205, 0, 483, 253, 375, 372, 577, 283, 274,
	270, 251, 317, 383, 425, 512, 419, 762, 368, 0,
	0, 493, 398, 0, 0, 0, 0, 0, 758, 759,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 249,
	325, 204, 410, 494, 287, 0, 96, 0, 0, 959,
	943, 735, 909, 947, 960, 961, 962, 963, 948, 0,
	239, 949, 950, 246, 951, 0, 908, 793, 795, 794,
	858, 859, 860, 861, 862, 863, 864, 791, 956, 964,
	965, 0, 266, 321, 273, 265, 574, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 0, 0,
	0, 0, 0, 731, 748, 0, 761, 0, 0, 0,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 745, 746, 0,
	0, 0, 0, 903, 0, 747, 0, 0, 755, 966,
	967, 968, 969, 970, 971, 972, 973, 974, 975, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 757, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 0, 399, 258, 0, 450, 902, 0,
	0, 618, 0, 0, 900, 0, 0, 0, 0, 363,
	0, 330, 199, 226, 0, 0, 409, 458, 470, 0,
	0, 0, 953, 0, 468, 423, 596, 234, 285, 455,
	429, 466, 437, 288, 0, 0, 467, 370, 579, 447,
	593, 619, 620, 264, 403, 605, 516, 613, 637, 227,
	261, 417, 501, 599, 490, 395, 575, 576, 329, 489,
	296, 203, 367, 625, 225, 476, 369, 243, 232, 581,
	602, 290, 453, 632, 214, 511, 591, 240, 480, 0,
	0, 640, 248, 500, 216, 588, 499, 391, 326, 327,
	215, 0, 454, 269, 294, 0, 0, 259, 412, 954,
	955, 257, 641, 799, 612, 221, 0, 611, 405, 578,
	589, 392, 381, 220, 587, 390, 380, 334, 807, 808,
	281, 307, 884, 883, 882, 306, 308, 880, 881, 879,
	208, 600, 0, 209, 0, 495, 601, 642, 449, 213,
	235, 236, 238, 0, 280, 284, 292, 295, 303, 304,
	313, 365, 416, 443, 439, 448, 0, 573, 594, 606,
	617, 623, 624, 626, 627, 628, 629, 630, 633, 631,
	404, 311, 491, 333, 371, 0, 0, 422, 469, 241,
	598, 492, 890, 912, 901, 767, 768, 891, 892, 916,
	893, 770, 771, 913, 914, 764, 765, 769, 915, 917,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 638, 502,
	508, 503, 504, 505, 506, 507, 0, 509, 904, 754,
	753, 0, 760, 0, 789, 790, 792, 796, 797, 798,
	809, 856, 857, 865, 867, 868, 866, 869, 870, 871,
	874, 875, 876, 877, 872, 873, 878, 772, 776, 773,
	774, 775, 787, 777, 778, 779, 780, 781, 782, 783,
	784, 785, 786, 788, 927, 928, 929, 930, 931, 932,
	802, 806, 805, 803, 804, 800, 801, 828, 827, 829,
	830, 831, 832, 833, 834, 836, 835, 837, 838, 839,
	840, 841, 842, 810, 811, 814, 815, 813, 812, 816,
	825, 826, 817, 818, 819, 820, 821, 822, 824, 823,
	843, 844, 845, 846, 847, 849, 848, 852, 853, 851,
	850, 855, 854, 752, 198, 222, 366, 95, 451, 289,
	639, 608, 603, 207, 224, 918, 263, 919, 0, 0,
	923, 0, 0, 0, 925, 924, 0, 926, 0, 888,
	887, 0, 0, 920, 921, 0, 922, 0, 0, 200,
	202, 210, 223, 233, 237, 244, 262, 277, 279, 286,
	299, 310, 318, 319, 322, 328, 378, 384, 385, 386,
	387, 406, 407, 408, 411, 414, 415, 418, 420, 421,
	424, 428, 432, 433, 434, 436, 438, 440, 452, 457,
	471, 472, 473, 474, 475, 478, 479, 484, 485, 486,
	487, 488, 496, 497, 510, 580, 582, 597, 615, 621,
	477, 933, 934, 935, 936, 937, 938, 939, 940, 300,
	592, 622, 590, 634, 616, 435, 376, 0, 0, 379,
	282, 305, 320, 0, 607, 498, 228, 463, 291, 252,
	958, 0, 212, 247, 231, 260, 275, 278, 324, 389,
	397, 426, 431, 297, 272, 245, 456, 242, 481, 513,
	514, 515, 517, 393, 267, 430, 394, 0, 374, 570,
	571, 316, 522, 0, 763, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 0, 0, 0, 0, 751,
	0, 0, 0, 271, 756, 0, 0, 0, 364, 268,
	0, 0, 427, 0, 205, 0, 483, 253, 375, 372,
	577, 283, 274, 270, 251, 317, 383, 425, 512, 419,
	762, 368, 0, 0, 493, 398, 0, 0, 0, 0,
	0, 758, 759, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 249, 325, 204, 410, 494, 287, 0, 96,
	0, 0, 959, 943, 735, 909, 947, 960, 961, 962,
	963, 948, 0, 239, 949, 950, 246, 951, 0, 908,
	793, 795, 794, 858, 859, 860, 861, 862, 863, 864,
	791, 956, 964, 965, 0, 266, 321, 273, 265, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 731, 748, 0, 761,
	0, 0, 0, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	745, 746, 0, 0, 0, 0, 903, 0, 747, 0,
	0, 755, 966, 967, 968, 969, 970, 971, 972, 973,
	974, 975, 976, 977, 978, 979, 980, 981, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 757, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 0, 399, 258, 0,
	450, 902, 0, 0, 618, 0, 0, 900, 0, 0,
	0, 0, 363, 0, 330, 199, 226, 0, 0, 409,
	458, 470, 0, 0, 0, 953, 0, 468, 423, 596,
	234, 285, 455, 429, 466, 437, 288, 4010, 0, 467,
	370, 579, 447, 593, 619, 620, 264, 403, 605, 516,
	613, 637, 227, 261, 417, 501, 599, 490, 395, 575,
	576, 329, 489, 296, 203, 367, 625, 225, 476, 369,
	243, 232, 581, 602, 290, 453, 632, 214, 511, 591,
	240, 480, 0, 0, 640, 248, 500, 216, 588, 499,
	391, 326, 327, 215, 0, 454, 269, 294, 0, 0,
	259, 412, 954, 955, 257, 641, 799, 612, 221, 0,
	611, 405, 578, 589, 392, 381, 220, 587, 390, 380,
	334, 807, 808, 281, 307, 884, 883, 882, 306, 308,
	880, 881, 879, 208, 600, 0, 209, 0, 495, 601,
	642, 449, 213, 235, 236, 238, 0, 280, 284, 292,
	295, 303, 304, 313, 365, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 311, 491, 333, 371, 0, 0,
	422, 469, 241, 598, 492, 890, 912, 901, 767, 768,
	891, 892, 916, 893, 770, 771, 913, 914, 764, 765,
	769, 915, 917, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 904, 754, 753, 0, 760, 0, 789, 790, 792,
	796, 797, 798, 809, 856, 857, 865, 867, 868, 866,
	869, 870, 871, 874, 875, 876, 877, 872, 873, 878,
	772, 776, 773, 774, 775, 787, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 788, 927, 928, 929,
	930, 931, 932, 802, 806, 805, 803, 804, 800, 801,
	828, 827, 829, 830, 831, 832, 833, 834, 836, 835,
	837, 838, 839, 840, 841, 842, 810, 811, 814, 815,
	813, 812, 816, 825, 826, 817, 818, 819, 820, 821,
	822, 824, 823, 843, 844, 845, 846, 847, 849, 848,
	852, 853, 851, 850, 855, 854, 752, 198, 222, 366,
	0, 451, 289, 639, 608, 603, 207, 224, 918, 263,
	919, 0, 0, 923, 0, 0, 0, 925, 924, 0,
	926, 0, 888, 887, 0, 0, 920, 921, 0, 922,
	0, 0, 200, 202, 210, 223, 233, 237, 244, 262,
	277, 279, 286, 299, 310, 318, 319, 322, 328, 378,
	384, 385, 386, 387, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 933, 934, 935, 936, 937, 938,
	939, 940, 300, 592, 622, 590, 634, 616, 435, 376,
	0, 0, 379, 282, 305, 320, 0, 607, 498, 228,
	463, 291, 252, 958, 0, 212, 247, 231, 260, 275,
	278, 324, 389, 397, 426, 431, 297, 272, 245, 456,
	242, 481, 513, 514, 515, 517, 393, 267, 430, 394,
	0, 374, 570, 571, 316, 522, 0, 763, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 751, 0, 0, 0, 271, 756, 0, 0,
	0, 364, 268, 0, 0, 427, 0, 205, 0, 483,
	253, 375, 372, 577, 283, 274, 270, 251, 317, 383,
	425, 512, 419, 762, 368, 0, 0, 493, 398, 0,
	0, 0, 0, 0, 758, 759, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 249, 325, 204, 410, 494,
	287, 0, 96, 0, 1719, 959, 943, 735, 909, 947,
	960, 961, 962, 963, 948, 0, 239, 949, 950, 246,
	951, 0, 908, 793, 795, 794, 858, 859, 860, 861,
	862, 863, 864, 791, 956, 964, 965, 0, 266, 321,
	273, 265, 574, 0, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 0, 731,
	748, 0, 761, 0, 0, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 745, 746, 0, 0, 0, 0, 903,
	0, 747, 0, 0, 755, 966, 967, 968, 969, 970,
	971, 972, 973, 974, 975, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 757, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 0,
	399, 258, 0, 450, 902, 0, 0, 618, 0, 0,
	900, 0, 0, 0, 0, 363, 0, 330, 199, 226,
	0, 0, 409, 458, 470, 0, 0, 0, 953, 0,
	468, 423, 596, 234, 285, 455, 429, 466, 437, 288,
	0, 0, 467, 370, 579, 447, 593, 619, 620, 264,
	403, 605, 516, 613, 637, 227, 261, 417, 501, 599,
	490, 395, 575, 576, 329, 489, 296, 203, 367, 625,
	225, 476, 369, 243, 232, 581, 602, 290, 453, 632,
	214, 511, 591, 240, 480, 0, 0, 640, 248, 500,
	216, 588, 499, 391, 326, 327, 215, 0, 454, 269,
	294, 0, 0, 259, 412, 954, 955, 257, 641, 799,
	612, 221, 0, 611, 405, 578, 589, 392, 381, 220,
	587, 390, 380, 334, 807, 808, 281, 307, 884, 883,
	882, 306, 308, 880, 881, 879, 208, 600, 0, 209,
	0, 495, 601, 642, 449, 213, 235, 236, 238, 0,
	280, 284, 292, 295, 303, 304, 313, 365, 416, 443,
	439, 448, 0, 573, 594, 606, 617, 623, 624, 626,
	627, 628, 629, 630, 633, 631, 404, 311, 491, 333,
	371, 0, 0, 422, 469, 241, 598, 492, 890, 912,
	901, 767, 768, 891, 892, 916, 893, 770, 771, 913,
	914, 764, 765, 769, 915, 917, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 638, 502, 508, 503, 504, 505,
	506, 507, 0, 509, 904, 754, 753, 0, 760, 0,
	789, 790, 792, 796, 797, 798, 809, 856, 857, 865,
	867, 868, 866, 869, 870, 871, 874, 875, 876, 877,
	872, 873, 878, 772, 776, 773, 774, 775, 787, 777,
	778, 779, 780, 781, 782, 783, 784, 785, 786, 788,
	927, 928, 929, 930, 931, 932, 802, 806, 805, 803,
	804, 800, 801, 828, 827, 829, 830, 831, 832, 833,
	834, 836, 835, 837, 838, 839, 840, 841, 842, 810,
	811, 814, 815, 813, 812, 816, 825, 826, 817, 818,
	819, 820, 821, 822, 824, 823, 843, 844, 845, 846,
	847, 849, 848, 852, 853, 851, 850, 855, 854, 752,
	198, 222, 366, 0, 451, 289, 639, 608, 603, 207,
	224, 918, 263, 919, 0, 0, 923, 0, 0, 0,
	925, 924, 0, 926, 0, 888, 887, 0, 0, 920,
	921, 0, 922, 0, 0, 200, 202, 210, 223, 233,
	237, 244, 262, 277, 279, 286, 299, 310, 318, 319,
	322, 328, 378, 384, 385, 386, 387, 406, 407, 408,
	411, 414, 415, 418, 420, 421, 424, 428, 432, 433,
	434, 436, 438, 440, 452, 457, 471, 472, 473, 474,
	475, 478, 479, 484, 485, 486, 487, 488, 496, 497,
	510, 580, 582, 597, 615, 621, 477, 933, 934, 935,
	936, 937, 938, 939, 940, 300, 592, 622, 590, 634,
	616, 435, 376, 0, 0, 379, 282, 305, 320, 0,
	607, 498, 228, 463, 291, 252, 958, 0, 212, 247,
	231, 260, 275, 278, 324, 389, 397, 426, 431, 297,
	272, 245, 456, 242, 481, 513, 514, 515, 517, 393,
	267, 430, 394, 0, 374, 570, 571, 316, 522, 0,
	763, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 751, 0, 0, 0, 271,
	756, 0, 0, 0, 364, 268, 0, 0, 427, 0,
	205, 0, 483, 253, 375, 372, 577, 283, 274, 270,
	251, 317, 383, 425, 512, 419, 762, 368, 0, 0,
	493, 398, 0, 0, 0, 0, 0, 758, 759, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 249, 325,
	204, 410, 494, 287, 0, 96, 0, 0, 959, 943,
	735, 909, 947, 960, 961, 962, 963, 948, 0, 239,
	949, 950, 246, 951, 0, 908, 793, 795, 794, 858,
	859, 860, 861, 862, 863, 864, 791, 956, 964, 965,
	0, 266, 321, 273, 265, 574, 0, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 731, 748, 0, 761, 0, 0, 0, 276,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 745, 746, 1050, 0,
	0, 0, 903, 0, 747, 0, 0, 755, 966, 967,
	968, 969, 970, 971, 972, 973, 974, 975, 976, 977,
	978, 979, 980, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	757, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 0, 399, 258, 0, 450, 902, 0, 0,
	618, 0, 0, 900, 0, 0, 0, 0, 363, 0,
	330, 199, 226, 0, 0, 409, 458, 470, 0, 0,
	0, 953, 0, 468, 423, 596, 234, 285, 455, 429,
	466, 437, 288, 0, 0, 467, 370, 579, 447, 593,
	619, 620, 264, 403, 605, 516, 613, 637, 227, 261,
	417, 501, 599, 490, 395, 575, 576, 329, 489, 296,
	203, 367, 625, 225, 476, 369, 243, 232, 581, 602,
	290, 453, 632, 214, 511, 591, 240, 480, 0, 0,
	640, 248, 500, 216, 588, 499, 391, 326, 327, 215,
	0, 454, 269, 294, 0, 0, 259, 412, 954, 955,
	257, 641, 799, 612, 221, 0, 611, 405, 578, 589,
	392, 381, 220, 587, 390, 380, 334, 807, 808, 281,
	307, 884, 883, 882, 306, 308, 880, 881, 879, 208,
	600, 0, 209, 0, 495, 601, 642, 449, 213, 235,
	236, 238, 0, 280, 284, 292, 295, 303, 304, 313,
	365, 416, 443, 439, 448, 0, 573, 594, 606, 617,
	623, 624, 626, 627, 628, 629, 630, 633, 631, 404,
	311, 491, 333, 371, 0, 0, 422, 469, 241, 598,
	492, 890, 912, 901, 767, 768, 891, 892, 916, 893,
	770, 771, 913, 914, 764, 765, 769, 915, 917, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 638, 502, 508,
	503, 504, 505, 506, 507, 0, 509, 904, 754, 753,
	0, 760, 0, 789, 790, 792, 796, 797, 798, 809,
	856, 857, 865, 867, 868, 866, 869, 870, 871, 874,
	875, 876, 877, 872, 873, 878, 772, 776, 773, 774,
	775, 787, 777, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 788, 927, 928, 929, 930, 931, 932, 802,
	806, 805, 803, 804, 800, 801, 828, 827, 829, 830,
	831, 832, 833, 834, 836, 835, 837, 838, 839, 840,
	841, 842, 810, 811, 814, 815, 813, 812, 816, 825,
	826, 817, 818, 819, 820, 821, 822, 824, 823, 843,
	844, 845, 846, 847, 849, 848, 852, 853, 851, 850,
	855, 854, 752, 198, 222, 366, 0, 451, 289, 639,
	608, 603, 207, 224, 918, 263, 919, 0, 0, 923,
	0, 0, 0, 925, 924, 0, 926, 0, 888, 887,
	0, 0, 920, 921, 0, 922, 0, 0, 200, 202,
	210, 223, 233, 237, 244, 262, 277, 279, 286, 299,
	310, 318, 319, 322, 328, 378, 384, 385, 386, 387,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 433, 434, 436, 438, 440, 452, 457, 471,
	472, 473, 474, 475, 478, 479, 484, 485, 486, 487,
	488, 496, 497, 510, 580, 582, 597, 615, 621, 477,
	933, 934, 935, 936, 937, 938, 939, 940, 300, 592,
	622, 590, 634, 616, 435, 376, 0, 0, 379, 282,
	305, 320, 0, 607, 498, 228, 463, 291, 252, 958,
	0, 212, 247, 231, 260, 275, 278, 324, 389, 397,
	426, 431, 297, 272, 245, 456, 242, 481, 513, 514,
	515, 517, 393, 267, 430, 394, 0, 374, 570, 571,
	316, 522, 0, 763, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 751, 0,
	0, 0, 271, 756, 0, 0, 0, 364, 268, 0,
	0, 427, 0, 205, 0, 483, 253, 375, 372, 577,
	283, 274, 270, 251, 317, 383, 425, 512, 419, 762,
	368, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	758, 759, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 249, 325, 204, 410, 494, 287, 0, 96, 0,
	0, 959, 943, 735, 909, 947, 960, 961, 962, 963,
	948, 0, 239, 949, 950, 246, 951, 0, 908, 793,
	795, 794, 858, 859, 860, 861, 862, 863, 864, 791,
	956, 964, 965, 0, 266, 321, 273, 265, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 230, 0, 0,
	0, 0, 0, 0, 0, 731, 748, 0, 761, 0,
	0, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 745,
	746, 0, 0, 0, 0, 903, 0, 747, 0, 0,
	755, 966, 967, 968, 969, 970, 971, 972, 973, 974,
	975, 976, 977, 978, 979, 980, 981, 982, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 757, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 0, 399, 258, 0, 450,
	902, 0, 0, 618, 0, 0, 900, 0, 0, 0,
	0, 363, 0, 330, 199, 226, 0, 0, 409, 458,
	470, 0, 0, 0, 953, 0, 468, 423, 596, 234,
	285, 455, 429, 466, 437, 288, 0, 0, 467, 370,
	579, 447, 593, 619, 620, 264, 403, 605, 516, 613,
	637, 227, 261, 417, 501, 599, 490, 395, 575, 576,
	329, 489, 296, 203, 367, 625, 225, 476, 369, 243,
	232, 581, 602, 290, 453, 632, 214, 511, 591, 240,
	480, 0, 0, 640, 248, 500, 216, 588, 499, 391,
	326, 327, 215, 0, 454, 269, 294, 0, 0, 259,
	412, 954, 955, 257, 641, 799, 612, 221, 0, 611,
	405, 578, 589, 392, 381, 220, 587, 390, 380, 334,
	807, 808, 281, 307, 884, 883, 882, 306, 308, 880,
	881, 879, 208, 600, 0, 209, 0, 495, 601, 642,
	449, 213, 235, 236, 238, 0, 280, 284, 292, 295,
	303, 304, 313, 365, 416, 443, 439, 448, 0, 573,
	594, 606, 617, 623, 624, 626, 627, 628, 629, 630,
	633, 631, 404, 311, 491, 333, 371, 0, 0, 422,
	469, 241, 598, 492, 890, 912, 901, 767, 768, 891,
	892, 916, 893, 770, 771, 913, 914, 764, 765, 769,
	915, 917, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	638, 502, 508, 503, 504, 505, 506, 507, 0, 509,
	904, 754, 753, 0, 760, 0, 789, 790, 792, 796,
	797, 798, 809, 856, 857, 865, 867, 868, 866, 869,
	870, 871, 874, 875, 876, 877, 872, 873, 878, 772,
	776, 773, 774, 775, 787, 777, 778, 779, 780, 781,
	782, 783, 784, 785, 786, 788, 927, 928, 929, 930,
	931, 932, 802, 806, 805, 803, 804, 800, 801, 828,
	827, 829, 830, 831, 832, 833, 834, 836, 835, 837,
	838, 839, 840, 841, 842, 810, 811, 814, 815, 813,
	812, 816, 825, 826, 817, 818, 819, 820, 821, 822,
	824, 823, 843, 844, 845, 846, 847, 849, 848, 852,
	853, 851, 850, 855, 854, 752, 198, 222, 366, 0,
	451, 289, 639, 608, 603, 207, 224, 918, 263, 919,
	0, 0, 923, 0, 0, 0, 925, 924, 0, 926,
	0, 888, 887, 0, 0, 920, 921, 0, 922, 0,
	0, 200, 202, 210, 223, 233, 237, 244, 262, 277,
	279, 286, 299, 310, 318, 319, 322, 328, 378, 384,
	385, 386, 387, 406, 407, 408, 411, 414, 415, 418,
	420, 421, 424, 428, 432, 433, 434, 436, 438, 440,
	452, 457, 471, 472, 473, 474, 475, 478, 479, 484,
	485, 486, 487, 488, 496, 497, 510, 580, 582, 597,
	615, 621, 477, 933, 934, 935, 936, 937, 938, 939,
	940, 300, 592, 622, 590, 634, 616, 435, 376, 0,
	0, 379, 282, 305, 320, 0, 607, 498, 228, 463,
	291, 252, 958, 0, 212, 247, 231, 260, 275, 278,
	324, 389, 397, 426, 431, 297, 272, 245, 456, 242,
	481, 513, 514, 515, 517, 393, 267, 430, 394, 0,
	374, 570, 571, 316, 522, 0, 763, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 0, 0, 0,
	0, 751, 0, 0, 0, 271, 756, 0, 0, 0,
	364, 268, 0, 0, 427, 0, 205, 0, 483, 253,
	375, 372, 577, 283, 274, 270, 251, 317, 383, 425,
	512, 419, 762, 368, 0, 0, 493, 398, 0, 0,
	0, 0, 0, 758, 759, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 249, 325, 204, 410, 494, 287,
	0, 96, 0, 0, 959, 943, 735, 909, 947, 960,
	961, 962, 963, 948, 0, 239, 949, 950, 246, 951,
	0, 908, 793, 795, 794, 858, 859, 860, 861, 862,
	863, 864, 791, 956, 964, 965, 0, 266, 321, 273,
	265, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 731, 748,
	0, 761, 0, 0, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 745, 746, 0, 0, 0, 0, 903, 0,
	747, 0, 0, 755, 966, 967, 968, 969, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 3098, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 0, 399,
	258, 0, 450, 902, 0, 0, 618, 0, 0, 900,
	0, 0, 0, 0, 363, 0, 330, 199, 226, 0,
	0, 409, 458, 470, 0, 0, 0, 953, 0, 468,
	423, 596, 234, 285, 455, 429, 466, 437, 288, 0,
	0, 467, 370, 579, 447, 593, 619, 620, 264, 403,
	605, 516, 613, 637, 227, 261, 417, 501, 599, 490,
	395, 575, 576, 329, 489, 296, 203, 367, 625, 225,
	476, 369, 243, 232, 581, 602, 290, 453, 632, 214,
	511, 591, 240, 480, 0, 0, 640, 248, 500, 216,
	588, 499, 391, 326, 327, 215, 0, 454, 269, 294,
	0, 0, 259, 412, 954, 955, 257, 641, 799, 612,
	221, 0, 611, 405, 578, 589, 392, 381, 220, 587,
	390, 380, 334, 807, 808, 281, 307, 884, 883, 882,
	306, 308, 880, 881, 879, 208, 600, 0, 209, 0,
	495, 601, 642, 449, 213, 235, 236, 238, 0, 280,
	284, 292, 295, 303, 304, 313, 365, 416, 443, 439,
	448, 0, 573, 594, 606, 617, 623, 624, 626, 627,
	628, 629, 630, 633, 631, 404, 311, 491, 333, 371,
	0, 0, 422, 469, 241, 598, 492, 890, 912, 901,
	767, 768, 891, 892, 916, 893, 770, 771, 913, 914,
	764, 765, 769, 915, 917, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 638, 502, 508, 503, 504, 505, 506,
	507, 0, 509, 904, 754, 753, 0, 760, 0, 789,
	790, 792, 796, 797, 798, 809, 856, 857, 865, 867,
	868, 866, 869, 870, 871, 874, 875, 876, 877, 872,
	873, 878, 772, 776, 773, 774, 775, 787, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 788, 927,
	928, 929, 930, 931, 932, 802, 806, 805, 803, 804,
	800, 801, 828, 827, 829, 830, 831, 832, 833, 834,
	836, 835, 837, 838, 839, 840, 841, 842, 810, 811,
	814, 815, 813, 812, 816, 825, 826, 817, 818, 819,
	820, 821, 822, 824, 823, 843, 844, 845, 846, 847,
	849, 848, 852, 853, 851, 850, 855, 854, 752, 198,
	222, 366, 0, 451, 289, 639, 608, 603, 207, 224,
	918, 263, 919, 0, 0, 923, 0, 0, 0, 925,
	924, 0, 926, 0, 888, 887, 0, 0, 920, 921,
	0, 922, 0, 0, 200, 202, 210, 223, 233, 237,
	244, 262, 277, 279, 286, 299, 310, 318, 319, 322,
	328, 378, 384, 385, 386, 387, 406, 407, 408, 411,
	414, 415, 418, 420, 421, 424, 428, 432, 433, 434,
	436, 438, 440, 452, 457, 471, 472, 473, 474, 475,
	478, 479, 484, 485, 486, 487, 488, 496, 497, 510,
	580, 582, 597, 615, 621, 477, 933, 934, 935, 936,
	937, 938, 939, 940, 300, 592, 622, 590, 634, 616,
	435, 376, 0, 0, 379, 282, 305, 320, 0, 607,
	498, 228, 463, 291, 252, 958, 0, 212, 247, 231,
	260, 275, 278, 324, 389, 397, 426, 431, 297, 272,
	245, 456, 242, 481, 513, 514, 515, 517, 393, 267,
	430, 394, 0, 374, 570, 571, 316, 522, 0, 763,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 751, 0, 0, 0, 271, 756,
	0, 0, 0, 364, 268, 0, 0, 427, 0, 205,
	0, 483, 253, 375, 372, 577, 283, 274, 270, 251,
	317, 383, 425, 512, 419, 762, 368, 0, 0, 493,
	398, 0, 0, 0, 0, 0, 758, 759, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 249, 325, 204,
	410, 494, 287, 0, 96, 0, 0, 959, 943, 735,
	909, 947, 960, 961, 962, 963, 948, 0, 239, 949,
	950, 246, 951, 0, 908, 793, 795, 794, 858, 859,
	860, 861, 862, 863, 864, 791, 956, 964, 965, 0,
	266, 321, 273, 265, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 0, 0, 0, 0,
	0, 731, 748, 0, 761, 0, 0, 0, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 745, 746, 0, 0, 0,
	0, 903, 0, 747, 0, 0, 755, 966, 967, 968,
	969, 970, 971, 972, 973, 974, 975, 976, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 3094,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 0, 399, 258, 0, 450, 902, 0, 0, 618,
	0, 0, 900, 0, 0, 0, 0, 363, 0, 330,
	199, 226, 0, 0, 409, 458, 470, 0, 0, 0,
	953, 0, 468, 423, 596, 234, 285, 455, 429, 466,
	437, 288, 0, 0, 467, 370, 579, 447, 593, 619,
	620, 264, 403, 605, 516, 613, 637, 227, 261, 417,
	501, 599, 490, 395, 575, 576, 329, 489, 296, 203,
	367, 625, 225, 476, 369, 243, 232, 581, 602, 290,
	453, 632, 214, 511, 591, 240, 480, 0, 0, 640,
	248, 500, 216, 588, 499, 391, 326, 327, 215, 0,
	454, 269, 294, 0, 0, 259, 412, 954, 955, 257,
	641, 799, 612, 221, 0, 611, 405, 578, 589, 392,
	381, 220, 587, 390, 380, 334, 807, 808, 281, 307,
	884, 883, 882, 306, 308, 880, 881, 879, 208, 600,
	0, 209, 0, 495, 601, 642, 449, 213, 235, 236,
	238, 0, 280, 284, 292, 295, 303, 304, 313, 365,
	416, 443, 439, 448, 0, 573, 594, 606, 617, 623,
	624, 626, 627, 628, 629, 630, 633, 631, 404, 311,
	491, 333, 371, 0, 0, 422, 469, 241, 598, 492,
	890, 912, 901, 767, 768, 891, 892, 916, 893, 770,
	771, 913, 914, 764, 765, 769, 915, 917, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 638, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 904, 754, 753, 0,
	760, 0, 789, 790, 792, 796, 797, 798, 809, 856,
	857, 865, 867, 868, 866, 869, 870, 871, 874, 875,
	876, 877, 872, 873, 878, 772, 776, 773, 774, 775,
	787, 777, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 788, 927, 928, 929, 930, 931, 932, 802, 806,
	805, 803, 804, 800, 801, 828, 827, 829, 830, 831,
	832, 833, 834, 836, 835, 837, 838, 839, 840, 841,
	842, 810, 811, 814, 815, 813, 812, 816, 825, 826,
	817, 818, 819, 820, 821, 822, 824, 823, 843, 844,
	845, 846, 847, 849, 848, 852, 853, 851, 850, 855,
	854, 752, 198, 222, 366, 0, 451, 289, 639, 608,
	603, 207, 224, 918, 263, 919, 0, 0, 923, 0,
	0, 0, 925, 924, 0, 926, 0, 888, 887, 0,
	0, 920, 921, 0, 922, 0, 0, 200, 202, 210,
	223, 233, 237, 244, 262, 277, 279, 286, 299, 310,
	318, 319, 322, 328, 378, 384, 385, 386, 387, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 615, 621, 477, 933,
	934, 935, 936, 937, 938, 939, 940, 300, 592, 622,
	590, 634, 616, 435, 376, 0, 0, 379, 282, 305,
	320, 0, 607, 498, 228, 463, 291, 252, 958, 0,
	212, 247, 231, 260, 275, 278, 324, 389, 397, 426,
	431, 297, 272, 245, 456, 242, 481, 513, 514, 515,
	517, 393, 267, 430, 394, 0, 374, 570, 571, 316,
	522, 0, 763, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 0, 0, 0, 0, 751, 0, 0,
	0, 271, 756, 0, 0, 0, 364, 268, 0, 0,
	427, 0, 205, 0, 483, 253, 375, 372, 577, 283,
	274, 270, 251, 317, 383, 425, 512, 419, 762, 368,
	0, 0, 493, 398, 0, 0, 0, 0, 0, 758,
	759, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	249, 325, 204, 410, 494, 287, 0, 96, 0, 0,
	959, 943, 1074, 909, 947, 960, 961, 962, 963, 948,
	0, 239, 949, 950, 246, 951, 0, 908, 793, 795,
	794, 858, 859, 860, 861, 862, 863, 864, 791, 956,
	964, 965, 0, 266, 321, 273, 265, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 0, 748, 0, 761, 0, 0,
	0, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 745, 746,
	0, 0, 0, 0, 903, 0, 747, 0, 0, 755,
	966, 967, 968, 969, 970, 971, 972, 973, 974, 975,
	976, 977, 978, 979, 980, 981, 982, 983, 984, 985,
	986, 987, 988, 989, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	1006, 1007, 757, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 0, 399, 258, 0, 450, 902,
	0, 0, 618, 0, 0, 900, 0, 0, 0, 0,
	363, 0, 330, 199, 226, 0, 0, 409, 458, 470,
	0, 0, 0, 953, 0, 468, 423, 596, 234, 285,
	455, 429, 466, 437, 288, 0, 0, 467, 370, 579,
	447, 593, 619, 620, 264, 403, 605, 516, 613, 637,
	227, 261, 417, 501, 599, 490, 395, 575, 576, 329,
	489, 296, 203, 367, 625, 225, 476, 369, 243, 232,
	581, 602, 290, 453, 632, 214, 511, 591, 240, 480,
	0, 0, 640, 248, 500, 216, 588, 499, 391, 326,
	327, 215, 0, 454, 269, 294, 0, 0, 259, 412,
	954, 955, 257, 641, 799, 612, 221, 0, 611, 405,
	578, 589, 392, 381, 220, 587, 390, 380, 334, 807,
	808, 281, 307, 884, 883, 882, 306, 308, 880, 881,
	879, 208, 600, 0, 209, 0, 495, 601, 642, 449,
	213, 235, 236, 238, 0, 280, 284, 292, 295, 303,
	304, 313, 365, 416, 443, 439, 448, 0, 573, 594,
	606, 617, 623, 624, 626, 627, 628, 629, 630, 633,
	631, 404, 311, 491, 333, 371, 0, 0, 422, 469,
	241, 598, 492, 890, 912, 901, 767, 768, 891, 892,
	916, 893, 770, 771, 913, 914, 764, 765, 769, 915,
	917, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 638,
	502, 508, 503, 504, 505, 506, 507, 0, 509, 904,
	754, 753, 0, 760, 0, 789, 790, 792, 796, 797,
	798, 809, 856, 857, 865, 867, 868, 866, 869, 870,
	871, 874, 875, 876, 877, 872, 873, 878, 772, 776,
	773, 774, 775, 787, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 788, 927, 928, 929, 930, 931,
	932, 802, 806, 805, 803, 804, 800, 801, 828, 827,
	829, 830, 831, 832, 833, 834, 836, 835, 837, 838,
	839, 840, 841, 842, 810, 811, 814, 815, 813, 812,
	816, 825, 826, 817, 818, 819, 820, 821, 822, 824,
	823, 843, 844, 845, 846, 847, 849, 848, 852, 853,
	851, 850, 855, 854, 752, 198, 222, 366, 0, 451,
	289, 639, 608, 603, 207, 224, 918, 263, 919, 0,
	0, 923, 0, 0, 0, 925, 924, 0, 926, 0,
	888, 887, 0, 0, 920, 921, 0, 922, 0, 0,
	200, 202, 210, 223, 233, 237, 244, 262, 277, 279,
	286, 299, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 406, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 433, 434, 436, 438, 440, 452,
	457, 471, 472, 473, 474, 475, 478, 479, 484, 485,
	486, 487, 488, 496, 497, 510, 580, 582, 597, 615,
	621, 477, 933, 934, 935, 936, 937, 938, 939, 940,
	300, 592, 622, 590, 634, 616, 435, 376, 0, 0,
	379, 282, 305, 320, 0, 607, 498, 228, 463, 291,
	252, 958, 0, 212, 247, 231, 260, 275, 278, 324,
	389, 397, 426, 431, 297, 272, 245, 456, 242, 481,
	513, 514, 515, 517, 393, 267, 430, 394, 0, 374,
	570, 571, 316, 522, 0, 763, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	751, 0, 0, 0, 271, 756, 0, 0, 0, 364,
	268, 0, 0, 427, 0, 205, 0, 483, 253, 375,
	372, 577, 283, 274, 270, 251, 317, 383, 425, 512,
	419, 762, 368, 0, 0, 493, 398, 0, 0, 0,
	0, 0, 758, 759, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 249, 325, 204, 410, 494, 287, 0,
	96, 0, 0, 959, 943, 1074, 909, 947, 960, 961,
	962, 963, 948, 0, 239, 949, 950, 246, 951, 0,
	908, 793, 795, 794, 858, 859, 860, 861, 862, 863,
	864, 791, 956, 964, 965, 0, 266, 321, 273, 265,
	574, 0, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 0, 0, 0, 0, 0, 0, 748, 0,
	761, 0, 0, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 745, 746, 0, 0, 0, 0, 903, 0, 747,
	0, 0, 755, 966, 967, 968, 969, 970, 971, 972,
	973, 974, 975, 976, 977, 978, 979, 980, 981, 982,
	983, 984, 985, 986, 987, 988, 989, 990, 991, 992,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 2074, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 0, 399, 258,
	0, 450, 902, 0, 0, 618, 0, 0, 900, 0,
	0, 0, 0, 363, 0, 330, 199, 226, 0, 0,
	409, 458, 470, 0, 0, 0, 953, 0, 468, 423,
	596, 234, 285, 455, 429, 466, 437, 288, 0, 0,
	467, 370, 579, 447, 593, 619, 620, 264, 403, 605,
	516, 613, 637, 227, 261, 417, 501, 599, 490, 395,
	575, 576, 329, 489, 296, 203, 367, 625, 225, 476,
	369, 243, 232, 581, 602, 290, 453, 632, 214, 511,
	591, 240, 480, 0, 0, 640, 248, 500, 216, 588,
	499, 391, 326, 327, 215, 0, 454, 269, 294, 0,
	0, 259, 412, 954, 955, 257, 641, 799, 612, 221,
	0, 611, 405, 578, 589, 392, 381, 220, 587, 390,
	380, 334, 807, 808, 281, 307, 884, 883, 882, 306,
	308, 880, 881, 879, 208, 600, 0, 209, 0, 495,
	601, 642, 449, 213, 235, 236, 238, 0, 280, 284,
	292, 295, 303, 304, 313, 365, 416, 443, 439, 448,
	0, 573, 594, 606, 617, 623, 624, 626, 627, 628,
	629, 630, 633, 631, 404, 311, 491, 333, 371, 0,
	0, 422, 469, 241, 598, 492, 890, 912, 901, 767,
	768, 891, 892, 916, 893, 770, 771, 913, 914, 764,
	765, 769, 915, 917, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 638, 502, 508, 503, 504, 505, 506, 507,
	0, 509, 904, 754, 753, 0, 760, 0, 789, 790,
	792, 796, 797, 798, 809, 856, 857, 865, 867, 868,
	866, 869, 870, 871, 874, 875, 876, 877, 872, 873,
	878, 772, 776, 773, 774, 775, 787, 777, 778, 779,
	780, 781, 782, 783, 784, 785, 786, 788, 927, 928,
	929, 930, 931, 932, 802, 806, 805, 803, 804, 800,
	801, 828, 827, 829, 830, 831, 832, 833, 834, 836,
	835, 837, 838, 839, 840, 841, 842, 810, 811, 814,
	815, 813, 812, 816, 825, 826, 817, 818, 819, 820,
	821, 822, 824, 823, 843, 844, 845, 846, 847, 849,
	848, 852, 853, 851, 850, 855, 854, 752, 198, 222,
	366, 0, 451, 289, 639, 608, 603, 207, 224, 918,
	263, 919, 0, 0, 923, 0, 0, 0, 925, 924,
	0, 926, 0, 888, 887, 0, 0, 920, 921, 0,
	922, 0, 0, 200, 202, 210, 223, 233, 237, 244,
	262, 277, 279, 286, 299, 310, 318, 319, 322, 328,
	378, 384, 385, 386, 387, 406, 407, 408, 411, 414,
	415, 418, 420, 421, 424, 428, 432, 433, 434, 436,
	438, 440, 452, 457, 471, 472, 473, 474, 475, 478,
	479, 484, 485, 486, 487, 488, 496, 497, 510, 580,
	582, 597, 615, 621, 477, 933, 934, 935, 936, 937,
	938, 939, 940, 300, 592, 622, 590, 634, 616, 435,
	376, 0, 0, 379, 282, 305, 320, 0, 607, 498,
	228, 463, 291, 252, 958, 0, 212, 247, 231, 260,
	275, 278, 324, 389, 397, 426, 431, 297, 272, 245,
	456, 242, 481, 513, 514, 515, 517, 393, 267, 430,
	394, 0, 374, 570, 571, 316, 522, 0, 763, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 751, 0, 0, 0, 271, 756, 0,
	0, 0, 364, 268, 0, 0, 427, 0, 205, 0,
	483, 253, 375, 372, 577, 283, 274, 270, 251, 317,
	383, 425, 512, 419, 762, 368, 0, 0, 493, 398,
	0, 0, 0, 0, 0, 758, 759, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 249, 325, 204, 410,
	494, 287, 0, 96, 0, 0, 959, 943, 1074, 909,
	947, 960, 961, 962, 963, 948, 0, 239, 949, 950,
	246, 951, 0, 908, 793, 795, 794, 858, 859, 860,
	861, 862, 863, 864, 791, 956, 964, 965, 0, 266,
	321, 273, 265, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 748, 0, 761, 0, 0, 0, 276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 745, 746, 0, 0, 0, 0,
	903, 0, 747, 0, 0, 755, 966, 967, 968, 969,
	970, 971, 972, 973, 974, 975, 976, 977, 978, 979,
	980, 981, 982, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 2072, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	0, 399, 258, 0, 450, 902, 0, 0, 618, 0,
	0, 900, 0, 0, 0, 0, 363, 0, 330, 199,
	226, 0, 0, 409, 458, 470, 0, 0, 0, 953,
	0, 468, 423, 596, 234, 285, 455, 429, 466, 437,
	288, 0, 0, 467, 370, 579, 447, 593, 619, 620,
	264, 403, 605, 516, 613, 637, 227, 261, 417, 501,
	599, 490, 395, 575, 576, 329, 489, 296, 203, 367,
	625, 225, 476, 369, 243, 232, 581, 602, 290, 453,
	632, 214, 511, 591, 240, 480, 0, 0, 640, 248,
	500, 216, 588, 499, 391, 326, 327, 215, 0, 454,
	269, 294, 0, 0, 259, 412, 954, 955, 257, 641,
	799, 612, 221, 0, 611, 405, 578, 589, 392, 381,
	220, 587, 390, 380, 334, 807, 808, 281, 307, 884,
	883, 882, 306, 308, 880, 881, 879, 208, 600, 0,
	209, 0, 495, 601, 642, 449, 213, 235, 236, 238,
	0, 280, 284, 292, 295, 303, 304, 313, 365, 416,
	443, 439, 448, 0, 573, 594, 606, 617, 623, 624,
	626, 627, 628, 629, 630, 633, 631, 404, 311, 491,
	333, 371, 0, 0, 422, 469, 241, 598, 492, 890,
	912, 901, 767, 768, 891, 892, 916, 893, 770, 771,
	913, 914, 764, 765, 769, 915, 917, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 638, 502, 508, 503, 504,
	505, 506, 507, 0, 509, 904, 754, 753, 0, 760,
	0, 789, 790, 792, 796, 797, 798, 809, 856, 857,
	865, 867, 868, 866, 869, 870, 871, 874, 875, 876,
	877, 872, 873, 878, 772, 776, 773, 774, 775, 787,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	788, 927, 928, 929, 930, 931, 932, 802, 806, 805,
	803, 804, 800, 801, 828, 827, 829, 830, 831, 832,
	833, 834, 836, 835, 837, 838, 839, 840, 841, 842,
	810, 811, 814, 815, 813, 812, 816, 825, 826, 817,
	818, 819, 820, 821, 822, 824, 823, 843, 844, 845,
	846, 847, 849, 848, 852, 853, 851, 850, 855, 854,
	752, 198, 222, 366, 0, 451, 289, 639, 608, 603,
	207, 224, 918, 263, 919, 0, 0, 923, 0, 0,
	0, 925, 924, 0, 926, 0, 888, 887, 0, 0,
	920, 921, 0, 922, 0, 0, 200, 202, 210, 223,
	233, 237, 244, 262, 277, 279, 286, 299, 310, 318,
	319, 322, 328, 378, 384, 385, 386, 387, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	433, 434, 436, 438, 440, 452, 457, 471, 472, 473,
	474, 475, 478, 479, 484, 485, 486, 487, 488, 496,
	497, 510, 580, 582, 597, 615, 621, 477, 933, 934,
	935, 936, 937, 938, 939, 940, 300, 592, 622, 590,
	634, 616, 435, 376, 0, 0, 379, 282, 305, 320,
	0, 607, 498, 228, 463, 291, 252, 958, 0, 212,
	247, 231, 260, 275, 278, 324, 389, 397, 426, 431,
	297, 272, 245, 456, 242, 481, 513, 514, 515, 517,
	393, 267, 430, 394, 0, 374, 570, 571, 316, 522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 364, 268, 0, 0, 427,
	0, 205, 0, 483, 253, 375, 372, 577, 283, 274,
	270, 251, 317, 383, 425, 512, 419, 0, 368, 0,
	0, 493, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 249,
	325, 204, 410, 494, 287, 0, 0, 0, 0, 0,
	711, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 246, 0, 0, 0, 349, 358, 357,
	338, 339, 341, 343, 348, 355, 361, 0, 0, 0,
	0, 0, 266, 321, 273, 265, 574, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 1125, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 0, 399, 258, 0, 450, 0, 0,
	1124, 618, 0, 0, 0, 0, 0, 1121, 1122, 363,
	1082, 330, 199, 226, 1115, 1119, 409, 458, 470, 0,
	0, 0, 254, 0, 468, 423, 596, 234, 285, 455,
	429, 466, 437, 288, 0, 0, 467, 370, 579, 447,
	593, 619, 620, 264, 403, 605, 516, 613, 637, 227,
	261, 417, 501, 599, 490, 395, 575, 576, 329, 489,
	296, 203, 367, 625, 225, 476, 369, 243, 232, 581,
	602, 290, 453, 632, 214, 511, 591, 240, 480, 0,
	0, 640, 248, 500, 216, 588, 499, 391, 326, 327,
	215, 0, 454, 269, 294, 0, 0, 259, 412, 583,
	584, 257, 641, 229, 612, 221, 0, 611, 405, 578,
	589, 392, 381, 220, 587, 390, 380, 334, 353, 354,
	281, 307, 444, 373, 445, 306, 308, 401, 400, 402,
	208, 600, 0, 209, 0, 495, 601, 642, 449, 213,
	235, 236, 238, 0, 280, 284, 292, 295, 303, 304,
	313, 365, 416, 443, 439, 448, 0, 573, 594, 606,
	617, 623, 624, 626, 627, 628, 629, 630, 633, 631,
	404, 311, 491, 333, 371, 0, 0, 422, 469, 241,
	598, 492, 201, 0, 0, 0, 0, 255, 256, 0,
	569, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 638, 502,
	508, 503, 504, 505, 506, 507, 0, 509, 0, 0,
	0, 0, 0, 0, 585, 586, 661, 382, 482, 595,
	335, 347, 350, 340, 359, 0, 360, 336, 337, 342,
	344, 345, 346, 351, 352, 356, 362, 250, 211, 388,
	396, 572, 312, 217, 218, 219, 518, 519, 520, 521,
	609, 610, 614, 206, 459, 460, 461, 462, 293, 604,
	309, 465, 464, 331, 332, 377, 446, 534, 536, 547,
	551, 553, 555, 561, 564, 535, 537, 548, 552, 554,
	556, 562, 565, 524, 526, 528, 530, 543, 542, 539,
	567, 568, 545, 550, 529, 541, 546, 559, 566, 563,
	523, 527, 531, 540, 558, 557, 538, 549, 560, 544,
	532, 525, 533, 0, 198, 222, 366, 0, 451, 289,
	639, 608, 603, 207, 224, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	202, 210, 223, 233, 237, 244, 262, 277, 279, 286,
	299, 310, 318, 319, 322, 328, 378, 384, 385, 386,
	387, 406, 407, 408, 411, 414, 415, 418, 420, 421,
	424, 428, 432, 433, 434, 436, 438, 440, 452, 457,
	471, 472, 473, 474, 475, 478, 479, 484, 485, 486,
	487, 488, 496, 497, 510, 580, 582, 597, 615, 621,
	477, 301, 302, 441, 442, 314, 315, 635, 636, 300,
	592, 622, 590, 634, 616, 435, 376, 0, 0, 379,
	282, 305, 320, 0, 607, 498, 228, 463, 291, 252,
	0, 0, 212, 247, 231, 260, 275, 278, 324, 389,
	397, 426, 431, 297, 272, 245, 456, 242, 481, 513,
	514, 515, 517, 393, 267, 430, 394, 0, 374, 570,
	571, 316, 522, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 364, 268,
	0, 0, 427, 0, 205, 0, 483, 253, 375, 372,
	577, 283, 274, 270, 251, 317, 383, 425, 512, 419,
	0, 368, 0, 0, 493, 398, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 249, 325, 204, 410, 494, 287, 0, 0,
	0, 0, 1682, 943, 0, 0, 1679, 0, 0, 0,
	0, 1677, 0, 239, 1678, 1676, 246, 1681, 0, 908,
	349, 358, 357, 338, 339, 341, 343, 348, 355, 361,
	0, 0, 0, 0, 0, 266, 321, 273, 265, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 0, 399, 258, 0,
	450, 0, 0, 0, 618, 0, 0, 0, 0, 0,
	0, 0, 363, 0, 330, 199, 226, 0, 0, 409,
	458, 470, 0, 0, 0, 254, 0, 468, 423, 596,
	234, 285, 455, 429, 466, 437, 288, 0, 0, 467,
	370, 579, 447, 593, 619, 620, 264, 403, 605, 516,
	613, 637, 227, 261, 417, 501, 599, 490, 395, 575,
	576, 329, 489, 296, 203, 367, 625, 225, 476, 369,
	243, 232, 581, 602, 290, 453, 632, 214, 511, 591,
	240, 480, 0, 0, 640, 248, 500, 216, 588, 499,
	391, 326, 327, 215, 0, 454, 269, 294, 0, 0,
	259, 412, 583, 584, 257, 641, 229, 612, 221, 0,
	611, 405, 578, 589, 392, 381, 220, 587, 390, 380,
	334, 353, 354, 281, 307, 444, 373, 445, 306, 308,
	401, 400, 402, 208, 600, 0, 209, 0, 495, 601,
	642, 449, 213, 235, 236, 238, 0, 280, 284, 292,
	295, 303, 304, 313, 365, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 311, 491, 333, 371, 0, 0,
	422, 469, 241, 598, 492, 201, 0, 0, 0, 0,
	255, 256, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 0, 0, 0, 0, 0, 0, 585, 586, 661,
	382, 482, 595, 335, 347, 350, 340, 359, 0, 360,
	336, 337, 342, 344, 345, 346, 351, 352, 356, 362,
	250, 211, 388, 396, 572, 312, 217, 218, 219, 518,
	519, 520, 521, 609, 610, 614, 206, 459, 460, 461,
	462, 293, 604, 309, 465, 464, 331, 332, 377, 446,
	534, 536, 547, 551, 553, 555, 561, 564, 535, 537,
	548, 552, 554, 556, 562, 565, 524, 526, 528, 530,
	543, 542, 539, 567, 568, 545, 550, 529, 541, 546,
	559, 566, 563, 523, 527, 531, 540, 558, 557, 538,
	549, 560, 544, 532, 525, 533, 0, 198, 222, 366,
	0, 451, 289, 639, 608, 603, 207, 224, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 202, 210, 223, 233, 237, 244, 262,
	277, 279, 286, 299, 310, 318, 319, 322, 328, 378,
	384, 385, 386, 387, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 301, 302, 441, 442, 314, 315,
	635, 636, 300, 592, 622, 590, 634, 616, 435, 376,
	0, 0, 379, 282, 305, 320, 0, 607, 498, 228,
	463, 291, 252, 0, 0, 212, 247, 231, 260, 275,
	278, 324, 389, 397, 426, 431, 297, 272, 245, 456,
	242, 481, 513, 514, 515, 517, 393, 267, 430, 0,
	394, 374, 570, 571, 316, 87, 522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 364, 268, 0, 0, 427, 0, 205, 0,
	483, 253, 375, 372, 577, 283, 274, 270, 251, 317,
	383, 425, 512, 419, 0, 368, 0, 0, 493, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 249, 325, 204, 410,
	494, 287, 0, 96, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	246, 0, 0, 0, 349, 358, 357, 338, 339, 341,
	343, 348, 355, 361, 0, 0, 0, 0, 0, 266,
	321, 273, 265, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	0, 399, 258, 0, 450, 0, 0, 0, 618, 0,
	0, 0, 0, 0, 0, 0, 363, 0, 330, 199,
	226, 0, 0, 409, 458, 470, 0, 0, 0, 254,
	0, 468, 423, 596, 234, 285, 455, 429, 466, 437,
	288, 0, 0, 467, 370, 579, 447, 593, 619, 620,
	264, 403, 605, 516, 613, 637, 227, 261, 417, 501,
	599, 490, 395, 575, 576, 329, 489, 296, 203, 367,
	625, 225, 476, 369, 243, 232, 581, 602, 290, 453,
	632, 214, 511, 591, 240, 480, 0, 0, 640, 248,
	500, 216, 588, 499, 391, 326, 327, 215, 0, 454,
	269, 294, 0, 0, 259, 412, 583, 584, 257, 641,
	229, 612, 221, 0, 611, 405, 578, 589, 392, 381,
	220, 587, 390, 380, 334, 353, 354, 281, 307, 444,
	373, 445, 306, 308, 401, 400, 402, 208, 600, 0,
	209, 0, 495, 601, 642, 449, 213, 235, 236, 238,
	0, 280, 284, 292, 295, 303, 304, 313, 365, 416,
	443, 439, 448, 0, 573, 594, 606, 617, 623, 624,
	626, 627, 628, 629, 630, 633, 631, 404, 311, 491,
	333, 371, 0, 0, 422, 469, 241, 598, 492, 201,
	0, 0, 0, 0, 255, 256, 0, 569, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 638, 502, 508, 503, 504,
	505, 506, 507, 0, 509, 0, 0, 0, 0, 0,
	0, 585, 586, 661, 382, 482, 595, 335, 347, 350,
	340, 359, 0, 360, 336, 337, 342, 344, 345, 346,
	351, 352, 356, 362, 250, 211, 388, 396, 572, 312,
	217, 218, 219, 518, 519, 520, 521, 609, 610, 614,
	206, 459, 460, 461, 462, 293, 604, 309, 465, 464,
	331, 332, 377, 446, 534, 536, 547, 551, 553, 555,
	561, 564, 535, 537, 548, 552, 554, 556, 562, 565,
	524, 526, 528, 530, 543, 542, 539, 567, 568, 545,
	550, 529, 541, 546, 559, 566, 563, 523, 527, 531,
	540, 558, 557, 538, 549, 560, 544, 532, 525, 533,
	0, 198, 222, 366, 95, 451, 289, 639, 608, 603,
	207, 224, 0, 263, 0, 0, 0, 0, 0, 0,
	2374, 0, 0, 2373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 202, 210, 223,
	233, 237, 244, 262, 277, 279, 286, 299, 310, 318,
	319, 322, 328, 378, 384, 385, 386, 387, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	433, 434, 436, 438, 440, 452, 457, 471, 472, 473,
	474, 475, 478, 479, 484, 485, 486, 487, 488, 496,
	497, 510, 580, 582, 597, 615, 621, 477, 301, 302,
	441, 442, 314, 315, 635, 636, 300, 592, 622, 590,
	634, 616, 435, 376, 0, 0, 379, 282, 305, 320,
	0, 607, 498, 228, 463, 291, 252, 0, 0, 212,
	247, 231, 260, 275, 278, 324, 389, 397, 426, 431,
	297, 272, 245, 456, 242, 481, 513, 514, 515, 517,
	393, 267, 430, 1738, 0, 374, 570, 571, 316, 522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 1740, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 364, 268, 0, 0, 427,
	0, 205, 0, 483, 253, 375, 372, 577, 283, 274,
	270, 251, 317, 383, 425, 512, 419, 0, 368, 0,
	0, 493, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 249,
	325, 204, 410, 494, 287, 0, 0, 0, 0, 1742,
	711, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 246, 0, 0, 0, 349, 358, 357,
	338, 339, 341, 343, 348, 355, 361, 0, 0, 0,
	0, 0, 266, 321, 273, 265, 574, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 0, 1455,
	0, 1456, 1457, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 0, 399, 258, 0, 450, 0, 0,
	0, 618, 0, 0, 0, 0, 0, 0, 0, 363,
	0, 330, 199, 226, 0, 0, 409, 458, 470, 0,
	0, 0, 254, 0, 468, 423, 596, 234, 285, 455,
	429, 466, 437, 288, 0, 0, 467, 370, 579, 447,
	593, 619, 620, 264, 403, 605, 516, 613, 637, 227,
	261, 417, 501, 599, 490, 395, 575, 576, 329, 489,
	296, 203, 367, 625, 225, 476, 369, 243, 232, 581,
	602, 290, 453, 632, 214, 511, 591, 240, 480, 0,
	0, 640, 248, 500, 216, 588, 499, 391, 326, 327,
	215, 0, 454, 269, 294, 0, 0, 259, 412, 583,
	584, 257, 641, 229, 612, 221, 0, 611, 405, 578,
	589, 392, 381, 220, 587, 390, 380, 334, 353, 354,
	281, 307, 444, 373, 445, 306, 308, 401, 400, 402,
	208, 600, 0, 209, 0, 495, 601, 642, 449, 213,
	235, 236, 238, 0, 280, 284, 292, 295, 303, 304,
	313, 365, 416, 443, 439, 448, 0, 573, 594, 606,
	617, 623, 624, 626, 627, 628, 629, 630, 633, 631,
	404, 311, 491, 333, 371, 0, 0, 422, 469, 241,
	598, 492, 201, 0, 0, 0, 0, 255, 256, 0,
	569, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 638, 502,
	508, 503, 504, 505, 506, 507, 0, 509, 0, 0,
	0, 0, 0, 0, 585, 586, 661, 382, 482, 595,
	335, 347, 350, 340, 359, 0, 360, 336, 337, 342,
	344, 345, 346, 351, 352, 356, 362, 250, 211, 388,
	396, 572, 312, 217, 218, 219, 518, 519, 520, 521,
	609, 610, 614, 206, 459, 460, 461, 462, 293, 604,
	309, 465, 464, 331, 332, 377, 446, 534, 536, 547,
	551, 553, 555, 561, 564, 535, 537, 548, 552, 554,
	556, 562, 565, 524, 526, 528, 530, 543, 542, 539,
	567, 568, 545, 550, 529, 541, 546, 559, 566, 563,
	523, 527, 531, 540, 558, 557, 538, 549, 560, 544,
	532, 525, 533, 0, 198, 222, 366, 0, 451, 289,
	639, 608, 603, 207, 224, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	202, 210, 223, 233, 237, 244, 262, 277, 279, 286,
	299, 310, 318, 319, 322, 328, 378, 384, 385, 386,
	387, 406, 407, 408, 411, 414, 415, 418, 420, 421,
	424, 428, 432, 433, 434, 436, 438, 440, 452, 457,
	471, 472, 473, 474, 475, 478, 479, 484, 485, 486,
	487, 488, 496, 497, 510, 580, 582, 597, 615, 621,
	477, 301, 302, 441, 442, 314, 315, 635, 636, 300,
	592, 622, 590, 634, 616, 435, 376, 0, 0, 379,
	282, 305, 320, 0, 607, 498, 228, 463, 291, 252,
	0, 0, 212, 247, 231, 260, 275, 278, 324, 389,
	397, 426, 431, 297, 272, 245, 456, 242, 481, 513,
	514, 515, 517, 393, 267, 430, 0, 394, 374, 570,
	571, 316, 87, 522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 364,
	268, 0, 0, 427, 0, 205, 0, 483, 253, 375,
	372, 577, 283, 274, 270, 251, 317, 383, 425, 512,
	419, 0, 368, 0, 0, 493, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 249, 325, 204, 410, 494, 287, 0,
	96, 0, 1719, 0, 711, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 246, 0, 0,
	0, 349, 358, 357, 338, 339, 341, 343, 348, 355,
	361, 0, 0, 0, 0, 0, 266, 321, 273, 265,
	574, 0, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 0, 399, 258,
	0, 450, 0, 0, 0, 618, 0, 0, 0, 0,
	0, 0, 0, 363, 0, 330, 199, 226, 0, 0,
	409, 458, 470, 0, 0, 0, 254, 0, 468, 423,
	596, 234, 285, 455, 429, 466, 437, 288, 0, 0,
	467, 370, 579, 447, 593, 619, 620, 264, 403, 605,
	516, 613, 637, 227, 261, 417, 501, 599, 490, 395,
	575, 576, 329, 489, 296, 203, 367, 625, 225, 476,
	369, 243, 232, 581, 602, 290, 453, 632, 214, 511,
	591, 240, 480, 0, 0, 640, 248, 500, 216, 588,
	499, 391, 326, 327, 215, 0, 454, 269, 294, 0,
	0, 259, 412, 583, 584, 257, 641, 229, 612, 221,
	0, 611, 405, 578, 589, 392, 381, 220, 587, 390,
	380, 334, 353, 354, 281, 307, 444, 373, 445, 306,
	308, 401, 400, 402, 208, 600, 0, 209, 0, 495,
	601, 642, 449, 213, 235, 236, 238, 0, 280, 284,
	292, 295, 303, 304, 313, 365, 416, 443, 439, 448,
	0, 573, 594, 606, 617, 623, 624, 626, 627, 628,
	629, 630, 633, 631, 404, 311, 491, 333, 371, 0,
	0, 422, 469, 241, 598, 492, 201, 0, 0, 0,
	0, 255, 256, 0, 569, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 638, 502, 508, 503, 504, 505, 506, 507,
	0, 509, 0, 0, 0, 0, 0, 0, 585, 586,
	661, 382, 482, 595, 335, 347, 350, 340, 359, 0,
	360, 336, 337, 342, 344, 345, 346, 351, 352, 356,
	362, 250, 211, 388, 396, 572, 312, 217, 218, 219,
	518, 519, 520, 521, 609, 610, 614, 206, 459, 460,
	461, 462, 293, 604, 309, 465, 464, 331, 332, 377,
	446, 534, 536, 547, 551, 553, 555, 561, 564, 535,
	537, 548, 552, 554, 556, 562, 565, 524, 526, 528,
	530, 543, 542, 539, 567, 568, 545, 550, 529, 541,
	546, 559, 566, 563, 523, 527, 531, 540, 558, 557,
	538, 549, 560, 544, 532, 525, 533, 0, 198, 222,
	366, 95, 451, 289, 639, 608, 603, 207, 224, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 210, 223, 233, 237, 244,
	262, 277, 279, 286, 299, 310, 318, 319, 322, 328,
	378, 384, 385, 386, 387, 406, 407, 408, 411, 414,
	415, 418, 420, 421, 424, 428, 432, 433, 434, 436,
	438, 440, 452, 457, 471, 472, 473, 474, 475, 478,
	479, 484, 485, 486, 487, 488, 496, 497, 510, 580,
	582, 597, 615, 621, 477, 301, 302, 441, 442, 314,
	315, 635, 636, 300, 592, 622, 590, 634, 616, 435,
	376, 0, 0, 379, 282, 305, 320, 0, 607, 498,
	228, 463, 291, 252, 0, 0, 212, 247, 231, 260,
	275, 278, 324, 389, 397, 426, 431, 297, 272, 245,
	456, 242, 481, 513, 514, 515, 517, 393, 267, 430,
	394, 0, 374, 570, 571, 316, 522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 364, 268, 0, 0, 427, 0, 205, 0,
	483, 253, 375, 372, 577, 283, 274, 270, 251, 317,
	383, 425, 512, 419, 0, 368, 0, 0, 493, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 249, 325, 204, 410,
	494, 287, 0, 96, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	246, 0, 0, 0, 349, 358, 357, 338, 339, 341,
	343, 348, 355, 361, 0, 0, 0, 0, 0, 266,
	321, 273, 265, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	0, 399, 258, 0, 450, 0, 0, 0, 618, 0,
	0, 0, 0, 0, 0, 0, 363, 0, 330, 199,
	226, 0, 0, 409, 458, 470, 0, 0, 0, 254,
	0, 468, 423, 596, 234, 285, 455, 429, 466, 437,
	288, 0, 0, 467, 370, 579, 447, 593, 619, 620,
	264, 403, 605, 516, 613, 637, 227, 261, 417, 501,
	599, 490, 395, 575, 576, 329, 489, 296, 203, 367,
	625, 225, 476, 369, 243, 232, 581, 602, 290, 453,
	632, 214, 511, 591, 240, 480, 0, 0, 640, 248,
	500, 216, 588, 499, 391, 326, 327, 215, 0, 454,
	269, 294, 0, 0, 259, 412, 583, 584, 257, 641,
	229, 612, 221, 0, 611, 405, 578, 589, 392, 381,
	220, 587, 390, 380, 334, 353, 354, 281, 307, 444,
	373, 445, 306, 308, 401, 400, 402, 208, 600, 0,
	209, 0, 495, 601, 642, 449, 213, 235, 236, 238,
	0, 280, 284, 292, 295, 303, 304, 313, 365, 416,
	443, 439, 448, 0, 573, 594, 606, 617, 623, 624,
	626, 627, 628, 629, 630, 633, 631, 404, 311, 491,
	333, 371, 0, 0, 422, 469, 241, 598, 492, 201,
	0, 0, 0, 0, 255, 256, 0, 569, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 638, 502, 508, 503, 504,
	505, 506, 507, 0, 509, 0, 0, 0, 0, 0,
	0, 585, 586, 661, 382, 482, 595, 335, 347, 350,
	340, 359, 0, 360, 336, 337, 342, 344, 345, 346,
	351, 352, 356, 362, 250, 211, 388, 396, 572, 312,
	217, 218, 219, 518, 519, 520, 521, 609, 610, 614,
	206, 459, 460, 461, 462, 293, 604, 309, 465, 464,
	331, 332, 377, 446, 534, 536, 547, 551, 553, 555,
	561, 564, 535, 537, 548, 552, 554, 556, 562, 565,
	524, 526, 528, 530, 543, 542, 539, 567, 568, 545,
	550, 529, 541, 546, 559, 566, 563, 523, 527, 531,
	540, 558, 557, 538, 549, 560, 544, 532, 525, 533,
	0, 198, 222, 366, 0, 451, 289, 639, 608, 603,
	207, 224, 0, 263, 0, 0, 0, 0, 0, 0,
	2374, 0, 0, 2373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 202, 210, 223,
	233, 237, 244, 262, 277, 279, 286, 299, 310, 318,
	319, 322, 328, 378, 384, 385, 386, 387, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	433, 434, 436, 438, 440, 452, 457, 471, 472, 473,
	474, 475, 478, 479, 484, 485, 486, 487, 488, 496,
	497, 510, 580, 582, 597, 615, 621, 477, 301, 302,
	441, 442, 314, 315, 635, 636, 300, 592, 622, 590,
	634, 616, 435, 376, 0, 0, 379, 282, 305, 320,
	0, 607, 498, 228, 463, 291, 252, 0, 0, 212,
	247, 231, 260, 275, 278, 324, 389, 397, 426, 431,
	297, 272, 245, 456, 242, 481, 513, 514, 515, 517,
	393, 267, 430, 394, 0, 374, 570, 571, 316, 522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 2323, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 364, 268, 0, 0, 427,
	0, 205, 0, 483, 253, 375, 372, 577, 283, 274,
	270, 251, 317, 383, 425, 512, 419, 0, 368, 0,
	0, 493, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 249,
	325, 204, 410, 494, 287, 0, 0, 0, 0, 1922,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 246, 0, 0, 0, 349, 358, 357,
	338, 339, 341, 343, 348, 355, 361, 0, 0, 0,
	0, 0, 266, 321, 273, 265, 574, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 0, 399, 258, 0, 450, 0, 0,
	0, 618, 0, 0, 0, 0, 0, 0, 0, 363,
	0, 330, 199, 226, 0, 0, 409, 458, 470, 0,
	0, 0, 254, 0, 468, 423, 596, 234, 285, 455,
	429, 466, 437, 288, 0, 2321, 467, 370, 579, 447,
	593, 619, 620, 264, 403, 605, 516, 613, 637, 227,
	261, 417, 501, 599, 490, 395, 575, 576, 329, 489,
	296, 203, 367, 625, 225, 476, 369, 243, 232, 581,
	602, 290, 453, 632, 214, 511, 591, 240, 480, 0,
	0, 640, 248, 500, 216, 588, 499, 391, 326, 327,
	215, 0, 454, 269, 294, 0, 0, 259, 412, 583,
	584, 257, 641, 229, 612, 221, 0, 611, 405, 578,
	589, 392, 381, 220, 587, 390, 380, 334, 353, 354,
	281, 307, 444, 373, 445, 306, 308, 401, 400, 402,
	208, 600, 0, 209, 0, 495, 601, 642, 449, 213,
	235, 236, 238, 0, 280, 284, 292, 295, 303, 304,
	313, 365, 416, 443, 439, 448, 0, 573, 594, 606,
	617, 623, 624, 626, 627, 628, 629, 630, 633, 631,
	404, 311, 491, 333, 371, 0, 0, 422, 469, 241,
	598, 492, 201, 0, 0, 0, 0, 255, 256, 0,
	569, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 638, 502,
	508, 503, 504, 505, 506, 507, 0, 509, 0, 0,
	0, 0, 0, 0, 585, 586, 661, 382, 482, 595,
	335, 347, 350, 340, 359, 0, 360, 336, 337, 342,
	344, 345, 346, 351, 352, 356, 362, 250, 211, 388,
	396, 572, 312, 217, 218, 219, 518, 519, 520, 521,
	609, 610, 614, 206, 459, 460, 461, 462, 293, 604,
	309, 465, 464, 331, 332, 377, 446, 534, 536, 547,
	551, 553, 555, 561, 564, 535, 537, 548, 552, 554,
	556, 562, 565, 524, 526, 528, 530, 543, 542, 539,
	567, 568, 545, 550, 529, 541, 546, 559, 566, 563,
	523, 527, 531, 540, 558, 557, 538, 549, 560, 544,
	532, 525, 533, 0, 198, 222, 366, 0, 451, 289,
	639, 608, 603, 207, 224, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	202, 210, 223, 233, 237, 244, 262, 277, 279, 286,
	299, 310, 318, 319, 322, 328, 378, 384, 385, 386,
	387, 406, 407, 408, 411, 414, 415, 418, 420, 421,
	424, 428, 432, 433, 434, 436, 438, 440, 452, 457,
	471, 472, 473, 474, 475, 478, 479, 484, 485, 486,
	487, 488, 496, 497, 510, 580, 582, 597, 615, 621,
	477, 301, 302, 441, 442, 314, 315, 635, 636, 300,
	592, 622, 590, 634, 616, 435, 376, 0, 0, 379,
	282, 305, 320, 0, 607, 498, 228, 463, 291, 252,
	0, 0, 212, 247, 231, 260, 275, 278, 324, 389,
	397, 426, 431, 297, 272, 245, 456, 242, 481, 513,
	514, 515, 517, 393, 267, 430, 394, 0, 374, 570,
	571, 316, 522, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 364, 268,
	0, 0, 427, 0, 205, 0, 483, 253, 375, 372,
	577, 283, 274, 270, 251, 317, 383, 425, 512, 419,
	0, 368, 0, 0, 493, 398, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 249, 325, 204, 410, 494, 287, 0, 0,
	0, 0, 0, 711, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 246, 0, 0, 0,
	349, 358, 357, 338, 339, 341, 343, 348, 355, 361,
	0, 0, 0, 0, 0, 266, 321, 273, 265, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 1076, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 0, 399, 258, 0,
	450, 0, 0, 0, 618, 0, 0, 0, 0, 0,
	0, 0, 363, 1082, 330, 199, 226, 1080, 0, 409,
	458, 470, 0, 0, 0, 254, 0, 468, 423, 596,
	234, 285, 455, 429, 466, 437, 288, 0, 0, 467,
	370, 579, 447, 593, 619, 620, 264, 403, 605, 516,
	613, 637, 227, 261, 417, 501, 599, 490, 395, 575,
	576, 329, 489, 296, 203, 367, 625, 225, 476, 369,
	243, 232, 581, 602, 290, 453, 632, 214, 511, 591,
	240, 480, 0, 0, 640, 248, 500, 216, 588, 499,
	391, 326, 327, 215, 0, 454, 269, 294, 0, 0,
	259, 412, 583, 584, 257, 641, 229, 612, 221, 0,
	611, 405, 578, 589, 392, 381, 220, 587, 390, 380,
	334, 353, 354, 281, 307, 444, 373, 445, 306, 308,
	401, 400, 402, 208, 600, 0, 209, 0, 495, 601,
	642, 449, 213, 235, 236, 238, 0, 280, 284, 292,
	295, 303, 304, 313, 365, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 311, 491, 333, 371, 0, 0,
	422, 469, 241, 598, 492, 201, 0, 0, 0, 0,
	255, 256, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 0, 0, 0, 0, 0, 0, 585, 586, 661,
	382, 482, 595, 335, 347, 350, 340, 359, 0, 360,
	336, 337, 342, 344, 345, 346, 351, 352, 356, 362,
	250, 211, 388, 396, 572, 312, 217, 218, 219, 518,
	519, 520, 521, 609, 610, 614, 206, 459, 460, 461,
	462, 293, 604, 309, 465, 464, 331, 332, 377, 446,
	534, 536, 547, 551, 553, 555, 561, 564, 535, 537,
	548, 552, 554, 556, 562, 565, 524, 526, 528, 530,
	543, 542, 539, 567, 568, 545, 550, 529, 541, 546,
	559, 566, 563, 523, 527, 531, 540, 558, 557, 538,
	549, 560, 544, 532, 525, 533, 0, 198, 222, 366,
	0, 451, 289, 639, 608, 603, 207, 224, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 202, 210, 223, 233, 237, 244, 262,
	277, 279, 286, 299, 310, 318, 319, 322, 328, 378,
	384, 385, 386, 387, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 301, 302, 441, 442, 314, 315,
	635, 636, 300, 592, 622, 590, 634, 616, 435, 376,
	0, 0, 379, 282, 305, 320, 0, 607, 498, 228,
	463, 291, 252, 0, 0, 212, 247, 231, 260, 275,
	278, 324, 389, 397, 426, 431, 297, 272, 245, 456,
	242, 481, 513, 514, 515, 517, 393, 267, 430, 394,
	0, 374, 570, 571, 316, 522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 2323, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 364, 268, 0, 0, 427, 0, 205, 0, 483,
	253, 375, 372, 577, 283, 274, 270, 251, 317, 383,
	425, 512, 419, 0, 368, 0, 0, 493, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 249, 325, 204, 410, 494,
	287, 0, 0, 0, 0, 1922, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 246,
	0, 0, 0, 349, 358, 357, 338, 339, 341, 343,
	348, 355, 361, 0, 0, 0, 0, 0, 266, 321,
	273, 265, 574, 0, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 0,
	399, 258, 0, 450, 0, 0, 0, 618, 0, 0,
	0, 0, 0, 0, 0, 363, 0, 330, 199, 226,
	0, 0, 409, 458, 470, 0, 0, 0, 254, 0,
	468, 423, 596, 234, 285, 455, 429, 466, 437, 288,
	0, 0, 467, 370, 579, 447, 593, 619, 620, 264,
	403, 605, 516, 613, 637, 227, 261, 417, 501, 599,
	490, 395, 575, 576, 329, 489, 296, 203, 367, 625,
	225, 476, 369, 243, 232, 581, 602, 290, 453, 632,
	214, 511, 591, 240, 480, 0, 0, 640, 248, 500,
	216, 588, 499, 391, 326, 327, 215, 0, 454, 269,
	294, 0, 0, 259, 412, 583, 584, 257, 641, 229,
	612, 221, 0, 611, 405, 578, 589, 392, 381, 220,
	587, 390, 380, 334, 353, 354, 281, 307, 444, 373,
	445, 306, 308, 401, 400, 402, 208, 600, 0, 209,
	0, 495, 601, 642, 449, 213, 235, 236, 238, 0,
	280, 284, 292, 295, 303, 304, 313, 365, 416, 443,
	439, 448, 0, 573, 594, 606, 617, 623, 624, 626,
	627, 628, 629, 630, 633, 631, 404, 311, 491, 333,
	371, 0, 0, 422, 469, 241, 598, 492, 201, 0,
	0, 0, 0, 255, 256, 0, 569, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 638, 502, 508, 503, 504, 505,
	506, 507, 0, 509, 0, 0, 0, 0, 0, 0,
	585, 586, 661, 382, 482, 595, 335, 347, 350, 340,
	359, 0, 360, 336, 337, 342, 344, 345, 346, 351,
	352, 356, 362, 250, 211, 388, 396, 572, 312, 217,
	218, 219, 518, 519, 520, 521, 609, 610, 614, 206,
	459, 460, 461, 462, 293, 604, 309, 465, 464, 331,
	332, 377, 446, 534, 536, 547, 551, 553, 555, 561,
	564, 535, 537, 548, 552, 554, 556, 562, 565, 524,
	526, 528, 530, 543, 542, 539, 567, 568, 545, 550,
	529, 541, 546, 559, 566, 563, 523, 527, 531, 540,
	558, 557, 538, 549, 560, 544, 532, 525, 533, 0,
	198, 222, 366, 0, 451, 289, 639, 608, 603, 207,
	224, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 202, 210, 223, 233,
	237, 244, 262, 277, 279, 286, 299, 310, 318, 319,
	322, 328, 378, 384, 385, 386, 387, 406, 407, 408,
	411, 414, 415, 418, 420, 421, 424, 428, 432, 433,
	434, 436, 438, 440, 452, 457, 471, 472, 473, 474,
	475, 478, 479, 484, 485, 486, 487, 488, 496, 497,
	510, 580, 582, 597, 615, 621, 477, 301, 302, 441,
	442, 314, 315, 635, 636, 300, 592, 622, 590, 634,
	616, 435, 376, 0, 0, 379, 282, 305, 320, 0,
	607, 498, 228, 463, 291, 252, 0, 0, 212, 247,
	231, 260, 275, 278, 324, 389, 397, 426, 431, 297,
	272, 245, 456, 242, 481, 513, 514, 515, 517, 393,
	267, 430, 394, 0, 374, 570, 571, 316, 522, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 364, 268, 0, 0, 427, 0,
	205, 0, 483, 253, 375, 372, 577, 283, 274, 270,
	251, 317, 383, 425, 512, 419, 0, 368, 0, 0,
	493, 398, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 249, 325,
	204, 410, 494, 287, 0, 0, 0, 1719, 0, 711,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 246, 0, 0, 0, 349, 358, 357, 338,
	339, 341, 343, 348, 355, 361, 0, 0, 0, 0,
	0, 266, 321, 273, 265, 574, 0, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 0, 399, 258, 0, 450, 0, 0, 0,
	618, 0, 0, 0, 3909, 0, 0, 0, 363, 0,
	330, 199, 226, 0, 0, 409, 458, 470, 0, 0,
	0, 254, 0, 468, 423, 596, 234, 285, 455, 429,
	466, 437, 288, 0, 0, 467, 370, 579, 447, 593,
	619, 620, 264, 403, 605, 516, 613, 637, 227, 261,
	417, 501, 599, 490, 395, 575, 576, 329, 489, 296,
	203, 367, 625, 225, 476, 369, 243, 232, 581, 602,
	290, 453, 632, 214, 511, 591, 240, 480, 0, 0,
	640, 248, 500, 216, 588, 499, 391, 326, 327, 215,
	0, 454, 269, 294, 0, 0, 259, 412, 583, 584,
	257, 641, 229, 612, 221, 0, 611, 405, 578, 589,
	392, 381, 220, 587, 390, 380, 334, 353, 354, 281,
	307, 444, 373, 445, 306, 308, 401, 400, 402, 208,
	600, 0, 209, 0, 495, 601, 642, 449, 213, 235,
	236, 238, 0, 280, 284, 292, 295, 303, 304, 313,
	365, 416, 443, 439, 448, 0, 573, 594, 606, 617,
	623, 624, 626, 627, 628, 629, 630, 633, 631, 404,
	311, 491, 333, 371, 0, 0, 422, 469, 241, 598,
	492, 201, 0, 0, 0, 0, 255, 256, 0, 569,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 638, 502, 508,
	503, 504, 505, 506, 507, 0, 509, 0, 0, 0,
	0, 0, 0, 585, 586, 661, 382, 482, 595, 335,
	347, 350, 340, 359, 0, 360, 336, 337, 342, 344,
	345, 346, 351, 352, 356, 362, 250, 211, 388, 396,
	572, 312, 217, 218, 219, 518, 519, 520, 521, 609,
	610, 614, 206, 459, 460, 461, 462, 293, 604, 309,
	465, 464, 331, 332, 377, 446, 534, 536, 547, 551,
	553, 555, 561, 564, 535, 537, 548, 552, 554, 556,
	562, 565, 524, 526, 528, 530, 543, 542, 539, 567,
	568, 545, 550, 529, 541, 546, 559, 566, 563, 523,
	527, 531, 540, 558, 557, 538, 549, 560, 544, 532,
	525, 533, 0, 198, 222, 366, 0, 451, 289, 639,
	608, 603, 207, 224, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	210, 223, 233, 237, 244, 262, 277, 279, 286, 299,
	310, 318, 319, 322, 328, 378, 384, 385, 386, 387,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 433, 434, 436, 438, 440, 452, 457, 471,
	472, 473, 474, 475, 478, 479, 484, 485, 486, 487,
	488, 496, 497, 510, 580, 582, 597, 615, 621, 477,
	301, 302, 441, 442, 314, 315, 635, 636, 300, 592,
	622, 590, 634, 616, 435, 376, 0, 0, 379, 282,
	305, 320, 0, 607, 498, 228, 463, 291, 252, 0,
	0, 212, 247, 231, 260, 275, 278, 324, 389, 397,
	426, 431, 297, 272, 245, 456, 242, 481, 513, 514,
	515, 517, 393, 267, 430, 394, 0, 374, 570, 571,
	316, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 364, 268, 0,
	0, 427, 0, 205, 0, 483, 253, 375, 372, 577,
	283, 274, 270, 251, 317, 383, 425, 512, 419, 0,
	368, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 249, 325, 204, 410, 494, 287, 0, 0, 0,
	0, 2083, 711, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 246, 0, 0, 0, 349,
	358, 357, 338, 339, 341, 343, 348, 355, 361, 0,
	0, 0, 0, 0, 266, 321, 273, 265, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2084, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 0, 399, 258, 0, 450,
	0, 0, 0, 618, 0, 0, 0, 0, 0, 0,
	0, 363, 0, 330, 199, 226, 0, 0, 409, 458,
	470, 0, 0, 0, 254, 0, 468, 423, 596, 234,
	285, 455, 429, 466, 437, 288, 0, 0, 467, 370,
	579, 447, 593, 619, 620, 264, 403, 605, 516, 613,
	637, 227, 261, 417, 501, 599, 490, 395, 575, 576,
	329, 489, 296, 203, 367, 625, 225, 476, 369, 243,
	232, 581, 602, 290, 453, 632, 214, 511, 591, 240,
	480, 0, 0, 640, 248, 500, 216, 588, 499, 391,
	326, 327, 215, 0, 454, 269, 294, 0, 0, 259,
	412, 583, 584, 257, 641, 229, 612, 221, 0, 611,
	405, 578, 589, 392, 381, 220, 587, 390, 380, 334,
	353, 354, 281, 307, 444, 373, 445, 306, 308, 401,
	400, 402, 208, 600, 0, 209, 0, 495, 601, 642,
	449, 213, 235, 236, 238, 0, 280, 284, 292, 295,
	303, 304, 313, 365, 416, 443, 439, 448, 0, 573,
	594, 606, 617, 623, 624, 626, 627, 628, 629, 630,
	633, 631, 404, 311, 491, 333, 371, 0, 0, 422,
	469, 241, 598, 492, 201, 0, 0, 0, 0, 255,
	256, 0, 569, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	638, 502, 508, 503, 504, 505, 506, 507, 0, 509,
	0, 0, 0, 0, 0, 0, 585, 586, 661, 382,
	482, 595, 335, 347, 350, 340, 359, 0, 360, 336,
	337, 342, 344, 345, 346, 351, 352, 356, 362, 250,
	211, 388, 396, 572, 312, 217, 218, 219, 518, 519,
	520, 521, 609, 610, 614, 206, 459, 460, 461, 462,
	293, 604, 309, 465, 464, 331, 332, 377, 446, 534,
	536, 547, 551, 553, 555, 561, 564, 535, 537, 548,
	552, 554, 556, 562, 565, 524, 526, 528, 530, 543,
	542, 539, 567, 568, 545, 550, 529, 541, 546, 559,
	566, 563, 523, 527, 531, 540, 558, 557, 538, 549,
	560, 544, 532, 525, 533, 0, 198, 222, 366, 0,
	451, 289, 639, 608, 603, 207, 224, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 202, 210, 223, 233, 237, 244, 262, 277,
	279, 286, 299, 310, 318, 319, 322, 328, 378, 384,
	385, 386, 387, 406, 407, 408, 411, 414, 415, 418,
	420, 421, 424, 428, 432, 433, 434, 436, 438, 440,
	452, 457, 471, 472, 473, 474, 475, 478, 479, 484,
	485, 486, 487, 488, 496, 497, 510, 580, 582, 597,
	615, 621, 477, 301, 302, 441, 442, 314, 315, 635,
	636, 300, 592, 622, 590, 634, 616, 435, 376, 0,
	0, 379, 282, 305, 320, 0, 607, 498, 228, 463,
	291, 252, 0, 0, 212, 247, 231, 260, 275, 278,
	324, 389, 397, 426, 431, 297, 272, 245, 456, 242,
	481, 513, 514, 515, 517, 393, 267, 430, 394, 0,
	374, 570, 571, 316, 522, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	364, 268, 0, 0, 427, 0, 205, 0, 483, 253,
	375, 372, 577, 283, 274, 270, 251, 317, 383, 425,
	512, 419, 0, 368, 0, 0, 493, 398, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 249, 325, 204, 410, 494, 287,
	0, 0, 0, 0, 2818, 711, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 246, 0,
	0, 0, 349, 358, 357, 338, 339, 341, 343, 348,
	355, 361, 0, 0, 0, 0, 0, 266, 321, 273,
	265, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 0, 399,
	258, 0, 450, 0, 0, 0, 618, 0, 0, 0,
	0, 0, 0, 0, 363, 0, 330, 199, 226, 0,
	0, 409, 458, 470, 0, 0, 0, 254, 0, 468,
	423, 596, 234, 285, 455, 429, 466, 437, 288, 0,
	0, 467, 370, 579, 447, 593, 619, 620, 264, 403,
	605, 516, 613, 637, 227, 261, 417, 501, 599, 490,
	395, 575, 576, 329, 489, 296, 203, 367, 625, 225,
	476, 369, 243, 232, 581, 602, 290, 453, 632, 214,
	511, 591, 240, 480, 0, 0, 640, 248, 500, 216,
	588, 499, 391, 326, 327, 215, 0, 454, 269, 294,
	0, 0, 259, 412, 583, 584, 257, 641, 229, 612,
	221, 0, 611, 405, 578, 589, 392, 381, 220, 587,
	390, 380, 334, 353, 354, 281, 307, 444, 373, 445,
	306, 308, 401, 400, 402, 208, 600, 0, 209, 0,
	495, 601, 642, 449, 213, 235, 236, 238, 0, 280,
	284, 292, 295, 303, 304, 313, 365, 416, 443, 439,
	448, 0, 573, 594, 606, 617, 623, 624, 626, 627,
	628, 629, 630, 633, 631, 404, 311, 491, 333, 371,
	0, 0, 422, 469, 241, 598, 492, 201, 0, 0,
	0, 0, 255, 256, 0, 569, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 638, 502, 508, 503, 504, 505, 506,
	507, 0, 509, 0, 0, 0, 0, 0, 0, 585,
	586, 661, 382, 482, 595, 335, 347, 350, 340, 359,
	0, 360, 336, 337, 342, 344, 345, 346, 351, 352,
	356, 362, 250, 211, 388, 396, 572, 312, 217, 218,
	219, 518, 519, 520, 521, 609, 610, 614, 206, 459,
	460, 461, 462, 293, 604, 309, 465, 464, 331, 332,
	377, 446, 534, 536, 547, 551, 553, 555, 561, 564,
	535, 537, 548, 552, 554, 556, 562, 565, 524, 526,
	528, 530, 543, 542, 539, 567, 568, 545, 550, 529,
	541, 546, 559, 566, 563, 523, 527, 531, 540, 558,
	557, 538, 549, 560, 544, 532, 525, 533, 0, 198,
	222, 366, 0, 451, 289, 639, 608, 603, 207, 224,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 202, 210, 223, 233, 237,
	244, 262, 277, 279, 286, 299, 310, 318, 319, 322,
	328, 378, 384, 385, 386, 387, 406, 407, 408, 411,
	414, 415, 418, 420, 421, 424, 428, 432, 433, 434,
	436, 438, 440, 452, 457, 471, 472, 473, 474, 475,
	478, 479, 484, 485, 486, 487, 488, 496, 497, 510,
	580, 582, 597, 615, 621, 477, 301, 302, 441, 442,
	314, 315, 635, 636, 300, 592, 622, 590, 634, 616,
	435, 376, 0, 0, 379, 282, 305, 320, 0, 607,
	498, 228, 463, 291, 252, 0, 0, 212, 247, 231,
	260, 275, 278, 324, 389, 397, 426, 431, 297, 272,
	245, 456, 242, 481, 513, 514, 515, 517, 393, 267,
	430, 394, 0, 374, 570, 571, 316, 522, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 364, 268, 0, 0, 427, 0, 205,
	0, 483, 253, 375, 372, 577, 283, 274, 270, 251,
	317, 383, 425, 512, 419, 0, 368, 0, 0, 493,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 249, 325, 204,
	410, 494, 287, 0, 0, 0, 0, 0, 711, 0,
	0, 0, 0, 2803, 0, 0, 0, 0, 239, 0,
	0, 246, 2804, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 0, 0, 0,
	266, 321, 273, 265, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 0, 399, 258, 0, 450, 0, 0, 0, 618,
	0, 0, 0, 0, 0, 0, 0, 363, 0, 330,
	199, 226, 0, 0, 409, 458, 470, 0, 0, 0,
	254, 0, 468, 423, 596, 234, 285, 455, 429, 466,
	437, 288, 0, 0, 467, 370, 579, 447, 593, 619,
	620, 264, 403, 605, 516, 613, 637, 227, 261, 417,
	501, 599, 490, 395, 575, 576, 329, 489, 296, 203,
	367, 625, 225, 476, 369, 243, 232, 581, 602, 290,
	453, 632, 214, 511, 591, 240, 480, 0, 0, 640,
	248, 500, 216, 588, 499, 391, 326, 327, 215, 0,
	454, 269, 294, 0, 0, 259, 412, 583, 584, 257,
	641, 229, 612, 221, 0, 611, 405, 578, 589, 392,
	381, 220, 587, 390, 380, 334, 353, 354, 281, 307,
	444, 373, 445, 306, 308, 401, 400, 402, 208, 600,
	0, 209, 0, 495, 601, 642, 449, 213, 235, 236,
	238, 0, 280, 284, 292, 295, 303, 304, 313, 365,
	416, 443, 439, 448, 0, 573, 594, 606, 617, 623,
	624, 626, 627, 628, 629, 630, 633, 631, 404, 311,
	491, 333, 371, 0, 0, 422, 469, 241, 598, 492,
	201, 0, 0, 0, 0, 255, 256, 0, 569, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 638, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 0, 0, 0, 0,
	0, 0, 585, 586, 661, 382, 482, 595, 335, 347,
	350, 340, 359, 0, 360, 336, 337, 342, 344, 345,
	346, 351, 352, 356, 362, 250, 211, 388, 396, 572,
	312, 217, 218, 219, 518, 519, 520, 521, 609, 610,
	614, 206, 459, 460, 461, 462, 293, 604, 309, 465,
	464, 331, 332, 377, 446, 534, 536, 547, 551, 553,
	555, 561, 564, 535, 537, 548, 552, 554, 556, 562,
	565, 524, 526, 528, 530, 543, 542, 539, 567, 568,
	545, 550, 529, 541, 546, 559, 566, 563, 523, 527,
	531, 540, 558, 557, 538, 549, 560, 544, 532, 525,
	533, 0, 198, 222, 366, 0, 451, 289, 639, 608,
	603, 207, 224, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 202, 210,
	223, 233, 237, 244, 262, 277, 279, 286, 299, 310,
	318, 319, 322, 328, 378, 384, 385, 386, 387, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 615, 621, 477, 301,
	302, 441, 442, 314, 315, 635, 636, 300, 592, 622,
	590, 634, 616, 435, 376, 0, 0, 379, 282, 305,
	320, 0, 607, 498, 228, 463, 291, 252, 0, 0,
	212, 247, 231, 260, 275, 278, 324, 389, 397, 426,
	431, 297, 272, 245, 456, 242, 481, 513, 514, 515,
	517, 393, 267, 430, 394, 0, 374, 570, 571, 316,
	522, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 1762, 0, 0, 0, 364, 268, 0, 0,
	427, 0, 205, 0, 483, 253, 375, 372, 577, 283,
	274, 270, 251, 317, 383, 425, 512, 419, 0, 368,
	0, 0, 493, 398, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	249, 325, 204, 410, 494, 287, 0, 0, 0, 0,
	1761, 711, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 246, 0, 0, 0, 349, 358,
	357, 338, 339, 341, 343, 348, 355, 361, 0, 0,
	0, 0, 0, 266, 321, 273, 265, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 0, 399, 258, 0, 450, 0,
	0, 0, 618, 0, 0, 0, 0, 0, 0, 0,
	363, 0, 330, 199, 226, 0, 0, 409, 458, 470,
	0, 0, 0, 254, 0, 468, 423, 596, 234, 285,
	455, 429, 466, 437, 288, 0, 0, 467, 370, 579,
	447, 593, 619, 620, 264, 403, 605, 516, 613, 637,
	227, 261, 417, 501, 599, 490, 395, 575, 576, 329,
	489, 296, 203, 367, 625, 225, 476, 369, 243, 232,
	581, 602, 290, 453, 632, 214, 511, 591, 240, 480,
	0, 0, 640, 248, 500, 216, 588, 499, 391, 326,
	327, 215, 0, 454, 269, 294, 0, 0, 259, 412,
	583, 584, 257, 641, 229, 612, 221, 0, 611, 405,
	578, 589, 392, 381, 220, 587, 390, 380, 334, 353,
	354, 281, 307, 444, 373, 445, 306, 308, 401, 400,
	402, 208, 600, 0, 209, 0, 495, 601, 642, 449,
	213, 235, 236, 238, 0, 280, 284, 292, 295, 303,
	304, 313, 365, 416, 443, 439, 448, 0, 573, 594,
	606, 617, 623, 624, 626, 627, 628, 629, 630, 633,
	631, 404, 311, 491, 333, 371, 0, 0, 422, 469,
	241, 598, 492, 201, 0, 0, 0, 0, 255, 256,
	0, 569, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 638,
	502, 508, 503, 504, 505, 506, 507, 0, 509, 0,
	0, 0, 0, 0, 0, 585, 586, 661, 382, 482,
	595, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 250, 211,
	388, 396, 572, 312, 217, 218, 219, 518, 519, 520,
	521, 609, 610, 614, 206, 459, 460, 461, 462, 293,
	604, 309, 465, 464, 331, 332, 377, 446, 534, 536,
	547, 551, 553, 555, 561, 564, 535, 537, 548, 552,
	554, 556, 562, 565, 524, 526, 528, 530, 543, 542,
	539, 567, 568, 545, 550, 529, 541, 546, 559, 566,
	563, 523, 527, 531, 540, 558, 557, 538, 549, 560,
	544, 532, 525, 533, 0, 198, 222, 366, 0, 451,
	289, 639, 608, 603, 207, 224, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 202, 210, 223, 233, 237, 244, 262, 277, 279,
	286, 299, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 406, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 433, 434, 436, 438, 440, 452,
	457, 471, 472, 473, 474, 475, 478, 479, 484, 485,
	486, 487, 488, 496, 497, 510, 580, 582, 597, 615,
	621, 477, 301, 302, 441, 442, 314, 315, 635, 636,
	300, 592, 622, 590, 634, 616, 435, 376, 0, 0,
	379, 282, 305, 320, 0, 607, 498, 228, 463, 291,
	252, 0, 0, 212, 247, 231, 260, 275, 278, 324,
	389, 397, 426, 431, 297, 272, 245, 456, 242, 481,
	513, 514, 515, 517, 393, 267, 430, 394, 0, 374,
	570, 571, 316, 522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 364,
	268, 0, 0, 427, 0, 205, 0, 483, 253, 375,
	372, 577, 283, 274, 270, 251, 317, 383, 425, 512,
	419, 0, 368, 0, 0, 493, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 249, 325, 204, 410, 494, 287, 0,
	0, 0, 0, 0, 713, 714, 715, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 246, 0, 0,
	0, 349, 358, 357, 338, 339, 341, 343, 348, 355,
	361, 0, 0, 0, 0, 0, 266, 321, 273, 265,
	574, 0, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 0, 399, 258,
	0, 450, 0, 0, 0, 618, 0, 0, 0, 0,
	0, 0, 0, 363, 0, 330, 199, 226, 0, 0,
	409, 458, 470, 0, 0, 0, 254, 0, 468, 423,
	596, 234, 285, 455, 429, 466, 437, 288, 0, 0,
	467, 370, 579, 447, 593, 619, 620, 264, 403, 605,
	516, 613, 637, 227, 261, 417, 501, 599, 490, 395,
	575, 576, 329, 489, 296, 203, 367, 625, 225, 476,
	369, 243, 232, 581, 602, 290, 453, 632, 214, 511,
	591, 240, 480, 0, 0, 640, 248, 500, 216, 588,
	499, 391, 326, 327, 215, 0, 454, 269, 294, 0,
	0, 259, 412, 583, 584, 257, 641, 229, 612, 221,
	0, 611, 405, 578, 589, 392, 381, 220, 587, 390,
	380, 334, 353, 354, 281, 307, 444, 373, 445, 306,
	308, 401, 400, 402, 208, 600, 0, 209, 0, 495,
	601, 642, 449, 213, 235, 236, 238, 0, 280, 284,
	292, 295, 303, 304, 313, 365, 416, 443, 439, 448,
	0, 573, 594, 606, 617, 623, 624, 626, 627, 628,
	629, 630, 633, 631, 404, 311, 491, 333, 371, 0,
	0, 422, 469, 241, 598, 492, 201, 0, 0, 0,
	0, 255, 256, 0, 569, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 638, 502, 508, 503, 504, 505, 506, 507,
	0, 509, 0, 0, 0, 0, 0, 0, 585, 586,
	661, 382, 482, 595, 335, 347, 350, 340, 359, 0,
	360, 336, 337, 342, 344, 345, 346, 351, 352, 356,
	362, 250, 211, 388, 396, 572, 312, 217, 218, 219,
	518, 519, 520, 521, 609, 610, 614, 206, 459, 460,
	461, 462, 293, 604, 309, 465, 464, 331, 332, 377,
	446, 534, 536, 547, 551, 553, 555, 561, 564, 535,
	537, 548, 552, 554, 556, 562, 565, 524, 526, 528,
	530, 543, 542, 539, 567, 568, 545, 550, 529, 541,
	546, 559, 566, 563, 523, 527, 531, 540, 558, 557,
	538, 549, 560, 544, 532, 525, 533, 0, 198, 222,
	366, 0, 451, 289, 639, 608, 603, 207, 224, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 210, 223, 233, 237, 244,
	262, 277, 279, 286, 299, 310, 318, 319, 322, 328,
	378, 384, 385, 386, 387, 406, 407, 408, 411, 414,
	415, 418, 420, 421, 424, 428, 432, 433, 434, 436,
	438, 440, 452, 457, 471, 472, 473, 474, 475, 478,
	479, 484, 485, 486, 487, 488, 496, 497, 510, 580,
	582, 597, 615, 621, 477, 301, 302, 441, 442, 314,
	315, 635, 636, 300, 592, 622, 590, 634, 616, 435,
	376, 0, 0, 379, 282, 305, 320, 0, 607, 498,
	228, 463, 291, 252, 0, 0, 212, 247, 231, 260,
	275, 278, 324, 389, 397, 426, 431, 297, 272, 245,
	456, 242, 481, 513, 514, 515, 517, 393, 267, 430,
	394, 0, 374, 570, 571, 316, 522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 364, 268, 0, 0, 427, 0, 205, 0,
	483, 253, 375, 372, 577, 283, 274, 270, 251, 317,
	383, 425, 512, 419, 0, 368, 0, 0, 493, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 249, 325, 204, 410,
	494, 287, 0, 0, 0, 0, 0, 711, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	246, 0, 0, 0, 349, 358, 357, 338, 339, 341,
	343, 348, 355, 361, 0, 0, 0, 0, 0, 266,
	321, 273, 265, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	0, 399, 258, 0, 450, 0, 0, 0, 618, 0,
	0, 0, 4043, 0, 0, 0, 363, 0, 330, 199,
	226, 0, 0, 409, 458, 470, 0, 0, 0, 254,
	0, 468, 423, 596, 234, 285, 455, 429, 466, 437,
	288, 0, 0, 467, 370, 579, 447, 593, 619, 620,
	264, 403, 605, 516, 613, 637, 227, 261, 417, 501,
	599, 490, 395, 575, 576, 329, 489, 296, 203, 367,
	625, 225, 476, 369, 243, 232, 581, 602, 290, 453,
	632, 214, 511, 591, 240, 480, 0, 0, 640, 248,
	500, 216, 588, 499, 391, 326, 327, 215, 0, 454,
	269, 294, 0, 0, 259, 412, 583, 584, 257, 641,
	229, 612, 221, 0, 611, 405, 578, 589, 392, 381,
	220, 587, 390, 380, 334, 353, 354, 281, 307, 444,
	373, 445, 306, 308, 401, 400, 402, 208, 600, 0,
	209, 0, 495, 601, 642, 449, 213, 235, 236, 238,
	0, 280, 284, 292, 295, 303, 304, 313, 365, 416,
	443, 439, 448, 0, 573, 594, 606, 617, 623, 624,
	626, 627, 628, 629, 630, 633, 631, 404, 311, 491,
	333, 371, 0, 0, 422, 469, 241, 598, 492, 201,
	0, 0, 0, 0, 255, 256, 0, 569, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 638, 502, 508, 503, 504,
	505, 506, 507, 0, 509, 0, 0, 0, 0, 0,
	0, 585, 586, 661, 382, 482, 595, 335, 347, 350,
	340, 359, 0, 360, 336, 337, 342, 344, 345, 346,
	351, 352, 356, 362, 250, 211, 388, 396, 572, 312,
	217, 218, 219, 518, 519, 520, 521, 609, 610, 614,
	206, 459, 460, 461, 462, 293, 604, 309, 465, 464,
	331, 332, 377, 446, 534, 536, 547, 551, 553, 555,
	561, 564, 535, 537, 548, 552, 554, 556, 562, 565,
	524, 526, 528, 530, 543, 542, 539, 567, 568, 545,
	550, 529, 541, 546, 559, 566, 563, 523, 527, 531,
	540, 558, 557, 538, 549, 560, 544, 532, 525, 533,
	0, 198, 222, 366, 0, 451, 289, 639, 608, 603,
	207, 224, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 202, 210, 223,
	233, 237, 244, 262, 277, 279, 286, 299, 310, 318,
	319, 322, 328, 378, 384, 385, 386, 387, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	433, 434, 436, 438, 440, 452, 457, 471, 472, 473,
	474, 475, 478, 479, 484, 485, 486, 487, 488, 496,
	497, 510, 580, 582, 597, 615, 621, 477, 301, 302,
	441, 442, 314, 315, 635, 636, 300, 592, 622, 590,
	634, 616, 435, 376, 0, 0, 379, 282, 305, 320,
	0, 607, 498, 228, 463, 291, 252, 0, 0, 212,
	247, 231, 260, 275, 278, 324, 389, 397, 426, 431,
	297, 272, 245, 456, 242, 481, 513, 514, 515, 517,
	393, 267, 430, 394, 0, 374, 570, 571, 316, 522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 364, 268, 0, 0, 427,
	0, 205, 0, 483, 253, 375, 372, 577, 283, 274,
	270, 251, 317, 383, 425, 512, 419, 0, 368, 0,
	0, 493, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 249,
	325, 204, 410, 494, 287, 0, 0, 0, 0, 1922,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 246, 0, 0, 0, 349, 358, 357,
	338, 339, 341, 343, 348, 355, 361, 0, 0, 0,
	0, 0, 266, 321, 273, 265, 574, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 0, 399, 258, 0, 450, 0, 0,
	0, 618, 0, 0, 0, 0, 0, 0, 0, 363,
	0, 330, 199, 226, 0, 0, 409, 458, 470, 0,
	0, 0, 254, 0, 468, 423, 596, 234, 285, 455,
	429, 466, 437, 288, 0, 0, 467, 370, 579, 447,
	593, 619, 620, 264, 403, 605, 516, 613, 637, 227,
	261, 417, 501, 599, 490, 395, 575, 576, 329, 489,
	296, 203, 367, 625, 225, 476, 369, 243, 232, 581,
	602, 290, 453, 632, 214, 511, 591, 240, 480, 0,
	0, 640, 248, 500, 216, 588, 499, 391, 326, 327,
	215, 0, 454, 269, 294, 0, 0, 259, 412, 583,
	584, 257, 641, 229, 612, 221, 0, 611, 405, 578,
	589, 392, 381, 220, 587, 390, 380, 334, 353, 354,
	281, 307, 444, 373, 445, 306, 308, 401, 400, 402,
	208, 600, 0, 209, 0, 495, 601, 642, 449, 213,
	235, 236, 238, 0, 280, 284, 292, 295, 303, 304,
	313, 365, 416, 443, 439, 448, 0, 573, 594, 606,
	617, 623, 624, 626, 627, 628, 629, 630, 633, 631,
	404, 311, 491, 333, 371, 0, 0, 422, 469, 241,
	598, 492, 201, 0, 0, 0, 0, 255, 256, 0,
	569, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 638, 502,
	508, 503, 504, 505, 506, 507, 0, 509, 0, 0,
	0, 0, 0, 0, 585, 586, 661, 382, 482, 595,
	335, 347, 350, 340, 359, 0, 360, 336, 337, 342,
	344, 345, 346, 351, 352, 356, 362, 250, 211, 388,
	396, 572, 312, 217, 218, 219, 518, 519, 520, 521,
	609, 610, 614, 206, 459, 460, 461, 462, 293, 604,
	309, 465, 464, 331, 332, 377, 446, 534, 536, 547,
	551, 553, 555, 561, 564, 535, 537, 548, 552, 554,
	556, 562, 565, 524, 526, 528, 530, 543, 542, 539,
	567, 568, 545, 550, 529, 541, 546, 559, 566, 563,
	523, 527, 531, 540, 558, 557, 538, 549, 560, 544,
	532, 525, 533, 0, 198, 222, 366, 0, 451, 289,
	639, 608, 603, 207, 224, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	202, 210, 223, 233, 237, 244, 262, 277, 279, 286,
	299, 310, 318, 319, 322, 328, 378, 384, 385, 386,
	387, 406, 407, 408, 411, 414, 415, 418, 420, 421,
	424, 428, 432, 433, 434, 436, 438, 440, 452, 457,
	471, 472, 473, 474, 475, 478, 479, 484, 485, 486,
	487, 488, 496, 497, 510, 580, 582, 597, 615, 621,
	477, 301, 302, 441, 442, 314, 315, 635, 636, 300,
	592, 622, 590, 634, 616, 435, 376, 0, 0, 379,
	282, 305, 320, 0, 607, 498, 228, 463, 291, 252,
	0, 0, 212, 247, 231, 260, 275, 278, 324, 389,
	397, 426, 431, 297, 272, 245, 456, 242, 481, 513,
	514, 515, 517, 393, 267, 430, 394, 0, 374, 570,
	571, 316, 522, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 364, 268,
	0, 0, 427, 0, 205, 0, 483, 253, 375, 372,
	577, 283, 274, 270, 251, 317, 383, 425, 512, 419,
	0, 368, 0, 0, 493, 398, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 249, 325, 204, 410, 494, 287, 0, 0,
	0, 0, 0, 711, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 246, 0, 0, 0,
	349, 358, 357, 338, 339, 341, 343, 348, 355, 361,
	0, 0, 0, 0, 0, 266, 321, 273, 265, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 0, 399, 258, 0,
	450, 0, 0, 0, 618, 0, 0, 0, 3909, 0,
	0, 0, 363, 0, 330, 199, 226, 0, 0, 409,
	458, 470, 0, 0, 0, 254, 0, 468, 423, 596,
	234, 285, 455, 429, 466, 437, 288, 0, 0, 467,
	370, 579, 447, 593, 619, 620, 264, 403, 605, 516,
	613, 637, 227, 261, 417, 501, 599, 490, 395, 575,
	576, 329, 489, 296, 203, 367, 625, 225, 476, 369,
	243, 232, 581, 602, 290, 453, 632, 214, 511, 591,
	240, 480, 0, 0, 640, 248, 500, 216, 588, 499,
	391, 326, 327, 215, 0, 454, 269, 294, 0, 0,
	259, 412, 583, 584, 257, 641, 229, 612, 221, 0,
	611, 405, 578, 589, 392, 381, 220, 587, 390, 380,
	334, 353, 354, 281, 307, 444, 373, 445, 306, 308,
	401, 400, 402, 208, 600, 0, 209, 0, 495, 601,
	642, 449, 213, 235, 236, 238, 0, 280, 284, 292,
	295, 303, 304, 313, 365, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 311, 491, 333, 371, 0, 0,
	422, 469, 241, 598, 492, 201, 0, 0, 0, 0,
	255, 256, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 0, 0, 0, 0, 0, 0, 585, 586, 661,
	382, 482, 595, 335, 347, 350, 340, 359, 0, 360,
	336, 337, 342, 344, 345, 346, 351, 352, 356, 362,
	250, 211, 388, 396, 572, 312, 217, 218, 219, 518,
	519, 520, 521, 609, 610, 614, 206, 459, 460, 461,
	462, 293, 604, 309, 465, 464, 331, 332, 377, 446,
	534, 536, 547, 551, 553, 555, 561, 564, 535, 537,
	548, 552, 554, 556, 562, 565, 524, 526, 528, 530,
	543, 542, 539, 567, 568, 545, 550, 529, 541, 546,
	559, 566, 563, 523, 527, 531, 540, 558, 557, 538,
	549, 560, 544, 532, 525, 533, 0, 198, 222, 366,
	0, 451, 289, 639, 608, 603, 207, 224, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 202, 210, 223, 233, 237, 244, 262,
	277, 279, 286, 299, 310, 318, 319, 322, 328, 378,
	384, 385, 386, 387, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 301, 302, 441, 442, 314, 315,
	635, 636, 300, 592, 622, 590, 634, 616, 435, 376,
	0, 0, 379, 282, 305, 320, 0, 607, 498, 228,
	463, 291, 252, 0, 0, 212, 247, 231, 260, 275,
	278, 324, 389, 397, 426, 431, 297, 272, 245, 456,
	242, 481, 513, 514, 515, 517, 393, 267, 430, 394,
	0, 374, 570, 571, 316, 522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 364, 268, 0, 0, 427, 0, 205, 0, 483,
	253, 375, 372, 577, 283, 274, 270, 251, 317, 383,
	425, 512, 419, 0, 368, 0, 0, 493, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 249, 325, 204, 410, 494,
	287, 0, 96, 0, 0, 0, 711, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 246,
	0, 0, 0, 349, 358, 357, 338, 339, 341, 343,
	348, 355, 361, 0, 0, 0, 0, 0, 266, 321,
	273, 265, 574, 0, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 0,
	399, 258, 0, 450, 0, 0, 0, 618, 0, 0,
	0, 0, 0, 0, 0, 363, 0, 330, 199, 226,
	0, 0, 409, 458, 470, 0, 0, 0, 254, 0,
	468, 423, 596, 234, 285, 455, 429, 466, 437, 288,
	0, 0, 467, 370, 579, 447, 593, 619, 620, 264,
	403, 605, 516, 613, 637, 227, 261, 417, 501, 599,
	490, 395, 575, 576, 329, 489, 296, 203, 367, 625,
	225, 476, 369, 243, 232, 581, 602, 290, 453, 632,
	214, 511, 591, 240, 480, 0, 0, 640, 248, 500,
	216, 588, 499, 391, 326, 327, 215, 0, 454, 269,
	294, 0, 0, 259, 412, 583, 584, 257, 641, 229,
	612, 221, 0, 611, 405, 578, 589, 392, 381, 220,
	587, 390, 380, 334, 353, 354, 281, 307, 444, 373,
	445, 306, 308, 401, 400, 402, 208, 600, 0, 209,
	0, 495, 601, 642, 449, 213, 235, 236, 238, 0,
	280, 284, 292, 295, 303, 304, 313, 365, 416, 443,
	439, 448, 0, 573, 594, 606, 617, 623, 624, 626,
	627, 628, 629, 630, 633, 631, 404, 311, 491, 333,
	371, 0, 0, 422, 469, 241, 598, 492, 201, 0,
	0, 0, 0, 255, 256, 0, 569, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 638, 502, 508, 503, 504, 505,
	506, 507, 0, 509, 0, 0, 0, 0, 0, 0,
	585, 586, 661, 382, 482, 595, 335, 347, 350, 340,
	359, 0, 360, 336, 337, 342, 344, 345, 346, 351,
	352, 356, 362, 250, 211, 388, 396, 572, 312, 217,
	218, 219, 518, 519, 520, 521, 609, 610, 614, 206,
	459, 460, 461, 462, 293, 604, 309, 465, 464, 331,
	332, 377, 446, 534, 536, 547, 551, 553, 555, 561,
	564, 535, 537, 548, 552, 554, 556, 562, 565, 524,
	526, 528, 530, 543, 542, 539, 567, 568, 545, 550,
	529, 541, 546, 559, 566, 563, 523, 527, 531, 540,
	558, 557, 538, 549, 560, 544, 532, 525, 533, 0,
	198, 222, 366, 0, 451, 289, 639, 608, 603, 207,
	224, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 202, 210, 223, 233,
	237, 244, 262, 277, 279, 286, 299, 310, 318, 319,
	322, 328, 378, 384, 385, 386, 387, 406, 407, 408,
	411, 414, 415, 418, 420, 421, 424, 428, 432, 433,
	434, 436, 438, 440, 452, 457, 471, 472, 473, 474,
	475, 478, 479, 484, 485, 486, 487, 488, 496, 497,
	510, 580, 582, 597, 615, 621, 477, 301, 302, 441,
	442, 314, 315, 635, 636, 300, 592, 622, 590, 634,
	616, 435, 376, 0, 0, 379, 282, 305, 320, 0,
	607, 498, 228, 463, 291, 252, 0, 0, 212, 247,
	231, 260, 275, 278, 324, 389, 397, 426, 431, 297,
	272, 245, 456, 242, 481, 513, 514, 515, 517, 393,
	267, 430, 394, 0, 374, 570, 571, 316, 522, 0,
	0, 0, 0, 2375, 0, 0, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 364, 268, 0, 0, 427, 0,
	205, 0, 483, 253, 375, 372, 577, 283, 274, 270,
	251, 317, 383, 425, 512, 419, 0, 368, 0, 0,
	493, 398, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 249, 325,
	204, 410, 494, 287, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 246, 0, 0, 0, 349, 358, 357, 338,
	339, 341, 343, 348, 355, 361, 0, 0, 0, 0,
	0, 266, 321, 273, 265, 574, 0, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 0, 399, 258, 0, 450, 0, 0, 0,
	618, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 199, 226, 0, 0, 409, 458, 470, 0, 0,
	0, 254, 0, 468, 423, 596, 234, 285, 455, 429,
	466, 437, 288, 0, 0, 467, 370, 579, 447, 593,
	619, 620, 264, 403, 605, 516, 613, 637, 227, 261,
	417, 501, 599, 490, 395, 575, 576, 329, 489, 296,
	203, 367, 625, 225, 476, 369, 243, 232, 581, 602,
	290, 453, 632, 214, 511, 591, 240, 480, 0, 0,
	640, 248, 500, 216, 588, 499, 391, 326, 327, 215,
	0, 454, 269, 294, 0, 0, 259, 412, 583, 584,
	257, 641, 229, 612, 221, 0, 611, 405, 578, 589,
	392, 381, 220, 587, 390, 380, 334, 353, 354, 281,
	307, 444, 373, 445, 306, 308, 401, 400, 402, 208,
	600, 0, 209, 0, 495, 601, 642, 449, 213, 235,
	236, 238, 0, 280, 284, 292, 295, 303, 304, 313,
	365, 416, 443, 439, 448, 0, 573, 594, 606, 617,
	623, 624, 626, 627, 628, 629, 630, 633, 631, 404,
	311, 491, 333, 371, 0, 0, 422, 469, 241, 598,
	492, 201, 0, 0, 0, 0, 255, 256, 0, 569,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 638, 502, 508,
	503, 504, 505, 506, 507, 0, 509, 0, 0, 0,
	0, 0, 0, 585, 586, 661, 382, 482, 595, 335,
	347, 350, 340, 359, 0, 360, 336, 337, 342, 344,
	345, 346, 351, 352, 356, 362, 250, 211, 388, 396,
	572, 312, 217, 218, 219, 518, 519, 520, 521, 609,
	610, 614, 206, 459, 460, 461, 462, 293, 604, 309,
	465, 464, 331, 332, 377, 446, 534, 536, 547, 551,
	553, 555, 561, 564, 535, 537, 548, 552, 554, 556,
	562, 565, 524, 526, 528, 530, 543, 542, 539, 567,
	568, 545, 550, 529, 541, 546, 559, 566, 563, 523,
	527, 531, 540, 558, 557, 538, 549, 560, 544, 532,
	525, 533, 0, 198, 222, 366, 0, 451, 289, 639,
	608, 603, 207, 224, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	210, 223, 233, 237, 244, 262, 277, 279, 286, 299,
	310, 318, 319, 322, 328, 378, 384, 385, 386, 387,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 433, 434, 436, 438, 440, 452, 457, 471,
	472, 473, 474, 475, 478, 479, 484, 485, 486, 487,
	488, 496, 497, 510, 580, 582, 597, 615, 621, 477,
	301, 302, 441, 442, 314, 315, 635, 636, 300, 592,
	622, 590, 634, 616, 435, 376, 0, 0, 379, 282,
	305, 320, 0, 607, 498, 228, 463, 291, 252, 0,
	0, 212, 247, 231, 260, 275, 278, 324, 389, 397,
	426, 431, 297, 272, 245, 456, 242, 481, 513, 514,
	515, 517, 393, 267, 430, 394, 0, 374, 570, 571,
	316, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 364, 268, 0,
	0, 427, 0, 205, 0, 483, 253, 375, 372, 577,
	283, 274, 270, 251, 317, 383, 425, 512, 419, 0,
	368, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 249, 325, 204, 410, 494, 287, 0, 0, 0,
	0, 1742, 711, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 246, 0, 0, 0, 349,
	358, 357, 338, 339, 341, 343, 348, 355, 361, 0,
	0, 0, 0, 0, 266, 321, 273, 265, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 0, 399, 258, 0, 450,
	0, 0, 0, 618, 0, 0, 0, 0, 0, 0,
	0, 363, 0, 330, 199, 226, 0, 0, 409, 458,
	470, 0, 0, 0, 254, 0, 468, 423, 596, 234,
	285, 455, 429, 466, 437, 288, 0, 0, 467, 370,
	579, 447, 593, 619, 620, 264, 403, 605, 516, 613,
	637, 227, 261, 417, 501, 599, 490, 395, 575, 576,
	329, 489, 296, 203, 367, 625, 225, 476, 369, 243,
	232, 581, 602, 290, 453, 632, 214, 511, 591, 240,
	480, 0, 0, 640, 248, 500, 216, 588, 499, 391,
	326, 327, 215, 0, 454, 269, 294, 0, 0, 259,
	412, 583, 584, 257, 641, 229, 612, 221, 0, 611,
	405, 578, 589, 392, 381, 220, 587, 390, 380, 334,
	353, 354, 281, 307, 444, 373, 445, 306, 308, 401,
	400, 402, 208, 600, 0, 209, 0, 495, 601, 642,
	449, 213, 235, 236, 238, 0, 280, 284, 292, 295,
	303, 304, 313, 365, 416, 443, 439, 448, 0, 573,
	594, 606, 617, 623, 624, 626, 627, 628, 629, 630,
	633, 631, 404, 311, 491, 333, 371, 0, 0, 422,
	469, 241, 598, 492, 201, 0, 0, 0, 0, 255,
	256, 0, 569, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	638, 502, 508, 503, 504, 505, 506, 507, 0, 509,
	0, 0, 0, 0, 0, 0, 585, 586, 661, 382,
	482, 595, 335, 347, 350, 340, 359, 0, 360, 336,
	337, 342, 344, 345, 346, 351, 352, 356, 362, 250,
	211, 388, 396, 572, 312, 217, 218, 219, 518, 519,
	520, 521, 609, 610, 614, 206, 459, 460, 461, 462,
	293, 604, 309, 465, 464, 331, 332, 377, 446, 534,
	536, 547, 551, 553, 555, 561, 564, 535, 537, 548,
	552, 554, 556, 562, 565, 524, 526, 528, 530, 543,
	542, 539, 567, 568, 545, 550, 529, 541, 546, 559,
	566, 563, 523, 527, 531, 540, 558, 557, 538, 549,
	560, 544, 532, 525, 533, 0, 198, 222, 366, 0,
	451, 289, 639, 608, 603, 207, 224, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 202, 210, 223, 233, 237, 244, 262, 277,
	279, 286, 299, 310, 318, 319, 322, 328, 378, 384,
	385, 386, 387, 406, 407, 408, 411, 414, 415, 418,
	420, 421, 424, 428, 432, 433, 434, 436, 438, 440,
	452, 457, 471, 472, 473, 474, 475, 478, 479, 484,
	485, 486, 487, 488, 496, 497, 510, 580, 582, 597,
	615, 621, 477, 301, 302, 441, 442, 314, 315, 635,
	636, 300, 592, 622, 590, 634, 616, 435, 376, 0,
	0, 379, 282, 305, 320, 0, 607, 498, 228, 463,
	291, 252, 0, 0, 212, 247, 231, 260, 275, 278,
	324, 389, 397, 426, 431, 297, 272, 245, 456, 242,
	481, 513, 514, 515, 517, 393, 267, 430, 394, 0,
	374, 570, 571, 316, 522, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	364, 268, 0, 0, 427, 0, 205, 0, 483, 253,
	375, 372, 577, 283, 274, 270, 251, 317, 383, 425,
	512, 419, 0, 368, 0, 0, 493, 398, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 249, 325, 204, 410, 494, 287,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 246, 0,
	0, 0, 349, 358, 357, 338, 339, 341, 343, 348,
	355, 361, 0, 0, 0, 0, 0, 266, 321, 273,
	265, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 0, 399,
	258, 0, 450, 0, 0, 0, 618, 0, 0, 0,
	0, 0, 0, 0, 363, 0, 330, 199, 226, 0,
	0, 409, 458, 470, 0, 0, 0, 254, 0, 468,
	423, 596, 234, 285, 455, 429, 466, 437, 288, 0,
	0, 467, 370, 579, 447, 593, 619, 620, 264, 403,
	605, 516, 613, 637, 227, 261, 417, 501, 599, 490,
	395, 575, 576, 329, 489, 296, 203, 367, 625, 225,
	476, 369, 243, 232, 581, 602, 290, 453, 632, 214,
	511, 591, 240, 480, 0, 0, 640, 248, 500, 216,
	588, 499, 391, 326, 327, 215, 0, 454, 269, 294,
	0, 0, 259, 412, 583, 584, 257, 641, 229, 612,
	221, 0, 611, 405, 578, 589, 392, 381, 220, 587,
	390, 380, 334, 353, 354, 281, 307, 444, 373, 445,
	306, 308, 401, 400, 402, 208, 600, 0, 209, 0,
	495, 601, 642, 449, 213, 235, 236, 238, 0, 280,
	284, 292, 295, 303, 304, 313, 365, 416, 443, 439,
	448, 0, 573, 594, 606, 617, 623, 624, 626, 627,
	628, 629, 630, 633, 631, 404, 311, 491, 333, 371,
	0, 0, 422, 469, 241, 598, 492, 201, 0, 0,
	0, 0, 255, 256, 0, 569, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 638, 502, 508, 503, 504, 505, 506,
	507, 0, 509, 0, 0, 0, 0, 0, 0, 585,
	586, 661, 382, 482, 595, 335, 347, 350, 340, 359,
	0, 360, 336, 337, 342, 344, 345, 346, 351, 352,
	356, 362, 250, 211, 388, 396, 572, 312, 217, 218,
	219, 518, 519, 520, 521, 609, 610, 614, 206, 459,
	460, 461, 462, 293, 604, 309, 465, 464, 331, 332,
	377, 446, 534, 536, 547, 551, 553, 555, 561, 564,
	535, 537, 548, 552, 554, 556, 562, 565, 524, 526,
	528, 530, 543, 542, 539, 567, 568, 545, 550, 529,
	541, 546, 559, 566, 563, 523, 527, 531, 540, 558,
	557, 538, 549, 560, 544, 532, 525, 533, 0, 198,
	222, 366, 2035, 451, 289, 639, 608, 603, 207, 224,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 202, 210, 223, 233, 237,
	244, 262, 277, 279, 286, 299, 310, 318, 319, 322,
	328, 378, 384, 385, 386, 387, 406, 407, 408, 411,
	414, 415, 418, 420, 421, 424, 428, 432, 433, 434,
	436, 438, 440, 452, 457, 471, 472, 473, 474, 475,
	478, 479, 484, 485, 486, 487, 488, 496, 497, 510,
	580, 582, 597, 615, 621, 477, 301, 302, 441, 442,
	314, 315, 635, 636, 300, 592, 622, 590, 634, 616,
	435, 376, 0, 0, 379, 282, 305, 320, 0, 607,
	498, 228, 463, 291, 252, 0, 0, 212, 247, 231,
	260, 275, 278, 324, 389, 397, 426, 431, 297, 272,
	245, 456, 242, 481, 513, 514, 515, 517, 393, 267,
	430, 394, 0, 374, 570, 571, 316, 522, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 364, 268, 0, 0, 427, 0, 205,
	0, 483, 253, 375, 372, 577, 283, 274, 270, 251,
	317, 383, 425, 512, 419, 0, 368, 0, 0, 493,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 249, 325, 204,
	410, 494, 287, 0, 0, 0, 0, 2026, 711, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 246, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 0, 0, 0,
	266, 321, 273, 265, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 0, 399, 258, 0, 450, 0, 0, 0, 618,
	0, 0, 0, 0, 0, 0, 0, 363, 0, 330,
	199, 226, 0, 0, 409, 458, 470, 0, 0, 0,
	254, 0, 468, 423, 596, 234, 285, 455, 429, 466,
	437, 288, 0, 0, 467, 370, 579, 447, 593, 619,
	620, 264, 403, 605, 516, 613, 637, 227, 261, 417,
	501, 599, 490, 395, 575, 576, 329, 489, 296, 203,
	367, 625, 225, 476, 369, 243, 232, 581, 602, 290,
	453, 632, 214, 511, 591, 240, 480, 0, 0, 640,
	248, 500, 216, 588, 499, 391, 326, 327, 215, 0,
	454, 269, 294, 0, 0, 259, 412, 583, 584, 257,
	641, 229, 612, 221, 0, 611, 405, 578, 589, 392,
	381, 220, 587, 390, 380, 334, 353, 354, 281, 307,
	444, 373, 445, 306, 308, 401, 400, 402, 208, 600,
	0, 209, 0, 495, 601, 642, 449, 213, 235, 236,
	238, 0, 280, 284, 292, 295, 303, 304, 313, 365,
	416, 443, 439, 448, 0, 573, 594, 606, 617, 623,
	624, 626, 627, 628, 629, 630, 633, 631, 404, 311,
	491, 333, 371, 0, 0, 422, 469, 241, 598, 492,
	201, 0, 0, 0, 0, 255, 256, 0, 569, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 638, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 0, 0, 0, 0,
	0, 0, 585, 586, 661, 382, 482, 595, 335, 347,
	350, 340, 359, 0, 360, 336, 337, 342, 344, 345,
	346, 351, 352, 356, 362, 250, 211, 388, 396, 572,
	312, 217, 218, 219, 518, 519, 520, 521, 609, 610,
	614, 206, 459, 460, 461, 462, 293, 604, 309, 465,
	464, 331, 332, 377, 446, 534, 536, 547, 551, 553,
	555, 561, 564, 535, 537, 548, 552, 554, 556, 562,
	565, 524, 526, 528, 530, 543, 542, 539, 567, 568,
	545, 550, 529, 541, 546, 559, 566, 563, 523, 527,
	531, 540, 558, 557, 538, 549, 560, 544, 532, 525,
	533, 0, 198, 222, 366, 0, 451, 289, 639, 608,
	603, 207, 224, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 202, 210,
	223, 233, 237, 244, 262, 277, 279, 286, 299, 310,
	318, 319, 322, 328, 378, 384, 385, 386, 387, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 615, 621, 477, 301,
	302, 441, 442, 314, 315, 635, 636, 300, 592, 622,
	590, 634, 616, 435, 376, 0, 0, 379, 282, 305,
	320, 0, 607, 498, 228, 463, 291, 252, 0, 0,
	212, 247, 231, 260, 275, 278, 324, 389, 397, 426,
	431, 297, 272, 245, 456, 242, 481, 513, 514, 515,
	517, 393, 267, 430, 394, 0, 374, 570, 571, 316,
	522, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 0, 1889, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 364, 268, 0, 0,
	427, 0, 205, 0, 483, 253, 375, 372, 577, 283,
	274, 270, 251, 317, 383, 425, 512, 419, 0, 368,
	0, 0, 493, 398, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	249, 325, 204, 410, 494, 287, 0, 0, 0, 0,
	0, 711, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 246, 0, 0, 0, 349, 358,
	357, 338, 339, 341, 343, 348, 355, 361, 0, 0,
	0, 0, 0, 266, 321, 273, 265, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 0, 399, 258, 0, 450, 0,
	0, 0, 618, 0, 0, 0, 0, 0, 0, 0,
	363, 0, 330, 199, 226, 0, 0, 409, 458, 470,
	0, 0, 0, 254, 0, 468, 423, 596, 234, 285,
	455, 429, 466, 437, 288, 0, 0, 467, 370, 579,
	447, 593, 619, 620, 264, 403, 605, 516, 613, 637,
	227, 261, 417, 501, 599, 490, 395, 575, 576, 329,
	489, 296, 203, 367, 625, 225, 476, 369, 243, 232,
	581, 602, 290, 453, 632, 214, 511, 591, 240, 480,
	0, 0, 640, 248, 500, 216, 588, 499, 391, 326,
	327, 215, 0, 454, 269, 294, 0, 0, 259, 412,
	583, 584, 257, 641, 229, 612, 221, 0, 611, 405,
	578, 589, 392, 381, 220, 587, 390, 380, 334, 353,
	354, 281, 307, 444, 373, 445, 306, 308, 401, 400,
	402, 208, 600, 0, 209, 0, 495, 601, 642, 449,
	213, 235, 236, 238, 0, 280, 284, 292, 295, 303,
	304, 313, 365, 416, 443, 439, 448, 0, 573, 594,
	606, 617, 623, 624, 626, 627, 628, 629, 630, 633,
	631, 404, 311, 491, 333, 371, 0, 0, 422, 469,
	241, 598, 492, 201, 0, 0, 0, 0, 255, 256,
	0, 569, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 638,
	502, 508, 503, 504, 505, 506, 507, 0, 509, 0,
	0, 0, 0, 0, 0, 585, 586, 661, 382, 482,
	595, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 250, 211,
	388, 396, 572, 312, 217, 218, 219, 518, 519, 520,
	521, 609, 610, 614, 206, 459, 460, 461, 462, 293,
	604, 309, 465, 464, 331, 332, 377, 446, 534, 536,
	547, 551, 553, 555, 561, 564, 535, 537, 548, 552,
	554, 556, 562, 565, 524, 526, 528, 530, 543, 542,
	539, 567, 568, 545, 550, 529, 541, 546, 559, 566,
	563, 523, 527, 531, 540, 558, 557, 538, 549, 560,
	544, 532, 525, 533, 0, 198, 222, 366, 0, 451,
	289, 639, 608, 603, 207, 224, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 202, 210, 223, 233, 237, 244, 262, 277, 279,
	286, 299, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 406, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 433, 434, 436, 438, 440, 452,
	457, 471, 472, 473, 474, 475, 478, 479, 484, 485,
	486, 487, 488, 496, 497, 510, 580, 582, 597, 615,
	621, 477, 301, 302, 441, 442, 314, 315, 635, 636,
	300, 592, 622, 590, 634, 616, 435, 376, 0, 0,
	379, 282, 305, 320, 0, 607, 498, 228, 463, 291,
	252, 0, 0, 212, 247, 231, 260, 275, 278, 324,
	389, 397, 426, 431, 297, 272, 245, 456, 242, 481,
	513, 514, 515, 517, 393, 267, 430, 394, 0, 374,
	570, 571, 316, 522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 1887, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 364,
	268, 0, 0, 427, 0, 205, 0, 483, 253, 375,
	372, 577, 283, 274, 270, 251, 317, 383, 425, 512,
	419, 0, 368, 0, 0, 493, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 249, 325, 204, 410, 494, 287, 0,
	0, 0, 0, 0, 711, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 246, 0, 0,
	0, 349, 358, 357, 338, 339, 341, 343, 348, 355,
	361, 0, 0, 0, 0, 0, 266, 321, 273, 265,
	574, 0, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 0, 399, 258,
	0, 450, 0, 0, 0, 618, 0, 0, 0, 0,
	0, 0, 0, 363, 0, 330, 199, 226, 0, 0,
	409, 458, 470, 0, 0, 0, 254, 0, 468, 423,
	596, 234, 285, 455, 429, 466, 437, 288, 0, 0,
	467, 370, 579, 447, 593, 619, 620, 264, 403, 605,
	516, 613, 637, 227, 261, 417, 501, 599, 490, 395,
	575, 576, 329, 489, 296, 203, 367, 625, 225, 476,
	369, 243, 232, 581, 602, 290, 453, 632, 214, 511,
	591, 240, 480, 0, 0, 640, 248, 500, 216, 588,
	499, 391, 326, 327, 215, 0, 454, 269, 294, 0,
	0, 259, 412, 583, 584, 257, 641, 229, 612, 221,
	0, 611, 405, 578, 589, 392, 381, 220, 587, 390,
	380, 334, 353, 354, 281, 307, 444, 373, 445, 306,
	308, 401, 400, 402, 208, 600, 0, 209, 0, 495,
	601, 642, 449, 213, 235, 236, 238, 0, 280, 284,
	292, 295, 303, 304, 313, 365, 416, 443, 439, 448,
	0, 573, 594, 606, 617, 623, 624, 626, 627, 628,
	629, 630, 633, 631, 404, 311, 491, 333, 371, 0,
	0, 422, 469, 241, 598, 492, 201, 0, 0, 0,
	0, 255, 256, 0, 569, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 638, 502, 508, 503, 504, 505, 506, 507,
	0, 509, 0, 0, 0, 0, 0, 0, 585, 586,
	661, 382, 482, 595, 335, 347, 350, 340, 359, 0,
	360, 336, 337, 342, 344, 345, 346, 351, 352, 356,
	362, 250, 211, 388, 396, 572, 312, 217, 218, 219,
	518, 519, 520, 521, 609, 610, 614, 206, 459, 460,
	461, 462, 293, 604, 309, 465, 464, 331, 332, 377,
	446, 534, 536, 547, 551, 553, 555, 561, 564, 535,
	537, 548, 552, 554, 556, 562, 565, 524, 526, 528,
	530, 543, 542, 539, 567, 568, 545, 550, 529, 541,
	546, 559, 566, 563, 523, 527, 531, 540, 558, 557,
	538, 549, 560, 544, 532, 525, 533, 0, 198, 222,
	366, 0, 451, 289, 639, 608, 603, 207, 224, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 210, 223, 233, 237, 244,
	262, 277, 279, 286, 299, 310, 318, 319, 322, 328,
	378, 384, 385, 386, 387, 406, 407, 408, 411, 414,
	415, 418, 420, 421, 424, 428, 432, 433, 434, 436,
	438, 440, 452, 457, 471, 472, 473, 474, 475, 478,
	479, 484, 485, 486, 487, 488, 496, 497, 510, 580,
	582, 597, 615, 621, 477, 301, 302, 441, 442, 314,
	315, 635, 636, 300, 592, 622, 590, 634, 616, 435,
	376, 0, 0, 379, 282, 305, 320, 0, 607, 498,
	228, 463, 291, 252, 0, 0, 212, 247, 231, 260,
	275, 278, 324, 389, 397, 426, 431, 297, 272, 245,
	456, 242, 481, 513, 514, 515, 517, 393, 267, 430,
	394, 0, 374, 570, 571, 316, 522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	1885, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 364, 268, 0, 0, 427, 0, 205, 0,
	483, 253, 375, 372, 577, 283, 274, 270, 251, 317,
	383, 425, 512, 419, 0, 368, 0, 0, 493, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 249, 325, 204, 410,
	494, 287, 0, 0, 0, 0, 0, 711, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	246, 0, 0, 0, 349, 358, 357, 338, 339, 341,
	343, 348, 355, 361, 0, 0, 0, 0, 0, 266,
	321, 273, 265, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	0, 399, 258, 0, 450, 0, 0, 0, 618, 0,
	0, 0, 0, 0, 0, 0, 363, 0, 330, 199,
	226, 0, 0, 409, 458, 470, 0, 0, 0, 254,
	0, 468, 423, 596, 234, 285, 455, 429, 466, 437,
	288, 0, 0, 467, 370, 579, 447, 593, 619, 620,
	264, 403, 605, 516, 613, 637, 227, 261, 417, 501,
	599, 490, 395, 575, 576, 329, 489, 296, 203, 367,
	625, 225, 476, 369, 243, 232, 581, 602, 290, 453,
	632, 214, 511, 591, 240, 480, 0, 0, 640, 248,
	500, 216, 588, 499, 391, 326, 327, 215, 0, 454,
	269, 294, 0, 0, 259, 412, 583, 584, 257, 641,
	229, 612, 221, 0, 611, 405, 578, 589, 392, 381,
	220, 587, 390, 380, 334, 353, 354, 281, 307, 444,
	373, 445, 306, 308, 401, 400, 402, 208, 600, 0,
	209, 0, 495, 601, 642, 449, 213, 235, 236, 238,
	0, 280, 284, 292, 295, 303, 304, 313, 365, 416,
	443, 439, 448, 0, 573, 594, 606, 617, 623, 624,
	626, 627, 628, 629, 630, 633, 631, 404, 311, 491,
	333, 371, 0, 0, 422, 469, 241, 598, 492, 201,
	0, 0, 0, 0, 255, 256, 0, 569, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 638, 502, 508, 503, 504,
	505, 506, 507, 0, 509, 0, 0, 0, 0, 0,
	0, 585, 586, 661, 382, 482, 595, 335, 347, 350,
	340, 359, 0, 360, 336, 337, 342, 344, 345, 346,
	351, 352, 356, 362, 250, 211, 388, 396, 572, 312,
	217, 218, 219, 518, 519, 520, 521, 609, 610, 614,
	206, 459, 460, 461, 462, 293, 604, 309, 465, 464,
	331, 332, 377, 446, 534, 536, 547, 551, 553, 555,
	561, 564, 535, 537, 548, 552, 554, 556, 562, 565,
	524, 526, 528, 530, 543, 542, 539, 567, 568, 545,
	550, 529, 541, 546, 559, 566, 563, 523, 527, 531,
	540, 558, 557, 538, 549, 560, 544, 532, 525, 533,
	0, 198, 222, 366, 0, 451, 289, 639, 608, 603,
	207, 224, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 202, 210, 223,
	233, 237, 244, 262, 277, 279, 286, 299, 310, 318,
	319, 322, 328, 378, 384, 385, 386, 387, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	433, 434, 436, 438, 440, 452, 457, 471, 472, 473,
	474, 475, 478, 479, 484, 485, 486, 487, 488, 496,
	497, 510, 580, 582, 597, 615, 621, 477, 301, 302,
	441, 442, 314, 315, 635, 636, 300, 592, 622, 590,
	634, 616, 435, 376, 0, 0, 379, 282, 305, 320,
	0, 607, 498, 228, 463, 291, 252, 0, 0, 212,
	247, 231, 260, 275, 278, 324, 389, 397, 426, 431,
	297, 272, 245, 456, 242, 481, 513, 514, 515, 517,
	393, 267, 430, 394, 0, 374, 570, 571, 316, 522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 1883, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 364, 268, 0, 0, 427,
	0, 205, 0, 483, 253, 375, 372, 577, 283, 274,
	270, 251, 317, 383, 425, 512, 419, 0, 368, 0,
	0, 493, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 249,
	325, 204, 410, 494, 287, 0, 0, 0, 0, 0,
	711, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 246, 0, 0, 0, 349, 358, 357,
	338, 339, 341, 343, 348, 355, 361, 0, 0, 0,
	0, 0, 266, 321, 273, 265, 574, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 0, 399, 258, 0, 450, 0, 0,
	0, 618, 0, 0, 0, 0, 0, 0, 0, 363,
	0, 330, 199, 226, 0, 0, 409, 458, 470, 0,
	0, 0, 254, 0, 468, 423, 596, 234, 285, 455,
	429, 466, 437, 288, 0, 0, 467, 370, 579, 447,
	593, 619, 620, 264, 403, 605, 516, 613, 637, 227,
	261, 417, 501, 599, 490, 395, 575, 576, 329, 489,
	296, 203, 367, 625, 225, 476, 369, 243, 232, 581,
	602, 290, 453, 632, 214, 511, 591, 240, 480, 0,
	0, 640, 248, 500, 216, 588, 499, 391, 326, 327,
	215, 0, 454, 269, 294, 0, 0, 259, 412, 583,
	584, 257, 641, 229, 612, 221, 0, 611, 405, 578,
	589, 392, 381, 220, 587, 390, 380, 334, 353, 354,
	281, 307, 444, 373, 445, 306, 308, 401, 400, 402,
	208, 600, 0, 209, 0, 495, 601, 642, 449, 213,
	235, 236, 238, 0, 280, 284, 292, 295, 303, 304,
	313, 365, 416, 443, 439, 448, 0, 573, 594, 606,
	617, 623, 624, 626, 627, 628, 629, 630, 633, 631,
	404, 311, 491, 333, 371, 0, 0, 422, 469, 241,
	598, 492, 201, 0, 0, 0, 0, 255, 256, 0,
	569, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 638, 502,
	508, 503, 504, 505, 506, 507, 0, 509, 0, 0,
	0, 0, 0, 0, 585, 586, 661, 382, 482, 595,
	335, 347, 350, 340, 359, 0, 360, 336, 337, 342,
	344, 345, 346, 351, 352, 356, 362, 250, 211, 388,
	396, 572, 312, 217, 218, 219, 518, 519, 520, 521,
	609, 610, 614, 206, 459, 460, 461, 462, 293, 604,
	309, 465, 464, 331, 332, 377, 446, 534, 536, 547,
	551, 553, 555, 561, 564, 535, 537, 548, 552, 554,
	556, 562, 565, 524, 526, 528, 530, 543, 542, 539,
	567, 568, 545, 550, 529, 541, 546, 559, 566, 563,
	523, 527, 531, 540, 558, 557, 538, 549, 560, 544,
	532, 525, 533, 0, 198, 222, 366, 0, 451, 289,
	639, 608, 603, 207, 224, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	202, 210, 223, 233, 237, 244, 262, 277, 279, 286,
	299, 310, 318, 319, 322, 328, 378, 384, 385, 386,
	387, 406, 407, 408, 411, 414, 415, 418, 420, 421,
	424, 428, 432, 433, 434, 436, 438, 440, 452, 457,
	471, 472, 473, 474, 475, 478, 479, 484, 485, 486,
	487, 488, 496, 497, 510, 580, 582, 597, 615, 621,
	477, 301, 302, 441, 442, 314, 315, 635, 636, 300,
	592, 622, 590, 634, 616, 435, 376, 0, 0, 379,
	282, 305, 320, 0, 607, 498, 228, 463, 291, 252,
	0, 0, 212, 247, 231, 260, 275, 278, 324, 389,
	397, 426, 431, 297, 272, 245, 456, 242, 481, 513,
	514, 515, 517, 393, 267, 430, 394, 0, 374, 570,
	571, 316, 522, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 0, 1881, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 364, 268,
	0, 0, 427, 0, 205, 0, 483, 253, 375, 372,
	577, 283, 274, 270, 251, 317, 383, 425, 512, 419,
	0, 368, 0, 0, 493, 398, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 249, 325, 204, 410, 494, 287, 0, 0,
	0, 0, 0, 711, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 246, 0, 0, 0,
	349, 358, 357, 338, 339, 341, 343, 348, 355, 361,
	0, 0, 0, 0, 0, 266, 321, 273, 265, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 0, 399, 258, 0,
	450, 0, 0, 0, 618, 0, 0, 0, 0, 0,
	0, 0, 363, 0, 330, 199, 226, 0, 0, 409,
	458, 470, 0, 0, 0, 254, 0, 468, 423, 596,
	234, 285, 455, 429, 466, 437, 288, 0, 0, 467,
	370, 579, 447, 593, 619, 620, 264, 403, 605, 516,
	613, 637, 227, 261, 417, 501, 599, 490, 395, 575,
	576, 329, 489, 296, 203, 367, 625, 225, 476, 369,
	243, 232, 581, 602, 290, 453, 632, 214, 511, 591,
	240, 480, 0, 0, 640, 248, 500, 216, 588, 499,
	391, 326, 327, 215, 0, 454, 269, 294, 0, 0,
	259, 412, 583, 584, 257, 641, 229, 612, 221, 0,
	611, 405, 578, 589, 392, 381, 220, 587, 390, 380,
	334, 353, 354, 281, 307, 444, 373, 445, 306, 308,
	401, 400, 402, 208, 600, 0, 209, 0, 495, 601,
	642, 449, 213, 235, 236, 238, 0, 280, 284, 292,
	295, 303, 304, 313, 365, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 311, 491, 333, 371, 0, 0,
	422, 469, 241, 598, 492, 201, 0, 0, 0, 0,
	255, 256, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 0, 0, 0, 0, 0, 0, 585, 586, 661,
	382, 482, 595, 335, 347, 350, 340, 359, 0, 360,
	336, 337, 342, 344, 345, 346, 351, 352, 356, 362,
	250, 211, 388, 396, 572, 312, 217, 218, 219, 518,
	519, 520, 521, 609, 610, 614, 206, 459, 460, 461,
	462, 293, 604, 309, 465, 464, 331, 332, 377, 446,
	534, 536, 547, 551, 553, 555, 561, 564, 535, 537,
	548, 552, 554, 556, 562, 565, 524, 526, 528, 530,
	543, 542, 539, 567, 568, 545, 550, 529, 541, 546,
	559, 566, 563, 523, 527, 531, 540, 558, 557, 538,
	549, 560, 544, 532, 525, 533, 0, 198, 222, 366,
	0, 451, 289, 639, 608, 603, 207, 224, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 202, 210, 223, 233, 237, 244, 262,
	277, 279, 286, 299, 310, 318, 319, 322, 328, 378,
	384, 385, 386, 387, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 301, 302, 441, 442, 314, 315,
	635, 636, 300, 592, 622, 590, 634, 616, 435, 376,
	0, 0, 379, 282, 305, 320, 0, 607, 498, 228,
	463, 291, 252, 0, 0, 212, 247, 231, 260, 275,
	278, 324, 389, 397, 426, 431, 297, 272, 245, 456,
	242, 481, 513, 514, 515, 517, 393, 267, 430, 394,
	0, 374, 570, 571, 316, 522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 1877,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 364, 268, 0, 0, 427, 0, 205, 0, 483,
	253, 375, 372, 577, 283, 274, 270, 251, 317, 383,
	425, 512, 419, 0, 368, 0, 0, 493, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 249, 325, 204, 410, 494,
	287, 0, 0, 0, 0, 0, 711, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 246,
	0, 0, 0, 349, 358, 357, 338, 339, 341, 343,
	348, 355, 361, 0, 0, 0, 0, 0, 266, 321,
	273, 265, 574, 0, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 0,
	399, 258, 0, 450, 0, 0, 0, 618, 0, 0,
	0, 0, 0, 0, 0, 363, 0, 330, 199, 226,
	0, 0, 409, 458, 470, 0, 0, 0, 254, 0,
	468, 423, 596, 234, 285, 455, 429, 466, 437, 288,
	0, 0, 467, 370, 579, 447, 593, 619, 620, 264,
	403, 605, 516, 613, 637, 227, 261, 417, 501, 599,
	490, 395, 575, 576, 329, 489, 296, 203, 367, 625,
	225, 476, 369, 243, 232, 581, 602, 290, 453, 632,
	214, 511, 591, 240, 480, 0, 0, 640, 248, 500,
	216, 588, 499, 391, 326, 327, 215, 0, 454, 269,
	294, 0, 0, 259, 412, 583, 584, 257, 641, 229,
	612, 221, 0, 611, 405, 578, 589, 392, 381, 220,
	587, 390, 380, 334, 353, 354, 281, 307, 444, 373,
	445, 306, 308, 401, 400, 402, 208, 600, 0, 209,
	0, 495, 601, 642, 449, 213, 235, 236, 238, 0,
	280, 284, 292, 295, 303, 304, 313, 365, 416, 443,
	439, 448, 0, 573, 594, 606, 617, 623, 624, 626,
	627, 628, 629, 630, 633, 631, 404, 311, 491, 333,
	371, 0, 0, 422, 469, 241, 598, 492, 201, 0,
	0, 0, 0, 255, 256, 0, 569, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 638, 502, 508, 503, 504, 505,
	506, 507, 0, 509, 0, 0, 0, 0, 0, 0,
	585, 586, 661, 382, 482, 595, 335, 347, 350, 340,
	359, 0, 360, 336, 337, 342, 344, 345, 346, 351,
	352, 356, 362, 250, 211, 388, 396, 572, 312, 217,
	218, 219, 518, 519, 520, 521, 609, 610, 614, 206,
	459, 460, 461, 462, 293, 604, 309, 465, 464, 331,
	332, 377, 446, 534, 536, 547, 551, 553, 555, 561,
	564, 535, 537, 548, 552, 554, 556, 562, 565, 524,
	526, 528, 530, 543, 542, 539, 567, 568, 545, 550,
	529, 541, 546, 559, 566, 563, 523, 527, 531, 540,
	558, 557, 538, 549, 560, 544, 532, 525, 533, 0,
	198, 222, 366, 0, 451, 289, 639, 608, 603, 207,
	224, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 202, 210, 223, 233,
	237, 244, 262, 277, 279, 286, 299, 310, 318, 319,
	322, 328, 378, 384, 385, 386, 387, 406, 407, 408,
	411, 414, 415, 418, 420, 421, 424, 428, 432, 433,
	434, 436, 438, 440, 452, 457, 471, 472, 473, 474,
	475, 478, 479, 484, 485, 486, 487, 488, 496, 497,
	510, 580, 582, 597, 615, 621, 477, 301, 302, 441,
	442, 314, 315, 635, 636, 300, 592, 622, 590, 634,
	616, 435, 376, 0, 0, 379, 282, 305, 320, 0,
	607, 498, 228, 463, 291, 252, 0, 0, 212, 247,
	231, 260, 275, 278, 324, 389, 397, 426, 431, 297,
	272, 245, 456, 242, 481, 513, 514, 515, 517, 393,
	267, 430, 394, 0, 374, 570, 571, 316, 522, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 0, 1875, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 364, 268, 0, 0, 427, 0,
	205, 0, 483, 253, 375, 372, 577, 283, 274, 270,
	251, 317, 383, 425, 512, 419, 0, 368, 0, 0,
	493, 398, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 249, 325,
	204, 410, 494, 287, 0, 0, 0, 0, 0, 711,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 246, 0, 0, 0, 349, 358, 357, 338,
	339, 341, 343, 348, 355, 361, 0, 0, 0, 0,
	0, 266, 321, 273, 265, 574, 0, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 0, 399, 258, 0, 450, 0, 0, 0,
	618, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 199, 226, 0, 0, 409, 458, 470, 0, 0,
	0, 254, 0, 468, 423, 596, 234, 285, 455, 429,
	466, 437, 288, 0, 0, 467, 370, 579, 447, 593,
	619, 620, 264, 403, 605, 516, 613, 637, 227, 261,
	417, 501, 599, 490, 395, 575, 576, 329, 489, 296,
	203, 367, 625, 225, 476, 369, 243, 232, 581, 602,
	290, 453, 632, 214, 511, 591, 240, 480, 0, 0,
	640, 248, 500, 216, 588, 499, 391, 326, 327, 215,
	0, 454, 269, 294, 0, 0, 259, 412, 583, 584,
	257, 641, 229, 612, 221, 0, 611, 405, 578, 589,
	392, 381, 220, 587, 390, 380, 334, 353, 354, 281,
	307, 444, 373, 445, 306, 308, 401, 400, 402, 208,
	600, 0, 209, 0, 495, 601, 642, 449, 213, 235,
	236, 238, 0, 280, 284, 292, 295, 303, 304, 313,
	365, 416, 443, 439, 448, 0, 573, 594, 606, 617,
	623, 624, 626, 627, 628, 629, 630, 633, 631, 404,
	311, 491, 333, 371, 0, 0, 422, 469, 241, 598,
	492, 201, 0, 0, 0, 0, 255, 256, 0, 569,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 638, 502, 508,
	503, 504, 505, 506, 507, 0, 509, 0, 0, 0,
	0, 0, 0, 585, 586, 661, 382, 482, 595, 335,
	347, 350, 340, 359, 0, 360, 336, 337, 342, 344,
	345, 346, 351, 352, 356, 362, 250, 211, 388, 396,
	572, 312, 217, 218, 219, 518, 519, 520, 521, 609,
	610, 614, 206, 459, 460, 461, 462, 293, 604, 309,
	465, 464, 331, 332, 377, 446, 534, 536, 547, 551,
	553, 555, 561, 564, 535, 537, 548, 552, 554, 556,
	562, 565, 524, 526, 528, 530, 543, 542, 539, 567,
	568, 545, 550, 529, 541, 546, 559, 566, 563, 523,
	527, 531, 540, 558, 557, 538, 549, 560, 544, 532,
	525, 533, 0, 198, 222, 366, 0, 451, 289, 639,
	608, 603, 207, 224, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	210, 223, 233, 237, 244, 262, 277, 279, 286, 299,
	310, 318, 319, 322, 328, 378, 384, 385, 386, 387,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 433, 434, 436, 438, 440, 452, 457, 471,
	472, 473, 474, 475, 478, 479, 484, 485, 486, 487,
	488, 496, 497, 510, 580, 582, 597, 615, 621, 477,
	301, 302, 441, 442, 314, 315, 635, 636, 300, 592,
	622, 590, 634, 616, 435, 376, 0, 0, 379, 282,
	305, 320, 0, 607, 498, 228, 463, 291, 252, 0,
	0, 212, 247, 231, 260, 275, 278, 324, 389, 397,
	426, 431, 297, 272, 245, 456, 242, 481, 513, 514,
	515, 517, 393, 267, 430, 394, 0, 374, 570, 571,
	316, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 1873, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 364, 268, 0,
	0, 427, 0, 205, 0, 483, 253, 375, 372, 577,
	283, 274, 270, 251, 317, 383, 425, 512, 419, 0,
	368, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 249, 325, 204, 410, 494, 287, 0, 0, 0,
	0, 0, 711, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 246, 0, 0, 0, 349,
	358, 357, 338, 339, 341, 343, 348, 355, 361, 0,
	0, 0, 0, 0, 266, 321, 273, 265, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 0, 399, 258, 0, 450,
	0, 0, 0, 618, 0, 0, 0, 0, 0, 0,
	0, 363, 0, 330, 199, 226, 0, 0, 409, 458,
	470, 0, 0, 0, 254, 0, 468, 423, 596, 234,
	285, 455, 429, 466, 437, 288, 0, 0, 467, 370,
	579, 447, 593, 619, 620, 264, 403, 605, 516, 613,
	637, 227, 261, 417, 501, 599, 490, 395, 575, 576,
	329, 489, 296, 203, 367, 625, 225, 476, 369, 243,
	232, 581, 602, 290, 453, 632, 214, 511, 591, 240,
	480, 0, 0, 640, 248, 500, 216, 588, 499, 391,
	326, 327, 215, 0, 454, 269, 294, 0, 0, 259,
	412, 583, 584, 257, 641, 229, 612, 221, 0, 611,
	405, 578, 589, 392, 381, 220, 587, 390, 380, 334,
	353, 354, 281, 307, 444, 373, 445, 306, 308, 401,
	400, 402, 208, 600, 0, 209, 0, 495, 601, 642,
	449, 213, 235, 236, 238, 0, 280, 284, 292, 295,
	303, 304, 313, 365, 416, 443, 439, 448, 0, 573,
	594, 606, 617, 623, 624, 626, 627, 628, 629, 630,
	633, 631, 404, 311, 491, 333, 371, 0, 0, 422,
	469, 241, 598, 492, 201, 0, 0, 0, 0, 255,
	256, 0, 569, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	638, 502, 508, 503, 504, 505, 506, 507, 0, 509,
	0, 0, 0, 0, 0, 0, 585, 586, 661, 382,
	482, 595, 335, 347, 350, 340, 359, 0, 360, 336,
	337, 342, 344, 345, 346, 351, 352, 356, 362, 250,
	211, 388, 396, 572, 312, 217, 218, 219, 518, 519,
	520, 521, 609, 610, 614, 206, 459, 460, 461, 462,
	293, 604, 309, 465, 464, 331, 332, 377, 446, 534,
	536, 547, 551, 553, 555, 561, 564, 535, 537, 548,
	552, 554, 556, 562, 565, 524, 526, 528, 530, 543,
	542, 539, 567, 568, 545, 550, 529, 541, 546, 559,
	566, 563, 523, 527, 531, 540, 558, 557, 538, 549,
	560, 544, 532, 525, 533, 0, 198, 222, 366, 0,
	451, 289, 639, 608, 603, 207, 224, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 202, 210, 223, 233, 237, 244, 262, 277,
	279, 286, 299, 310, 318, 319, 322, 328, 378, 384,
	385, 386, 387, 406, 407, 408, 411, 414, 415, 418,
	420, 421, 424, 428, 432, 433, 434, 436, 438, 440,
	452, 457, 471, 472, 473, 474, 475, 478, 479, 484,
	485, 486, 487, 488, 496, 497, 510, 580, 582, 597,
	615, 621, 477, 301, 302, 441, 442, 314, 315, 635,
	636, 300, 592, 622, 590, 634, 616, 435, 376, 0,
	0, 379, 282, 305, 320, 0, 607, 498, 228, 463,
	291, 252, 0, 0, 212, 247, 231, 260, 275, 278,
	324, 389, 397, 426, 431, 297, 272, 245, 456, 242,
	481, 513, 514, 515, 517, 393, 267, 430, 394, 0,
	374, 570, 571, 316, 522, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	364, 268, 0, 0, 427, 0, 205, 0, 483, 253,
	375, 372, 577, 283, 274, 270, 251, 317, 383, 425,
	512, 419, 0, 368, 0, 0, 493, 398, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 249, 325, 204, 410, 494, 287,
	0, 1848, 0, 0, 0, 711, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 246, 0,
	0, 0, 349, 358, 357, 338, 339, 341, 343, 348,
	355, 361, 0, 0, 0, 0, 0, 266, 321, 273,
	265, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 0, 399,
	258, 0, 450, 0, 0, 0, 618, 0, 0, 0,
	0, 0, 0, 0, 363, 0, 330, 199, 226, 0,
	0, 409, 458, 470, 0, 0, 0, 254, 0, 468,
	423, 596, 234, 285, 455, 429, 466, 437, 288, 0,
	0, 467, 370, 579, 447, 593, 619, 620, 264, 403,
	605, 516, 613, 637, 227, 261, 417, 501, 599, 490,
	395, 575, 576, 329, 489, 296, 203, 367, 625, 225,
	476, 369, 243, 232, 581, 602, 290, 453, 632, 214,
	511, 591, 240, 480, 0, 0, 640, 248, 500, 216,
	588, 499, 391, 326, 327, 215, 0, 454, 269, 294,
	0, 0, 259, 412, 583, 584, 257, 641, 229, 612,
	221, 0, 611, 405, 578, 589, 392, 381, 220, 587,
	390, 380, 334, 353, 354, 281, 307, 444, 373, 445,
	306, 308, 401, 400, 402, 208, 600, 0, 209, 0,
	495, 601, 642, 449, 213, 235, 236, 238, 0, 280,
	284, 292, 295, 303, 304, 313, 365, 416, 443, 439,
	448, 0, 573, 594, 606, 617, 623, 624, 626, 627,
	628, 629, 630, 633, 631, 404, 311, 491, 333, 371,
	0, 0, 422, 469, 241, 598, 492, 201, 0, 0,
	0, 0, 255, 256, 0, 569, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 638, 502, 508, 503, 504, 505, 506,
	507, 0, 509, 0, 0, 0, 0, 0, 0, 585,
	586, 661, 382, 482, 595, 335, 347, 350, 340, 359,
	0, 360, 336, 337, 342, 344, 345, 346, 351, 352,
	356, 362, 250, 211, 388, 396, 572, 312, 217, 218,
	219, 518, 519, 520, 521, 609, 610, 614, 206, 459,
	460, 461, 462, 293, 604, 309, 465, 464, 331, 332,
	377, 446, 534, 536, 547, 551, 553, 555, 561, 564,
	535, 537, 548, 552, 554, 556, 562, 565, 524, 526,
	528, 530, 543, 542, 539, 567, 568, 545, 550, 529,
	541, 546, 559, 566, 563, 523, 527, 531, 540, 558,
	557, 538, 549, 560, 544, 532, 525, 533, 0, 198,
	222, 366, 0, 451, 289, 639, 608, 603, 207, 224,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 202, 210, 223, 233, 237,
	244, 262, 277, 279, 286, 299, 310, 318, 319, 322,
	328, 378, 384, 385, 386, 387, 406, 407, 408, 411,
	414, 415, 418, 420, 421, 424, 428, 432, 433, 434,
	436, 438, 440, 452, 457, 471, 472, 473, 474, 475,
	478, 479, 484, 485, 486, 487, 488, 496, 497, 510,
	580, 582, 597, 615, 621, 477, 301, 302, 441, 442,
	314, 315, 635, 636, 300, 592, 622, 590, 634, 616,
	435, 376, 0, 0, 379, 282, 305, 320, 0, 607,
	498, 228, 463, 291, 252, 0, 0, 212, 247, 231,
	260, 275, 278, 324, 389, 397, 426, 431, 297, 272,
	245, 456, 242, 481, 513, 514, 515, 517, 393, 267,
	430, 394, 0, 374, 570, 571, 316, 522, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 0, 0, 0, 1746, 271, 0,
	0, 0, 0, 364, 268, 0, 0, 427, 0, 205,
	0, 483, 253, 375, 372, 577, 283, 274, 270, 251,
	317, 383, 425, 512, 419, 0, 368, 0, 0, 493,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 249, 325, 204,
	410, 494, 287, 0, 0, 0, 0, 0, 196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 246, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 0, 0, 0,
	266, 321, 273, 265, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 0, 399, 258, 0, 450, 0, 0, 0, 618,
	0, 0, 0, 0, 0, 0, 0, 363, 0, 330,
	199, 226, 0, 0, 409, 458, 470, 0, 0, 0,
	254, 0, 468, 423, 596, 234, 285, 455, 429, 466,
	437, 288, 0, 0, 467, 370, 579, 447, 593, 619,
	620, 264, 403, 605, 516, 613, 637, 227, 261, 417,
	501, 599, 490, 395, 575, 576, 329, 489, 296, 203,
	367, 625, 225, 476, 369, 243, 232, 581, 602, 290,
	453, 632, 214, 511, 591, 240, 480, 0, 0, 640,
	248, 500, 216, 588, 499, 391, 326, 327, 215, 0,
	454, 269, 294, 0, 0, 259, 412, 583, 584, 257,
	641, 229, 612, 221, 0, 611, 405, 578, 589, 392,
	381, 220, 587, 390, 380, 334, 353, 354, 281, 307,
	444, 373, 445, 306, 308, 401, 400, 402, 208, 600,
	0, 209, 0, 495, 601, 642, 449, 213, 235, 236,
	238, 0, 280, 284, 292, 295, 303, 304, 313, 365,
	416, 443, 439, 448, 0, 573, 594, 606, 617, 623,
	624, 626, 627, 628, 629, 630, 633, 631, 404, 311,
	491, 333, 371, 0, 0, 422, 469, 241, 598, 492,
	201, 0, 0, 0, 0, 255, 256, 0, 569, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 638, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 0, 0, 0, 0,
	0, 0, 585, 586, 661, 382, 482, 595, 335, 347,
	350, 340, 359, 0, 360, 336, 337, 342, 344, 345,
	346, 351, 352, 356, 362, 250, 211, 388, 396, 572,
	312, 217, 218, 219, 518, 519, 520, 521, 609, 610,
	614, 206, 459, 460, 461, 462, 293, 604, 309, 465,
	464, 331, 332, 377, 446, 534, 536, 547, 551, 553,
	555, 561, 564, 535, 537, 548, 552, 554, 556, 562,
	565, 524, 526, 528, 530, 543, 542, 539, 567, 568,
	545, 550, 529, 541, 546, 559, 566, 563, 523, 527,
	531, 540, 558, 557, 538, 549, 560, 544, 532, 525,
	533, 0, 198, 222, 366, 0, 451, 289, 639, 608,
	603, 207, 224, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 202, 210,
	223, 233, 237, 244, 262, 277, 279, 286, 299, 310,
	318, 319, 322, 328, 378, 384, 385, 386, 387, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 615, 621, 477, 301,
	302, 441, 442, 314, 315, 635, 636, 300, 592, 622,
	590, 634, 616, 435, 376, 0, 0, 379, 282, 305,
	320, 0, 607, 498, 228, 463, 291, 252, 0, 0,
	212, 247, 231, 260, 275, 278, 324, 389, 397, 426,
	431, 297, 272, 245, 456, 242, 481, 513, 514, 515,
	517, 393, 267, 430, 394, 0, 374, 570, 571, 316,
	522, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 364, 268, 0, 0,
	427, 0, 205, 0, 483, 253, 375, 372, 577, 283,
	274, 270, 251, 317, 383, 425, 512, 419, 0, 368,
	0, 0, 493, 398, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	249, 325, 204, 410, 494, 287, 0, 96, 0, 0,
	0, 943, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 246, 0, 0, 0, 349, 358,
	357, 338, 339, 341, 343, 348, 355, 361, 0, 0,
	0, 0, 0, 266, 321, 273, 265, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 0, 399, 258, 0, 450, 0,
	0, 0, 618, 0, 0, 0, 0, 0, 0, 0,
	363, 0, 330, 199, 226, 0, 0, 409, 458, 470,
	0, 0, 0, 254, 0, 468, 423, 596, 234, 285,
	455, 429, 466, 437, 288, 0, 0, 467, 370, 579,
	447, 593, 619, 620, 264, 403, 605, 516, 613, 637,
	227, 261, 417, 501, 599, 490, 395, 575, 576, 329,
	489, 296, 203, 367, 625, 225, 476, 369, 243, 232,
	581, 602, 290, 453, 632, 214, 511, 591, 240, 480,
	0, 0, 640, 248, 500, 216, 588, 499, 391, 326,
	327, 215, 0, 454, 269, 294, 0, 0, 259, 412,
	583, 584, 257, 641, 229, 612, 221, 0, 611, 405,
	578, 589, 392, 381, 220, 587, 390, 380, 334, 353,
	354, 281, 307, 444, 373, 445, 306, 308, 401, 400,
	402, 208, 600, 0, 209, 0, 495, 601, 642, 449,
	213, 235, 236, 238, 0, 280, 284, 292, 295, 303,
	304, 313, 365, 416, 443, 439, 448, 0, 573, 594,
	606, 617, 623, 624, 626, 627, 628, 629, 630, 633,
	631, 404, 311, 491, 333, 371, 0, 0, 422, 469,
	241, 598, 492, 201, 0, 0, 0, 0, 255, 256,
	0, 569, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 638,
	502, 508, 503, 504, 505, 506, 507, 0, 509, 0,
	0, 0, 0, 0, 0, 585, 586, 661, 382, 482,
	595, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 250, 211,
	388, 396, 572, 312, 217, 218, 219, 518, 519, 520,
	521, 609, 610, 614, 206, 459, 460, 461, 462, 293,
	604, 309, 465, 464, 331, 332, 377, 446, 534, 536,
	547, 551, 553, 555, 561, 564, 535, 537, 548, 552,
	554, 556, 562, 565, 524, 526, 528, 530, 543, 542,
	539, 567, 568, 545, 550, 529, 541, 546, 559, 566,
	563, 523, 527, 531, 540, 558, 557, 538, 549, 560,
	544, 532, 525, 533, 0, 198, 222, 366, 0, 451,
	289, 639, 608, 603, 207, 224, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 202, 210, 223, 233, 237, 244, 262, 277, 279,
	286, 299, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 406, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 433, 434, 436, 438, 440, 452,
	457, 471, 472, 473, 474, 475, 478, 479, 484, 485,
	486, 487, 488, 496, 497, 510, 580, 582, 597, 615,
	621, 477, 301, 302, 441, 442, 314, 315, 635, 636,
	300, 592, 622, 590, 634, 616, 435, 376, 0, 0,
	379, 282, 305, 320, 0, 607, 498, 228, 463, 291,
	252, 0, 0, 212, 247, 231, 260, 275, 278, 324,
	389, 397, 426, 431, 297, 272, 245, 456, 242, 481,
	513, 514, 515, 517, 393, 267, 430, 394, 0, 374,
	570, 571, 316, 522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 364,
	268, 0, 0, 427, 0, 205, 0, 483, 253, 375,
	372, 577, 283, 274, 270, 251, 317, 383, 425, 512,
	419, 0, 368, 0, 0, 493, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 249, 325, 204, 410, 494, 287, 0,
	0, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 246, 0, 0,
	0, 349, 358, 357, 338, 339, 341, 343, 348, 355,
	361, 0, 0, 0, 0, 0, 266, 321, 273, 265,
	574, 0, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1434, 0, 298, 0, 399, 258,
	0, 450, 0, 0, 0, 618, 0, 0, 0, 0,
	0, 0, 0, 363, 0, 330, 199, 226, 0, 0,
	409, 458, 470, 0, 0, 0, 254, 0, 468, 423,
	596, 234, 285, 455, 429, 466, 437, 288, 0, 0,
	467, 370, 579, 447, 593, 619, 620, 264, 403, 605,
	516, 613, 637, 227, 261, 417, 501, 599, 490, 395,
	575, 576, 329, 489, 296, 203, 367, 625, 225, 476,
	369, 243, 232, 581, 602, 290, 453, 632, 214, 511,
	591, 240, 480, 0, 0, 640, 248, 500, 216, 588,
	499, 391, 326, 327, 215, 0, 454, 269, 294, 0,
	0, 259, 412, 583, 584, 257, 641, 229, 612, 221,
	0, 611, 405, 578, 589, 392, 381, 220, 587, 390,
	380, 334, 353, 354, 281, 307, 444, 373, 445, 306,
	308, 401, 400, 402, 208, 600, 0, 209, 0, 495,
	601, 642, 449, 213, 235, 236, 238, 0, 280, 284,
	292, 295, 303, 304, 313, 365, 416, 443, 439, 448,
	0, 573, 594, 606, 617, 623, 624, 626, 627, 628,
	629, 630, 633, 631, 404, 311, 491, 333, 371, 0,
	0, 422, 469, 241, 598, 492, 201, 0, 0, 0,
	0, 255, 256, 0, 569, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 638, 502, 508, 503, 504, 505, 506, 507,
	0, 509, 0, 0, 0, 0, 0, 0, 585, 586,
	661, 382, 482, 595, 335, 347, 350, 340, 359, 0,
	360, 336, 337, 342, 344, 345, 346, 351, 352, 356,
	362, 250, 211, 388, 396, 572, 312, 217, 218, 219,
	518, 519, 520, 521, 609, 610, 614, 206, 459, 460,
	461, 462, 293, 604, 309, 465, 464, 331, 332, 377,
	446, 534, 536, 547, 551, 553, 555, 561, 564, 535,
	537, 548, 552, 554, 556, 562, 565, 524, 526, 528,
	530, 543, 542, 539, 567, 568, 545, 550, 529, 541,
	546, 559, 566, 563, 523, 527, 531, 540, 558, 557,
	538, 549, 560, 544, 532, 525, 533, 0, 198, 222,
	366, 0, 451, 289, 639, 608, 603, 207, 224, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 210, 223, 233, 237, 244,
	262, 277, 279, 286, 299, 310, 318, 319, 322, 328,
	378, 384, 385, 386, 387, 406, 407, 408, 411, 414,
	415, 418, 420, 421, 424, 428, 432, 433, 434, 436,
	438, 440, 452, 457, 471, 472, 473, 474, 475, 478,
	479, 484, 485, 486, 487, 488, 496, 497, 510, 580,
	582, 597, 615, 621, 477, 301, 302, 441, 442, 314,
	315, 635, 636, 1433, 592, 622, 590, 634, 616, 435,
	376, 0, 0, 379, 282, 305, 320, 0, 607, 498,
	228, 463, 291, 252, 0, 0, 212, 247, 231, 260,
	275, 278, 324, 389, 397, 426, 431, 297, 272, 245,
	456, 242, 481, 513, 514, 515, 517, 393, 267, 430,
	394, 0, 374, 570, 571, 316, 522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 364, 268, 0, 0, 427, 0, 205, 0,
	483, 253, 375, 372, 577, 283, 274, 270, 251, 317,
	383, 425, 512, 419, 0, 368, 0, 0, 493, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 249, 325, 204, 410,
	494, 287, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	246, 0, 0, 0, 349, 358, 357, 338, 339, 341,
	343, 348, 355, 361, 0, 0, 0, 0, 0, 266,
	321, 273, 265, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	0, 399, 258, 0, 450, 0, 0, 0, 618, 0,
	0, 0, 0, 0, 0, 0, 363, 0, 330, 199,
	226, 0, 0, 409, 458, 470, 0, 0, 0, 254,
	0, 468, 423, 596, 234, 285, 455, 429, 466, 437,
	288, 0, 0, 467, 370, 579, 447, 593, 619, 620,
	264, 403, 605, 516, 613, 637, 227, 261, 417, 501,
	599, 490, 395, 575, 576, 329, 489, 296, 203, 367,
	625, 225, 476, 369, 243, 232, 581, 602, 290, 453,
	632, 214, 511, 591, 240, 480, 0, 0, 640, 248,
	500, 216, 588, 499, 391, 326, 327, 215, 0, 454,
	269, 294, 0, 0, 259, 412, 583, 584, 257, 641,
	229, 612, 221, 0, 611, 405, 578, 589, 392, 381,
	220, 587, 390, 380, 334, 353, 354, 281, 307, 444,
	373, 445, 306, 308, 401, 400, 402, 208, 600, 0,
	209, 0, 495, 601, 642, 449, 213, 235, 236, 238,
	0, 280, 284, 292, 295, 303, 304, 313, 365, 416,
	443, 439, 448, 0, 573, 594, 606, 617, 623, 624,
	626, 627, 628, 629, 630, 633, 631, 404, 311, 491,
	333, 371, 0, 0, 422, 469, 241, 598, 492, 201,
	0, 0, 0, 0, 255, 256, 0, 569, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 638, 502, 508, 503, 504,
	505, 506, 507, 0, 509, 0, 0, 0, 0, 0,
	0, 585, 586, 661, 382, 482, 595, 335, 347, 350,
	340, 359, 0, 360, 336, 337, 342, 344, 345, 346,
	351, 352, 356, 362, 250, 211, 388, 396, 572, 312,
	217, 218, 219, 518, 519, 520, 521, 609, 610, 614,
	206, 459, 460, 461, 462, 293, 604, 309, 465, 464,
	331, 332, 377, 446, 534, 536, 547, 551, 553, 555,
	561, 564, 535, 537, 548, 552, 554, 556, 562, 565,
	524, 526, 528, 530, 543, 542, 539, 567, 568, 545,
	550, 529, 541, 546, 559, 566, 563, 523, 527, 531,
	540, 558, 557, 538, 549, 560, 544, 532, 525, 533,
	0, 198, 222, 366, 0, 451, 289, 639, 608, 603,
	207, 224, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1031, 0, 0, 0, 200, 202, 210, 223,
	233, 237, 244, 262, 277, 279, 286, 299, 310, 318,
	319, 322, 328, 378, 384, 385, 386, 387, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	433, 434, 436, 438, 440, 452, 457, 471, 472, 473,
	474, 475, 478, 479, 484, 485, 486, 487, 488, 496,
	497, 510, 580, 582, 597, 615, 621, 477, 301, 302,
	441, 442, 314, 315, 635, 636, 300, 592, 622, 590,
	634, 616, 435, 376, 0, 0, 379, 282, 305, 320,
	0, 607, 498, 228, 463, 291, 252, 0, 0, 212,
	247, 231, 260, 275, 278, 324, 389, 397, 426, 431,
	297, 272, 245, 456, 242, 481, 513, 514, 515, 517,
	393, 267, 430, 394, 0, 374, 570, 571, 316, 522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 364, 268, 0, 0, 427,
	0, 205, 0, 483, 253, 375, 372, 577, 283, 274,
	270, 251, 317, 383, 425, 512, 419, 0, 368, 0,
	0, 493, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 249,
	325, 204, 410, 494, 287, 0, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 246, 0, 0, 0, 349, 358, 357,
	338, 339, 341, 343, 348, 355, 361, 0, 0, 0,
	0, 0, 266, 321, 273, 265, 574, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 0, 399, 258, 0, 450, 0, 664,
	0, 618, 0, 0, 0, 0, 0, 0, 0, 363,
	0, 330, 199, 226, 0, 0, 409, 458, 470, 0,
	0, 0, 254, 0, 468, 423, 596, 234, 285, 455,
	429, 466, 437, 288, 0, 0, 467, 370, 579, 447,
	593, 619, 620, 264, 403, 605, 516, 613, 637, 227,
	261, 417, 501, 599, 490, 395, 575, 576, 329, 489,
	296, 203, 367, 625, 225, 476, 369, 243, 232, 581,
	602, 290, 453, 632, 214, 511, 591, 240, 480, 0,
	0, 640, 248, 500, 216, 588, 499, 391, 326, 327,
	215, 0, 454, 269, 294, 0, 0, 259, 412, 583,
	584, 257, 641, 229, 612, 221, 0, 611, 405, 578,
	589, 392, 381, 220, 587, 390, 380, 334, 353, 354,
	281, 307, 444, 373, 445, 306, 308, 401, 400, 402,
	208, 600, 0, 209, 0, 495, 601, 642, 449, 213,
	235, 236, 238, 0, 280, 284, 292, 295, 303, 304,
	313, 365, 416, 443, 439, 448, 0, 573, 594, 606,
	617, 623, 624, 626, 627, 628, 629, 630, 633, 631,
	404, 311, 491, 333, 371, 0, 0, 422, 469, 241,
	598, 492, 201, 0, 0, 0, 0, 255, 256, 0,
	569, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 638, 502,
	508, 503, 504, 505, 506, 507, 0, 509, 0, 0,
	0, 0, 0, 0, 585, 586, 661, 382, 482, 595,
	335, 347, 350, 340, 359, 0, 360, 336, 337, 342,
	344, 345, 346, 351, 352, 356, 362, 250, 211, 388,
	396, 572, 312, 217, 218, 219, 518, 519, 520, 521,
	609, 610, 614, 206, 459, 460, 461, 462, 293, 604,
	309, 465, 464, 331, 332, 377, 446, 534, 536, 547,
	551, 553, 555, 561, 564, 535, 537, 548, 552, 554,
	556, 562, 565, 524, 526, 528, 530, 543, 542, 539,
	567, 568, 545, 550, 529, 541, 546, 559, 566, 563,
	523, 527, 531, 540, 558, 557, 538, 549, 560, 544,
	532, 525, 533, 0, 198, 222, 366, 0, 451, 289,
	639, 608, 603, 207, 224, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	202, 210, 223, 233, 237, 244, 262, 277, 279, 286,
	299, 310, 318, 319, 322, 328, 378, 384, 385, 386,
	387, 406, 407, 408, 411, 414, 415, 418, 420, 421,
	424, 428, 432, 433, 434, 436, 438, 440, 452, 457,
	471, 472, 473, 474, 475, 478, 479, 484, 485, 486,
	487, 488, 496, 497, 510, 580, 582, 597, 615, 621,
	477, 301, 302, 441, 442, 314, 315, 635, 636, 300,
	592, 622, 590, 634, 616, 435, 376, 0, 0, 379,
	282, 305, 320, 0, 607, 498, 228, 463, 291, 252,
	0, 0, 212, 247, 231, 260, 275, 278, 324, 389,
	397, 426, 431, 297, 272, 245, 456, 242, 481, 513,
	514, 515, 517, 393, 267, 430, 394, 0, 374, 570,
	571, 316, 522, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 364, 268,
	0, 0, 427, 0, 205, 0, 483, 253, 375, 372,
	577, 283, 274, 270, 251, 317, 383, 425, 512, 419,
	0, 368, 0, 0, 493, 398, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 249, 325, 204, 410, 494, 287, 0, 0,
	0, 0, 0, 711, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 246, 0, 0, 0,
	349, 358, 357, 338, 339, 341, 343, 348, 355, 361,
	0, 0, 0, 0, 0, 266, 321, 273, 265, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 0, 399, 258, 0,
	450, 0, 0, 0, 618, 0, 0, 0, 0, 0,
	0, 0, 363, 0, 330, 199, 226, 0, 0, 409,
	458, 470, 0, 0, 0, 254, 0, 468, 423, 596,
	234, 285, 455, 429, 466, 437, 288, 0, 0, 467,
	370, 579, 447, 593, 619, 620, 264, 403, 605, 516,
	613, 637, 227, 261, 417, 501, 599, 490, 395, 575,
	576, 329, 489, 296, 203, 367, 625, 225, 476, 369,
	243, 232, 581, 602, 290, 453, 632, 214, 511, 591,
	240, 480, 0, 0, 640, 248, 500, 216, 588, 499,
	391, 326, 327, 215, 0, 454, 269, 294, 0, 0,
	259, 412, 583, 584, 257, 641, 229, 612, 221, 0,
	611, 405, 578, 589, 392, 381, 220, 587, 390, 380,
	334, 353, 354, 281, 307, 444, 373, 445, 306, 308,
	401, 400, 402, 208, 600, 0, 209, 0, 495, 601,
	642, 449, 213, 235, 236, 238, 0, 280, 284, 292,
	295, 303, 304, 313, 365, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 311, 491, 333, 371, 0, 0,
	422, 469, 241, 598, 492, 201, 0, 0, 0, 0,
	255, 256, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 0, 0, 0, 0, 0, 0, 585, 586, 661,
	382, 482, 595, 335, 347, 350, 340, 359, 0, 360,
	336, 337, 342, 344, 345, 346, 351, 352, 356, 362,
	250, 211, 388, 396, 572, 312, 217, 218, 219, 518,
	519, 520, 521, 609, 610, 614, 206, 459, 460, 461,
	462, 293, 604, 309, 465, 464, 331, 332, 377, 446,
	534, 536, 547, 551, 553, 555, 561, 564, 535, 537,
	548, 552, 554, 556, 562, 565, 524, 526, 528, 530,
	543, 542, 539, 567, 568, 545, 550, 529, 541, 546,
	559, 566, 563, 523, 527, 531, 540, 558, 557, 538,
	549, 560, 544, 532, 525, 533, 0, 198, 222, 366,
	0, 451, 289, 639, 608, 603, 207, 224, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 202, 210, 223, 233, 237, 244, 262,
	277, 279, 286, 299, 310, 318, 319, 322, 328, 378,
	384, 385, 386, 387, 4059, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 301, 302, 441, 442, 314, 315,
	635, 636, 300, 592, 622, 590, 634, 616, 435, 376,
	0, 0, 379, 282, 305, 320, 0, 607, 498, 228,
	463, 291, 252, 0, 0, 212, 247, 231, 260, 275,
	278, 324, 389, 397, 426, 431, 297, 272, 245, 456,
	242, 481, 513, 514, 515, 517, 393, 267, 430, 394,
	0, 374, 570, 571, 316, 522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 364, 268, 0, 0, 427, 0, 205, 0, 483,
	253, 375, 372, 577, 283, 274, 270, 251, 317, 383,
	425, 512, 419, 0, 368, 0, 0, 493, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 249, 325, 204, 410, 494,
	287, 0, 0, 0, 0, 0, 711, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 246,
	0, 0, 0, 349, 358, 357, 338, 339, 341, 343,
	348, 355, 361, 0, 0, 0, 0, 0, 266, 321,
	273, 265, 574, 0, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 0,
	399, 258, 0, 450, 0, 0, 0, 618, 0, 0,
	0, 0, 0, 0, 0, 363, 0, 330, 199, 226,
	0, 0, 409, 458, 470, 0, 0, 0, 254, 0,
	468, 423, 596, 234, 285, 455, 429, 466, 437, 288,
	0, 0, 467, 370, 579, 447, 593, 619, 620, 264,
	403, 605, 516, 613, 637, 227, 261, 417, 501, 599,
	490, 395, 575, 576, 329, 489, 296, 203, 367, 625,
	225, 476, 369, 243, 232, 581, 602, 290, 453, 632,
	214, 511, 591, 240, 480, 0, 0, 640, 248, 500,
	216, 588, 499, 391, 326, 327, 215, 0, 454, 269,
	294, 0, 0, 259, 412, 583, 584, 257, 641, 229,
	612, 221, 0, 611, 405, 578, 589, 392, 381, 220,
	587, 390, 380, 334, 353, 354, 281, 307, 444, 373,
	445, 306, 308, 401, 400, 402, 208, 600, 0, 209,
	0, 495, 601, 642, 449, 213, 235, 236, 238, 0,
	280, 284, 292, 295, 303, 304, 313, 365, 416, 443,
	439, 448, 0, 573, 594, 606, 617, 623, 624, 626,
	627, 628, 629, 630, 633, 631, 404, 311, 491, 333,
	371, 0, 0, 422, 469, 241, 598, 492, 201, 0,
	0, 0, 0, 255, 256, 0, 569, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 638, 502, 508, 503, 504, 505,
	506, 507, 0, 509, 0, 0, 0, 0, 0, 0,
	585, 586, 661, 382, 482, 595, 335, 347, 350, 340,
	359, 0, 360, 336, 337, 342, 344, 345, 346, 351,
	352, 356, 362, 250, 211, 388, 396, 572, 312, 217,
	218, 219, 518, 519, 520, 521, 609, 610, 614, 206,
	459, 460, 461, 462, 293, 604, 309, 465, 464, 331,
	332, 377, 446, 534, 536, 547, 551, 553, 555, 561,
	564, 535, 537, 548, 552, 554, 556, 562, 565, 524,
	526, 528, 530, 543, 542, 539, 567, 568, 545, 550,
	529, 541, 546, 559, 566, 563, 523, 527, 531, 540,
	558, 557, 538, 549, 560, 544, 532, 525, 533, 0,
	198, 222, 366, 0, 451, 289, 639, 608, 603, 207,
	224, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 202, 210, 223, 233,
	237, 244, 262, 277, 279, 286, 299, 310, 318, 319,
	322, 328, 378, 384, 385, 386, 387, 406, 407, 408,
	411, 414, 415, 418, 420, 421, 424, 428, 432, 433,
	434, 436, 438, 440, 452, 457, 471, 472, 473, 474,
	475, 478, 479, 484, 485, 486, 487, 488, 496, 497,
	510, 580, 582, 597, 615, 621, 477, 301, 302, 441,
	442, 314, 315, 635, 636, 300, 592, 622, 590, 634,
	616, 435, 376, 0, 0, 379, 282, 305, 320, 0,
	607, 498, 228, 463, 291, 252, 0, 0, 212, 247,
	231, 260, 275, 278, 324, 389, 397, 426, 431, 297,
	272, 245, 456, 242, 481, 513, 514, 515, 517, 393,
	267, 430, 394, 0, 374, 570, 571, 316, 522, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 364, 268, 0, 0, 427, 0,
	205, 0, 483, 253, 375, 372, 577, 283, 274, 270,
	251, 317, 383, 425, 512, 419, 0, 368, 0, 0,
	493, 398, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 249, 325,
	204, 410, 494, 287, 0, 0, 0, 0, 0, 943,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 246, 0, 0, 0, 349, 358, 357, 338,
	339, 341, 343, 348, 355, 361, 0, 0, 0, 0,
	0, 266, 321, 273, 265, 574, 0, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 0, 399, 258, 0, 450, 0, 0, 0,
	618, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 199, 226, 0, 0, 409, 458, 470, 0, 0,
	0, 254, 0, 468, 423, 596, 234, 285, 455, 429,
	466, 437, 288, 0, 0, 467, 370, 579, 447, 593,
	619, 620, 264, 403, 605, 516, 613, 637, 227, 261,
	417, 501, 599, 490, 395, 575, 576, 329, 489, 296,
	203, 367, 625, 225, 476, 369, 243, 232, 581, 602,
	290, 453, 632, 214, 511, 591, 240, 480, 0, 0,
	640, 248, 500, 216, 588, 499, 391, 326, 327, 215,
	0, 454, 269, 294, 0, 0, 259, 412, 583, 584,
	257, 641, 229, 612, 221, 0, 611, 405, 578, 589,
	392, 381, 220, 587, 390, 380, 334, 353, 354, 281,
	307, 444, 373, 445, 306, 308, 401, 400, 402, 208,
	600, 0, 209, 0, 495, 601, 642, 449, 213, 235,
	236, 238, 0, 280, 284, 292, 295, 303, 304, 313,
	365, 416, 443, 439, 448, 0, 573, 594, 606, 617,
	623, 624, 626, 627, 628, 629, 630, 633, 631, 404,
	311, 491, 333, 371, 0, 0, 422, 469, 241, 598,
	492, 201, 0, 0, 0, 0, 255, 256, 0, 569,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 638, 502, 508,
	503, 504, 505, 506, 507, 0, 509, 0, 0, 0,
	0, 0, 0, 585, 586, 661, 382, 482, 595, 335,
	347, 350, 340, 359, 0, 360, 336, 337, 342, 344,
	345, 346, 351, 352, 356, 362, 250, 211, 388, 396,
	572, 312, 217, 218, 219, 518, 519, 520, 521, 609,
	610, 614, 206, 459, 460, 461, 462, 293, 604, 309,
	465, 464, 331, 332, 377, 446, 534, 536, 547, 551,
	553, 555, 561, 564, 535, 537, 548, 552, 554, 556,
	562, 565, 524, 526, 528, 530, 543, 542, 539, 567,
	568, 545, 550, 529, 541, 546, 559, 566, 563, 523,
	527, 531, 540, 558, 557, 538, 549, 560, 544, 532,
	525, 533, 0, 198, 222, 366, 0, 451, 289, 639,
	608, 603, 207, 224, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	210, 223, 233, 237, 244, 262, 277, 279, 286, 299,
	310, 318, 319, 322, 328, 378, 384, 385, 386, 387,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 433, 434, 436, 438, 440, 452, 457, 471,
	472, 473, 474, 475, 478, 479, 484, 485, 486, 487,
	488, 496, 497, 510, 580, 582, 597, 615, 621, 477,
	301, 302, 441, 442, 314, 315, 635, 636, 300, 592,
	622, 590, 634, 616, 435, 376, 0, 0, 379, 282,
	305, 320, 0, 607, 498, 228, 463, 291, 252, 0,
	0, 212, 247, 231, 260, 275, 278, 324, 389, 397,
	426, 431, 297, 272, 245, 456, 242, 481, 513, 514,
	515, 517, 393, 267, 430, 394, 0, 374, 570, 571,
	316, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 364, 268, 0,
	0, 427, 0, 205, 0, 483, 253, 375, 372, 577,
	283, 274, 270, 251, 317, 383, 425, 512, 419, 0,
	368, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 249, 325, 204, 410, 494, 287, 0, 0, 0,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 246, 0, 0, 0, 349,
	358, 357, 338, 339, 341, 343, 348, 355, 361, 0,
	0, 0, 0, 0, 266, 321, 273, 265, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 0, 399, 258, 0, 450,
	0, 0, 0, 618, 0, 0, 0, 0, 0, 0,
	0, 363, 0, 330, 199, 226, 0, 0, 409, 458,
	470, 0, 0, 0, 254, 0, 468, 423, 596, 234,
	285, 455, 429, 466, 437, 288, 0, 0, 467, 370,
	579, 447, 593, 619, 620, 264, 403, 605, 516, 613,
	637, 227, 261, 417, 501, 599, 490, 395, 575, 576,
	329, 489, 296, 203, 367, 625, 225, 476, 369, 243,
	232, 581, 602, 290, 453, 632, 214, 511, 591, 240,
	480, 0, 0, 640, 248, 500, 216, 588, 499, 391,
	326, 327, 215, 0, 454, 269, 294, 0, 0, 259,
	412, 583, 584, 257, 641, 229, 612, 221, 0, 611,
	405, 578, 589, 392, 381, 220, 587, 390, 380, 334,
	353, 354, 281, 307, 444, 373, 445, 306, 308, 401,
	400, 402, 208, 600, 0, 209, 0, 495, 601, 642,
	449, 213, 235, 236, 238, 0, 280, 284, 292, 295,
	303, 304, 313, 365, 416, 443, 439, 448, 0, 573,
	594, 606, 617, 623, 624, 626, 627, 628, 629, 630,
	633, 631, 404, 311, 491, 333, 371, 0, 0, 422,
	469, 241, 598, 492, 201, 0, 0, 0, 0, 255,
	256, 0, 569, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	638, 502, 508, 503, 504, 505, 506, 507, 0, 509,
	0, 0, 0, 0, 0, 0, 585, 586, 661, 382,
	482, 595, 335, 347, 350, 340, 359, 0, 360, 336,
	337, 342, 344, 345, 346, 351, 352, 356, 362, 250,
	211, 388, 396, 572, 312, 217, 218, 219, 518, 519,
	520, 521, 609, 610, 614, 206, 459, 460, 461, 462,
	293, 604, 309, 465, 464, 331, 332, 377, 446, 534,
	536, 547, 551, 553, 555, 561, 564, 535, 537, 548,
	552, 554, 556, 562, 565, 524, 526, 528, 530, 543,
	542, 539, 567, 568, 545, 550, 529, 541, 546, 559,
	566, 563, 523, 527, 531, 540, 558, 557, 538, 549,
	560, 544, 532, 525, 533, 0, 198, 222, 366, 0,
	451, 289, 639, 608, 603, 207, 224, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 202, 210, 223, 233, 237, 244, 262, 277,
	279, 286, 299, 310, 318, 319, 322, 328, 378, 384,
	385, 386, 387, 406, 407, 408, 411, 414, 415, 418,
	420, 421, 424, 428, 432, 433, 434, 436, 438, 440,
	452, 457, 471, 472, 473, 474, 475, 478, 479, 484,
	485, 486, 487, 488, 496, 497, 510, 580, 582, 597,
	615, 621, 477, 301, 302, 441, 442, 314, 315, 635,
	636, 300, 592, 622, 590, 634, 616, 435, 376, 0,
	0, 379, 282, 305, 320, 0, 607, 498, 228, 463,
	291, 252, 0, 0, 212, 247, 231, 260, 275, 278,
	324, 389, 397, 426, 431, 297, 272, 245, 456, 242,
	481, 513, 514, 515, 517, 393, 267, 430, 0, 0,
	374, 570, 571, 316,
}

var yyPact = [...]int{
	-1000, -1000, 454, -1000, -527, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2284, 2379, -1000, -1000, -1000, -1000, 2229, 2529,
	-1000, 902, 1950, -1000, 2278, 330, -1000, 54931, 605, -1000,
	52039, -370, 733, 235, 36133, -1000, 229, -1000, 215, 53485,
	224, -1000, -1000, -1000, -1000, -370, 21671, 98, 79, 54931,
	-1000, -1000, -1000, -1000, -348, 2460, 1952, -1000, 406, -1000,
	-1000, -1000, -1000, -1000, -1000, 51316, -1000, 1016, -1000, -1000,
	2304, 2299, 2513, 775, 2208, -1000, 2381, 1952, -1000, 21671,
	2451, 2343, 20948, 20948, 524, -352, -1000, -1000, 286, -1000,
	-1000, 31072, 54931, 39025, 413, -1000, 2278, -1000, -1000, -1000,
	105, -1000, 404, 1866, -1000, 1862, -1000, 849, 868, 432,
	559, 545, 431, 430, 429, 425, 416, 412, 403, 398,
	442, -1000, 822, 822, -178, -179, 628, 540, 510, 510,
	918, 555, 2250, 2243, -1000, -1000, 822, 822, 822, 395,
	822, 822, 822, 822, 342, 328, 822, 822, 822, 822,
	822, 822, 822, 822, 822, 822, 822, 822, 822, 822,
	822, 822, 822, 456, 2278, 316, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 54931, 269, 54931, -1000, 664, 604, -1000, -1000,
	-374, 929, 929, 107, 929, 929, 929, 929, 230, 730,
	78, -1000, 225, 291, 193, 305, 931, 575, -1000, -1000,
	297, 931, 1737, -1000, 797, 301, 211, -1000, 929, 929,
	-1000, 14416, 183, 14416, 14416, -1000, 2251, -1000, -1000, -1000,
	-1000, -1000, 1224, -1000, -1000, -1000, -1000, 5, 550, -1000,
	-1000, -1000, -1000, 53485, 50593, 294, -1000, -1000, 45, 1639,
	1132, 21671, 1318, 772, -1000, -1000, 1408, 749, -1000, -1000,
	-1000, -1000, -1000, 626, -1000, 23840, 23840, 23840, 23840, -1000,
	-1000, 1870, 49870, 1870, 1870, 23840, 1870, 23840, 1870, 1870,
	1870, 21671, 1870, 1870, 1870, 1870, -1000, 1870, 1870, 1870,
	1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870,
	1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870,
	1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870,
	1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870,
	1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870,
	1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870,
	1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870,
	1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870,
	1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870,
	1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870,
	1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870,
	1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870,
	1870, 1870, 1870, 1870, -1000, -1000, -1000, -1000, 1870, 657,
	1870, 1870, 1870, 1870, 1870, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1870, 1870, 1870, 1870, 1870, 1870, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1870, 1870, 1870,
	1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870,
	1870, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 26732, 1416, 1396, 1394, -1000, 18779, 1870, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 54931, -1000,
	1870, 247, 53485, 53485, 436, 1201, -1000, -1000, 2381, 1952,
	-1000, 2460, 2465, 406, -1000, 3111, 1537, 1627, 1401, 1952,
	1838, 54931, -1000, 1886, -1000, -1000, -1000, -1000, 2098, 1273,
	1717, -1000, -1000, -1000, -1000, 2239, 21671, -1000, -1000, 2504,
	-1000, 28179, 656, 2501, 49147, -1000, -1000, -201, -1000, 524,
	524, 1856, 463, 25, -1000, -1000, -1000, -1000, 843, 35410,
	-1000, -1000, -1000, -1000, -1000, 1746, 54931, -1000, -1000, 4447,
	1212, -1000, 1946, -1000, 1727, -1000, 1922, 21671, 1959, 597,
	1212, 581, 573, 568, -1000, -33, -1000, -1000, -1000, -1000,
	-1000, -1000, 822, 822, 822, -1000, 418, 2447, 330, 4821,
	-1000, -1000, -1000, 48424, 1942, 1212, -1000, 1938, -1000, 927,
	614, 644, 644, 1212, -1000, -1000, 54208, 1212, 926, 922,
	1212, 1212, 53485, 53485, -1000, 47701, -1000, 46978, 46255, 1190,
	53485, 45532, 44809, 44086, 43363, 42640, -1000, 2045, -1000, 1913,
	-1000, -1000, -1000, 54208, 1212, 1212, 54208, 53485, 54208, 54931,
	1212, -1000, -1000, 386, -1000, -1000, 1189, 1186, 1183, 822,
	822, 1181, 1715, 1712, 1709, 822, 822, 1180, 1702, 37579,
	1666, 320, 1177, 1175, 1168, 1211, 1664, 203, 1648, 1191,
	1114, 1165, 53485, 1935, 54931, -1000, 284, 769, 500, 842,
	2278, 2228, 1854, 542, 596, 1212, 514, 514, 53485, -1000,
	15145, 54931, 270, -1000, 1606, 21671, -1000, 949, 931, 931,
	-1000, -1000, -1000, -1000, -1000, -1000, 929, 54931, 949, -1000,
	-1000, -1000, 931, 929, 54931, 929, 929, 929, 929, 931,
	931, 931, 929, 54931, 54931, 54931, 54931, 54931, 54931, 54931,
	54931, 54931, 14416, 797, 929, -378, -1000, 1597, -1000, -1000,
	2080, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 14416, 14416,
	-1000, -1000, -1000, -1000, -1000, 1852, -1000, 213, 52, 220,
	-1000, 41917, 399, 841, -1000, 399, -1000, -1000, -1000, 1849,
	41194, -1000, -385, -386, -394, -399, -1000, -1000, -1000, -403,
	-409, -1000, -1000, -1000, 21671, 21671, 21671, 21671, -209, -1000,
	1035, 23840, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 21671,
	138, 987, 23840, 23840, 23840, 23840, 23840, 23840, 23840, 25286,
	24563, 23840, 23840, 23840, 23840, 23840, 23840, -1000, -1000, 33241,
	7776, 7776, 749, 749, 749, 749, -1000, -146, 1848, 54208,
	-1000, -1000, -1000, 654, 21671, 21671, 749, -1000, 1212, 1901,
	18779, 20948, 20948, 21671, 865, 1132, 54208, 21671, -1000, 1401,
	-1000, -1000, -1000, -1000, 1045, -1000, -1000, 923, 2262, 2262,
	2262, 2262, 21671, 21671, 21671, 21671, 21671, 21671, 21671, 21671,
	21671, 21671, 2262, 21671, 859, 859, 999, 21671, 21671, 21671,
	21671, 21671, 21671, 17332, 21671, 21671, 23840, 21671, 21671, 21671,
	1401, 21671, 21671, 21671, 21671, 21671, 21671, 21671, 21671, 21671,
	21671, 21671, 21671, 21671, 21671, 21671, 21671, 21671, 21671, 21671,
	21671, 21671, 21671, 21671, 21671, 21671, 21671, 21671, 21671, 21671,
	21671, 21671, 21671, 21671, 21671, 21671, 21671, 21671, 21671, 21671,
	21671, 21671, 21671, 21671, 21671, 21671, 21671, 21671, 21671, 21671,
	21671, 21671, 21671, 21671, 21671, 21671, 21671, 21671, 21671, 21671,
	21671, 21671, 21671, 21671, 21671, 21671, 21671, 21671, 21671, 21671,
	21671, 21671, 21671, 21671, 21671, 21671, 21671, 21671, 21671, 21671,
	1401, 21671, 1084, 21671, 21671, 21671, 21671, 21671, 21671, 20948,
	16603, 20948, 20948, 20948, 20948, 20948, -1000, -1000, -1000, -1000,
	-1000, -1000, 21671, 21671, 21671, 21671, 21671, 21671, 21671, 21671,
	1401, 21671, 21671, 21671, 21671, 21671, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1513, 1462, 1414, 21671,
	1847, -1000, -114, 30349, 21671, 1582, 2490, 1977, 53485, -1000,
	-1000, -1000, -1000, 2381, -1000, 2381, 1513, 2488, 2101, 20948,
	-1000, -1000, 2488, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1714, -1000, 54931, 1838, 2338, 53485, 2096, 1573, 407,
	-1000, 21671, 21671, 1837, -1000, 1141, 54931, -1000, -209, -1000,
	40471, -1000, -1000, 13687, 54931, 388, 54931, -1000, 1569, 29626,
	39748, 254, -1000, 25, 1786, -1000, 58, 43, 18055, 748,
	-1000, -1000, -1000, 628, 26009, 1556, 748, 144, -1000, -1000,
	-1000, 1922, -1000, 1922, 1922, 1922, 1922, 407, 407, 407,
	407, -1000, -1000, -1000, -1000, -1000, 1933, 1932, -1000, 1922,
	1922, 1922, 1922, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1931, 1931, 1931, 1930, 1930, 1923, 1923, 483, -1000, 21671,
	401, 39025, 2303, 1163, 1073, 284, 520, 1974, 1212, 1212,
	1212, 520, -1000, 1371, 1320, 1315, -1000, -518, 1818, -1000,
	-1000, 2443, -1000, -1000, 756, 965, 964, 620, 53485, 255,
	359, -1000, 505, -1000, 39025, 1212, 921, 644, 1212, -1000,
	1212, -1000, -1000, -1000, -1000, -1000, 1212, -1000, -1000, 1813,
	-1000, 1774, 986, 948, 979, 942, 1813, -1000, -1000, -151,
	1813, -1000, 1813, -1000, 1813, -1000, 1813, -1000, 1813, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 815, 240,
	-278, 53485, 255, 533, -1000, 528, 33241, -1000, -1000, -1000,
	33241, 33241, -1000, -1000, -1000, -1000, 1564, 1558, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -503, 54931, -1000,
	277, 831, 332, 373, 336, 54931, 519, 2372, 2371, 2362,
	2361, 2351, 295, 326, 54931, 54931, 514, 2035, 54931, 2311,
	54931, -1000, -1000, -1000, -1000, -1000, 1552, 1526, -1000, 1132,
	54931, -1000, -1000, 929, 929, -1000, -1000, 54931, 929, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 929, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 54931, -1000, -1000, -1000, -1000, 5, 209,
	-1000, -1000, 53485, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -25, -1000, 54, 55, 394, -1000, -1000, -1000,
	-1000, -1000, 2378, -1000, 1132, 875, 903, -1000, 1870, -1000,
	-1000, 1047, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	138, 23840, 23840, 23840, 1465, 552, 1511, 1250, 1063, 1023,
	1023, 851, 23840, 851, 23840, 753, 753, 753, 753, 753,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1523, -1000,
	1870, 54208, 1708, 16603, 1325, 2388, 1401, 767, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 4503, 1688,
	-1000, 1688, 1816, 860, -1000, 21671, 1401, 4494, -1000, -1000,
	1401, 1401, 21671, -1000, -1000, 21671, 21671, 21671, 21671, 1073,
	1073, 1073, 1073, 1073, 1073, 1073, 1073, 1073, 1073, 21671,
	1073, 1808, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1805, 2489, 1044, 1073, 1073, 1073, 1073, 1073, 21671, 1850,
	-1000, -1000, -1000, 1409, 4472, 1425, 4453, 1073, 1073, -1000,
	1073, 4431, 4427, 1401, 1639, 3290, 3285, 1073, 1073, 1073,
	1073, 1073, 3270, 3256, 1073, 1073, 3225, 1073, 4421, 1073,
	3221, 3209, 3199, 3184, 3176, 3164, 3159, 3153, 3128, 3094,
	3084, 2997, 2875, 2850, 2833, 2493, 2450, 2436, 1073, 1073,
	1073, 4416, 1073, 4411, 1073, 4406, 1073, 1073, 4390, 2404,
	2393, 1401, 1804, -1000, 4386, 1073, 4380, 4374, 4363, 2367,
	4312, 4017, 3996, 1073, 1073, 1073, 2358, 3959, 3930, 3920,
	3916, 3911, 3896, 3884, 3867, 3863, 1073, 1414, 1414, 1414,
	1414, 1414, 3810, -214, 1073, 1401, -1000, -1000, -1000, -1000,
	-1000, 3806, 2322, 3788, 3776, 3761, 3720, 1401, 1801, 1870,
	651, -1000, -1000, 1688, 1401, 1401, 1688, 1688, 3716, 3576,
	3572, 3555, 3430, 3422, 1073, 1073, -1000, 1073, 3401, 3393,
	2317, 2295, 1401, -1000, 1414, 54931, -1000, -365, -1000, 33,
	765, 1870, -1000, 37579, 1401, -1000, 5992, -1000, 1214, -1000,
	-1000, -1000, -1000, -1000, 34687, 1765, 2488, -1000, -1000, 1870,
	1684, -1000, -1000, 407, 126, 33964, 713, 713, 156, 1132,
	1132, 21671, -1000, -1000, -1000, -1000, -1000, -1000, 649, 2459,
	414, 1870, -1000, 2279, 1815, 2718, -1000, -1000, -1000, 2337,
	27456, -1000, -1000, 1870, 1870, 54931, 1700, 1641, -1000, 647,
	-1000, 1237, 1786, 25, 29, -1000, -1000, -1000, -1000, 1132,
	-1000, 1286, 393, 194, -1000, 512, -1000, -1000, -1000, -1000,
	2237, 129, -1000, -1000, -1000, 306, 407, -1000, -1000, -1000,
	-1000, -1000, -1000, 1494, 1494, -1000, -1000, -1000, -1000, -1000,
	1157, -1000, -1000, -1000, -1000, 1156, -1000, -1000, 1155, -1000,
	-1000, 3019, 2006, 401, -1000, -1000, 822, 1482, -1000, -1000,
	2240, 822, 822, 53485, -1000, -1000, 1540, 2303, 277, 54931,
	872, 2033, -1000, 1974, 1974, 1974, 54931, -1000, -1000, -1000,
	-1000, -1000, -1000, -504, 69, 419, -1000, -1000, -1000, 4505,
	53485, 1682, -1000, 250, -1000, 1534, -1000, 53485, -1000, 1680,
	1928, 1212, 1212, -1000, -1000, -1000, 53485, 1870, -1000, -1000,
	-1000, -1000, 594, 2272, 311, -1000, -1000, -233, -1000, -1000,
	255, 250, 54208, 1212, 748, -1000, -1000, -1000, -1000, -1000,
	-506, 1676, 562, 257, 347, 54931, 54931, 54931, 54931, 54931,
	54931, 618, -1000, -1000, 68, -1000, -1000, 236, -1000, -1000,
	-1000, -1000, 236, -1000, -1000, -1000, -1000, 319, 521, -1000,
	54931, 54931, 701, -1000, -1000, -1000, -1000, -1000, 931, -1000,
	-1000, 931, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2258, 54931, 51, -459, -1000, -455,
	21671, -1000, -1000, -1000, -1000, 1226, 539, 1511, 23840, 23840,
	1901, 1901, 23840, -1000, -1000, -1000, 1026, 1026, 33241, -1000,
	23840, 21671, 20948, -1000, -1000, 21671, 21671, 848, -1000, 21671,
	959, -1000, 21671, -1000, -1000, 1414, 1073, 1073, 1073, 1073,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1839, -1000, 21671, 21671, 21671, 1401, 356, -1000, -1000, -1000,
	-1000, -1000, 2481, -1000, 21671, -1000, 33241, 21671, 21671, 21671,
	-1000, -1000, -1000, 21671, 21671, -1000, -1000, 21671, -1000, 21671,
	-1000, -1000, -1000, -1000, -1000, -1000, 21671, -1000, 21671, -1000,
	-1000, -1000, 21671, -1000, 21671, -1000, -1000, 21671, -1000, 21671,
	-1000, 21671, -1000, 21671, -1000, 21671, -1000, 21671, -1000, 21671,
	-1000, 21671, -1000, 21671, -1000, 21671, -1000, 21671, -1000, 21671,
	-1000, 21671, -1000, 21671, -1000, 21671, -1000, 21671, -1000, 21671,
	-1000, 21671, -1000, -1000, -1000, 21671, -1000, 21671, -1000, 21671,
	-1000, -1000, 21671, -1000, 21671, -1000, 21671, -1000, 21671, 21671,
	-1000, 21671, 21671, 21671, -1000, 21671, 21671, 21671, 21671, -1000,
	-1000, -1000, -1000, 21671, 21671, 21671, 21671, 21671, 21671, 21671,
	21671, 21671, 21671, -1000, -1000, -1000, -1000, -1000, -1000, 21671,
	-1000, 39025, 124, -214, 1084, 124, 1084, 23117, 635, 627,
	22394, -1000, 20948, 15874, -1000, -1000, -1000, -1000, -1000, 21671,
	21671, 21671, 21671, 21671, 21671, -1000, -1000, -1000, 21671, 21671,
	-1000, 21671, -1000, 21671, -1000, -1000, -1000, -1000, -1000, 765,
	-1000, 644, 644, 644, 53485, -1000, -1000, -1000, -1000, 1783,
	-1000, 2357, -1000, 2124, 2109, 2480, 2459, -1000, 29626, 2488,
	-1000, -1000, 53485, -341, -1000, 2217, 2114, 713, 713, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 12958, 2381, 21671, 2029,
	54208, 142, -1000, 28903, 53485, 591, 54208, 29626, 29626, 29626,
	29626, 29626, -1000, 2085, 2072, -1000, 2062, 2061, 2068, 54931,
	-1000, 1513, 1661, -1000, 21671, 31795, 1768, 29626, -1000, -1000,
	29626, 54931, 12229, -1000, -1000, 30, 38, -1000, -1000, -1000,
	-1000, 628, -1000, -1000, 1034, 2335, 2235, -1000, -1000, -1000,
	-1000, -1000, 1653, -1000, 1645, 1782, 1637, 1629, 240, -1000,
	1956, 2257, 822, 822, -1000, 1150, -1000, 1212, 1472, 1467,
	-1000, -1000, -1000, 546, -1000, 2308, 54931, 2025, 2024, 2015,
	-1000, -515, 1123, 1927, 1906, 21671, 1925, 2441, 1756, 53485,
	-1000, -1000, 54208, -1000, 243, -1000, 401, 53485, -1000, -1000,
	-1000, 359, 54931, -1000, 6282, -1000, -1000, -1000, 250, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 54931, 264, -1000, 1924,
	1216, -1000, -1000, 1890, -1000, -1000, -1000, -1000, -1000, 244,
	241, 1463, 234, 1460, 234, -1000, 54931, 634, 2006, 54931,
	-1000, -1000, -1000, 929, 929, -1000, -1000, 2256, -1000, 1212,
	1073, 23840, 23840, -1000, 749, -1000, -1000, 913, -185, 1922,
	1922, -1000, 1922, 1923, -1000, 1922, 204, 1922, 200, 1922,
	-1000, -1000, 1401, 1401, -1000, 1414, -1000, 2289, 1724, -1000,
	1132, 21671, 3356, -1000, -1000, -1000, -1000, -1000, -41, 3343,
	3336, 1073, -1000, 1921, 1914, 21671, 1073, 1401, 2285, 1073,
	1073, 1073, 1073, 1073, 1073, 1073, 1073, 1073, 1073, 1073,
	1073, 2281, 2277, 2248, 2177, 2160, 2030, 2026, 1947, 1943,
	1939, 1881, 1864, 1843, 1820, 1748, 1744, 1073, 1073, 1733,
	1073, 1686, 1669, -1000, 1132, 1414, 3328, 1414, 1073, 1073,
	3318, 376, 1073, 1623, 1623, 1623, 1623, 1623, 1414, 1414,
	1414, 1414, 1073, 53485, -1000, -214, -1000, -1000, -252, -254,
	-1000, 1401, -214, 1775, 23840, 1073, 23840, 23840, 23840, 1073,
	1401, -1000, 1651, 1647, 3313, 1642, 1073, 2487, 1073, 1073,
	1073, 1620, -1000, 2376, 2376, 2376, 1617, 1214, 54931, -1000,
	-1000, -1000, -1000, 2459, 2453, 1757, -1000, -1000, 126, 473,
	-1000, 2197, 2114, -1000, 2438, 2186, 2432, -1000, -1000, -1000,
	-1000, -1000, 1132, -1000, 2293, 1753, -1000, 826, 1752, -1000,
	-1000, 20225, 1411, 2107, 640, 1617, 54931, 1822, 2718, 1984,
	2014, 1976, -1000, -1000, -1000, -1000, 2063, -1000, 2054, -1000,
	-1000, 1886, -1000, 2426, 388, 29626, 1735, 1735, -1000, 639,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 991, 6282, 2510,
	-1000, 1451, -1000, 1221, 195, 1118, -1000, -1000, 822, 822,
	-1000, 920, 917, -1000, 54931, 1904, -1000, 407, 1443, 407,
	1115, -1000, -1000, 1112, -1000, -1000, -1000, -1000, 1845, 2019,
	-1000, -1000, -1000, -1000, 54931, -1000, -1000, 54931, 54931, 54931,
	1902, 2429, -1000, 21671, 1900, 824, 2855, 53485, 53485, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	508, 822, -485, 324, 321, 822, 822, 822, -517, -1000,
	-1000, 1539, 1533, -1000, -176, -1000, 21671, -1000, -1000, -1000,
	-1000, -1000, 1077, 1077, 1416, 1396, 1394, -1000, 1886, -1000,
	-1000, -1000, 1512, -1000, -1000, -154, 53485, 53485, 53485, 53485,
	-1000, -1000, -1000, 1111, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 749, 1401, 358, -159,
	1401, -1000, -1000, 407, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 21671, -1000, 21671, -1000, 1132, 21671,
	2381, 1391, 21671, 21671, -1000, 1108, 1103, 1073, -1000, -1000,
	-1000, 21671, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 21671, -1000, 21671, -1000, 21671,
	-1000, 21671, -1000, 21671, -1000, 21671, -1000, 21671, -1000, 21671,
	-1000, 21671, -1000, 21671, -1000, 21671, -1000, 21671, -1000, 21671,
	-1000, 21671, -1000, 21671, -1000, 21671, -1000, -1000, 21671, -1000,
	-1000, -1000, 21671, -1000, 21671, -1000, 21671, -1000, -1000, -1000,
	21671, 268, 1026, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1401, 387, -1000, -1000, -1000, -1000,
	2479, -1000, 1401, 21671, 1901, -1000, 1901, 1901, 1901, -1000,
	-1000, -1000, 21671, -1000, 21671, 21671, -1000, 21671, -1000, 21671,
	-1000, -1000, -1000, -1000, 21671, 1870, 2215, 1870, 1870, 31795,
	-1000, -1000, 2453, 2395, 2428, 2132, 2134, 2134, 2197, -1000,
	2425, 2422, -1000, 1388, 2421, 1369, 907, -1000, 54208, 21671,
	142, -1000, 410, 53485, 142, 53485, -1000, 116, 2455, -1000,
	-1000, 21671, 1897, -1000, 21671, -1000, -1000, -1000, -1000, 7776,
	2459, 1735, -1000, -1000, 759, -1000, 21671, -1000, 4822, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1349, 1341, -1000,
	-1000, 1888, 21671, -1000, -1000, -1000, 1476, 1466, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1886, -1000, -1000, -1000,
	-1000, 359, -511, 2810, 53485, 1081, -1000, 1531, 1756, 367,
	142, 1336, 822, 822, 822, 1068, 1055, 37579, 1498, -1000,
	53485, 465, -1000, 359, -1000, -181, -182, 1073, -1000, -1000,
	2315, -1000, -1000, 15874, -1000, -1000, 1879, 1970, -1000, -1000,
	-1000, -1000, 2093, -149, -171, -1000, -1000, 1073, 1073, 1806,
	1401, -1000, 1073, 1073, 1450, 1435, -1000, 1073, 1073, 1073,
	1073, 1073, 1073, 1073, 1073, 1073, 1073, 1073, 1073, 1073,
	1073, 1073, 1073, 1073, 1073, 1073, 1073, 1414, 1603, -1000,
	268, 1401, 2007, -1000, -1000, 7776, -1000, -1000, 2455, 2419,
	124, -1000, -1000, 266, 124, 1132, 862, 1401, 1401, 862,
	1581, 1073, 1555, 1522, 1073, 1073, 32518, -1000, 2416, 2414,
	38302, 38302, 765, 2395, -223, 21671, 21671, 2130, 1041, -1000,
	-1000, -1000, -1000, 1322, 1317, -1000, 1300, -1000, 2495, -1000,
	1132, -1000, 142, -1000, 636, 1752, -1000, 2216, 2214, -1000,
	-1000, 2381, 1132, 53485, 1132, 115, 2455, -1000, 1073, -1000,
	1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870,
	1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870,
	1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870,
	1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870,
	1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870,
	1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870,
	1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870,
	1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870,
	1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870,
	1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870,
	1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870,
	1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870,
	1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, -1000,
	-1000, 53485, 2763, -1000, -1000, 2314, 1449, 67, -1000, 1415,
	1756, -1000, -1000, 141, -1000, 21671, -1000, 37579, 1296, 1293,
	-1000, -1000, -1000, -1000, -517, -1000, -1000, -1000, -1000, -1000,
	-1000, 406, 1755, -1000, 816, 53485, 54931, -1000, 2092, -1000,
	-1000, -1000, 21671, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	21671, -1000, 1401, 2003, -1000, -317, -1000, -490, 21671, -214,
	-1000, -1000, -214, -1000, -1000, -1000, -1000, -1000, 21671, -1000,
	-1000, 21671, -1000, 21671, -1000, -1000, 1447, -1000, -1000, -1000,
	-1000, -1000, 1447, 1447, -1000, -223, -1000, 1754, -1000, 53485,
	1132, 1639, -1000, 1018, -1000, -1000, -1000, -1000, -1000, 54208,
	1752, 53485, 1870, 2127, 2140, 2413, -1000, 1441, 1401, 1870,
	2381, -1000, 1439, -1000, 406, -1000, 1878, 1906, -1000, -1000,
	-1000, 19502, -1000, -1000, -1000, -1000, -1000, 172, -153, 15874,
	11500, 1434, -1000, -152, 1073, 1414, -1000, -437, -1000, -1000,
	-1000, -1000, 196, -1000, -1000, 1639, -1000, -1000, 1475, 1400,
	1340, 36856, -1000, -1000, -1000, -1000, -223, -1000, -1000, 2313,
	-1000, -1000, 1605, -1000, -1000, 53485, 2210, 2406, 2190, 2402,
	1283, -1000, 31795, 52762, -1000, -144, 574, -153, 21671, 1877,
	1401, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 37,
	-1000, -1000, 630, -1000, -1000, -1000, 1890, -169, -1000, -1000,
	-1000, 256, -464, -249, -255, 23840, -1000, 21671, -1000, 21671,
	-1000, 21671, -1000, -1000, -1000, 53485, 1870, 1411, -1000, 2394,
	1281, -1000, 2392, 1275, -1000, -1000, 1375, -1000, 4339, -270,
	2001, -1000, 7, -1000, -1000, -1000, 984, 1262, -1000, -1000,
	-1000, -1000, -1000, -1000, 1916, 53485, -1000, 480, -1000, -1000,
	15145, -154, -173, 888, -1000, -1000, -1000, -1000, -1000, 1901,
	1290, 1153, 1073, -1000, 53485, -1000, 1255, -1000, 1253, -1000,
	-1000, 52762, -257, 748, 7776, -1000, 1986, 1980, 2474, -1000,
	-1000, -1000, -1000, -1000, -1000, -523, 1292, 280, -1000, -1000,
	-1000, 256, -258, -1000, 21671, -1000, 21671, -1000, 1401, -1000,
	-1000, -1000, -1000, 2302, 115, -1000, 2476, -1000, 2466, 693,
	693, -1000, 1046, -523, -1000, -1000, -1000, -1000, 1073, 1073,
	-1000, -274, -1000, -1000, -1000, -1000, -1000, 472, 1105, -1000,
	-1000, -1000, -1000, -1000, 7776, -1000, -1000, -1000, 248, 248,
	-1000, -1000,
}

var yyPgo = [...]int{
	0, 3208, 3206, 43, 2, 40, 39, 3205, 3204, 3202,
	178, 3201, 3200, 3199, 3198, 3197, 3194, 2557, 2537, 2529,
	3193, 3192, 3191, 3190, 3189, 3187, 3185, 3184, 3181, 42,
	102, 33, 114, 197, 198, 3178, 176, 159, 193, 3174,
	3171, 3170, 118, 192, 87, 91, 195, 3169, 3166, 95,
	3165, 3164, 3160, 188, 187, 186, 925, 3158, 181, 110,
	54, 3155, 3154, 3151, 3149, 3148, 3147, 3146, 3145, 3144,
	3143, 3142, 3138, 3133, 3128, 3126, 3125, 3124, 3122, 277,
	3120, 3118, 21, 3115, 103, 3105, 3102, 3099, 3097, 3095,
	8, 3091, 3090, 14, 48, 3089, 3087, 55, 3072, 3026,
	3025, 3024, 3020, 20, 3019, 27, 3016, 41, 3014, 3013,
	129, 3000, 2999, 2996, 50, 2994, 2991, 2989, 13, 174,
	2988, 2987, 144, 2980, 2978, 2974, 171, 200, 2970, 2116,
	162, 113, 165, 2969, 2966, 106, 189, 2958, 125, 2957,
	2949, 2937, 152, 2935, 1107, 2933, 2932, 67, 68, 32,
	2930, 2929, 184, 72, 9, 3, 221, 2928, 2926, 70,
	85, 2925, 130, 2920, 2918, 107, 73, 2917, 104, 101,
	2915, 2914, 16, 5, 2912, 145, 11, 4, 69, 2911,
	2910, 204, 2909, 2908, 2904, 98, 2902, 2901, 3847, 2900,
	93, 134, 108, 80, 2897, 53, 62, 2896, 2895, 2893,
	2892, 2890, 57, 2889, 2888, 2886, 148, 243, 164, 2880,
	46, 75, 61, 132, 2870, 31, 82, 199, 167, 2865,
	2864, 136, 137, 2863, 2861, 64, 44, 51, 2860, 99,
	131, 111, 49, 94, 133, 2858, 2857, 66, 81, 2856,
	2855, 2845, 2843, 175, 2841, 2838, 79, 2836, 63, 2833,
	173, 26, 28, 97, 2832, 52, 2831, 170, 2830, 89,
	2829, 2827, 76, 124, 77, 47, 2826, 163, 172, 127,
	166, 2825, 2823, 59, 2821, 2819, 2818, 196, 340, 2816,
	2815, 119, 183, 146, 147, 88, 2813, 355, 2812, 2810,
	15, 4916, 7355, 2809, 56, 161, 2808, 2807, 7508, 17,
	65, 25, 2806, 194, 2805, 2804, 2803, 2801, 1385, 185,
	153, 160, 74, 2800, 2799, 2798, 19, 2797, 2796, 2795,
	2794, 2793, 2784, 123, 38, 37, 35, 214, 71, 12,
	105, 169, 157, 90, 2778, 2769, 2768, 126, 92, 2766,
	158, 156, 154, 168, 2765, 180, 142, 115, 2750, 78,
	34, 2748, 2744, 2668, 2654, 96, 2653, 2652, 2639, 2638,
	155, 140, 121, 84, 2637, 83, 116, 150, 149, 86,
	2634, 60, 2632, 2631, 30, 190, 29, 2628, 18, 109,
	112, 2624, 6746, 182, 2622, 22, 351, 151, 2617, 2616,
	6, 7, 10, 2614, 2605, 2604, 2603, 135, 2602, 2601,
	2600, 2599, 24, 58, 23, 1, 117, 100, 2596, 2591,
	139, 2589, 2587, 2586, 2585, 2583, 2573, 2567, 2561, 2558,
	2551, 2549, 2545, 3418, 0, 128, 2503, 201, 2502,
}

//line sql.y:8709
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalType {
	v, _ := st.union.(IntervalType)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) itemUnion() interface{} {
	v, _ := st.union.(interface{})
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) killTypeUnion() KillType {
	v, _ := st.union.(KillType)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 421, 422, 422, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 259, 382, 383, 383, 257, 257, 28, 74,
	36, 36, 35, 35, 38, 38, 37, 31, 31, 31,
	32, 32, 32, 32, 32, 32, 32, 32, 33, 33,
	33, 33, 33, 29, 29, 29, 29, 30, 30, 30,
	30, 30, 15, 16, 34, 34, 17, 17, 108, 108,
	18, 19, 19, 19, 19, 425, 425, 183, 183, 181,
	181, 182, 182, 262, 262, 20, 266, 266, 268, 268,
	268, 268, 258, 258, 258, 21, 21, 267, 267, 269,
	269, 269, 272, 272, 272, 272, 311, 311, 311, 22,
	22, 22, 22, 22, 128, 128, 385, 385, 384, 378,
	378, 377, 377, 376, 381, 381, 380, 380, 379, 40,
	41, 50, 50, 50, 50, 51, 52, 386, 386, 351,
	57, 57, 56, 56, 56, 56, 56, 56, 58, 58,
	54, 54, 53, 53, 55, 55, 353, 353, 339, 339,
	352, 352, 352, 352, 352, 352, 352, 338, 338, 139,
	139, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 401, 401,
	401, 400, 400, 236, 236, 236, 236, 236, 236, 236,
	236, 148, 148, 159, 159, 159, 159, 159, 159, 146,
	146, 147, 145, 145, 145, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 158, 158, 154, 154, 154, 155,
	155, 155, 156, 156, 402, 402, 402, 402, 316, 316,
	316, 316, 319, 319, 317, 317, 317, 317, 317, 317,
	317, 317, 317, 318, 318, 318, 318, 318, 318, 318,
	320, 320, 320, 320, 320, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 322, 322, 322, 322, 322, 322, 322, 322, 337,
	337, 323, 323, 331, 331, 332, 332, 333, 333, 333,
	334, 334, 334, 335, 335, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 330, 330, 329, 329, 329, 340,
	365, 365, 364, 364, 362, 362, 362, 362, 362, 362,
	362, 362, 349, 349, 359, 359, 359, 359, 359, 348,
	348, 344, 344, 344, 345, 345, 346, 346, 343, 343,
	347, 347, 361, 361, 360, 360, 341, 341, 342, 342,
	367, 403, 403, 403, 403, 403, 404, 404, 368, 393,
	395, 395, 395, 394, 394, 391, 392, 390, 390, 390,
	390, 390, 84, 84, 84, 285, 285, 286, 286, 357,
	357, 356, 356, 356, 358, 358, 355, 355, 355, 355,
	355, 355, 355, 355, 355, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 355, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 355, 355, 355, 280, 280, 280,
	389, 389, 389, 389, 389, 389, 388, 388, 388, 354,
	354, 354, 354, 387, 387, 59, 59, 216, 216, 406,
	406, 407, 407, 407, 47, 47, 47, 47, 47, 47,
	46, 46, 46, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 48, 48, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 43, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 110, 110, 111, 111,
	111, 111, 113, 113, 113, 370, 370, 60, 60, 3,
	3, 171, 173, 174, 174, 172, 172, 172, 172, 172,
	172, 62, 62, 61, 61, 176, 175, 177, 177, 177,
	1, 1, 2, 2, 4, 4, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 375, 336, 336,
	336, 369, 369, 371, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 116, 115, 115, 114, 117, 117,
	117, 117, 117, 117, 117, 117, 373, 373, 373, 63,
	63, 374, 324, 325, 326, 5, 6, 350, 372, 124,
	124, 24, 39, 39, 25, 25, 25, 25, 26, 26,
	64, 67, 67, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 279, 279, 288, 288, 278,
	278, 303, 303, 303, 281, 281, 281, 282, 282, 399,
	399, 399, 275, 275, 66, 66, 66, 304, 304, 304,
	304, 69, 69, 408, 408, 409, 409, 410, 410, 410,
	70, 71, 71, 306, 306, 307, 307, 72, 73, 85,
	85, 85, 85, 85, 85, 85, 86, 86, 86, 86,
	109, 109, 109, 10, 10, 10, 10, 81, 81, 81,
	9, 9, 11, 68, 68, 75, 396, 396, 397, 398,
	398, 398, 398, 76, 78, 27, 27, 27, 27, 27,
	27, 134, 134, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 129, 129, 129, 123, 123,
	426, 79, 80, 80, 127, 127, 127, 120, 120, 120,
	126, 126, 126, 12, 12, 13, 261, 261, 14, 14,
	131, 131, 133, 133, 133, 133, 133, 135, 135, 135,
	135, 135, 135, 135, 130, 130, 132, 132, 132, 132,
	296, 296, 296, 295, 295, 165, 165, 167, 166, 166,
	168, 168, 169, 169, 169, 169, 214, 214, 191, 191,
	253, 253, 254, 254, 252, 252, 260, 260, 255, 255,
	255, 255, 263, 263, 170, 170, 170, 170, 178, 178,
	179, 179, 180, 180, 305, 305, 301, 301, 301, 300,
	300, 184, 184, 184, 186, 185, 185, 185, 185, 187,
	187, 189, 189, 188, 188, 190, 195, 195, 194, 194,
	192, 192, 192, 192, 193, 193, 193, 193, 196, 196,
	144, 144, 144, 144, 144, 144, 144, 144, 157, 157,
	157, 157, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 243, 243, 149, 149, 149, 149, 149,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 219, 219, 218, 218, 87,
	87, 87, 88, 88, 89, 89, 89, 89, 89, 90,
	90, 90, 90, 90, 90, 90, 92, 92, 91, 91,
	209, 209, 293, 293, 93, 94, 94, 97, 97, 96,
	95, 95, 101, 101, 98, 98, 100, 100, 99, 102,
	102, 103, 104, 104, 276, 276, 197, 197, 205, 205,
	205, 205, 198, 198, 198, 198, 198, 198, 198, 206,
	206, 206, 213, 207, 207, 203, 203, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 162, 162,
	162, 162, 224, 224, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 151,
	151, 163, 163, 163, 163, 164, 164, 164, 164, 164,
	164, 164, 313, 313, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 427, 427, 327, 327, 327, 204, 204, 204,
	204, 204, 125, 125, 125, 125, 125, 310, 310, 310,
	314, 314, 314, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 315, 315,
	222, 222, 121, 121, 220, 220, 221, 223, 223, 215,
	215, 215, 215, 217, 217, 200, 200, 200, 225, 225,
	226, 226, 105, 106, 106, 107, 107, 227, 227, 229,
	228, 228, 230, 231, 231, 231, 232, 232, 233, 233,
	233, 49, 49, 49, 49, 49, 44, 44, 44, 44,
	45, 45, 45, 45, 136, 136, 136, 136, 138, 138,
	137, 137, 82, 82, 83, 83, 83, 142, 142, 143,
	143, 143, 140, 140, 141, 141, 250, 250, 234, 234,
	234, 241, 241, 241, 237, 237, 239, 239, 239, 240,
	240, 240, 238, 247, 247, 249, 249, 248, 248, 244,
	244, 245, 245, 246, 246, 246, 242, 242, 199, 199,
	199, 199, 199, 251, 251, 251, 251, 264, 264, 210,
	210, 212, 212, 211, 211, 161, 265, 265, 273, 270,
	270, 271, 271, 297, 297, 297, 274, 274, 287, 287,
	283, 283, 284, 284, 277, 277, 289, 289, 289, 77,
	208, 208, 366, 366, 363, 292, 292, 294, 294, 298,
	298, 302, 302, 299, 299, 418, 418, 256, 256, 412,
	412, 411, 411, 415, 415, 414, 414, 413, 413, 416,
	416, 417, 417, 428, 428, 419, 8, 420, 420, 420,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 423, 424, 308, 309, 309, 309,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 0, 1, 1, 1, 2, 3,
	2, 3, 0, 1, 3, 1, 4, 3, 3, 4,
	3, 2, 3, 4, 3, 4, 2, 7, 1, 3,
	3, 3, 3, 1, 2, 1, 1, 3, 2, 3,
	3, 2, 5, 7, 10, 9, 7, 8, 1, 1,
	10, 11, 9, 8, 8, 1, 1, 1, 3, 1,
	3, 1, 3, 0, 4, 3, 1, 3, 3, 3,
	3, 3, 1, 1, 2, 5, 4, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 2,
	2, 6, 12, 2, 0, 2, 0, 2, 1, 0,
	2, 1, 3, 3, 0, 1, 1, 3, 3, 6,
	4, 7, 8, 8, 8, 6, 3, 1, 1, 5,
	0, 1, 1, 1, 1, 2, 2, 2, 0, 1,
	4, 4, 4, 4, 4, 4, 2, 4, 1, 3,
	1, 1, 3, 4, 3, 3, 3, 5, 10, 0,
	2, 0, 2, 3, 5, 3, 4, 2, 3, 2,
	3, 3, 3, 3, 2, 2, 4, 4, 1, 1,
	1, 1, 1, 0, 2, 2, 3, 3, 2, 2,
	2, 1, 1, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 3, 1,
	1, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 2, 2,
	1, 2, 2, 2, 2, 3, 3, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 1, 5,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 3, 0, 5, 1, 3, 0, 3, 5,
	0, 1, 1, 0, 1, 0, 3, 3, 2, 2,
	2, 1, 2, 2, 0, 1, 0, 2, 2, 5,
	0, 1, 1, 2, 1, 3, 2, 1, 1, 3,
	3, 3, 0, 1, 4, 3, 3, 4, 2, 0,
	2, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	0, 1, 1, 3, 3, 4, 3, 1, 3, 1,
	7, 6, 7, 7, 8, 8, 0, 1, 5, 2,
	1, 1, 1, 0, 1, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 1, 1, 2, 0, 1, 0,
	1, 1, 3, 2, 1, 2, 3, 3, 3, 4,
	4, 3, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 5, 0, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 1, 1, 0, 1, 0, 1, 0, 2, 0,
	2, 0, 2, 2, 0, 1, 5, 1, 3, 7,
	1, 3, 3, 1, 2, 2, 2, 5, 5, 5,
	6, 8, 5, 5, 4, 4, 4, 6, 5, 5,
	5, 2, 2, 2, 2, 3, 3, 3, 4, 3,
	3, 1, 3, 5, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 3, 4, 4, 2,
	11, 3, 6, 8, 6, 6, 6, 13, 8, 6,
	6, 10, 7, 5, 5, 5, 7, 5, 5, 5,
	5, 5, 7, 7, 5, 5, 0, 6, 5, 6,
	4, 5, 0, 8, 9, 0, 3, 0, 1, 0,
	3, 8, 4, 1, 3, 3, 6, 7, 7, 8,
	4, 0, 1, 0, 1, 3, 3, 1, 1, 2,
	1, 1, 0, 2, 0, 2, 5, 3, 7, 4,
	4, 4, 4, 3, 3, 3, 7, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 0, 2,
	2, 1, 3, 2, 0, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 3, 1, 3, 3, 0, 2,
	2, 2, 2, 2, 2, 2, 4, 4, 3, 0,
	1, 4, 3, 4, 4, 3, 3, 3, 2, 1,
	3, 3, 3, 5, 7, 7, 6, 5, 3, 2,
	4, 5, 5, 3, 3, 7, 3, 3, 3, 3,
	4, 7, 5, 2, 4, 4, 4, 4, 4, 5,
	5, 4, 4, 4, 4, 4, 4, 4, 4, 2,
	2, 4, 4, 4, 4, 4, 2, 3, 3, 3,
	3, 5, 2, 3, 3, 2, 3, 4, 4, 4,
	3, 4, 4, 5, 3, 0, 1, 0, 1, 1,
	1, 0, 2, 2, 0, 2, 2, 0, 2, 0,
	1, 1, 1, 1, 2, 1, 3, 1, 1, 1,
	1, 1, 3, 0, 1, 1, 3, 3, 2, 2,
	1, 1, 5, 0, 1, 0, 1, 2, 3, 0,
	3, 3, 3, 3, 3, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	4, 4, 4, 2, 2, 3, 1, 3, 2, 1,
	2, 1, 2, 2, 4, 3, 3, 6, 4, 7,
	6, 1, 3, 2, 2, 2, 2, 1, 1, 1,
	3, 2, 1, 1, 1, 0, 1, 1, 0, 3,
	0, 2, 0, 2, 1, 2, 2, 0, 1, 1,
	0, 1, 1, 5, 5, 4, 0, 2, 4, 4,
	0, 1, 0, 1, 2, 3, 4, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 2, 3, 5,
	0, 1, 2, 1, 1, 0, 1, 2, 1, 3,
	1, 1, 1, 4, 3, 1, 1, 2, 3, 7,
	0, 3, 0, 1, 1, 3, 1, 3, 1, 1,
	3, 3, 1, 3, 4, 4, 4, 3, 2, 4,
	0, 1, 0, 2, 0, 1, 0, 1, 2, 1,
	1, 1, 2, 2, 1, 2, 3, 2, 3, 2,
	2, 2, 1, 1, 3, 3, 0, 1, 1, 2,
	6, 5, 6, 6, 0, 2, 3, 3, 0, 2,
	3, 3, 3, 2, 3, 1, 3, 6, 3, 4,
	3, 1, 3, 4, 5, 6, 3, 4, 5, 6,
	3, 4, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 5, 5, 3, 3, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 3, 1, 1, 1, 2, 2,
	2, 2, 1, 1, 2, 7, 7, 6, 6, 2,
	2, 5, 6, 3, 3, 1, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 4, 2, 4, 0, 1, 2, 5,
	0, 3, 0, 1, 4, 4, 2, 0, 1, 1,
	2, 2, 1, 1, 2, 2, 0, 1, 1, 1,
	1, 5, 1, 3, 0, 3, 1, 1, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 6, 4, 4, 8,
	6, 8, 6, 5, 4, 10, 2, 2, 1, 2,
	2, 2, 2, 2, 4, 5, 5, 5, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	8, 4, 8, 8, 6, 5, 4, 4, 4, 4,
	4, 7, 4, 4, 6, 6, 6, 8, 6, 6,
	4, 4, 3, 4, 6, 6, 4, 4, 6, 4,
	6, 4, 4, 4, 4, 4, 4, 6, 4, 6,
	4, 4, 4, 6, 4, 6, 4, 4, 6, 4,
	6, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	4, 4, 6, 4, 6, 4, 8, 6, 4, 4,
	6, 4, 6, 8, 4, 6, 8, 4, 4, 6,
	8, 6, 4, 6, 6, 8, 10, 7, 8, 8,
	9, 4, 4, 4, 4, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 4, 4, 4, 4, 4,
	4, 6, 4, 6, 5, 9, 6, 9, 8, 6,
	8, 8, 8, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 6, 8, 10, 12, 14, 6,
	8, 8, 10, 12, 14, 6, 8, 10, 12, 6,
	8, 4, 4, 3, 4, 6, 6, 4, 6, 4,
	6, 8, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 0, 2, 3, 4, 4, 4,
	4, 4, 0, 3, 4, 7, 3, 1, 1, 1,
	0, 5, 5, 2, 3, 1, 2, 2, 1, 2,
	1, 2, 2, 1, 2, 2, 1, 1, 0, 1,
	0, 1, 0, 2, 1, 2, 4, 0, 2, 1,
	1, 3, 5, 1, 1, 1, 2, 2, 0, 3,
	0, 2, 2, 1, 3, 0, 1, 0, 1, 3,
	1, 3, 2, 0, 1, 1, 0, 1, 2, 4,
	4, 0, 2, 2, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 0, 3, 3, 3, 0, 3,
	1, 1, 0, 4, 0, 1, 1, 0, 3, 1,
	3, 2, 1, 1, 0, 1, 2, 4, 9, 3,
	5, 0, 3, 3, 0, 1, 0, 2, 2, 0,
	2, 2, 2, 0, 2, 1, 2, 3, 3, 0,
	2, 1, 2, 3, 4, 3, 0, 1, 2, 1,
	5, 4, 4, 1, 3, 3, 5, 0, 5, 1,
	3, 1, 2, 3, 4, 1, 1, 3, 3, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 0, 3, 0, 1, 0, 1, 1, 5,
	0, 1, 0, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 0, 1, 0, 3, 0,
	4, 0, 3, 0, 3, 0, 3, 0, 3, 0,
	3, 0, 3, 1, 1, 11, 3, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -421, -79, -426, -7, -29, -15, -16, -17, -419,
	-18, -19, -20, -21, -22, -23, -24, -25, -26, -64,
	-67, -65, -66, -69, -70, -71, -72, -73, -9, -11,
	-68, -27, -28, -74, -75, -76, -77, -78, -12, -13,
	-14, -8, -32, -31, -30, 10, 11, -108, 46, -35,
	33, -40, -50, 227, -51, -41, 228, -52, 230, 229,
	267, 231, 379, 260, 75, 315, 316, 318, 319, 320,
	321, -109, 685, 265, 266, 233, 37, 34, 35, 38,
	237, 273, 274, 236, 133, -33, -36, 9, -423, 12,
	469, 262, 261, 29, -34, 578, 87, -80, -422, 733,
	-250, -234, 23, 34, 30, -233, -229, -127, -234, 21,
	19, 8, -79, -79, -79, 45, 13, 14, -79, -351,
	-353, 87, 160, 87, -79, -57, -56, -54, -53, -55,
	-58, 32, -47, -48, -375, -46, -43, 232, 229, 277,
	123, 124, 267, 268, 269, 231, 251, 266, 270, 265,
	286, -42, 82, 34, 578, 581, -358, 228, 234, 235,
	230, 470, 126, 125, 76, -355, 374, 612, 703, -58,
	705, 101, 104, 704, 45, 241, 706, 707, 708, 619,
	709, 250, 710, 711, 712, 713, 719, 660, 720, 721,
	722, 127, 8, -79, -302, -298, 91, -291, 575, 253,
	610, 423, 611, 302, 82, 42, 514, 584, 371, 374,
	612, 499, 703, 380, 315, 331, 325, 504, 505, 506,
	354, 346, 576, 613, 585, 305, 254, 290, 697, 344,
	136, 705, 309, 614, 268, 381, 382, 615, 383, 101,
	318, 420, 718, 308, 616, 716, 104, 704, 323, 80,
	498, 52, 700, 45, 263, 428, 429, 342, 236, 338,
	706, 291, 617, 587, 284, 126, 123, 725, 37, 334,
	51, 31, 715, 125, 50, 707, 151, 618, 708, 619,
	385, 361, 691, 49, 386, 269, 620, 85, 274, 580,
	312, 699, 387, 519, 335, 388, 301, 714, 233, 621,
	680, 672, 673, 389, 390, 692, 366, 362, 367, 521,
	622, 412, 503, 391, 676, 677, 732, 53, 623, 624,
	693, 124, 625, 79, 709, 81, 329, 330, 626, 299,
	252, 524, 525, 414, 358, 481, 488, 489, 111, 112,
	484, 113, 490, 114, 491, 492, 493, 482, 115, 108,
	483, 494, 495, 359, 360, 116, 496, 110, 109, 485,
	487, 117, 497, 250, 36, 392, 577, 303, 59, 307,
	278, 415, 47, 364, 729, 46, 687, 526, 627, 690,
	357, 353, 478, 54, 628, 629, 630, 631, 500, 710,
	356, 328, 352, 724, 4, 296, 501, 711, 63, 235,
	369, 368, 370, 285, 411, 349, 632, 633, 634, 257,
	83, 635, 339, 22, 636, 637, 393, 292, 638, 57,
	639, 640, 418, 266, 641, 55, 712, 40, 642, 271,
	726, 713, 643, 644, 645, 686, 646, 273, 647, 395,
	648, 674, 675, 394, 363, 365, 527, 280, 396, 379,
	238, 579, 649, 313, 333, 270, 717, 650, 258, 515,
	516, 517, 518, 698, 523, 522, 272, 277, 265, 419,
	259, 651, 652, 653, 654, 655, 306, 671, 656, 657,
	319, 719, 479, 44, 658, 659, 660, 661, 662, 300,
	295, 413, 422, 62, 84, 376, 663, 664, 696, 327,
	324, 293, 460, 462, 463, 464, 465, 466, 461, 468,
	665, 316, 56, 720, 721, 722, 287, 723, 507, 508,
	509, 510, 10, 561, 544, 572, 545, 562, 546, 555,
	547, 563, 571, 573, 528, 536, 529, 537, 567, 550,
	564, 556, 549, 548, 570, 553, 557, 530, 538, 568,
	554, 531, 539, 532, 540, 533, 541, 566, 565, 558,
	569, 534, 542, 560, 535, 543, 559, 551, 552, 431,
	730, 731, 502, 398, 127, 297, 298, 48, 350, 279,
	666, 310, 667, 340, 341, 475, 476, 355, 326, 351,
	683, 317, 681, 281, 399, 480, 267, 668, 421, 294,
	372, 377, 311, 583, 520, 286, 400, 695, 582, 511,
	512, 348, 345, 288, 513, 669, 685, 401, 242, 282,
	283, 670, 682, 402, 403, 304, 404, 405, 406, 407,
	408, 410, 314, 409, 684, 678, 679, 289, 459, 581,
	322, 343, 378, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 477, 240, -79, 240, -188, -298, -129, 687, 689,
	179, -270, 382, -288, 384, 397, 392, 402, 390, -279,
	393, 395, 280, -399, 412, 240, 399, 227, 385, 394,
	403, 404, 304, 410, 405, 314, 409, 289, 406, 407,
	408, -382, 179, 708, 723, 136, 347, 389, 387, 413,
	687, 91, -304, 91, 92, 93, -291, 317, -306, 322,
	-292, -382, -291, 320, -79, -79, -308, -308, -129, -207,
	-144, 144, -157, -259, -160, 92, -149, -152, -201, -202,
	-203, -204, -158, -217, -257, 168, 169, 176, 145, -213,
	-161, 27, 574, 471, 470, 179, 32, 222, 69, 70,
	473, 147, 58, 12, 436, 437, -159, 426, 427, 438,
	432, 433, 498, 500, 501, 502, 499, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 503, 514, 475,
	476, 118, 477, 108, 110, 109, 478, 479, 480, 344,
	526, 527, 521, 524, 525, 523, 522, 359, 360, 481,
	544, 545, 549, 548, 546, 547, 550, 553, 554, 555,
	556, 557, 558, 560, 559, 551, 552, 529, 528, 530,
	531, 532, 533, 534, 535, 537, 536, 538, 539, 540,
	541, 542, 543, 561, 562, 563, 564, 565, 567, 566,
	571, 570, 568, 569, 573, 572, 482, 483, 111, 112,
	113, 114, 115, 116, 117, 484, 487, 485, 486, 488,
	489, 490, 495, 496, 491, 492, 493, 494, 497, 370,
	368, 369, 365, 364, 363, -89, -101, 601, 600, -102,
	423, 428, 429, 431, -150, -151, -163, -164, -292, -298,
	245, 425, 239, 174, 469, -153, -147, -215, 107, 93,
	-31, -211, 424, 434, 435, 439, 430, 440, 586, 588,
	604, 605, 607, 591, 596, 595, 598, 515, 516, 517,
	518, 519, 520, 672, 673, 674, 675, 676, 677, 678,
	679, -382, -291, 91, -155, -154, -197, 94, 99, 102,
	103, 105, -405, 263, 340, 341, 119, -423, 701, 90,
	95, 96, 97, 98, 120, 121, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 398, 398,
	-188, -79, -79, -79, -79, -420, 704, 579, -227, -127,
	-229, -33, -31, -423, 9, -79, -31, -32, -30, -36,
	-38, 606, -37, -298, 100, -234, -250, 13, 163, 43,
	51, -232, -233, -34, -31, -144, 20, 24, 25, -132,
	170, -144, -298, -132, -277, 244, -308, -418, 687, -79,
	-79, -266, -311, 317, -268, 413, 687, 412, -258, -271,
	91, -257, -270, 411, 92, -352, 160, -338, -342, -292,
	255, -368, 251, -188, -361, -360, -292, -423, -128, -287,
	241, 249, 248, 137, -386, 140, 297, 425, 239, -53,
	-54, -55, -270, 178, 707, -110, 272, 276, 88, 88,
	-342, -341, -340, -387, 276, 255, -367, -359, 247, 256,
	-348, 248, 249, -343, 241, 138, -387, -343, 246, 256,
	251, 255, 276, 276, 127, 276, 127, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 271, -349, 152, -349,
	582, 582, -355, -387, 251, 241, -387, -387, 247, -289,
	-343, 243, 26, 243, 36, 36, -349, -349, -349, -270,
	178, -349, -349, -349, -349, 284, 284, -349, -349, -349,
	-349, -349, -349, -349, -349, -349, -349, -349, -349, -349,
	-349, -349, -349, -349, 240, -386, -136, 409, 304, 82,
	-56, 286, -39, -188, -287, 241, 242, -386, 273, -188,
	223, 240, 690, -281, 160, 16, -281, -278, 398, 396,
	383, 388, -281, -281, -281, -281, 287, 381, -344, 241,
	36, 252, 398, 287, 381, 287, 288, 287, 288, 391,
	401, 287, -303, 15, 163, 425, 386, 390, 280, 240,
	281, 242, 400, 288, -303, 90, -282, 160, 287, 398,
	283, -281, -281, -309, -423, -294, -292, -290, 232, 24,
	143, 26, 28, 146, 179, 130, 20, 147, 38, 234,
	347, 251, 178, 247, 470, 227, 73, 586, 426, 433,
	424, 432, 436, 472, 473, 425, 384, 32, 14, 588,
	29, 261, 25, 39, 172, 229, 150, 589, 264, 27,
	262, 118, 121, 591, 23, 76, 256, 15, 249, 41,
	17, 592, 593, 18, 245, 244, 163, 241, 71, 12,
	222, 30, 159, 67, 594, 138, 133, 595, 596, 597,
	598, 131, 69, 160, 21, 727, 434, 435, 34, 688,
	574, 275, 174, 74, 60, 689, 144, 430, 600, 601,
	119, 602, 122, 77, 694, 140, 19, 72, 43, 603,
	276, 604, 246, 728, 605, 416, 606, 161, 230, 469,
	70, 162, 701, 607, 702, 239, 397, 9, 474, 33,
	260, 248, 129, 68, 440, 608, 240, 149, 243, 132,
	120, 8, 137, 35, 13, 75, 78, 437, 438, 439,
	58, 128, 578, 148, 16, 609, 417, 142, -382, 690,
	-309, -309, 33, 92, -408, -409, -410, 578, 416, 243,
	-292, -188, -85, 680, 231, -86, 686, 24, 238, -134,
	398, -122, 179, 708, 691, 692, 693, 690, 395, 698,
	696, 694, 287, 695, 88, 140, 142, 143, 4, -144,
	159, -198, 152, 153, 154, 155, 156, 157, 158, 164,
	163, 144, 146, 160, -243, 141, 165, 166, 167, 168,
	169, 170, 171, 173, 172, 174, 175, 161, 162, 178,
	225, 226, -152, -152, -152, -152, -213, -219, -218, -423,
	-215, -382, -291, -298, -423, -423, -152, -276, -423, -149,
	-423, -423, -423, -423, -222, -144, -423, -423, -427, -423,
	-427, -427, -427, -327, -423, -327, -327, -423, -423, -423,
	-423, -423, -423, -423, -423, -423, -423, -423, -423, -423,
	-423, -423, -423, -423, -423, -423, -423, -423, -423, -423,
	-423, -423, -423, -423, -423, -423, -423, -423, -423, -423,
	-423, -423, -423, -423, -423, -423, -423, -423, -423, -423,
	-423, -423, -423, -423, -423, -423, -423, -423, -423, -423,
	-423, -423, -423, -423, -423, -423, -423, -423, -423, -423,
	-423, -423, -423, -423, -423, -423, -423, -423, -423, -423,
	-423, -423, -423, -423, -423, -423, -423, -423, -423, -423,
	-423, -423, -423, -423, -423, -423, -423, -423, -423, -423,
	-423, -423, -423, -423, -423, -423, -423, -423, -423, -423,
	-423, -423, -423, -423, -423, -423, -423, -423, -423, -423,
	-423, -423, -423, -423, -423, -423, -423, -423, -423, -423,
	223, -423, -423, -423, -423, -423, -327, -327, -327, -327,
	-327, -327, -423, -423, -423, -423, -423, -423, -423, -423,
	-423, -423, -423, -423, -423, -423, 103, 99, 102, 94,
	-217, 105, 90, 90, 90, 90, -31, -32, -207, -423,
	-396, -397, -191, -188, -423, 304, -292, -292, 273, 96,
	-232, -34, -31, -227, -233, -229, -31, -79, -120, -133,
	64, 65, -135, 25, 39, 68, 66, 24, -424, 89,
	-424, -250, -424, 88, -38, -253, 87, 62, 44, 90,
	90, 88, 22, -228, -230, -144, 15, -296, 4, -295,
	26, -292, 90, 223, 15, -189, 30, -188, 599, -277,
	-277, 88, 91, 317, -267, -269, 414, 416, 152, -297,
	-292, 90, 32, 89, 88, -188, -316, -319, -321, -320,
	-322, -317, -318, 344, 345, 179, 348, 350, 351, 352,
	353, 354, 355, 356, 357, 358, 361, 33, 263, 340,
	341, 342, 343, 362, 363, 364, 365, 367, 368, 369,
	370, 325, 346, 576, 326, 327, 328, 329, 330, 331,
	333, 334, 337, 335, 336, 338, 339, -383, -382, 87,
	89, 88, -323, 87, -144, -136, 240, -382, 241, 241,
	241, -79, 469, -349, -349, -349, 271, 20, -46, -43,
	-375, 19, -42, -43, 232, 123, 124, 229, 87, -338,
	87, -347, -383, -382, 87, 138, 246, 137, -346, -343,
	-346, -347, -382, -215, -382, 138, 138, -382, -382, -263,
	-292, -263, -263, 24, -263, 24, -263, 24, 96, -292,
	-263, 24, -263, 24, -263, 24, -263, 24, -263, 24,
	32, 79, 80, 81, 32, 83, 84, 85, -215, -382,
	-382, -215, -338, -215, -188, -382, -270, 96, 96, 96,
	-349, -349, 96, 90, 90, 90, -349, -349, 96, 90,
	-300, -298, 90, 90, -388, 257, 301, 303, 96, 96,
	96, 96, 32, 90, -389, 32, 715, 714, 716, 717,
	718, 90, 96, 32, 96, 32, 96, -292, 87, -188,
	-142, 291, 227, 229, 232, 77, 90, 307, 308, 305,
	310, 311, 152, 45, 88, 243, 240, -382, -283, 245,
	-283, -292, -299, -298, -290, -188, 243, 380, 90, -144,
	-345, 15, 163, -303, -303, -281, -188, -345, -303, -281,
	-188, -281, -281, -281, -281, -303, -303, -303, -281, -298,
	-298, -188, -188, -188, -188, -188, -188, -188, -309, -282,
	-281, 690, 90, -275, 15, 77, -309, -309, 88, 323,
	417, 418, -307, 320, -81, -292, 90, -10, -29, -18,
	-17, -19, 152, -10, 88, 578, -181, -188, 690, 690,
	690, 690, 690, 690, -144, -144, -144, -144, 602, -205,
	119, 144, 120, 121, -160, -144, -206, -211, -213, 106,
	163, 146, 160, -243, -149, -152, -149, -149, -149, -149,
	-149, -149, 222, -149, 222, -149, -149, -149, -149, -149,
	-149, -310, -292, 90, 179, -156, -155, 105, -405, -156,
	575, 88, -218, 223, -144, -144, -382, -118, 442, 443,
	444, 445, 447, 448, 449, 452, 453, 457, 458, 441,
	459, 446, 451, 454, 455, 456, 450, 343, -144, -130,
	-132, -130, -144, -220, -221, 148, -215, -144, -424, -424,
	96, 170, -126, 25, 39, -126, -126, -126, -126, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -126,
	-144, -119, 441, 459, 446, 451, 454, 455, 456, 450,
	343, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	-119, -118, -144, -144, -144, -144, -144, -144, -87, -144,
	130, 131, 132, -207, -144, -149, -144, -144, -144, -424,
	-144, -144, -144, -208, -207, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -381, -380, -379, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -207, -207, -207,
	-207, -207, -144, -424, -144, -162, -147, 96, -259, 105,
	92, -144, -144, -144, -144, -144, -144, -131, -130, -294,
	-299, -290, -291, -130, -131, -131, -130, -130, -144, -144,
	-144, -144, -144, -144, -144, -144, -424, -144, -144, -144,
	-144, -144, -250, -424, -207, 88, -398, 416, 417, 688,
	-301, 276, -300, 26, -208, 90, 15, -261, 78, -292,
	-232, -232, 64, 65, 60, -130, -135, -424, -37, 26,
	-252, -292, 63, 90, -328, -270, 371, 372, 179, -144,
	-144, 88, -231, 28, 29, -188, -295, 170, -299, -188,
	-262, 276, -188, 90, -166, -168, -169, -170, -191, -214,
	-423, -171, -31, 597, 594, 15, -181, -182, -190, -298,
	-268, -311, -267, 88, 415, 417, 418, 77, 122, -144,
	-329, 178, -357, -356, -355, -338, -340, -341, -342, 89,
	-329, -334, 377, 376, -323, -323, -323, -323, -323, -328,
	-328, -328, -328, 87, 87, -323, -323, -323, -323, -331,
	87, -331, -331, -332, -331, 87, -332, -333, 87, -333,
	-368, -144, -365, -364, -362, -363, 250, 101, 670, 626,
	578, 619, 660, 78, -360, -231, 96, -424, -142, -284,
	245, -366, -363, -382, -382, -382, -284, 91, 90, 91,
	90, 91, 90, -111, -60, -1, 727, 728, 729, 88,
	20, -339, -338, -59, 301, -371, -372, 276, -367, -361,
	-347, 138, -346, -347, -347, -382, 88, 30, 127, 127,
	127, 127, 578, 229, 33, -285, 618, 144, 670, 626,
	-338, -59, 243, 243, -310, -310, -310, 90, 90, -280,
	723, -181, -138, 293, 152, 282, 282, 240, 295, 240,
	295, -188, 306, 309, 307, 308, 305, 310, 311, 24,
	24, 24, 24, 24, 294, 296, 298, 284, -188, -188,
	-283, 77, -183, -188, 27, -298, 90, 90, -188, -281,
	-281, -188, -281, -281, -188, -410, 324, -292, 358, 681,
	682, 684, 683, -122, 416, 88, 578, 23, -123, 23,
	-423, 119, 120, 121, -206, -149, -152, -149, 143, 264,
	-149, -149, -423, -215, -424, -294, 26, 88, 78, -424,
	168, 88, 88, -424, -424, 88, 15, -223, -221, 150,
	-144, -424, 88, -424, -424, -207, -144, -144, -144, -144,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-207, -424, 88, 88, 15, -314, 26, -424, -424, -424,
	-424, -424, -222, -424, 15, -424, 78, 88, 163, 88,
	-424, -424, -424, 88, 88, -424, -424, 88, -424, 88,
	-424, -424, -424, -424, -424, -424, 88, -424, 88, -424,
	-424, -424, 88, -424, 88, -424, -424, 88, -424, 88,
	-424, 88, -424, 88, -424, 88, -424, 88, -424, 88,
	-424, 88, -424, 88, -424, 88, -424, 88, -424, 88,
	-424, 88, -424, 88, -424, 88, -424, 88, -424, 88,
	-424, 88, -424, -424, -424, 88, -424, 88, -424, 88,
	-424, -424, 88, -424, 88, -424, 88, -424, 88, 88,
	-424, 88, 88, 88, -424, 88, 88, 88, 88, -424,
	-424, -424, -424, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, -424, -424, -424, -424, -424, -424, 88,
	-94, 603, -424, -424, 88, -424, 88, 88, 88, 88,
	88, -424, -423, 223, -424, -424, -424, -424, -424, 88,
	88, 88, 88, 88, 88, -424, -424, -424, 88, 88,
	-424, 88, -424, 88, -424, -397, 687, 417, -195, -194,
	-192, 75, 244, 76, -423, -300, -424, -156, -259, -260,
	-259, -200, -292, 96, 105, -234, -165, -167, 15, -135,
	-213, 89, 88, -328, -238, -244, -278, -292, 90, 179,
	-330, 179, -330, 371, 372, -230, 223, -196, 16, -199,
	33, 58, -29, -423, -423, 30, 33, 88, -184, -186,
	-185, -187, 67, 71, 73, 68, 69, 70, 74, -305,
	26, -31, -166, -31, -423, -188, -181, -425, 15, 78,
	-425, 88, 223, -269, -272, 419, 416, 422, -382, 90,
	-110, 88, -355, -342, -235, -139, 41, -335, 378, -328,
	585, -328, -337, 90, -337, 96, 96, 96, 89, -49,
	-44, -45, 34, 82, -362, -349, 90, 40, -349, -349,
	-292, 89, -231, -138, -188, 144, 77, -366, -366, -366,
	-298, -2, 726, 732, 138, 87, 383, 19, -252, 88,
	89, -216, 302, 89, -112, -292, 89, 87, -347, -347,
	-292, -423, 240, 32, 32, 670, 626, 618, -59, -216,
	-215, -382, -329, 725, 724, 89, 242, 300, -143, 436,
	-140, 90, 91, -188, -188, -188, -188, -188, -188, 232,
	229, 406, -406, 312, -406, 285, 243, -181, -188, 88,
	-84, 259, 254, -303, -303, 34, -188, 416, 699, 697,
	-144, 143, 264, -160, -152, -118, -118, -149, -312, 179,
	344, 263, 342, 338, 358, 349, 376, 340, 377, 335,
	334, 333, -312, -310, -149, -207, -132, -144, -144, 151,
	-144, 149, -144, -424, -424, -424, -424, -424, -227, -144,
	-144, -144, -424, 179, 344, 15, -144, -310, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -379, -144, -207, -144, -207, -144, -144,
	-144, -144, -144, -380, -380, -380, -380, -380, -207, -207,
	-207, -207, -144, -423, -292, -97, -96, -95, 653, 244,
	-94, -162, -97, -162, 222, -144, 222, 222, 222, -144,
	-131, -294, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -192, -343, -343, -343, -263, 88, -274, 23,
	15, 58, 58, -165, -196, -166, -135, -292, -241, 680,
	-247, 47, -245, -246, 48, -242, 49, 57, -330, -330,
	170, -232, -144, -264, 77, -265, -273, -215, -210, -212,
	-211, -423, -251, -424, -292, -263, 240, -265, -168, -169,
	-169, -168, -169, 67, 67, 67, 72, 67, 72, 67,
	-185, -298, -424, -144, -301, 78, -166, -166, -190, -298,
	170, 416, 420, 421, -355, -404, 119, 144, 32, 77,
	374, 101, -402, 178, 615, 665, 670, 626, 619, 660,
	-403, 246, 137, 138, 258, 26, 42, 89, 88, 89,
	88, 89, 89, 88, -286, -285, -45, -44, -349, -349,
	96, -382, 90, 90, 242, 27, -188, 77, 77, 77,
	-113, 730, 96, 87, -3, 82, -144, 87, 20, -338,
	-215, -373, -324, -374, -325, -326, -5, -6, -350, -116,
	58, 101, -63, 45, 241, 710, 711, 127, -423, 723,
	-365, -252, -369, -371, -188, -148, -423, -159, -146, -145,
	-147, -153, 168, 169, 263, 340, 341, -216, -188, -137,
	291, 299, 87, -141, 92, -385, 78, 282, 374, 282,
	374, 90, -407, 313, 90, -407, -188, -84, -49, -188,
	-281, -281, 34, -382, -424, -160, -152, -125, 163, 578,
	-315, 584, -323, -323, -323, -333, -323, 330, -323, 330,
	-323, -424, -424, -424, 88, -424, 23, -424, -144, 88,
	-121, 474, 88, 88, -424, 87, 87, -144, -424, -424,
	-424, 88, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, 88, -424, 88, -424, 88,
	-424, 88, -424, 88, -424, 88, -424, 88, -424, 88,
	-424, 88, -424, 88, -424, 88, -424, 88, -424, 88,
	-424, 88, -424, 88, -424, 88, -424, -424, 88, -424,
	-424, -424, 88, -424, 88, -424, 88, -424, -424, -424,
	88, -313, 671, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -93, -293, -292, -94, 635, 635,
	-424, -94, -224, 88, -149, -424, -149, -149, -149, -424,
	-424, -424, 88, -424, 88, 88, -424, 88, -424, 88,
	-424, -424, -424, -424, 88, -193, 23, -193, -193, -424,
	-259, -188, -196, -225, 17, -238, 52, 350, -249, -248,
	56, 48, -246, 20, 50, 20, 31, -264, 88, 152,
	88, -424, -424, 88, 58, 223, -424, -188, -196, -179,
	-178, 77, 78, -180, 77, -178, 67, 67, -253, 88,
	-262, -166, -196, -196, 223, 119, -423, -148, 13, 90,
	90, -382, -401, 714, 715, 32, 96, -349, -349, 138,
	138, -188, 87, -328, 90, -328, 96, 96, 32, 83,
	84, 85, 32, 79, 80, 81, -188, -188, -188, -188,
	-370, 87, 20, -144, 87, 152, 89, -252, -252, 278,
	163, -349, 708, 284, 284, -349, -349, -349, -115, -114,
	730, 89, -424, 88, -336, 578, 581, -144, -154, -154,
	-253, 89, -378, 578, -384, -292, -292, -292, -292, 96,
	98, -424, 576, 74, 579, -424, -328, -144, -144, -144,
	-232, 90, -144, -144, 96, 96, -424, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -207, -144, -424,
	-176, -175, -177, 691, 119, 32, -312, -424, -209, 276,
	-100, -99, -98, 15, -424, -144, -118, -118, -118, -118,
	-144, -144, -144, -144, -144, -144, -423, 67, 19, 17,
	-423, -423, -301, -225, -226, 18, 20, -239, 54, -237,
	53, -237, -248, 20, 20, 90, 20, 90, 138, -273,
	-144, -212, 58, -29, -292, -210, -292, -412, -428, 388,
	383, -227, -144, 87, -144, -156, -196, -196, -144, -202,
	498, 500, 501, 502, 499, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 503, 514, 475, 476, 477,
	108, 110, 109, 478, 479, 480, 344, 526, 527, 521,
	524, 525, 523, 522, 359, 360, 481, 544, 545, 549,
	548, 546, 547, 550, 553, 554, 555, 556, 557, 558,
	560, 559, 551, 552, 529, 528, 530, 531, 532, 533,
	534, 535, 537, 536, 538, 539, 540, 541, 542, 543,
	561, 562, 563, 564, 565, 567, 566, 571, 570, 568,
	569, 573, 572, 482, 483, 111, 112, 113, 114, 115,
	116, 117, 484, 487, 485, 488, 489, 490, 495, 496,
	491, 492, 493, 494, 497, 370, 368, 369, 365, 364,
	363, 423, 428, 429, 431, 515, 516, 517, 518, 519,
	520, 672, 673, 674, 675, 676, 677, 678, 679, 90,
	90, 87, -144, 89, 89, -253, -369, -60, 89, -254,
	-252, 96, 89, 279, -211, -423, 90, -349, -349, -349,
	96, 96, -300, -424, 88, -292, -403, -371, 582, 582,
	-424, 26, -377, -376, -294, 87, 78, 63, 577, 580,
	-424, -424, 88, -424, -424, -424, 89, 89, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	88, -424, -175, -177, -424, 77, -156, -227, 20, -97,
	301, 303, -97, -424, -424, -424, -424, -424, 88, -424,
	-424, 88, -424, 88, -424, -424, -255, -424, -292, 246,
	20, 20, -255, -255, -195, -226, -107, -106, -105, 609,
	-144, -207, -240, 55, 77, 122, 90, 90, 90, 13,
	-210, 223, -411, 47, -415, 48, -232, -252, -173, 383,
	-227, -424, -252, 89, 26, 89, 732, 138, 89, -211,
	-124, -423, 275, -300, 90, 90, -114, -117, -29, 88,
	152, -252, -188, 63, -144, -207, -424, 77, 589, 691,
	-92, -91, -88, 702, 728, -207, -94, -94, -144, -144,
	-144, 88, -424, -424, -424, -107, 88, -104, -103, -292,
	77, 122, -265, -292, -256, -423, -416, 56, -414, 50,
	20, 89, -424, -423, -232, 89, -236, -29, 87, -3,
	275, -324, -374, -325, -326, -5, -6, -350, -82, 578,
	-376, -354, -298, -294, 90, 96, 89, 578, -424, -424,
	-90, 146, 700, 668, -154, 222, -424, 88, -424, 88,
	-424, 88, -292, 246, -105, 88, 26, -251, -417, 48,
	20, -413, 49, 20, 90, -301, -174, -172, -292, 632,
	-394, -393, 574, -404, -400, 119, 144, 101, -402, 670,
	626, 128, 129, -82, -144, 87, -424, -83, 290, 687,
	223, -385, 579, -90, 701, 646, 621, 646, 621, -149,
	-144, -144, -144, -103, -423, -424, 20, 90, 20, 90,
	-424, 88, 23, -316, -62, 643, -391, -392, 77, -395,
	389, 642, 663, 119, 90, 89, -252, 251, -299, -378,
	580, 143, -118, -424, 88, -424, 88, -424, -93, 90,
	90, -172, 639, -329, -156, -392, 77, -391, 77, 14,
	13, -4, 731, 89, 292, -90, 646, 621, -144, -144,
	-424, -61, 27, -173, -390, 259, 254, 257, 33, -390,
	96, -4, -424, -424, 643, 253, 32, 119, -156, -176,
	-175, -175,
}

var yyDef = [...]int{
	880, -2, -2, 882, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	39, 40, 73, 75, 76, 880, 880, 880, 0, 0,
	880, 0, 0, 880, -2, -2, 880, 1611, 0, 880,
	0, 875, 0, -2, 795, 801, 0, 810, -2, 0,
	0, 880, 880, 2256, 2256, 875, 0, 0, 0, 0,
	880, 880, 880, 880, 1637, 1477, 53, 880, 0, 88,
	89, 830, 831, 832, 68, 0, 2254, 881, 1, 3,
	74, 78, 0, 0, 0, 61, 1486, 0, 81, 0,
	0, 884, 0, 0, 1594, -2, 880, 880, 0, 129,
	130, 0, 0, 0, -2, 133, -2, 162, 163, 164,
	0, 169, 606, 527, 579, 525, 564, -2, 513, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 530, 402, 402, 0, 0, -2, 513, 513, 513,
	1596, 0, 0, 0, 561, 464, 402, 402, 402, 0,
	402, 402, 402, 402, 0, 0, 402, 402, 402, 402,
	402, 402, 402, 402, 402, 402, 402, 402, 402, 402,
	402, 402, 402, 1504, 168, 1612, 1609, 1610, 1790, 1791,
	1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801,
	1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811,
	1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821,
	1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831,
	1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841,
	1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851,
	1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861,
	1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871,
	1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881,
	1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891,
	1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901,
	1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911,
	1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921,
	1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931,
	1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941,
	1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951,
	1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961,
	1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971,
	1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981,
	1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991,
	1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001,
	2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,
	2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021,
	2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031,
	2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041,
	2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051,
	2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061,
	2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071,
	2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081,
	2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091,
	2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101,
	2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111,
	2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121,
	2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131,
	2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141,
	2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151,
	2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161,
	2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171,
	2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181,
	2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191,
	2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201,
	2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211,
	2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221,
	2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231,
	2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241,
	2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251,
	2252, 2253, 0, 1588, 0, 719, 983, 0, 876, 877,
	0, 784, 784, 0, 784, 784, 784, 784, 0, 0,
	0, 733, 0, 0, 0, 0, 781, 0, 749, 750,
	0, 781, 0, 756, 787, 0, 0, 762, 784, 784,
	765, 2257, 0, 2257, 2257, 1579, 0, 778, 776, 790,
	791, 43, 794, 797, 798, 799, 800, 803, 0, 814,
	817, 1605, 1606, 0, 819, 826, 843, 844, 0, 48,
	1133, 0, 1005, 0, 1011, -2, 1022, 1039, 1040, 1041,
	1042, 1043, 1045, 1046, 1047, 0, 0, 0, 0, 1052,
	1053, 0, 0, 0, 0, 0, 1114, 0, 0, 0,
	0, 1450, 0, 0, 1412, 1412, 1148, 1412, 1412, 1414,
	1414, 1414, 1842, 1980, 1988, 2164, 1803, 1809, 1810, 1811,
	2110, 2111, 2112, 2113, 2201, 2202, 2206, 1904, 1798, 2177,
	2178, 0, 2253, 1941, 1949, 1950, 1974, 2074, 2187, 1821,
	1969, 2038, 1901, 1923, 1924, 2056, 2057, 1945, 1946, 1927,
	2116, 2118, 2134, 2135, 2120, 2122, 2131, 2137, 2142, 2121,
	2133, 2138, 2151, 2155, 2158, 2159, 2160, 2128, 2126, 2139,
	2143, 2145, 2147, 2153, 2156, 2129, 2127, 2140, 2144, 2146,
	2148, 2154, 2157, 2115, 2119, 2123, 2132, 2150, 2130, 2149,
	2124, 2136, 2141, 2152, 2125, 2117, 1939, 1942, 1930, 1931,
	1933, 1935, 1940, 1947, 1953, 1932, 1952, 1951, 0, 1928,
	1929, 1934, 1944, 1948, 1936, 1937, 1938, 1943, 1954, 1994,
	1993, 1992, 2037, 1965, 2036, 0, 0, 0, 0, 0,
	1793, 1847, 1848, 2161, 1334, 1335, 1336, 1337, 0, 0,
	0, 0, 0, 0, 0, 294, 295, 1463, 1464, 47,
	1132, 1575, 1414, 1414, 1414, 1414, 1414, 1414, 1074, 1075,
	1076, 1077, 1078, 1102, 1103, 1109, 1110, 2051, 2052, 2053,
	2054, 1885, 2196, 1893, 1894, 2033, 2034, 1906, 1907, 2227,
	2228, -2, -2, -2, 235, 236, 237, 238, 239, 240,
	241, 242, 0, 1846, 2175, 2176, 231, 0, 0, 299,
	300, 296, 297, 298, 1116, 1117, 252, 253, 254, 255,
	256, 257, 258, 259, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 271, 272, 273, 274, 275,
	276, 277, 278, 279, 280, 281, 282, 283, 284, 285,
	286, 287, 288, 289, 290, 291, 292, 293, 0, 853,
	0, 0, 0, 0, 0, 0, 1638, 1639, 1486, 0,
	1478, 1477, 66, 0, 880, -2, 0, 0, 0, 0,
	50, 0, 55, 940, 883, 80, 79, 1526, 0, 0,
	0, 62, 1487, 70, 72, 1488, 0, 885, 886, 0,
	916, 920, 0, 0, 0, 1595, 49, 0, 1616, 1594,
	1594, 105, 0, 0, 106, 126, 127, 128, 0, 0,
	112, 113, 1581, 1582, 46, 0, 0, 180, 181, 0,
	44, 429, 0, 176, 0, 422, 361, 0, 1504, 0,
	0, 0, 0, 0, 880, 0, 1589, 157, 158, 165,
	166, 167, 402, 402, 402, 576, 0, 0, 168, 168,
	534, 535, 536, 0, 0, -2, 427, 0, 514, 0,
	0, 416, 416, 420, 418, 419, 0, 0, 0, 0,
	0, 0, 0, 0, 553, 0, 554, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 667, 0, 403, 0,
	574, 575, 465, 0, 0, 0, 0, 0, 0, 0,
	0, 1597, 1598, 0, 551, 552, 0, 0, 0, 402,
	402, 0, 0, 0, 0, 402, 402, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 156, 1517, 0, 0, 0,
	-2, 0, 711, 0, 0, 0, 1590, 1590, 0, 718,
	0, 0, 0, 723, 0, 0, 724, 0, 781, 781,
	779, 780, 726, 727, 728, 729, 784, 0, 0, 411,
	412, 413, 781, 784, 0, 784, 784, 784, 784, 781,
	781, 781, 784, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2257, 787, 784, 0, 757, 0, 758, 759,
	760, 763, 764, 766, 2258, 2259, 1607, 1608, 1640, 1641,
	1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651,
	1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661,
	1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671,
	1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681,
	1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691,
	1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701,
	1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711,
	1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721,
	1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731,
	1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741,
	1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751,
	1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761,
	1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771,
	1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781,
	1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 2257, 2257,
	770, 774, 1580, 796, 802, 804, 805, 0, 0, 815,
	818, 837, 52, 1892, 825, 52, 827, 828, 829, 855,
	856, 861, 0, 0, 0, 0, 867, 868, 869, 0,
	0, 872, 873, 874, 0, 0, 0, 0, 0, 1003,
	0, 0, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1023, 1024, 0,
	0, 0, 1048, 1049, 1050, 1051, 1054, 0, 1065, 0,
	1067, 1459, -2, 0, 0, 0, 1059, 1060, 0, 0,
	0, 0, 0, 0, 0, 1451, 0, 0, 1146, 0,
	1147, 1149, 1150, 1151, 0, 1152, 1153, 890, 890, 890,
	890, 890, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 890, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1600, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 144, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 900,
	0, 0, 900, 900, 0, 0, 223, 224, 225, 226,
	227, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 301, 249, 250, 251, 1132, 0, 0, 0,
	845, 846, 0, 966, 1600, 0, 0, 896, 0, 1636,
	60, 69, 71, 1486, 64, 1486, 0, 902, 0, 0,
	-2, -2, 903, 909, 910, 911, 912, 913, 57, 2255,
	58, 0, 77, 0, 51, 0, 0, 0, 0, 375,
	1529, 0, 0, 1479, 1480, 1483, 0, 917, 1986, 921,
	0, 923, 924, 0, 0, 103, 0, 982, 0, 0,
	0, 0, 114, 0, 116, 117, 0, 0, 0, 386,
	1583, 1584, 1585, -2, 409, 0, 386, 370, 309, 310,
	311, 361, 313, 361, 361, 361, 361, 375, 375, 375,
	375, 344, 345, 346, 347, 348, 0, 0, 330, 361,
	361, 361, 361, 351, 352, 353, 354, 355, 356, 357,
	358, 314, 315, 316, 317, 318, 319, 320, 321, 322,
	363, 363, 363, 363, 363, 367, 367, 0, 45, 0,
	390, 0, 1483, 0, 0, 1517, 1592, 1602, 0, 0,
	0, 1592, 135, 0, 0, 0, 577, 617, 528, 565,
	578, 0, 531, 532, -2, 0, 0, 513, 0, 515,
	0, 410, 0, -2, 0, 420, 0, 416, 420, 417,
	420, 408, 421, 555, 556, 557, 0, 559, 560, 647,
	952, 0, 0, 0, 0, 0, 653, 654, 655, 0,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	566, 567, 568, 569, 570, 571, 572, 573, 0, 0,
	0, 0, 515, 0, 562, 0, 0, 466, 467, 468,
	0, 0, 471, 472, 473, 474, 0, 0, 477, 478,
	479, 969, 970, 480, 481, 506, 507, 508, 482, 483,
	484, 485, 486, 487, 488, 500, 501, 502, 503, 504,
	505, 489, 490, 491, 492, 493, 494, 497, 0, 150,
	1508, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1590, 0, 0, 0,
	0, 899, 984, 1613, 1614, 720, 0, 0, 785, 786,
	0, 414, 415, 784, 784, 730, 771, 0, 784, 734,
	772, 735, 737, 736, 738, 751, 752, 784, 741, 782,
	783, 742, 743, 744, 745, 746, 747, 748, 767, 753,
	754, 755, 788, 0, 792, 793, 768, 769, 0, 0,
	808, 809, 0, 816, 840, 838, 839, 841, 833, 834,
	835, 836, 0, 842, 0, 0, 858, 99, 863, 864,
	865, 866, 878, 871, 1134, 1000, 1001, 1002, 0, 1004,
	1008, 0, 1118, 1120, 1010, 1006, 1012, 1129, 1130, 1131,
	0, 0, 0, 0, 0, 1016, 1020, 1025, 1026, 1027,
	1028, 1029, 0, 1030, 0, 1033, 1034, 1035, 1036, 1037,
	1038, 1044, 1427, 1428, 1429, 1063, 302, 303, 0, 1064,
	0, 0, 0, 0, 0, 0, 0, 0, 1374, 1375,
	1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385,
	1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1133, 0,
	914, 0, 0, 1457, 1454, 0, 0, 0, 1413, 1415,
	0, 0, 0, 891, 892, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401,
	1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411,
	0, 0, 1430, 0, 0, 0, 0, 0, 1450, 0,
	1069, 1070, 1071, 0, 0, 0, 0, 0, 0, 1192,
	0, 0, 0, 0, 1601, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 145, 146, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1338, 1339, 1340, 1341,
	42, 0, 0, 0, 0, 0, 0, 0, 901, 1461,
	0, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1363, 0, 0, 0,
	0, 0, 0, 1573, 0, 0, 848, 849, 851, 0,
	986, 0, 967, 0, 0, 854, 0, 895, 0, 898,
	63, 65, 907, 908, 0, 925, 904, 59, 54, 0,
	0, 944, 1527, 375, 1549, 0, 384, 384, 381, 1489,
	1490, 0, 1482, 1484, 1485, 82, 922, 918, 0, 998,
	0, 0, 981, 0, 0, 928, 930, 931, 932, 964,
	0, 935, 936, 0, 0, 0, 0, 0, 101, 983,
	107, 0, 115, 0, 0, 120, 121, 108, 109, 110,
	111, 0, 606, -2, 461, 182, 184, 185, 186, 177,
	-2, 373, 371, 372, 312, 375, 375, 338, 339, 340,
	341, 342, 343, 0, 0, 331, 332, 333, 334, 323,
	0, 324, 325, 326, 365, 0, 327, 328, 0, 329,
	428, 0, 1491, 391, 392, 394, 402, 0, 397, 398,
	0, 402, 402, 0, 423, 424, 0, 1483, 1508, 0,
	0, 0, 1603, 1602, 1602, 1602, 0, 170, 171, 172,
	173, 174, 175, 642, 0, 0, 618, 640, 641, 168,
	0, 0, 178, 517, 516, 0, 674, 0, 426, 0,
	0, 420, 420, 405, 406, 558, 0, 0, 649, 650,
	651, 652, 0, 0, 0, 544, 455, 0, 545, 546,
	515, 517, 0, 0, 386, 469, 470, 475, 476, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 593, 594, 595, 598, 600, 519, 604, 597,
	599, 601, 519, 605, 1505, 1506, 1507, 0, 0, 712,
	0, 0, 452, 97, 1591, 717, 721, 722, 781, 740,
	773, 781, 732, 739, 761, 806, 807, 812, 820, 821,
	822, 823, 824, 862, 0, 0, 0, 0, 870, 0,
	0, 1009, 1119, 1121, 1013, 0, 1017, 1021, 0, 0,
	0, 0, 0, 1068, 1066, 1461, 0, 0, 0, 1115,
	0, 0, 0, 1137, 1138, 0, 0, 0, 1455, 0,
	0, 1144, 0, 1416, 1154, 0, 0, 0, 0, 0,
	1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169,
	1477, 1171, 0, 0, 0, 0, 0, 1176, 1177, 1178,
	1179, 1180, 0, 1182, 0, 1183, 0, 0, 0, 0,
	1190, 1191, 1193, 0, 0, 1196, 1197, 0, 1199, 0,
	1201, 1202, 1203, 1204, 1205, 1206, 0, 1208, 0, 1210,
	1211, 1212, 0, 1214, 0, 1216, 1217, 0, 1219, 0,
	1221, 0, 1224, 0, 1227, 0, 1230, 0, 1233, 0,
	1236, 0, 1239, 0, 1242, 0, 1245, 0, 1248, 0,
	1251, 0, 1254, 0, 1257, 0, 1260, 0, 1263, 0,
	1266, 0, 1269, 1270, 1271, 0, 1273, 0, 1275, 0,
	1278, 1279, 0, 1281, 0, 1284, 0, 1287, 0, 0,
	1288, 0, 0, 0, 1292, 0, 0, 0, 0, 1301,
	1302, 1303, 1304, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1315, 1316, 1317, 1318, 1319, 1320, 0,
	1322, 0, 1097, 0, 0, 1097, 0, 0, 0, 0,
	0, 1135, 900, 0, 1417, 1418, 1419, 1420, 1421, 0,
	0, 0, 0, 0, 0, 1361, 1362, 1364, 0, 0,
	1367, 0, 1369, 0, 1574, 847, 850, 852, 938, 987,
	988, 0, 0, 0, 0, 968, 1599, 893, 894, 897,
	946, 0, 1465, 0, 0, 925, 998, 926, 0, 905,
	56, 941, 0, 1531, 1530, 1543, 1556, 384, 384, 378,
	379, 385, 380, 382, 383, 1481, 0, 1486, 0, 1567,
	0, 0, 1559, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 971, 0, 0, 974, 0, 0, 0, 0,
	965, 936, 0, 937, 0, -2, 0, 0, 95, 96,
	0, 0, 0, 118, 119, 0, 0, 125, 387, 388,
	159, 168, 463, 183, 436, 0, 0, 308, 374, 335,
	336, 337, 0, 359, 0, 0, 0, 0, 457, 131,
	1495, 1494, 402, 402, 393, 0, 396, 0, 0, 0,
	1604, 362, 425, 0, 149, 0, 0, 0, 0, 0,
	155, 612, 0, 0, 619, 0, 0, 0, 526, 0,
	537, 538, 0, 646, -2, 708, 390, 0, 404, 407,
	953, 0, 0, 539, 0, 542, 543, 456, 517, 548,
	549, 563, 550, 498, 499, 496, 0, 0, 1518, 1519,
	1524, 1522, 1523, 136, 584, 586, 590, 585, 589, 0,
	0, 0, 521, 0, 521, 582, 0, 452, 1491, 0,
	716, 453, 454, 784, 784, 857, 100, 0, 860, 0,
	0, 0, 0, 1014, 1018, 1031, 1032, 1422, 1448, 361,
	361, 1435, 361, 367, 1438, 361, 1440, 361, 1443, 361,
	1446, 1447, 0, 0, 1061, 0, 915, 0, 0, 1143,
	1458, 0, 0, 1155, 1156, 1157, 1158, 1159, 1452, 0,
	0, 0, 1175, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 147, 148, 0, 0, 0, 0, 0,
	0, 1372, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1092, 1096, 0, 1098, 1099, 0, 0,
	1324, 0, 0, 1342, 0, 0, 0, 0, 0, 0,
	0, 1462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 989, 994, 994, 994, 0, 0, 0, 1586,
	1587, 1466, 1467, 998, 1468, 927, 906, 945, 1549, 0,
	1542, 0, -2, 1551, 0, 0, 0, 1557, 376, 377,
	919, 83, 999, 86, 0, 1567, 1576, 0, 1558, 1569,
	1571, 0, 0, 0, 1563, 0, 0, 998, 929, 960,
	962, 0, 957, 972, 973, 975, 0, 977, 0, 979,
	980, 940, 934, 0, 103, 0, 998, 998, 102, 0,
	985, 122, 123, 124, 462, 187, 192, 0, 0, 0,
	197, 0, 199, 0, 0, 0, 204, 205, 402, 402,
	437, 0, 305, 307, 0, 0, 190, 375, 0, 375,
	0, 366, 368, 0, 438, 458, 1492, 1493, 0, 0,
	395, 399, 400, 401, 0, 1593, 151, 0, 0, 0,
	615, 0, 643, 0, 0, 0, 0, 0, 0, 179,
	518, 675, 676, 677, 678, 679, 680, 681, 682, 683,
	0, 402, 0, 0, 0, 402, 402, 402, 0, 700,
	389, 0, 0, 671, 668, 540, 0, 221, 222, 229,
	230, 232, 0, 0, 0, 0, 0, 547, 940, 1509,
	1510, 1511, 0, 1521, 1525, 139, 0, 0, 0, 0,
	592, 596, 602, 0, 520, 603, 713, 714, 715, 98,
	725, 731, 859, 879, 1007, 1015, 1019, 0, 0, 0,
	0, 1449, 1433, 375, 1436, 1437, 1439, 1441, 1442, 1444,
	1445, 1057, 1058, 1062, 0, 1140, 0, 1142, 1456, 0,
	1486, 0, 0, 0, 1174, 0, 0, 0, 1185, 1184,
	1186, 0, 1188, 1189, 1194, 1195, 1198, 1200, 1207, 1209,
	1213, 1215, 1218, 1220, 1222, 0, 1225, 0, 1228, 0,
	1231, 0, 1234, 0, 1237, 0, 1240, 0, 1243, 0,
	1246, 0, 1249, 0, 1252, 0, 1255, 0, 1258, 0,
	1261, 0, 1264, 0, 1267, 0, 1272, 1274, 0, 1277,
	1280, 1282, 0, 1285, 0, 1289, 0, 1291, 1293, 1294,
	0, 0, 0, 1305, 1306, 1307, 1308, 1309, 1310, 1311,
	1312, 1313, 1314, 1321, 0, 1090, 1093, 1323, 1100, 1101,
	1106, 1326, 0, 0, 0, 1329, 0, 0, 0, 1333,
	1136, 1344, 0, 1349, 0, 0, 1355, 0, 1359, 0,
	1365, 1366, 1368, 1370, 0, 0, 0, 0, 0, 966,
	947, 67, 1468, 1470, 0, 1536, 1534, 1534, 1544, 1545,
	0, 0, 1552, 0, 0, 0, 0, 87, 0, 0,
	0, 1572, 0, 0, 0, 0, 104, 1619, 1477, 954,
	961, 0, 0, 955, 0, 956, 976, 978, 933, 0,
	998, 998, 93, 94, 0, 193, 0, 195, 0, 198,
	200, 201, 202, 208, 209, 210, 203, 0, 0, 304,
	306, 0, 0, 349, 360, 350, 0, 0, 1496, 1497,
	1498, 1499, 1500, 1501, 1502, 1503, 940, 152, 153, 154,
	607, 0, 617, 0, 942, 0, 610, 0, 529, 0,
	0, 0, 402, 402, 402, 0, 0, 0, 0, 685,
	0, 0, 648, 0, 656, 0, 0, 0, 233, 234,
	0, 1520, 583, 0, 137, 138, 0, 0, 588, 522,
	523, 1055, 0, 0, 0, 1056, 1434, 0, 0, 0,
	0, 1453, 0, 0, 0, 0, 1181, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1297,
	0, 0, 0, 637, 638, 0, 1373, 1095, 1477, 0,
	1097, 1107, 1108, 0, 1097, 1343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 995, 0, 0,
	0, 0, 986, 1470, 1475, 0, 0, 1539, 0, 1532,
	1535, 1533, 1546, 0, 0, 1553, 0, 1555, 0, 1577,
	1578, 1570, 0, 1562, 1565, 1561, 1564, 1621, 1623, 1633,
	1634, 1486, 958, 0, 963, 0, 1477, 92, 0, 196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 206,
	207, 0, 0, 364, 369, 0, 0, 0, 608, 0,
	943, 620, 611, 0, 698, 0, 702, 0, 0, 0,
	705, 706, 707, 684, 0, 688, 430, 672, 669, 670,
	541, 0, 140, 141, 0, 0, 0, 1423, 0, 1426,
	1139, 1141, 0, 1170, 1172, 1173, 1431, 1432, 1187, 1223,
	1226, 1229, 1232, 1235, 1238, 1241, 1244, 1247, 1250, 1253,
	1256, 1259, 1262, 1265, 1268, 1276, 1283, 1286, 1290, 1295,
	0, 1298, 0, 0, 1299, 0, 639, 1086, 0, 0,
	1104, 1105, 0, 1328, 1330, 1331, 1332, 1345, 0, 1350,
	1351, 0, 1356, 0, 1360, 1371, 0, 991, 948, 949,
	996, 997, 0, 0, 939, 1475, 85, 1476, 1473, 0,
	1471, 1469, 1528, 0, 1537, 1538, 1547, 1548, 1554, 0,
	1560, 0, 1617, 1629, 1625, 0, 90, 0, 0, 0,
	1486, 194, 0, 213, 0, 616, 0, 619, 609, 696,
	697, 0, 709, 701, 703, 704, 686, -2, 1512, 0,
	0, 0, 591, 1424, 0, 0, 1300, 0, 635, 636,
	1094, 1087, 0, 1072, 1073, 1091, 1325, 1327, 0, 0,
	0, 0, 990, 992, 993, 84, 0, 1472, 1112, 0,
	1540, 1541, 1568, 1566, 1635, 0, 1631, 0, 1627, 0,
	0, 959, 966, 0, 91, 443, 436, 1512, 0, 0,
	0, 689, 690, 691, 692, 693, 694, 695, 580, 1514,
	142, 143, 0, 510, 511, 512, 136, 0, 1145, 1296,
	1088, 0, 0, 0, 0, 0, 1346, 0, 1352, 0,
	1357, 0, 950, 951, 1474, 0, 0, 0, 1622, 0,
	0, 1620, 0, 0, 1624, 621, 0, 623, 0, -2,
	431, 444, 0, 188, 214, 215, 0, 0, 218, 219,
	220, 211, 212, 132, 0, 0, 710, 0, 1515, 1516,
	0, 139, 0, 0, 1079, 1080, 1081, 1082, 1084, 0,
	0, 0, 0, 1113, 1092, 1618, 0, 1630, 0, 1626,
	622, 0, 0, 386, 0, 632, 432, 433, 0, 439,
	440, 441, 442, 216, 217, 644, 0, 0, 509, 587,
	1425, 0, 0, 1347, 0, 1353, 0, 1358, 0, 1632,
	1628, 624, 625, 633, 0, 434, 0, 435, 0, 0,
	0, 613, 0, 644, 1513, 1089, 1083, 1085, 0, 0,
	1111, 0, 634, 630, 445, 447, 448, 0, 0, 446,
	645, 614, 1348, 1354, 0, 449, 450, 451, 626, 627,
	628, 629,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 145, 3, 3, 3, 173, 165, 3,
	87, 89, 170, 168, 88, 169, 223, 171, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 733,
	153, 152, 154, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 175, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 141, 3, 176,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 142, 143, 144, 146,
	147, 148, 149, 150, 151, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 166, 167, 172, 174, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 58022, 697, 58023, 698, 58024, 699,
	58025, 700, 58026, 701, 58027, 702, 58028, 703, 58029, 704,
	58030, 705, 58031, 706, 58032, 707, 58033, 708, 58034, 709,
	58035, 710, 58036, 711, 58037, 712, 58038, 713, 58039, 714,
	58040, 715, 58041, 716, 58042, 717, 58043, 718, 58044, 719,
	58045, 720, 58046, 721, 58047, 722, 58048, 723, 58049, 724,
	58050, 725, 58051, 726, 58052, 727, 58053, 728, 58054, 729,
	58055, 730, 58056, 731, 58057, 732, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:605
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:618
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:619
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:623
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:663
		{
			setParseTree(yylex, nil)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:669
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:675
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 44:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:680
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:684
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:690
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:694
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:700
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:706
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:712
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:716
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:721
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:725
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:731
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:735
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:741
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:747
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:751
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:755
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:778
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:784
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:789
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:795
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:802
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:808
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:815
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 67:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:819
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:825
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:829
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:833
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:837
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:841
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:847
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:851
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:856
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:860
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:866
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:870
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:875
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:881
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:887
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:894
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:900
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:908
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:912
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:918
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = getAliasedTableExprFromTableName(yyDollar[4].tableName)
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:930
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: getAliasedTableExprFromTableName(yyDollar[4].tableName), Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:942
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:946
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:952
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:958
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:962
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:966
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:970
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:975
		{
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:976
		{
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:980
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:984
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:990
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:994
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1000
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1004
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 103:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1009
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1013
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1019
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1025
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1029
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1035
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1039
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1043
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1047
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1053
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1057
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1061
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1067
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1071
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1077
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1081
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1087
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1091
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1095
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1101
		{
			yyVAL.str = RepeatableReadStr
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1105
		{
			yyVAL.str = ReadCommittedStr
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1109
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1113
		{
			yyVAL.str = SerializableStr
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1119
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1123
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1127
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1133
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1139
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1146
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1155
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1159
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1166
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1170
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1175
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1179
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1185
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1190
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1195
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1201
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1206
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1212
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 144:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1217
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1221
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1227
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1231
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1237
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 149:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1243
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1250
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1257
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1262
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1267
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1272
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1279
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1286
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1297
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1304
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1308
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1314
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1318
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1322
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1326
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1330
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1334
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 168:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1340
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1344
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1350
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1354
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1360
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1364
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1370
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1374
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1380
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1384
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1390
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1394
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1400
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1405
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1410
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1414
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1419
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1423
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1427
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 187:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1438
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1447
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1456
		{
			yyVAL.str = ""
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1460
		{
			yyVAL.str = ""
		}
	case 191:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1469
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1473
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1479
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1485
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1490
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyDollar[1].columnTypeOptionsUnion().DefaultLiteral = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1496
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1501
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1506
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1511
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1516
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1520
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1525
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1529
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1534
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1540
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1546
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 207:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1550
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1556
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1560
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1564
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1570
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1574
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1579
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1583
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1588
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1594
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1600
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1605
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1610
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1616
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1624
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1631
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1635
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1639
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1643
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1647
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1651
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("sysdate"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1661
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1668
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1672
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1678
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1682
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1686
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1690
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1694
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1698
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1702
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1706
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1710
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1714
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1718
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1722
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1726
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1730
		{
			arg := parseBindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: arg}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1735
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1739
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1743
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1749
		{
			yyVAL.str = Armscii8Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1753
		{
			yyVAL.str = ASCIIStr
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1757
		{
			yyVAL.str = Big5Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1761
		{
			yyVAL.str = UBinaryStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1765
		{
			yyVAL.str = Cp1250Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1769
		{
			yyVAL.str = Cp1251Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1773
		{
			yyVAL.str = Cp1256Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1777
		{
			yyVAL.str = Cp1257Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1781
		{
			yyVAL.str = Cp850Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1785
		{
			yyVAL.str = Cp852Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1789
		{
			yyVAL.str = Cp866Str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1793
		{
			yyVAL.str = Cp932Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1797
		{
			yyVAL.str = Dec8Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1801
		{
			yyVAL.str = EucjpmsStr
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1805
		{
			yyVAL.str = EuckrStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1809
		{
			yyVAL.str = Gb18030Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1813
		{
			yyVAL.str = Gb2312Str
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1817
		{
			yyVAL.str = GbkStr
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1821
		{
			yyVAL.str = Geostd8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1825
		{
			yyVAL.str = GreekStr
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1829
		{
			yyVAL.str = HebrewStr
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1833
		{
			yyVAL.str = Hp8Str
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1837
		{
			yyVAL.str = Keybcs2Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1841
		{
			yyVAL.str = Koi8rStr
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1845
		{
			yyVAL.str = Koi8uStr
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1849
		{
			yyVAL.str = Latin1Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1853
		{
			yyVAL.str = Latin2Str
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1857
		{
			yyVAL.str = Latin5Str
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1861
		{
			yyVAL.str = Latin7Str
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1865
		{
			yyVAL.str = MacceStr
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1869
		{
			yyVAL.str = MacromanStr
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1873
		{
			yyVAL.str = SjisStr
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1877
		{
			yyVAL.str = Swe7Str
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1881
		{
			yyVAL.str = Tis620Str
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1885
		{
			yyVAL.str = Ucs2Str
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1889
		{
			yyVAL.str = UjisStr
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1893
		{
			yyVAL.str = Utf16Str
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1897
		{
			yyVAL.str = Utf16leStr
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1901
		{
			yyVAL.str = Utf32Str
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1905
		{
			yyVAL.str = Utf8mb3Str
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1909
		{
			yyVAL.str = Utf8mb4Str
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1913
		{
			yyVAL.str = Utf8mb3Str
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1923
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1927
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1931
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1937
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1941
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1945
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1951
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1955
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1961
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1965
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1969
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1973
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1979
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1990
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1995
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2001
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2005
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2009
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2013
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2017
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2021
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2025
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2029
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2033
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2039
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2045
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2051
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2057
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2063
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2069
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2075
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2083
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2087
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2091
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2095
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2099
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2105
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2109
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2115
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2119
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2123
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2127
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2131
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2135
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2139
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2143
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2147
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2151
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2155
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2159
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 349:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2163
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 350:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2168
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2174
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2178
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2182
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2186
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2190
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2194
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2198
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2202
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2208
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2213
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2218
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2222
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2227
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2231
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2240
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2244
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 367:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2251
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2255
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2261
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2269
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2273
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2277
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2282
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2286
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2291
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2295
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2299
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2303
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2307
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2312
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2317
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2322
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2327
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2333
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2337
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2342
		{
			yyVAL.str = ""
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2346
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2350
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 389:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2356
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2361
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2365
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2371
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2375
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2381
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2385
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2390
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2394
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2398
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2402
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2406
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2410
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2416
		{
			yyVAL.str = ""
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2420
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 404:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2426
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2430
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2434
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2438
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2442
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2447
		{
			yyVAL.str = ""
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2451
		{
			yyVAL.str = yyDollar[2].str
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2457
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2461
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2465
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2471
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2475
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 416:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2480
		{
			yyVAL.str = "key"
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2484
		{
			yyVAL.str = yyDollar[1].str
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2490
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2494
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 420:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2499
		{
			yyVAL.str = ""
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2503
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2509
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2513
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2519
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2523
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2529
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2533
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2539
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2543
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2549
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2555
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2559
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2563
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2567
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2571
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2576
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2580
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2586
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2592
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2598
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2602
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2606
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2611
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2615
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2621
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2627
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2633
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2637
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2641
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2645
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2649
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2654
		{
			yyVAL.str = ""
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2658
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2662
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2668
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2672
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2677
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2681
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2686
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2690
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2696
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2700
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2704
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2710
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2714
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2720
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2724
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2728
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2732
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2736
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2740
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2744
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2748
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2752
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2756
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2760
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2764
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2768
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2772
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2776
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2780
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2784
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2788
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2792
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2796
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2800
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2804
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2808
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2812
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2816
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2820
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2824
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2828
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2832
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2836
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2840
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2845
		{
			yyVAL.str = ""
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2849
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2853
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2872
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2876
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2880
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2884
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2889
		{
			yyVAL.str = ""
		}
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2895
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2899
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2904
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2908
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2913
		{
			yyVAL.str = ""
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2917
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2922
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2926
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2930
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2935
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2939
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2943
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2947
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2951
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 529:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2955
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2961
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2965
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2969
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2975
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2979
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2983
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2987
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2991
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2995
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2999
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3003
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion(), DefaultLiteral: true}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3007
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3011
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3016
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3021
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3025
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3029
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3033
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3037
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3041
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3045
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3049
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3053
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3057
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3061
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3065
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3069
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3073
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3077
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3081
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3085
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3089
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3093
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3097
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3103
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3107
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3113
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3117
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3121
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3125
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3129
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3133
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3137
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3141
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3145
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3149
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3155
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3162
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3169
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3176
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3182
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3192
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3199
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3206
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3218
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3228
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3232
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3236
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3249
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3259
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3263
		{
			yyLOCAL = &AlterVschema{Action: DropSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3267
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3278
		{
			yyLOCAL = &AlterVschema{
				Action: DropAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3285
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3292
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3299
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3306
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3314
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3320
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3327
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3333
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3340
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3346
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3355
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3363
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3370
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3377
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3381
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3390
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3398
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3407
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3414
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3422
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3426
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3435
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3446
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3450
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3455
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3459
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3464
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3468
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3474
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3480
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3486
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3490
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3496
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3500
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3506
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3512
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3518
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3524
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3530
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3534
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3538
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3542
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3548
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3554
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3560
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3564
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3568
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3574
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3578
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3583
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3587
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3592
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3596
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3602
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3606
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3610
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3614
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3618
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3622
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3626
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3630
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3634
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3638
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3642
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3646
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3650
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3654
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3658
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3662
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3666
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3670
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3674
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3678
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3682
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3686
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3691
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3695
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3699
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3705
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3709
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3715
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3720
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3724
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3729
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3734
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3739
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3744
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3749
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3755
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3761
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3766
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3772
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3778
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3782
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3788
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3793
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3797
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3802
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3807
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3812
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3817
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3823
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3829
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3836
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3843
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3850
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3858
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3862
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3868
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3874
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3880
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3886
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3892
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3898
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3904
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3910
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3916
		{
			yyVAL.str = ""
		}
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3920
		{
			yyVAL.str = ""
		}
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3926
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3932
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3936
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 714:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3942
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3946
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3955
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3959
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3965
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3969
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3975
		{
			yyLOCAL = &Analyze{IsLocal: yyDollar[2].booleanUnion(), Table: yyDollar[4].tableName}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3981
		{
			yyLOCAL = &PurgeBinaryLogs{To: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3985
		{
			yyLOCAL = &PurgeBinaryLogs{Before: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3991
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3995
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3999
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4003
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4007
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4011
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4015
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4019
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4023
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4027
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4031
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4035
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4039
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4043
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4047
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4051
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4055
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4059
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4063
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4067
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4071
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4075
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4079
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4083
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4087
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4091
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4095
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4099
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4103
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4107
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4111
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4115
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4119
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4123
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4127
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4131
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4135
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4139
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4143
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4147
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4151
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4155
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4159
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4166
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4170
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4174
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4178
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4182
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4186
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4190
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4194
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4198
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4204
		{
			yyVAL.str = ""
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4208
		{
			yyVAL.str = "extended "
		}
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4214
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4218
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4224
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4228
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4234
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4238
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4242
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4248
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4252
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4256
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4262
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4266
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4272
		{
			yyVAL.empty = struct{}{}
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4276
		{
			yyVAL.empty = struct{}{}
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4280
		{
			yyVAL.empty = struct{}{}
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4286
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4290
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4296
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4300
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4304
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4311
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4315
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4319
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4323
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4330
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4334
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4339
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4343
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4349
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4353
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4359
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4363
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4367
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4374
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4380
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4384
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4389
		{
			yyVAL.empty = struct{}{}
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4391
		{
			yyVAL.empty = struct{}{}
		}
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4394
		{
			yyVAL.empty = struct{}{}
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4396
		{
			yyVAL.empty = struct{}{}
		}
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4400
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4406
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4411
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4415
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4419
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4423
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4427
		{
			yyLOCAL = VTExplainType
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4431
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4435
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4440
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4444
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4448
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4452
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4458
		{
			yyVAL.str = yyDollar[1].str
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4462
		{
			yyVAL.str = yyDollar[1].str
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4466
		{
			yyVAL.str = yyDollar[1].str
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4472
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4476
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4480
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4484
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4489
		{
			yyVAL.str = ""
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4493
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4497
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 840:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4503
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4507
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4513
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4519
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4523
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4529
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4535
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4539
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4545
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4551
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4555
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4559
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4563
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4569
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4575
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4581
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4585
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4589
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4593
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4597
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4601
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4607
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4611
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4617
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4621
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4625
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4629
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4633
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4637
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4641
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4645
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4649
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4653
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4657
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4661
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4666
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4670
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4674
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4679
		{
			yyVAL.str = ""
		}
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4683
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4688
		{
			setAllowComments(yylex, true)
		}
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4692
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4698
		{
			yyVAL.strs = nil
		}
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4702
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4708
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4712
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4716
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4721
		{
			yyVAL.str = ""
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4725
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4729
		{
			yyVAL.str = SQLCacheStr
		}
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4734
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4738
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4742
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4748
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4752
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4762
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4767
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4771
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4777
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4781
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4786
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4790
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4795
		{
			yyVAL.strs = nil
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4799
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4803
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4807
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 906:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4811
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4817
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4821
		{
			yyVAL.str = SQLCacheStr
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4825
		{
			yyVAL.str = DistinctStr
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4829
		{
			yyVAL.str = DistinctStr
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4833
		{
			yyVAL.str = StraightJoinHint
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4837
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4841
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4847
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4851
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4857
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4861
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4865
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4869
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4874
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4878
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4882
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4889
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 925:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4894
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4898
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4904
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4910
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4914
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4924
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4928
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4932
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4936
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4942
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4946
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4952
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4956
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4961
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4965
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4970
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4974
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4980
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4984
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4990
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4994
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5000
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5004
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5008
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5012
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5018
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5022
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 954:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5035
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5039
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5043
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5047
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5053
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 959:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5055
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5059
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5061
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 962:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5065
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5067
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 964:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5070
		{
			yyVAL.empty = struct{}{}
		}
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5072
		{
			yyVAL.empty = struct{}{}
		}
	case 966:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5075
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5079
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5083
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5090
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5096
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5100
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5104
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5110
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5116
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5120
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5124
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5128
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5134
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5138
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5148
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5152
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5158
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5162
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5168
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 986:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5173
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5177
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5183
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5187
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 990:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5193
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5197
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5201
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5205
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5210
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5214
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5218
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5222
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5228
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5232
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5239
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5243
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5247
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5251
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5255
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5259
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5263
		{
			yyLOCAL = &AssignmentExpr{Left: yyDollar[1].variableUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5267
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5273
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5277
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5281
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5285
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5291
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5295
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5299
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5303
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5307
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5311
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5315
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5319
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5323
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5327
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5331
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5337
		{
		}
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5340
		{
		}
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5346
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5350
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5354
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5358
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5362
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5366
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5370
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAdd, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5374
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinarySub, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5378
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5382
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5386
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5390
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5394
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5398
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5402
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5408
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5412
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5416
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5420
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5424
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5428
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5432
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5436
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5440
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5444
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5448
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5452
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5456
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5460
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5464
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5468
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5472
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5476
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5480
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5484
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5492
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5496
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAddLeft, Date: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion(), Interval: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5500
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5504
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5508
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5514
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5518
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5524
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5528
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5534
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5538
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5542
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5548
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5552
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5559
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5563
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5567
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5571
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5575
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5581
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5585
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5589
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5593
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5597
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5601
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5605
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5610
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5614
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5620
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5624
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5629
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5633
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5638
		{
		}
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5641
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5647
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5653
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5657
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5662
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5669
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5675
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5679
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5685
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5689
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5695
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5699
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5704
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5711
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5717
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5721
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5727
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5733
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5737
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1114:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5743
		{
			yyVAL.str = ""
		}
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5747
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5753
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5757
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5764
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5768
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5772
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5776
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5782
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5786
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5790
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5794
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5798
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5802
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5806
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5812
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5816
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5820
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			markBindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5827
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5833
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5837
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5847
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5851
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5861
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5865
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5869
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5873
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5877
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5881
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5885
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5889
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5893
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5897
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5908
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5912
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5918
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5922
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("curdate")}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5926
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5931
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("curtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5936
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5940
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5944
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5948
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5952
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5956
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5960
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5964
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5968
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5972
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5976
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5980
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5984
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5988
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5992
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5996
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6000
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6004
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6008
		{
			yyLOCAL = &AnyValue{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6012
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprTimestampadd, Date: yyDollar[7].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6016
		{
			yyLOCAL = &TimestampDiffExpr{Unit: yyDollar[3].intervalTypeUnion(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6020
		{
			yyLOCAL = &ExtractFuncExpr{IntervalType: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6024
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6028
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6032
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6036
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6040
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, Type: LeadingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6044
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, Type: TrailingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6048
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6052
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6056
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6060
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6064
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6068
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6072
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6076
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6080
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6084
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6088
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6092
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6096
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6100
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6104
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6108
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6112
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6116
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6120
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6124
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6128
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsEmpty, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6132
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsSimple, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6136
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Dimension, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6140
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Envelope, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6144
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: GeometryType, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6148
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6152
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6156
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6160
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6164
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: EndPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6168
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: IsClosed, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6172
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6176
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6180
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: NumPoints, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6184
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: PointN, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6188
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: StartPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6192
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6196
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6200
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6204
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6208
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6212
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6216
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6220
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6224
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6228
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6232
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6236
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6240
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6244
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6248
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6252
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6256
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6260
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6264
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6268
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6272
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6276
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6280
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6284
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6288
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6292
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6296
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6300
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6304
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6308
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6312
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6316
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6320
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6324
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6328
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6332
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6336
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6340
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6344
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6348
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6352
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6356
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6360
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6364
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6368
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6372
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6376
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6380
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6384
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6388
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6392
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6396
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6400
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Area, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6404
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Centroid, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6408
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: ExteriorRing, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6412
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: InteriorRingN, Polygon: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6416
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: NumInteriorRings, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6420
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: GeometryN, GeomColl: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6424
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: NumGeometries, GeomColl: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6428
		{
			yyLOCAL = &GeoHashFromLatLongExpr{Longitude: yyDollar[3].exprUnion(), Latitude: yyDollar[5].exprUnion(), MaxLength: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6432
		{
			yyLOCAL = &GeoHashFromPointExpr{Point: yyDollar[3].exprUnion(), MaxLength: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6436
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LatitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6440
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LongitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6444
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: PointFromHash, GeoHash: yyDollar[3].exprUnion(), SridOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6448
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6452
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6456
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion(), Srid: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6460
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6464
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6468
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion(), Bitmask: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6472
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6476
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6480
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6484
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6488
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6492
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6496
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6500
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6504
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6508
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6512
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6516
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6520
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6524
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6528
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6532
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6536
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6540
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6544
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6548
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6552
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6556
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6560
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6564
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6568
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6572
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6576
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6580
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6584
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6588
		{
			yyLOCAL = &MultiPolygonExpr{PolygonParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6592
		{
			yyLOCAL = &MultiPointExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6596
		{
			yyLOCAL = &MultiLinestringExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6600
		{
			yyLOCAL = &PolygonExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6604
		{
			yyLOCAL = &LineStringExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6608
		{
			yyLOCAL = &PointExpr{XCordinate: yyDollar[3].exprUnion(), YCordinate: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6612
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6616
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6620
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6624
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6628
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6632
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6636
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6640
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6644
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateAdd, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6648
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateSub, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6652
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6656
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6666
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6670
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6674
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6678
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6683
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6687
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6693
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6697
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6701
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6705
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6709
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6714
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6718
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6722
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6726
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6730
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6734
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6739
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6743
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6747
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6751
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6758
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6762
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6768
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6772
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6776
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6780
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6786
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6790
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6794
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6798
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6802
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6806
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6810
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6815
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6819
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6825
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6829
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6833
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6837
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6841
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6845
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6849
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6853
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6857
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6861
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6865
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6869
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6873
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6877
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6881
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6885
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6889
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6893
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6897
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6901
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6907
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6911
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6915
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6919
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6923
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6927
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6931
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6935
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6939
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6943
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6947
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6951
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6955
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6959
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6963
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6967
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6971
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6975
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:6985
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:6989
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:6993
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7003
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7007
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7011
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7015
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7019
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7025
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7029
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7033
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7037
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7041
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7047
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7051
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7055
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1430:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7061
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7065
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7069
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7075
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7079
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7083
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7087
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7091
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7097
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7101
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7105
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7109
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7113
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7117
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7121
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7125
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7129
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7133
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7139
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7143
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7148
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7152
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7157
		{
			yyVAL.str = string("")
		}
	case 1453:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7161
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7167
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7171
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1456:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7177
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7182
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7186
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7192
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7196
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7200
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7204
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7210
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7214
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7220
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7229
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7233
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7238
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7242
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7247
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7251
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7257
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7263
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7267
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1475:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7272
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7276
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7281
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7285
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7291
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7297
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7301
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1482:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7307
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7312
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7316
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7320
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7325
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7329
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7335
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7339
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7343
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7348
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7352
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7356
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7360
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7364
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7371
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7375
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7379
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7383
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7389
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7393
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7397
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7401
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7406
		{
			yyVAL.str = ""
		}
	case 1505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7410
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7414
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7418
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1508:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7423
		{
			yyVAL.str = ""
		}
	case 1509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7427
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7433
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7437
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1512:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7442
		{
			yyVAL.str = ""
		}
	case 1513:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7446
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1514:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7451
		{
			yyVAL.str = "cascaded"
		}
	case 1515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7455
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7459
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7464
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7468
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7474
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7480
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7486
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7495
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7499
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1524:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7504
		{
			yyVAL.str = ""
		}
	case 1525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7508
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7514
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7518
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7524
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7528
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7532
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7537
		{
			yyVAL.str = ""
		}
	case 1532:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7541
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1533:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7545
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1534:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7550
		{
			yyVAL.str = ""
		}
	case 1535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7554
		{
			yyVAL.str = " header"
		}
	case 1536:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7559
		{
			yyVAL.str = ""
		}
	case 1537:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7563
		{
			yyVAL.str = " manifest on"
		}
	case 1538:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7567
		{
			yyVAL.str = " manifest off"
		}
	case 1539:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7572
		{
			yyVAL.str = ""
		}
	case 1540:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7576
		{
			yyVAL.str = " overwrite on"
		}
	case 1541:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7580
		{
			yyVAL.str = " overwrite off"
		}
	case 1542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7586
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1543:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7591
		{
			yyVAL.str = ""
		}
	case 1544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7595
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7601
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7605
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7611
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7615
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1549:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7620
		{
			yyVAL.str = ""
		}
	case 1550:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7624
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7630
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1552:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7634
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7640
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1554:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7644
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7648
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1556:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7653
		{
			yyVAL.str = ""
		}
	case 1557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7657
		{
			yyVAL.str = " optionally"
		}
	case 1558:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7670
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7674
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7678
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7682
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7686
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7692
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7696
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7700
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1566:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7704
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1567:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7709
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7713
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7719
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7723
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1571:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7729
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7733
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7739
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7743
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7748
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7758
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7762
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7768
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7775
		{
			yyVAL.str = "charset"
		}
	case 1583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7785
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7789
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7793
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7802
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7804
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7807
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7809
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7812
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7814
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7817
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7819
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7822
		{
			yyVAL.empty = struct{}{}
		}
	case 1597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7824
		{
			yyVAL.empty = struct{}{}
		}
	case 1598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7826
		{
			yyVAL.empty = struct{}{}
		}
	case 1599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7830
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7835
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7839
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7844
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7846
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7850
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7856
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7860
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7867
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7873
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7877
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1611:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7883
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7887
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7894
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1615:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7899
		{
			yyVAL.str = ""
		}
	case 1616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7903
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1617:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7908
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7912
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1619:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL interface{}
//line sql.y:7917
		{
			escape := "\\"
			yyLOCAL = &FieldsClause{
				Terminated: "\t",
				Escaped:    escape[0],
			}
		}
		yyVAL.union = yyLOCAL
	case 1620:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL interface{}
//line sql.y:7925
		{
			escape := yyDollar[4].itemUnion().(string)
			if escape != "\\" && len(escape) > 1 {
				yylex.Error("Incorrect arguments  to ESCAPE")
				return 1
			}
			var enclosed byte
			str := yyDollar[3].itemUnion().(string)
			if len(str) > 1 {
				yylex.Error("Incorrect arguments  to ENCLOSED")
				return 1
			} else if len(str) != 0 {
				enclosed = str[0]
			}
			yyLOCAL = &FieldsClause{
				Terminated: yyDollar[2].itemUnion().(string),
				Enclosed:   enclosed,
				Escaped:    escape[0],
			}
		}
		yyVAL.union = yyLOCAL
	case 1621:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL interface{}
//line sql.y:7947
		{
			yyLOCAL = &LinesClause{Terminated: "\n"}
		}
		yyVAL.union = yyLOCAL
	case 1622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL interface{}
//line sql.y:7951
		{
			yyLOCAL = &LinesClause{Starting: yyDollar[2].itemUnion().(string), Terminated: yyDollar[3].itemUnion().(string)}
		}
		yyVAL.union = yyLOCAL
	case 1623:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL interface{}
//line sql.y:7956
		{
			yyLOCAL = "\t"
		}
		yyVAL.union = yyLOCAL
	case 1624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL interface{}
//line sql.y:7960
		{
			yyLOCAL = string(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1625:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL interface{}
//line sql.y:7965
		{
			yyLOCAL = ""
		}
		yyVAL.union = yyLOCAL
	case 1626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL interface{}
//line sql.y:7969
		{
			yyLOCAL = string(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1627:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL interface{}
//line sql.y:7974
		{
			yyLOCAL = "\\"
		}
		yyVAL.union = yyLOCAL
	case 1628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL interface{}
//line sql.y:7978
		{
			yyLOCAL = string(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1629:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL interface{}
//line sql.y:7983
		{
			yyLOCAL = ""
		}
		yyVAL.union = yyLOCAL
	case 1630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL interface{}
//line sql.y:7987
		{
			yyLOCAL = string(yyDollar[3].str)

		}
		yyVAL.union = yyLOCAL
	case 1631:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL interface{}
//line sql.y:7993
		{
			yyLOCAL = "\n"
		}
		yyVAL.union = yyLOCAL
	case 1632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL interface{}
//line sql.y:7997
		{
			yyLOCAL = string(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1635:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8006
		{
			x := &LoadDataStmt{
				Action:  string(yyDollar[1].str),
				Path:    string(yyDollar[5].str),
				Table:   yyDollar[8].tableName,
				Columns: yyDollar[11].columnsUnion(),
			}
			if yyDollar[3].str != "" {
				x.IsLocal = true
			}
			if yyDollar[9].itemUnion() != nil {
				x.FieldsInfo = yyDollar[9].itemUnion().(*FieldsClause)
			}
			if yyDollar[10].itemUnion() != nil {
				x.LinesInfo = yyDollar[10].itemUnion().(*LinesClause)
			}
			yyLOCAL = x
		}
		yyVAL.union = yyLOCAL
	case 1636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8027
		{
			yyLOCAL = &Kill{Type: yyDollar[2].killTypeUnion(), ProcesslistID: convertStringToUInt64(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 1637:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8033
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8037
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8041
		{
			yyLOCAL = QueryType
		}
		yyVAL.union = yyLOCAL
	case 2254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8684
		{
		}
	case 2255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8689
		{
		}
	case 2256:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8693
		{
			skipToEnd(yylex)
		}
	case 2257:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8698
		{
			skipToEnd(yylex)
		}
	case 2258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8702
		{
			skipToEnd(yylex)
		}
	case 2259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8706
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
