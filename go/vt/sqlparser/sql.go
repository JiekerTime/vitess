// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func markBindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const SELECT = 57351
const STREAM = 57352
const VSTREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const DEFAULT = 57374
const SET = 57375
const LOCK = 57376
const UNLOCK = 57377
const KEYS = 57378
const DO = 57379
const CALL = 57380
const DISTINCTROW = 57381
const PARSER = 57382
const GENERATED = 57383
const ALWAYS = 57384
const OUTFILE = 57385
const S3 = 57386
const DATA = 57387
const LOAD = 57388
const LINES = 57389
const TERMINATED = 57390
const ESCAPED = 57391
const ENCLOSED = 57392
const DUMPFILE = 57393
const CSV = 57394
const HEADER = 57395
const MANIFEST = 57396
const OVERWRITE = 57397
const STARTING = 57398
const OPTIONALLY = 57399
const VALUES = 57400
const LAST_INSERT_ID = 57401
const NEXT = 57402
const VALUE = 57403
const SHARE = 57404
const MODE = 57405
const SQL_NO_CACHE = 57406
const SQL_CACHE = 57407
const SQL_CALC_FOUND_ROWS = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const ON = 57419
const USING = 57420
const INPLACE = 57421
const COPY = 57422
const INSTANT = 57423
const ALGORITHM = 57424
const NONE = 57425
const SHARED = 57426
const EXCLUSIVE = 57427
const SUBQUERY_AS_EXPR = 57428
const STRING = 57429
const ID = 57430
const AT_ID = 57431
const AT_AT_ID = 57432
const HEX = 57433
const NCHAR_STRING = 57434
const INTEGRAL = 57435
const FLOAT = 57436
const DECIMAL = 57437
const HEXNUM = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BITNUM = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const VALUE_ARG = 57444
const LIST_ARG = 57445
const OFFSET_ARG = 57446
const JSON_PRETTY = 57447
const JSON_STORAGE_SIZE = 57448
const JSON_STORAGE_FREE = 57449
const JSON_CONTAINS = 57450
const JSON_CONTAINS_PATH = 57451
const JSON_EXTRACT = 57452
const JSON_KEYS = 57453
const JSON_OVERLAPS = 57454
const JSON_SEARCH = 57455
const JSON_VALUE = 57456
const EXTRACT = 57457
const NULL = 57458
const TRUE = 57459
const FALSE = 57460
const OFF = 57461
const DISCARD = 57462
const IMPORT = 57463
const ENABLE = 57464
const DISABLE = 57465
const TABLESPACE = 57466
const VIRTUAL = 57467
const STORED = 57468
const BOTH = 57469
const LEADING = 57470
const TRAILING = 57471
const EMPTY_FROM_CLAUSE = 57472
const LOWER_THAN_CHARSET = 57473
const CHARSET = 57474
const UNIQUE = 57475
const KEY = 57476
const EXPRESSION_PREC_SETTER = 57477
const OR = 57478
const XOR = 57479
const AND = 57480
const NOT = 57481
const BETWEEN = 57482
const CASE = 57483
const WHEN = 57484
const THEN = 57485
const ELSE = 57486
const END = 57487
const LE = 57488
const GE = 57489
const NE = 57490
const NULL_SAFE_EQUAL = 57491
const IS = 57492
const LIKE = 57493
const REGEXP = 57494
const RLIKE = 57495
const IN = 57496
const ASSIGNMENT_OPT = 57497
const SHIFT_LEFT = 57498
const SHIFT_RIGHT = 57499
const DIV = 57500
const MOD = 57501
const UNARY = 57502
const COLLATE = 57503
const BINARY = 57504
const UNDERSCORE_ARMSCII8 = 57505
const UNDERSCORE_ASCII = 57506
const UNDERSCORE_BIG5 = 57507
const UNDERSCORE_BINARY = 57508
const UNDERSCORE_CP1250 = 57509
const UNDERSCORE_CP1251 = 57510
const UNDERSCORE_CP1256 = 57511
const UNDERSCORE_CP1257 = 57512
const UNDERSCORE_CP850 = 57513
const UNDERSCORE_CP852 = 57514
const UNDERSCORE_CP866 = 57515
const UNDERSCORE_CP932 = 57516
const UNDERSCORE_DEC8 = 57517
const UNDERSCORE_EUCJPMS = 57518
const UNDERSCORE_EUCKR = 57519
const UNDERSCORE_GB18030 = 57520
const UNDERSCORE_GB2312 = 57521
const UNDERSCORE_GBK = 57522
const UNDERSCORE_GEOSTD8 = 57523
const UNDERSCORE_GREEK = 57524
const UNDERSCORE_HEBREW = 57525
const UNDERSCORE_HP8 = 57526
const UNDERSCORE_KEYBCS2 = 57527
const UNDERSCORE_KOI8R = 57528
const UNDERSCORE_KOI8U = 57529
const UNDERSCORE_LATIN1 = 57530
const UNDERSCORE_LATIN2 = 57531
const UNDERSCORE_LATIN5 = 57532
const UNDERSCORE_LATIN7 = 57533
const UNDERSCORE_MACCE = 57534
const UNDERSCORE_MACROMAN = 57535
const UNDERSCORE_SJIS = 57536
const UNDERSCORE_SWE7 = 57537
const UNDERSCORE_TIS620 = 57538
const UNDERSCORE_UCS2 = 57539
const UNDERSCORE_UJIS = 57540
const UNDERSCORE_UTF16 = 57541
const UNDERSCORE_UTF16LE = 57542
const UNDERSCORE_UTF32 = 57543
const UNDERSCORE_UTF8 = 57544
const UNDERSCORE_UTF8MB4 = 57545
const UNDERSCORE_UTF8MB3 = 57546
const INTERVAL = 57547
const WINDOW_EXPR = 57548
const JSON_EXTRACT_OP = 57549
const JSON_UNQUOTE_EXTRACT_OP = 57550
const CREATE = 57551
const ALTER = 57552
const DROP = 57553
const RENAME = 57554
const ANALYZE = 57555
const ADD = 57556
const FLUSH = 57557
const CHANGE = 57558
const MODIFY = 57559
const DEALLOCATE = 57560
const REVERT = 57561
const QUERIES = 57562
const SCHEMA = 57563
const TABLE = 57564
const INDEX = 57565
const VIEW = 57566
const TO = 57567
const IGNORE = 57568
const IF = 57569
const PRIMARY = 57570
const COLUMN = 57571
const SPATIAL = 57572
const FULLTEXT = 57573
const KEY_BLOCK_SIZE = 57574
const CHECK = 57575
const INDEXES = 57576
const ACTION = 57577
const CASCADE = 57578
const CONSTRAINT = 57579
const FOREIGN = 57580
const NO = 57581
const REFERENCES = 57582
const RESTRICT = 57583
const SHOW = 57584
const DESCRIBE = 57585
const EXPLAIN = 57586
const DATE = 57587
const ESCAPE = 57588
const REPAIR = 57589
const OPTIMIZE = 57590
const TRUNCATE = 57591
const COALESCE = 57592
const EXCHANGE = 57593
const REBUILD = 57594
const PARTITIONING = 57595
const REMOVE = 57596
const PREPARE = 57597
const EXECUTE = 57598
const MAXVALUE = 57599
const PARTITION = 57600
const REORGANIZE = 57601
const LESS = 57602
const THAN = 57603
const PROCEDURE = 57604
const TRIGGER = 57605
const VINDEX = 57606
const VINDEXES = 57607
const DIRECTORY = 57608
const NAME = 57609
const UPGRADE = 57610
const STATUS = 57611
const VARIABLES = 57612
const WARNINGS = 57613
const CASCADED = 57614
const DEFINER = 57615
const OPTION = 57616
const SQL = 57617
const UNDEFINED = 57618
const SEQUENCE = 57619
const MERGE = 57620
const TEMPORARY = 57621
const TEMPTABLE = 57622
const INVOKER = 57623
const SECURITY = 57624
const FIRST = 57625
const AFTER = 57626
const LAST = 57627
const VITESS_MIGRATION = 57628
const CANCEL = 57629
const RETRY = 57630
const LAUNCH = 57631
const COMPLETE = 57632
const CLEANUP = 57633
const THROTTLE = 57634
const UNTHROTTLE = 57635
const EXPIRE = 57636
const RATIO = 57637
const VITESS_THROTTLER = 57638
const BEGIN = 57639
const START = 57640
const TRANSACTION = 57641
const COMMIT = 57642
const ROLLBACK = 57643
const SAVEPOINT = 57644
const RELEASE = 57645
const WORK = 57646
const CONSISTENT = 57647
const SNAPSHOT = 57648
const BIT = 57649
const TINYINT = 57650
const SMALLINT = 57651
const MEDIUMINT = 57652
const INT = 57653
const INTEGER = 57654
const BIGINT = 57655
const INTNUM = 57656
const REAL = 57657
const DOUBLE = 57658
const FLOAT_TYPE = 57659
const FLOAT4_TYPE = 57660
const FLOAT8_TYPE = 57661
const DECIMAL_TYPE = 57662
const NUMERIC = 57663
const TIME = 57664
const TIMESTAMP = 57665
const DATETIME = 57666
const YEAR = 57667
const CHAR = 57668
const VARCHAR = 57669
const BOOL = 57670
const CHARACTER = 57671
const VARBINARY = 57672
const NCHAR = 57673
const TEXT = 57674
const TINYTEXT = 57675
const MEDIUMTEXT = 57676
const LONGTEXT = 57677
const BLOB = 57678
const TINYBLOB = 57679
const MEDIUMBLOB = 57680
const LONGBLOB = 57681
const JSON = 57682
const JSON_SCHEMA_VALID = 57683
const JSON_SCHEMA_VALIDATION_REPORT = 57684
const ENUM = 57685
const GEOMETRY = 57686
const POINT = 57687
const LINESTRING = 57688
const POLYGON = 57689
const GEOMCOLLECTION = 57690
const GEOMETRYCOLLECTION = 57691
const MULTIPOINT = 57692
const MULTILINESTRING = 57693
const MULTIPOLYGON = 57694
const ASCII = 57695
const UNICODE = 57696
const NULLX = 57697
const AUTO_INCREMENT = 57698
const APPROXNUM = 57699
const SIGNED = 57700
const UNSIGNED = 57701
const ZEROFILL = 57702
const PURGE = 57703
const BEFORE = 57704
const CODE = 57705
const COLLATION = 57706
const COLUMNS = 57707
const DATABASES = 57708
const ENGINES = 57709
const EVENT = 57710
const EXTENDED = 57711
const FIELDS = 57712
const FULL = 57713
const FUNCTION = 57714
const GTID_EXECUTED = 57715
const KEYSPACES = 57716
const OPEN = 57717
const PLUGINS = 57718
const PRIVILEGES = 57719
const PROCESSLIST = 57720
const SCHEMAS = 57721
const TABLES = 57722
const TRIGGERS = 57723
const USER = 57724
const VGTID_EXECUTED = 57725
const VITESS_KEYSPACES = 57726
const VITESS_METADATA = 57727
const VITESS_MIGRATIONS = 57728
const VITESS_REPLICATION_STATUS = 57729
const VITESS_SHARDS = 57730
const VITESS_TABLETS = 57731
const VITESS_TARGET = 57732
const VSCHEMA = 57733
const VITESS_THROTTLED_APPS = 57734
const NAMES = 57735
const GLOBAL = 57736
const SESSION = 57737
const ISOLATION = 57738
const LEVEL = 57739
const READ = 57740
const WRITE = 57741
const ONLY = 57742
const REPEATABLE = 57743
const COMMITTED = 57744
const UNCOMMITTED = 57745
const SERIALIZABLE = 57746
const ADDDATE = 57747
const CURRENT_TIMESTAMP = 57748
const DATABASE = 57749
const CURRENT_DATE = 57750
const CURDATE = 57751
const DATE_ADD = 57752
const DATE_SUB = 57753
const NOW = 57754
const SUBDATE = 57755
const CURTIME = 57756
const CURRENT_TIME = 57757
const LOCALTIME = 57758
const LOCALTIMESTAMP = 57759
const CURRENT_USER = 57760
const UTC_DATE = 57761
const UTC_TIME = 57762
const UTC_TIMESTAMP = 57763
const SYSDATE = 57764
const DAY = 57765
const DAY_HOUR = 57766
const DAY_MICROSECOND = 57767
const DAY_MINUTE = 57768
const DAY_SECOND = 57769
const HOUR = 57770
const HOUR_MICROSECOND = 57771
const HOUR_MINUTE = 57772
const HOUR_SECOND = 57773
const MICROSECOND = 57774
const MINUTE = 57775
const MINUTE_MICROSECOND = 57776
const MINUTE_SECOND = 57777
const MONTH = 57778
const QUARTER = 57779
const SECOND = 57780
const SECOND_MICROSECOND = 57781
const YEAR_MONTH = 57782
const WEEK = 57783
const REPLACE = 57784
const CONVERT = 57785
const CAST = 57786
const SUBSTR = 57787
const SUBSTRING = 57788
const SEPARATOR = 57789
const TIMESTAMPADD = 57790
const TIMESTAMPDIFF = 57791
const WEIGHT_STRING = 57792
const LTRIM = 57793
const RTRIM = 57794
const TRIM = 57795
const JSON_ARRAY = 57796
const JSON_OBJECT = 57797
const JSON_QUOTE = 57798
const JSON_DEPTH = 57799
const JSON_TYPE = 57800
const JSON_LENGTH = 57801
const JSON_VALID = 57802
const JSON_ARRAY_APPEND = 57803
const JSON_ARRAY_INSERT = 57804
const JSON_INSERT = 57805
const JSON_MERGE = 57806
const JSON_MERGE_PATCH = 57807
const JSON_MERGE_PRESERVE = 57808
const JSON_REMOVE = 57809
const JSON_REPLACE = 57810
const JSON_SET = 57811
const JSON_UNQUOTE = 57812
const COUNT = 57813
const AVG = 57814
const MAX = 57815
const MIN = 57816
const SUM = 57817
const GROUP_CONCAT = 57818
const BIT_AND = 57819
const BIT_OR = 57820
const BIT_XOR = 57821
const STD = 57822
const STDDEV = 57823
const STDDEV_POP = 57824
const STDDEV_SAMP = 57825
const VAR_POP = 57826
const VAR_SAMP = 57827
const VARIANCE = 57828
const REGEXP_INSTR = 57829
const REGEXP_LIKE = 57830
const REGEXP_REPLACE = 57831
const REGEXP_SUBSTR = 57832
const ExtractValue = 57833
const UpdateXML = 57834
const GET_LOCK = 57835
const RELEASE_LOCK = 57836
const RELEASE_ALL_LOCKS = 57837
const IS_FREE_LOCK = 57838
const IS_USED_LOCK = 57839
const LOCATE = 57840
const POSITION = 57841
const ST_GeometryCollectionFromText = 57842
const ST_GeometryFromText = 57843
const ST_LineStringFromText = 57844
const ST_MultiLineStringFromText = 57845
const ST_MultiPointFromText = 57846
const ST_MultiPolygonFromText = 57847
const ST_PointFromText = 57848
const ST_PolygonFromText = 57849
const ST_GeometryCollectionFromWKB = 57850
const ST_GeometryFromWKB = 57851
const ST_LineStringFromWKB = 57852
const ST_MultiLineStringFromWKB = 57853
const ST_MultiPointFromWKB = 57854
const ST_MultiPolygonFromWKB = 57855
const ST_PointFromWKB = 57856
const ST_PolygonFromWKB = 57857
const ST_AsBinary = 57858
const ST_AsText = 57859
const ST_Dimension = 57860
const ST_Envelope = 57861
const ST_IsSimple = 57862
const ST_IsEmpty = 57863
const ST_GeometryType = 57864
const ST_X = 57865
const ST_Y = 57866
const ST_Latitude = 57867
const ST_Longitude = 57868
const ST_EndPoint = 57869
const ST_IsClosed = 57870
const ST_Length = 57871
const ST_NumPoints = 57872
const ST_StartPoint = 57873
const ST_PointN = 57874
const ST_Area = 57875
const ST_Centroid = 57876
const ST_ExteriorRing = 57877
const ST_InteriorRingN = 57878
const ST_NumInteriorRings = 57879
const ST_NumGeometries = 57880
const ST_GeometryN = 57881
const ST_LongFromGeoHash = 57882
const ST_PointFromGeoHash = 57883
const ST_LatFromGeoHash = 57884
const ST_GeoHash = 57885
const ST_AsGeoJSON = 57886
const ST_GeomFromGeoJSON = 57887
const MATCH = 57888
const AGAINST = 57889
const BOOLEAN = 57890
const LANGUAGE = 57891
const WITH = 57892
const QUERY = 57893
const EXPANSION = 57894
const WITHOUT = 57895
const VALIDATION = 57896
const UNUSED = 57897
const ARRAY = 57898
const BYTE = 57899
const CUME_DIST = 57900
const DESCRIPTION = 57901
const DENSE_RANK = 57902
const EMPTY = 57903
const EXCEPT = 57904
const FIRST_VALUE = 57905
const GROUPING = 57906
const GROUPS = 57907
const JSON_TABLE = 57908
const LAG = 57909
const LAST_VALUE = 57910
const LATERAL = 57911
const LEAD = 57912
const INFILE = 57913
const NTH_VALUE = 57914
const NTILE = 57915
const OF = 57916
const OVER = 57917
const PERCENT_RANK = 57918
const RANK = 57919
const RECURSIVE = 57920
const ROW_NUMBER = 57921
const SYSTEM = 57922
const WINDOW = 57923
const ACTIVE = 57924
const ADMIN = 57925
const AUTOEXTEND_SIZE = 57926
const BUCKETS = 57927
const CLONE = 57928
const COLUMN_FORMAT = 57929
const COMPONENT = 57930
const DEFINITION = 57931
const ENFORCED = 57932
const ENGINE_ATTRIBUTE = 57933
const EXCLUDE = 57934
const FOLLOWING = 57935
const GET_MASTER_PUBLIC_KEY = 57936
const HISTOGRAM = 57937
const HISTORY = 57938
const INACTIVE = 57939
const INVISIBLE = 57940
const LOCKED = 57941
const MASTER_COMPRESSION_ALGORITHMS = 57942
const MASTER_PUBLIC_KEY_PATH = 57943
const MASTER_TLS_CIPHERSUITES = 57944
const MASTER_ZSTD_COMPRESSION_LEVEL = 57945
const NESTED = 57946
const NETWORK_NAMESPACE = 57947
const NOWAIT = 57948
const NULLS = 57949
const OJ = 57950
const OLD = 57951
const OPTIONAL = 57952
const ORDINALITY = 57953
const ORGANIZATION = 57954
const OTHERS = 57955
const PARTIAL = 57956
const PATH = 57957
const PERSIST = 57958
const PERSIST_ONLY = 57959
const PRECEDING = 57960
const PRIVILEGE_CHECKS_USER = 57961
const PROCESS = 57962
const RANDOM = 57963
const REFERENCE = 57964
const REQUIRE_ROW_FORMAT = 57965
const RESOURCE = 57966
const RESPECT = 57967
const RESTART = 57968
const RETAIN = 57969
const REUSE = 57970
const ROLE = 57971
const SECONDARY = 57972
const SECONDARY_ENGINE = 57973
const SECONDARY_ENGINE_ATTRIBUTE = 57974
const SECONDARY_LOAD = 57975
const SECONDARY_UNLOAD = 57976
const SIMPLE = 57977
const SKIP = 57978
const SRID = 57979
const THREAD_PRIORITY = 57980
const TIES = 57981
const UNBOUNDED = 57982
const VCPU = 57983
const VISIBLE = 57984
const RETURNING = 57985
const FORMAT_BYTES = 57986
const FORMAT_PICO_TIME = 57987
const PS_CURRENT_THREAD_ID = 57988
const PS_THREAD_ID = 57989
const GTID_SUBSET = 57990
const GTID_SUBTRACT = 57991
const WAIT_FOR_EXECUTED_GTID_SET = 57992
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 57993
const FORMAT = 57994
const TREE = 57995
const VITESS = 57996
const TRADITIONAL = 57997
const VTEXPLAIN = 57998
const VEXPLAIN = 57999
const PLAN = 58000
const LOCAL = 58001
const LOW_PRIORITY = 58002
const NO_WRITE_TO_BINLOG = 58003
const LOGS = 58004
const ERROR = 58005
const GENERAL = 58006
const HOSTS = 58007
const OPTIMIZER_COSTS = 58008
const USER_RESOURCES = 58009
const SLOW = 58010
const CHANNEL = 58011
const RELAY = 58012
const EXPORT = 58013
const CURRENT = 58014
const ROW = 58015
const ROWS = 58016
const AVG_ROW_LENGTH = 58017
const CONNECTION = 58018
const CHECKSUM = 58019
const DELAY_KEY_WRITE = 58020
const ENCRYPTION = 58021
const ENGINE = 58022
const INSERT_METHOD = 58023
const MAX_ROWS = 58024
const MIN_ROWS = 58025
const PACK_KEYS = 58026
const PASSWORD = 58027
const FIXED = 58028
const DYNAMIC = 58029
const COMPRESSED = 58030
const REDUNDANT = 58031
const COMPACT = 58032
const ROW_FORMAT = 58033
const STATS_AUTO_RECALC = 58034
const STATS_PERSISTENT = 58035
const STATS_SAMPLE_PAGES = 58036
const STORAGE = 58037
const MEMORY = 58038
const DISK = 58039
const PARTITIONS = 58040
const LINEAR = 58041
const RANGE = 58042
const LIST = 58043
const SUBPARTITION = 58044
const SUBPARTITIONS = 58045
const HASH = 58046

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"ASSIGNMENT_OPT",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"PURGE",
	"BEFORE",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ADDDATE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURDATE",
	"DATE_ADD",
	"DATE_SUB",
	"NOW",
	"SUBDATE",
	"CURTIME",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"SYSDATE",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"ST_GeometryCollectionFromText",
	"ST_GeometryFromText",
	"ST_LineStringFromText",
	"ST_MultiLineStringFromText",
	"ST_MultiPointFromText",
	"ST_MultiPolygonFromText",
	"ST_PointFromText",
	"ST_PolygonFromText",
	"ST_GeometryCollectionFromWKB",
	"ST_GeometryFromWKB",
	"ST_LineStringFromWKB",
	"ST_MultiLineStringFromWKB",
	"ST_MultiPointFromWKB",
	"ST_MultiPolygonFromWKB",
	"ST_PointFromWKB",
	"ST_PolygonFromWKB",
	"ST_AsBinary",
	"ST_AsText",
	"ST_Dimension",
	"ST_Envelope",
	"ST_IsSimple",
	"ST_IsEmpty",
	"ST_GeometryType",
	"ST_X",
	"ST_Y",
	"ST_Latitude",
	"ST_Longitude",
	"ST_EndPoint",
	"ST_IsClosed",
	"ST_Length",
	"ST_NumPoints",
	"ST_StartPoint",
	"ST_PointN",
	"ST_Area",
	"ST_Centroid",
	"ST_ExteriorRing",
	"ST_InteriorRingN",
	"ST_NumInteriorRings",
	"ST_NumGeometries",
	"ST_GeometryN",
	"ST_LongFromGeoHash",
	"ST_PointFromGeoHash",
	"ST_LatFromGeoHash",
	"ST_GeoHash",
	"ST_AsGeoJSON",
	"ST_GeomFromGeoJSON",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"INFILE",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	13, 51,
	14, 51,
	-2, 40,
	-1, 53,
	1, 159,
	722, 159,
	-2, 167,
	-1, 54,
	135, 167,
	177, 167,
	346, 167,
	-2, 523,
	-1, 62,
	36, 772,
	240, 772,
	251, 772,
	286, 786,
	287, 786,
	-2, 774,
	-1, 67,
	242, 810,
	-2, 808,
	-1, 113,
	588, 1593,
	-2, 2220,
	-1, 122,
	239, 1566,
	-2, 133,
	-1, 124,
	1, 160,
	722, 160,
	-2, 167,
	-1, 135,
	136, 408,
	245, 408,
	-2, 512,
	-1, 154,
	135, 167,
	177, 167,
	346, 167,
	-2, 532,
	-1, 722,
	163, 41,
	-2, 45,
	-1, 927,
	87, 1583,
	-2, 1437,
	-1, 928,
	87, 1584,
	222, 1588,
	-2, 1438,
	-1, 929,
	222, 1587,
	-2, 42,
	-1, 1008,
	60, 884,
	-2, 899,
	-1, 1098,
	250, 43,
	255, 43,
	-2, 419,
	-1, 1183,
	1, 580,
	722, 580,
	-2, 167,
	-1, 1486,
	222, 1588,
	-2, 1438,
	-1, 1692,
	60, 885,
	-2, 904,
	-1, 1693,
	60, 886,
	-2, 905,
	-1, 1745,
	135, 167,
	177, 167,
	346, 167,
	-2, 458,
	-1, 1826,
	136, 408,
	245, 408,
	-2, 512,
	-1, 1835,
	250, 44,
	255, 44,
	-2, 420,
	-1, 2253,
	222, 1592,
	-2, 1586,
	-1, 2254,
	222, 1588,
	-2, 1584,
	-1, 2355,
	135, 167,
	177, 167,
	346, 167,
	-2, 459,
	-1, 2362,
	26, 188,
	-2, 190,
	-1, 2815,
	78, 98,
	88, 98,
	-2, 963,
	-1, 2884,
	697, 696,
	-2, 670,
	-1, 3091,
	50, 1534,
	-2, 1528,
	-1, 3912,
	697, 696,
	-2, 684,
	-1, 4014,
	90, 628,
	95, 628,
	105, 628,
	179, 628,
	180, 628,
	181, 628,
	182, 628,
	183, 628,
	184, 628,
	185, 628,
	186, 628,
	187, 628,
	188, 628,
	189, 628,
	190, 628,
	191, 628,
	192, 628,
	193, 628,
	194, 628,
	195, 628,
	196, 628,
	197, 628,
	198, 628,
	199, 628,
	200, 628,
	201, 628,
	202, 628,
	203, 628,
	204, 628,
	205, 628,
	206, 628,
	207, 628,
	208, 628,
	209, 628,
	210, 628,
	211, 628,
	212, 628,
	213, 628,
	214, 628,
	215, 628,
	216, 628,
	217, 628,
	218, 628,
	219, 628,
	220, 628,
	-2, 1972,
}

const yyPrivate = 57344

const yyLast = 54898

var yyAct = [...]int{
	1700, 4096, 4109, 3893, 931, 3985, 4061, 2352, 938, 2078,
	4062, 1748, 3370, 4012, 1250, 1954, 3520, 3943, 3242, 3973,
	2282, 2302, 3144, 3151, 3111, 3873, 3798, 3193, 723, 3202,
	3207, 3204, 3203, 3201, 3206, 3205, 3871, 1024, 2009, 3507,
	896, 5, 2710, 42, 1001, 2748, 3602, 3107, 3044, 2426,
	1707, 726, 3104, 3221, 2787, 3861, 1248, 3108, 3105, 3222,
	3415, 3409, 2284, 3159, 2947, 891, 892, 3607, 753, 2306,
	3092, 3436, 893, 1130, 2322, 3224, 2326, 3102, 897, 2774,
	720, 3401, 2394, 2881, 2414, 2850, 2457, 2851, 2340, 2800,
	2389, 163, 1025, 1060, 1003, 2849, 41, 1196, 2327, 2929,
	3248, 2328, 2780, 1694, 2750, 2766, 2249, 2237, 43, 2204,
	2205, 2435, 2017, 1833, 149, 2413, 2396, 2842, 2474, 1851,
	2314, 2921, 1737, 2817, 1088, 1005, 1716, 1009, 2330, 736,
	99, 3569, 3570, 1674, 3568, 103, 2105, 104, 1498, 1425,
	1804, 1410, 1950, 1840, 1067, 1064, 1027, 1099, 1093, 2411,
	1932, 1068, 2037, 2385, 2101, 1096, 2062, 1736, 1094, 1095,
	1721, 1015, 2250, 724, 1106, 721, 2386, 731, 1045, 1047,
	2155, 1482, 98, 106, 2307, 1458, 1012, 2008, 1239, 84,
	1961, 167, 1246, 1010, 2113, 127, 1799, 132, 133, 125,
	126, 1179, 1825, 83, 730, 1011, 1013, 1225, 105, 1037,
	1502, 3902, 92, 2874, 97, 4097, 1507, 2428, 2429, 2430,
	3928, 3508, 930, 3190, 2428, 2904, 2903, 2472, 2872, 3463,
	2066, 3500, 4039, 1426, 94, 1132, 94, 3212, 2937, 1018,
	2938, 1671, 1053, 1057, 895, 128, 3929, 656, 1149, 1150,
	1151, 1917, 1154, 1155, 1156, 1157, 1135, 134, 1160, 1161,
	1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171,
	1172, 1173, 1174, 1175, 1176, 1032, 1036, 94, 1061, 3923,
	3924, 3573, 1019, 2024, 2, 690, 690, 696, 1004, 3573,
	2023, 2022, 1002, 3210, 1054, 2021, 2040, 3212, 1426, 2020,
	2019, 1055, 1109, 2279, 2280, 1992, 1195, 714, 4033, 715,
	3209, 1110, 190, 1085, 2746, 2519, 128, 716, 1026, 3216,
	1084, 1136, 1139, 1140, 1083, 1082, 1041, 1086, 3088, 110,
	111, 112, 2894, 1143, 116, 1421, 129, 122, 151, 94,
	191, 1436, 3048, 650, 1077, 4119, 1701, 2461, 4060, 172,
	2776, 1442, 1152, 3210, 4065, 709, 710, 947, 948, 949,
	1072, 4087, 3375, 3374, 997, 998, 999, 1000, 3572, 2459,
	1008, 4102, 1053, 1057, 895, 3874, 3572, 4043, 4041, 3216,
	162, 3924, 2897, 190, 128, 2711, 150, 947, 948, 949,
	2029, 2460, 1730, 3267, 2877, 3794, 4101, 3793, 1134, 1042,
	1043, 690, 4042, 4040, 696, 169, 1436, 129, 170, 151,
	2405, 3513, 85, 1133, 3514, 87, 690, 4075, 3804, 4037,
	172, 3907, 3532, 1412, 3521, 3974, 85, 138, 139, 161,
	160, 189, 3213, 2399, 3982, 4022, 3986, 2454, 2528, 3803,
	3531, 2071, 4017, 3287, 2310, 1814, 3141, 3142, 690, 1432,
	2790, 162, 1424, 4020, 1182, 2826, 3140, 150, 2825, 2347,
	2348, 2827, 4026, 4027, 1738, 85, 1739, 1046, 2911, 2912,
	3161, 3162, 2001, 2002, 2747, 2791, 169, 4021, 2936, 170,
	85, 2525, 3990, 2346, 2920, 1243, 1439, 1215, 1440, 1441,
	94, 687, 3213, 1459, 995, 994, 691, 691, 1827, 1828,
	161, 160, 189, 2526, 94, 3894, 3628, 2838, 1203, 1220,
	1221, 3627, 3990, 1204, 1432, 3264, 2875, 1460, 1461, 1462,
	1463, 1464, 1465, 1466, 1468, 1467, 1469, 1470, 1957, 3620,
	3275, 155, 136, 158, 143, 135, 1178, 156, 157, 672,
	2098, 1216, 1203, 94, 173, 2365, 2364, 1204, 1422, 2783,
	2784, 690, 670, 179, 144, 1202, 3412, 1201, 94, 3273,
	690, 1056, 1050, 1048, 1081, 2281, 1188, 1189, 147, 145,
	140, 141, 142, 146, 1209, 1411, 2517, 3244, 690, 3160,
	137, 2398, 2982, 1734, 2000, 704, 2004, 708, 702, 148,
	3249, 3163, 667, 2922, 2310, 1678, 2882, 4066, 1191, 2436,
	1242, 682, 155, 1829, 158, 3845, 1826, 3846, 156, 157,
	1081, 1177, 691, 1222, 1907, 173, 677, 3237, 4067, 2907,
	1153, 2480, 1079, 1223, 179, 3238, 680, 691, 2520, 2521,
	2523, 2522, 2475, 4099, 1933, 1217, 2308, 2309, 2090, 2079,
	2080, 2081, 2082, 2092, 2083, 2084, 2085, 2097, 2093, 2086,
	2087, 2094, 2095, 2096, 2088, 2089, 2091, 1236, 1908, 691,
	1909, 1184, 2495, 1241, 2496, 1958, 2497, 1224, 1210, 3245,
	1076, 1218, 1219, 1078, 2924, 1181, 2481, 164, 2487, 2483,
	2485, 2486, 2484, 2488, 2489, 3502, 3246, 3778, 1232, 3501,
	1234, 1056, 1050, 1048, 657, 4034, 659, 673, 2439, 693,
	2948, 692, 663, 2498, 661, 665, 674, 666, 3498, 660,
	1159, 671, 2479, 1158, 662, 675, 676, 679, 683, 684,
	685, 681, 678, 2477, 669, 694, 1089, 3577, 1231, 1233,
	1090, 1681, 2323, 1090, 1431, 1428, 1429, 1430, 1435, 1437,
	1434, 3047, 1433, 1128, 1127, 1119, 1117, 2983, 164, 1126,
	1080, 1125, 1427, 1124, 2478, 1123, 1122, 1121, 1116, 1818,
	1129, 1473, 691, 1473, 159, 1199, 3163, 1205, 1206, 1207,
	1208, 691, 1081, 1065, 1073, 1065, 2526, 4072, 1102, 1063,
	1180, 1075, 1074, 1493, 2950, 4120, 2308, 2309, 1138, 691,
	2928, 1244, 1245, 1065, 1101, 3901, 1080, 2873, 1137, 1431,
	1428, 1429, 1430, 1435, 1437, 1434, 1101, 1433, 1735, 1951,
	1839, 2876, 1938, 2909, 4113, 2412, 1038, 1427, 2925, 2751,
	2753, 2465, 1484, 3497, 2464, 1947, 3183, 1049, 1812, 1413,
	1079, 1146, 1108, 2458, 1229, 159, 2906, 944, 1230, 944,
	2840, 1811, 1810, 1213, 3115, 2892, 1087, 2941, 1235, 2540,
	1948, 1808, 654, 3413, 2960, 2959, 2958, 1474, 1475, 2952,
	649, 2956, 88, 2951, 2919, 2949, 4035, 2918, 3886, 2456,
	2954, 152, 3450, 1228, 153, 1403, 3431, 2822, 1480, 2953,
	944, 1404, 1405, 2786, 1237, 2723, 2074, 1725, 1633, 1193,
	3056, 3214, 3215, 1120, 1118, 2781, 3055, 2955, 2957, 2402,
	3461, 3462, 124, 655, 3218, 165, 1476, 1477, 1478, 1479,
	2353, 1473, 177, 1470, 3139, 2896, 1490, 2551, 3988, 1838,
	3265, 1453, 1919, 1918, 1920, 1921, 1922, 1108, 1021, 3571,
	1701, 3530, 1240, 3915, 1226, 1107, 1131, 3571, 3493, 1937,
	2403, 2931, 152, 1108, 1198, 153, 2930, 2401, 3988, 4025,
	3987, 3214, 3215, 185, 3425, 2931, 2476, 1049, 1080, 2895,
	2930, 119, 1962, 1504, 3218, 1505, 1506, 1145, 2013, 1944,
	93, 1740, 2968, 2106, 1509, 1510, 165, 2106, 2865, 2560,
	3987, 2404, 2527, 177, 93, 4076, 1420, 2752, 1108, 695,
	1441, 2400, 3616, 4024, 1669, 1190, 166, 171, 168, 174,
	175, 176, 178, 180, 181, 182, 183, 3358, 2551, 1200,
	688, 1187, 184, 186, 187, 188, 1440, 1441, 3468, 1108,
	3467, 1702, 1704, 93, 185, 689, 1941, 2443, 1939, 1940,
	1107, 1942, 1943, 120, 4111, 1111, 1101, 4112, 93, 4110,
	1113, 1848, 1847, 1837, 1114, 1112, 1107, 1212, 2453, 1682,
	1670, 1111, 1101, 1684, 2451, 190, 1113, 1688, 1214, 1685,
	1114, 1112, 1119, 1005, 2455, 1115, 2114, 166, 171, 168,
	174, 175, 176, 178, 180, 181, 182, 183, 1108, 129,
	2115, 1227, 2448, 184, 186, 187, 188, 1197, 1934, 1117,
	1935, 1107, 172, 1936, 1442, 1183, 717, 1101, 1104, 1105,
	4068, 1065, 3451, 2448, 3945, 1098, 1102, 3879, 1686, 1963,
	1687, 1017, 103, 1670, 104, 1639, 1640, 1641, 1642, 1643,
	1644, 2452, 1107, 2242, 2042, 4121, 1097, 1701, 1101, 1104,
	1105, 1459, 1065, 1675, 2111, 2831, 1098, 1102, 2043, 1471,
	1472, 2041, 2450, 1663, 2031, 2033, 2034, 1442, 169, 3946,
	106, 170, 3880, 2598, 4115, 1460, 1461, 1462, 1463, 1464,
	1465, 1466, 1468, 1467, 1469, 1470, 3786, 3785, 2032, 1815,
	1816, 1817, 3776, 3543, 189, 1465, 1466, 1468, 1467, 1469,
	1470, 1107, 3542, 1144, 1442, 1927, 3241, 1141, 2532, 2533,
	2534, 3475, 1845, 1703, 1407, 947, 948, 949, 2242, 3474,
	1831, 1442, 2239, 3527, 1028, 3528, 2586, 1034, 1034, 3464,
	2112, 2241, 4122, 1002, 3191, 1683, 1004, 1824, 1956, 1880,
	3282, 1706, 1883, 3179, 1885, 942, 2847, 711, 2846, 1439,
	1843, 1440, 1441, 2845, 4085, 1902, 1892, 1893, 1459, 696,
	2940, 2408, 1898, 1899, 1884, 1928, 1853, 1912, 1854, 1926,
	1856, 1858, 1731, 1732, 1862, 1864, 1866, 1868, 1870, 1842,
	1911, 1442, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1468,
	1467, 1469, 1470, 1807, 1910, 1900, 1734, 1894, 1459, 1841,
	1841, 1455, 1439, 1456, 1440, 1441, 1701, 173, 1891, 1822,
	1820, 2970, 1689, 4084, 1821, 1834, 179, 1457, 1471, 1472,
	1454, 712, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1468,
	1467, 1469, 1470, 1890, 1889, 1860, 1925, 1966, 1914, 1439,
	4069, 1440, 1441, 1459, 1970, 2539, 1972, 1973, 1974, 1975,
	4054, 1888, 4052, 1979, 1701, 1710, 1439, 1442, 1440, 1441,
	190, 1039, 1442, 1952, 4009, 1991, 1701, 1460, 1461, 1462,
	1463, 1464, 1465, 1466, 1468, 1467, 1469, 1470, 3458, 696,
	3910, 1459, 1813, 3903, 129, 1461, 1462, 1463, 1464, 1465,
	1466, 1468, 1467, 1469, 1470, 128, 3812, 172, 1442, 1084,
	1924, 1711, 1913, 1083, 1082, 1460, 1461, 1462, 1463, 1464,
	1465, 1466, 1468, 1467, 1469, 1470, 1439, 1442, 1440, 1441,
	3909, 1442, 1968, 2829, 696, 2424, 2423, 2422, 2421, 1964,
	1965, 1463, 1464, 1465, 1466, 1468, 1467, 1469, 1470, 3883,
	164, 4081, 1701, 1969, 3882, 1990, 4079, 1701, 1989, 3881,
	1976, 1977, 1978, 169, 2420, 2419, 170, 1460, 1461, 1462,
	1463, 1464, 1465, 1466, 1468, 1467, 1469, 1470, 1446, 1447,
	1448, 1449, 1450, 1451, 1452, 1444, 2772, 4098, 100, 189,
	100, 3781, 3996, 1701, 3811, 102, 3765, 42, 3764, 101,
	42, 101, 1439, 1442, 1440, 1441, 3615, 1439, 1442, 1440,
	1441, 3994, 1701, 4056, 1701, 3992, 1701, 3429, 1701, 1442,
	1438, 1701, 3769, 2069, 2069, 2045, 3613, 2047, 2048, 2049,
	2050, 2051, 2052, 2054, 2056, 2057, 2058, 2059, 2060, 2061,
	2596, 3539, 1442, 1439, 2109, 1440, 1441, 109, 1668, 2110,
	1438, 1701, 3768, 2594, 1701, 1442, 1701, 102, 108, 1667,
	107, 109, 1439, 1666, 1440, 1441, 1439, 3472, 1440, 1441,
	2772, 3981, 108, 2038, 107, 1669, 2772, 3960, 1442, 2133,
	2772, 3956, 1442, 102, 2151, 3936, 1701, 3858, 1701, 3511,
	3900, 3519, 3856, 1701, 3789, 1701, 1484, 2772, 3777, 3511,
	1701, 108, 173, 3853, 1701, 2772, 3509, 2883, 2147, 3457,
	3250, 179, 1442, 2107, 2448, 1701, 1701, 1442, 2678, 1701,
	3424, 3247, 1442, 3182, 2039, 1997, 1998, 1701, 1701, 2549,
	3181, 1670, 2856, 84, 3172, 3171, 84, 2014, 1439, 2548,
	1440, 1441, 1701, 1439, 2843, 1440, 1441, 3169, 3170, 3167,
	3168, 2035, 3167, 3166, 1439, 1665, 1440, 1441, 2797, 1701,
	2818, 2046, 3835, 1701, 2235, 2508, 3400, 1701, 2526, 2905,
	1438, 2044, 2768, 1442, 1803, 2886, 2861, 1439, 165, 1440,
	1441, 2879, 2880, 2772, 2771, 177, 2507, 102, 2253, 2252,
	1439, 2470, 1440, 1441, 2268, 2073, 3393, 1701, 2100, 2102,
	2469, 3390, 1701, 2553, 1701, 2361, 3388, 1701, 2072, 1701,
	1438, 1702, 2275, 1439, 1442, 1440, 1441, 1439, 2325, 1440,
	1441, 1442, 2305, 2819, 2287, 1993, 185, 2067, 2067, 1959,
	2251, 1923, 2238, 2821, 2818, 164, 2070, 2116, 2117, 2118,
	2119, 1442, 1915, 1905, 2299, 2553, 2240, 1439, 1901, 1440,
	1441, 2130, 1439, 1897, 1440, 1441, 3147, 1439, 4070, 1440,
	1441, 1896, 1442, 2292, 1895, 2293, 1803, 1802, 1442, 166,
	171, 168, 174, 175, 176, 178, 180, 181, 182, 183,
	2253, 2320, 2256, 2257, 1712, 184, 186, 187, 188, 1746,
	1745, 2788, 2315, 2316, 1238, 2796, 2362, 2819, 3350, 1701,
	3426, 3148, 103, 3134, 104, 3348, 1701, 2526, 1439, 2145,
	1440, 1441, 2334, 2526, 2788, 2449, 3103, 3941, 3914, 2156,
	2772, 103, 2251, 104, 1442, 3150, 3898, 3424, 2797, 3379,
	3169, 3076, 2345, 2553, 2678, 2583, 1442, 2255, 2298, 2582,
	2258, 2259, 2448, 3145, 2431, 1443, 3807, 2409, 2313, 1439,
	2797, 1440, 1441, 1705, 2277, 2072, 1439, 2015, 1440, 1441,
	3161, 3162, 3476, 2797, 1999, 1946, 1876, 3146, 1733, 2371,
	2372, 2373, 2374, 2448, 1018, 1499, 1439, 2356, 1440, 1441,
	2357, 1442, 1007, 2274, 1092, 2338, 3424, 1091, 2286, 2229,
	2230, 2231, 2232, 2233, 2297, 1442, 94, 1439, 4030, 1440,
	1441, 3152, 1442, 1439, 3963, 1440, 1441, 2300, 3344, 1701,
	3800, 1708, 3766, 3477, 3478, 3479, 3631, 1877, 1878, 1879,
	3341, 1701, 3492, 2318, 3489, 3470, 3292, 2397, 3291, 2391,
	1442, 1805, 2437, 2344, 2366, 2360, 2367, 2368, 2369, 2370,
	1442, 1054, 2343, 2342, 2276, 2359, 2358, 2390, 1055, 2156,
	3239, 2557, 2377, 2378, 2379, 2380, 3196, 1442, 3192, 1439,
	94, 1440, 1441, 165, 2434, 2407, 3773, 2887, 2387, 3160,
	177, 1439, 2382, 1440, 1441, 2376, 2375, 1930, 2852, 3339,
	1701, 3163, 1442, 1836, 1832, 2392, 3337, 1701, 1442, 1801,
	2388, 2442, 121, 3194, 2445, 2406, 2446, 1442, 2410, 2381,
	2383, 2384, 1442, 2418, 3480, 2853, 1182, 3437, 3438, 1442,
	2547, 185, 3243, 3801, 3335, 1701, 1439, 2462, 1440, 1441,
	2392, 2441, 2440, 2444, 2556, 1109, 2853, 1714, 2405, 2290,
	1439, 4093, 1440, 1441, 1110, 4091, 2463, 1439, 1995, 1440,
	1441, 3333, 1701, 4063, 1841, 3922, 3840, 3440, 3188, 3443,
	3187, 3481, 3482, 3483, 166, 171, 168, 174, 175, 176,
	178, 180, 181, 182, 183, 1439, 3445, 1440, 1441, 3186,
	184, 186, 187, 188, 3103, 1439, 2866, 1440, 1441, 2502,
	3442, 3331, 1701, 2473, 3123, 2466, 3329, 1701, 3122, 2467,
	2468, 3126, 1439, 1713, 1440, 1441, 3127, 3149, 3918, 3124,
	1996, 3802, 2510, 2511, 3125, 2304, 3128, 2513, 2806, 2807,
	1872, 2536, 1709, 2538, 2545, 2296, 2514, 1439, 2550, 1440,
	1441, 3430, 2541, 1439, 2542, 1440, 1441, 3093, 3095, 2253,
	2252, 2501, 1439, 3081, 1440, 1441, 3096, 1439, 3080, 1440,
	1441, 2554, 3417, 2555, 1439, 3952, 1440, 1441, 2562, 3606,
	3416, 3878, 2564, 2565, 3608, 3954, 1717, 1873, 1874, 1875,
	2038, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579,
	2580, 2546, 3420, 4007, 4004, 3890, 2587, 2588, 2589, 2590,
	2591, 2516, 2593, 1442, 1022, 2544, 2595, 3888, 1945, 3090,
	2600, 2601, 1023, 2602, 113, 2524, 2605, 1806, 2606, 2608,
	2610, 2611, 2612, 2613, 2614, 2615, 2617, 2619, 2620, 2621,
	2623, 2039, 2625, 2626, 2628, 2630, 2632, 2634, 2636, 2638,
	2640, 2642, 2644, 2646, 2648, 2650, 2652, 2654, 2656, 2658,
	2660, 2662, 2663, 2664, 2535, 2666, 3165, 2668, 2836, 2670,
	2671, 2857, 2673, 2675, 2677, 1148, 1147, 2537, 2680, 1442,
	2114, 3258, 2684, 2852, 100, 2934, 2689, 2690, 2691, 2692,
	1442, 1699, 1695, 1406, 2115, 101, 2893, 3327, 1701, 2703,
	2704, 2705, 2706, 2707, 2708, 129, 1696, 2712, 2713, 3422,
	2795, 2559, 1442, 2315, 2316, 2715, 1442, 102, 4107, 3184,
	2721, 1442, 3597, 2505, 3596, 1442, 2724, 2725, 2726, 2727,
	2728, 2294, 2295, 1698, 2494, 1697, 1442, 2735, 2736, 4001,
	2737, 3899, 3796, 2740, 2742, 2299, 3164, 2744, 1439, 2592,
	1440, 1441, 1442, 2810, 100, 1960, 1442, 2756, 3153, 2301,
	3079, 102, 3157, 3325, 1701, 101, 2493, 2069, 3078, 3156,
	1030, 1031, 3595, 2492, 3323, 1701, 2802, 2805, 2806, 2807,
	2803, 1442, 2804, 2808, 2491, 2490, 3437, 3438, 3402, 2530,
	107, 109, 4053, 1442, 4051, 4008, 3321, 1701, 4005, 1442,
	3319, 1701, 108, 3158, 107, 3317, 1701, 3955, 3154, 3315,
	1701, 3866, 3865, 3155, 1439, 2566, 1440, 1441, 2755, 1442,
	3313, 1701, 3843, 3614, 1442, 1439, 3612, 1440, 1441, 3611,
	1442, 2792, 2581, 42, 3604, 108, 3311, 1701, 3490, 2758,
	3395, 2760, 3421, 2811, 3419, 2773, 2813, 1439, 1442, 1440,
	1441, 1439, 3197, 1440, 1441, 1442, 1439, 2432, 1440, 1441,
	1439, 1819, 1440, 1441, 109, 3297, 1701, 1029, 3603, 3410,
	2788, 1439, 2769, 1440, 1441, 108, 1675, 3280, 1701, 2812,
	3581, 2745, 2782, 2743, 1701, 4095, 4094, 1439, 1442, 1440,
	1441, 1439, 2768, 1440, 1441, 2984, 1442, 2584, 2765, 1670,
	2288, 2770, 4094, 2741, 1701, 1726, 1718, 2839, 2841, 3494,
	2785, 1699, 1695, 4095, 2716, 1701, 1439, 2832, 1440, 1441,
	2816, 3884, 1442, 3456, 2878, 1020, 1696, 1442, 1439, 3626,
	1440, 1441, 3391, 2820, 1439, 3, 1440, 1441, 2823, 2693,
	1701, 96, 2855, 1, 2902, 114, 115, 2858, 2859, 2830,
	2397, 1692, 1693, 1698, 1439, 1697, 1440, 1441, 9, 1439,
	2012, 1440, 1441, 11, 2844, 1439, 2010, 1440, 1441, 10,
	1040, 2067, 2685, 1701, 2011, 4003, 2833, 8, 3951, 2757,
	2676, 1701, 2854, 1439, 3889, 1440, 1441, 3953, 4006, 3625,
	1439, 3887, 1440, 1441, 1409, 2025, 2026, 2027, 2028, 2863,
	2862, 2867, 2868, 2869, 1408, 3460, 3356, 2900, 4019, 668,
	2036, 2674, 1701, 2278, 1673, 4064, 1824, 2899, 4015, 4016,
	1916, 2944, 2945, 1439, 1906, 1440, 1441, 2888, 2889, 3522,
	2203, 1439, 3797, 1440, 1441, 3200, 2438, 2972, 2973, 2974,
	2975, 2976, 2946, 3488, 2898, 2075, 2076, 2395, 1100, 154,
	2963, 2099, 1034, 1034, 2103, 2354, 2981, 1439, 2108, 1440,
	1441, 2355, 1439, 3976, 1440, 1441, 118, 1058, 117, 1103,
	1211, 2433, 3512, 2120, 2121, 2122, 2123, 2124, 2125, 2126,
	2127, 2128, 2129, 2961, 2926, 2923, 2837, 2134, 2135, 2136,
	2137, 2138, 2139, 2141, 2363, 2146, 2977, 2148, 2149, 2150,
	1752, 2152, 2153, 2154, 1750, 2157, 2158, 2159, 2160, 2161,
	2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171,
	2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181,
	2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191,
	2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201,
	2202, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214,
	2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224,
	2225, 2226, 2227, 2228, 2943, 2942, 2962, 2932, 2965, 2234,
	2933, 2236, 1751, 2243, 2244, 2245, 2246, 2247, 2248, 1034,
	1749, 1034, 1034, 1034, 1034, 1034, 1754, 1442, 1753, 3266,
	2585, 3357, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267,
	2003, 2269, 2270, 2271, 2272, 2273, 109, 1442, 2802, 2805,
	2806, 2807, 2803, 2986, 2804, 2808, 3049, 108, 703, 107,
	2809, 697, 192, 1741, 3051, 1719, 3371, 1142, 102, 658,
	1442, 3173, 2471, 664, 1491, 1994, 3077, 2824, 1034, 1052,
	3060, 2238, 1044, 2238, 2964, 2289, 2759, 1051, 3949, 3022,
	3774, 3414, 3089, 3091, 3112, 2240, 2775, 2240, 3094, 3087,
	2311, 2312, 3877, 3605, 3032, 3033, 3034, 3035, 3036, 2334,
	3961, 2661, 1701, 3131, 2834, 1715, 3378, 2558, 2104, 1481,
	2331, 3083, 3050, 3576, 3052, 3100, 2030, 2351, 728, 3059,
	727, 2659, 1701, 725, 1009, 2761, 3133, 1956, 2334, 2334,
	2334, 2334, 2334, 3060, 2789, 3084, 1445, 932, 2749, 3116,
	1727, 2801, 2799, 2798, 3071, 2848, 2503, 2339, 2334, 3439,
	3435, 2334, 1439, 3106, 1440, 1441, 4011, 2333, 2329, 3106,
	3109, 3082, 2767, 3085, 3075, 883, 882, 737, 729, 719,
	3097, 3098, 1439, 881, 1440, 1441, 880, 3453, 2393, 3226,
	1010, 2908, 3240, 2910, 3135, 2835, 3117, 3136, 3129, 3120,
	3118, 3119, 1011, 3121, 103, 1439, 104, 1440, 1441, 3220,
	3137, 3236, 1423, 3024, 3114, 3026, 3072, 3073, 3074, 1691,
	713, 1071, 3263, 3143, 3905, 2529, 3177, 3178, 3286, 1690,
	3912, 3037, 3038, 3039, 3040, 3174, 3208, 3176, 3175, 3506,
	3260, 3189, 2884, 2425, 70, 46, 3872, 3942, 875, 872,
	3578, 3579, 3580, 3045, 3046, 3199, 3925, 3926, 871, 3927,
	3228, 3227, 3277, 3278, 2140, 3279, 1419, 3281, 3283, 3219,
	1416, 2397, 1442, 3198, 4032, 2005, 95, 37, 36, 35,
	34, 3290, 3234, 1442, 33, 27, 3294, 3295, 3296, 3298,
	3299, 3300, 3301, 3302, 3303, 3304, 3305, 3306, 3307, 3308,
	3309, 3310, 3312, 3314, 3316, 3318, 3320, 3322, 3324, 3326,
	3328, 3330, 3332, 3334, 3336, 3338, 3340, 3342, 3343, 3345,
	3346, 3347, 3349, 3254, 3251, 3351, 3253, 3353, 3354, 3355,
	3256, 3257, 3359, 3360, 3361, 3362, 3363, 3364, 3365, 3366,
	3367, 3368, 3369, 3271, 26, 25, 24, 23, 30, 20,
	22, 3376, 21, 19, 3211, 3381, 2657, 1701, 4059, 3385,
	3386, 1442, 3387, 3389, 4106, 3392, 3394, 3352, 3396, 3397,
	3398, 3399, 123, 56, 53, 51, 3405, 131, 130, 54,
	50, 1185, 3380, 48, 3382, 3383, 3384, 3373, 32, 3268,
	3269, 31, 3270, 18, 3377, 3272, 17, 3274, 16, 3276,
	15, 1459, 1442, 14, 13, 3262, 3261, 1439, 12, 1440,
	1441, 3427, 3428, 7, 6, 3432, 1442, 40, 1439, 39,
	1440, 1441, 29, 38, 28, 1460, 1461, 1462, 1463, 1464,
	1465, 1466, 1468, 1467, 1469, 1470, 1442, 3408, 4, 2871,
	1442, 2427, 0, 0, 1442, 2655, 1701, 0, 0, 0,
	0, 0, 0, 0, 0, 3403, 3404, 3406, 1442, 0,
	0, 0, 3418, 1442, 0, 0, 0, 3411, 0, 0,
	0, 3434, 1442, 0, 0, 2334, 1442, 0, 0, 0,
	0, 3444, 3423, 0, 1442, 0, 2653, 1701, 1442, 0,
	3448, 3449, 3441, 2561, 0, 0, 1439, 0, 1440, 1441,
	2651, 1701, 0, 2567, 2568, 2569, 2570, 1442, 3446, 0,
	0, 3447, 0, 3228, 3227, 0, 3454, 0, 3495, 3496,
	2649, 1701, 3510, 3455, 2647, 1701, 0, 1499, 2645, 1701,
	0, 3465, 3466, 0, 3516, 3517, 3471, 1439, 3473, 1440,
	1441, 0, 2643, 1701, 0, 1442, 0, 2641, 1701, 1442,
	0, 1439, 0, 1440, 1441, 0, 2639, 1701, 0, 0,
	2637, 1701, 0, 0, 3529, 0, 0, 3533, 2635, 1701,
	0, 1439, 3289, 1440, 1441, 1439, 0, 1440, 1441, 1439,
	0, 1440, 1441, 0, 3499, 0, 3518, 0, 3503, 3504,
	3505, 2633, 1701, 1439, 3544, 1440, 1441, 0, 1439, 0,
	1440, 1441, 0, 2098, 1442, 0, 0, 1439, 0, 1440,
	1441, 1439, 1442, 1440, 1441, 0, 0, 0, 0, 1439,
	0, 1440, 1441, 1439, 3538, 1440, 1441, 0, 0, 2631,
	1701, 0, 0, 2629, 1701, 0, 1442, 0, 0, 3534,
	0, 0, 1439, 0, 1440, 1441, 0, 0, 0, 0,
	1442, 0, 0, 0, 1442, 0, 0, 0, 3567, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3575, 0, 0, 943, 0, 0, 86, 0, 3582,
	1439, 0, 1440, 1441, 1439, 0, 1440, 1441, 2627, 1701,
	3584, 0, 3585, 3586, 3587, 0, 2622, 1701, 0, 0,
	1717, 2090, 2079, 2080, 2081, 2082, 2092, 2083, 2084, 2085,
	2097, 2093, 2086, 2087, 2094, 2095, 2096, 2088, 2089, 2091,
	2618, 1701, 0, 3574, 0, 0, 3600, 0, 0, 0,
	0, 0, 0, 0, 2616, 1701, 0, 0, 3288, 1439,
	0, 1440, 1441, 0, 0, 0, 0, 1439, 0, 1440,
	1441, 0, 0, 0, 2069, 0, 0, 0, 0, 1006,
	0, 86, 0, 0, 0, 0, 0, 3621, 0, 42,
	3601, 1439, 0, 1440, 1441, 3610, 0, 0, 3623, 3629,
	1006, 3609, 0, 3617, 3619, 1439, 0, 1440, 1441, 1439,
	0, 1440, 1441, 0, 0, 1442, 1070, 3106, 0, 0,
	0, 3634, 3635, 0, 0, 3109, 0, 3788, 3637, 3109,
	0, 0, 0, 0, 3775, 0, 3795, 0, 0, 0,
	0, 0, 1442, 0, 0, 0, 1442, 0, 0, 0,
	0, 0, 0, 0, 0, 3770, 3805, 3806, 1442, 3808,
	3772, 3809, 3810, 3771, 0, 1442, 3813, 3814, 3815, 3816,
	3817, 3818, 3819, 3820, 3821, 3822, 3823, 3824, 3825, 3826,
	3827, 3828, 3829, 3830, 3831, 3832, 3833, 3834, 3787, 3836,
	3839, 3792, 0, 3791, 3782, 3783, 3784, 3779, 3799, 2609,
	1701, 0, 2069, 0, 3565, 3848, 3849, 3850, 3851, 3852,
	3854, 3855, 3857, 3859, 3860, 3862, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2607, 1701, 0, 0,
	3285, 0, 0, 0, 0, 0, 0, 0, 2939, 0,
	1442, 3842, 2739, 0, 0, 0, 0, 3844, 0, 2738,
	1439, 3847, 1440, 1441, 0, 0, 0, 3896, 0, 0,
	1034, 1442, 0, 2966, 2967, 0, 3869, 2969, 3870, 0,
	2971, 0, 0, 3892, 3867, 3868, 0, 1439, 2067, 1440,
	1441, 1439, 0, 1440, 1441, 1442, 3633, 3891, 3885, 2978,
	2979, 2980, 0, 1439, 0, 1440, 1441, 0, 0, 3895,
	1439, 2985, 1440, 1441, 2987, 2988, 2989, 0, 0, 0,
	2990, 2991, 0, 0, 2992, 0, 2993, 0, 0, 3109,
	3837, 3838, 0, 2994, 2734, 2995, 1442, 0, 0, 2996,
	0, 2997, 0, 1442, 2998, 0, 2999, 0, 3000, 0,
	3001, 1442, 3002, 0, 3003, 2733, 3004, 0, 3005, 1442,
	3006, 0, 3007, 0, 3008, 0, 3009, 0, 3010, 1442,
	3011, 0, 3012, 1442, 3013, 0, 3014, 1442, 3015, 2732,
	0, 0, 3016, 0, 3017, 1439, 3018, 1440, 1441, 3019,
	0, 3020, 1442, 3021, 0, 2206, 3023, 0, 0, 3025,
	0, 1442, 3027, 3028, 3029, 3030, 1439, 1442, 1440, 1441,
	3031, 2206, 2206, 2206, 2206, 2206, 2067, 0, 3897, 1442,
	2731, 0, 1676, 0, 3841, 0, 3041, 2730, 0, 0,
	1439, 0, 1440, 1441, 3054, 2729, 0, 3058, 0, 1034,
	0, 0, 0, 2720, 1442, 0, 3061, 3062, 3063, 3064,
	3065, 3066, 3916, 2719, 0, 3067, 3068, 2718, 3069, 3911,
	3070, 2717, 0, 0, 0, 3913, 3876, 42, 3921, 1442,
	0, 1439, 0, 1440, 1441, 3908, 2714, 0, 1439, 0,
	1440, 1441, 652, 0, 0, 2709, 1439, 3904, 1440, 1441,
	0, 2702, 3937, 0, 1439, 0, 1440, 1441, 3938, 3939,
	1442, 996, 0, 2701, 1439, 3101, 1440, 1441, 1439, 1442,
	1440, 1441, 1439, 0, 1440, 1441, 1442, 3931, 0, 0,
	3932, 0, 0, 0, 3957, 1442, 0, 1439, 2700, 1440,
	1441, 3132, 1442, 0, 0, 0, 1439, 3940, 1440, 1441,
	0, 0, 1439, 1066, 1440, 1441, 0, 0, 0, 0,
	3983, 3984, 0, 2699, 1439, 0, 1440, 1441, 0, 0,
	3964, 0, 3989, 3959, 3991, 3993, 3995, 3947, 3962, 0,
	42, 3975, 3967, 3972, 3969, 3968, 3966, 3971, 3970, 1439,
	1442, 1440, 1441, 0, 2698, 0, 0, 3106, 0, 1442,
	0, 0, 3195, 2697, 0, 0, 4031, 3999, 0, 0,
	2696, 3799, 3978, 0, 1439, 4002, 1440, 1441, 4010, 2695,
	0, 0, 4028, 0, 4018, 4023, 2694, 0, 0, 0,
	0, 3989, 4038, 0, 0, 0, 0, 0, 0, 0,
	4036, 0, 0, 4050, 0, 1439, 0, 1440, 1441, 0,
	0, 0, 4055, 0, 1439, 0, 1440, 1441, 4048, 4044,
	0, 1439, 0, 1440, 1441, 4058, 0, 0, 0, 0,
	1439, 0, 1440, 1441, 2688, 0, 0, 1439, 0, 1440,
	1441, 0, 0, 2687, 0, 0, 4078, 4080, 4082, 0,
	1956, 4073, 4071, 4074, 4077, 0, 0, 3284, 0, 0,
	0, 1247, 4083, 1247, 1247, 0, 4088, 3920, 2069, 4092,
	4086, 3293, 4090, 0, 0, 3930, 0, 0, 0, 0,
	0, 3989, 4100, 0, 4105, 1439, 0, 1440, 1441, 0,
	0, 0, 0, 4108, 1439, 0, 1440, 1441, 4114, 0,
	4116, 0, 0, 0, 4117, 4118, 0, 0, 0, 0,
	0, 0, 0, 1006, 1483, 1488, 1489, 0, 1492, 1494,
	1495, 1496, 1497, 0, 1500, 1501, 1503, 1503, 2069, 1503,
	1503, 1508, 1508, 1508, 1511, 1512, 1513, 1514, 1515, 1516,
	1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526,
	1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536,
	1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546,
	1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556,
	1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566,
	1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576,
	1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586,
	1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596,
	1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606,
	1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616,
	1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626,
	1627, 1628, 1629, 1630, 1631, 4125, 4126, 3838, 4124, 1632,
	0, 1634, 1635, 1636, 1637, 1638, 0, 0, 0, 0,
	0, 0, 2067, 1508, 1508, 1508, 1508, 1508, 1508, 3491,
	4089, 0, 0, 0, 0, 0, 0, 0, 1645, 1646,
	1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656,
	1657, 1658, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1442, 3515, 4057, 0, 1442, 0, 0, 0, 1672,
	0, 1442, 0, 1769, 0, 1442, 0, 0, 0, 0,
	0, 0, 2067, 0, 0, 1442, 0, 0, 0, 0,
	4123, 0, 0, 0, 0, 0, 1442, 0, 0, 0,
	0, 0, 0, 0, 1442, 0, 0, 0, 0, 0,
	0, 1442, 0, 0, 0, 0, 0, 3535, 0, 3536,
	0, 1677, 3537, 0, 0, 3540, 3541, 1006, 0, 0,
	1442, 1006, 0, 0, 3545, 1442, 0, 1006, 0, 0,
	0, 0, 0, 0, 0, 2686, 0, 0, 3546, 2683,
	3547, 0, 3548, 0, 3549, 2682, 3550, 0, 3551, 2681,
	3552, 1442, 3553, 0, 3554, 0, 3555, 0, 3556, 2679,
	3557, 0, 3558, 0, 3559, 1442, 3560, 0, 3561, 1442,
	2672, 3562, 0, 0, 0, 3563, 0, 3564, 2669, 0,
	0, 0, 1186, 3566, 1192, 2667, 1439, 1194, 1440, 1441,
	1439, 1442, 1440, 1441, 0, 0, 1439, 1442, 1440, 1441,
	1439, 0, 1440, 1441, 2665, 0, 3583, 1442, 1757, 2624,
	1439, 0, 1440, 1441, 0, 3588, 0, 3589, 3590, 0,
	3591, 1439, 3592, 1440, 1441, 0, 0, 3593, 0, 1439,
	0, 1440, 1441, 0, 0, 2604, 1439, 0, 1440, 1441,
	0, 0, 1415, 0, 0, 85, 44, 45, 87, 2603,
	0, 0, 3618, 2599, 0, 1439, 0, 1440, 1441, 0,
	1439, 0, 1440, 1441, 3630, 91, 0, 3632, 0, 49,
	76, 77, 0, 75, 78, 2597, 0, 0, 0, 3636,
	0, 2563, 47, 0, 0, 0, 1439, 0, 1440, 1441,
	0, 2552, 1770, 0, 0, 0, 0, 3767, 0, 0,
	1439, 0, 1440, 1441, 1439, 0, 1440, 1441, 0, 0,
	0, 63, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 94, 0, 0, 1439, 0, 1440, 1441,
	0, 0, 1439, 0, 1440, 1441, 1769, 0, 0, 0,
	0, 0, 1439, 0, 1440, 1441, 0, 0, 0, 0,
	1247, 0, 0, 0, 1783, 1786, 1787, 1788, 1789, 1790,
	1791, 0, 1792, 1793, 1795, 1796, 1794, 1797, 1798, 1771,
	1772, 1773, 1774, 1755, 1756, 1784, 0, 1758, 0, 1759,
	1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 0, 0,
	1768, 1775, 1776, 1777, 1778, 0, 1779, 1780, 1781, 1782,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3875, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 55, 58, 57, 60, 0, 74, 0,
	0, 82, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 1757, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 62, 90, 89, 0, 0,
	72, 73, 59, 0, 190, 0, 0, 0, 80, 81,
	0, 0, 0, 0, 0, 1823, 0, 1247, 1247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 0,
	151, 86, 0, 0, 86, 0, 0, 0, 0, 0,
	0, 172, 0, 0, 0, 0, 0, 0, 0, 0,
	64, 65, 0, 66, 67, 68, 69, 0, 0, 0,
	0, 0, 0, 0, 0, 1770, 0, 0, 0, 0,
	1729, 0, 162, 0, 0, 0, 0, 0, 150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1747, 0, 0, 1785, 0, 169, 0, 0,
	170, 0, 3655, 3657, 3656, 3720, 3721, 3722, 3723, 3724,
	3725, 3726, 777, 0, 61, 0, 0, 928, 0, 1827,
	1828, 161, 160, 189, 0, 0, 0, 1783, 1786, 1787,
	1788, 1789, 1790, 1791, 3919, 1792, 1793, 1795, 1796, 1794,
	1797, 1798, 1771, 1772, 1773, 1774, 1755, 1756, 1784, 0,
	1758, 0, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766,
	1767, 0, 0, 1768, 1775, 1776, 1777, 1778, 0, 1779,
	1780, 1781, 1782, 0, 195, 1886, 0, 195, 0, 0,
	3933, 701, 0, 3934, 0, 3935, 707, 0, 0, 0,
	0, 0, 0, 0, 0, 88, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1931, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 155, 1829, 158, 0, 1826, 0, 156,
	157, 0, 0, 0, 0, 0, 173, 707, 195, 707,
	0, 0, 0, 1967, 0, 179, 0, 0, 0, 0,
	1971, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4029, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 93, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4045,
	0, 4046, 0, 4047, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3661, 0, 0,
	0, 0, 0, 0, 0, 0, 2332, 0, 0, 0,
	0, 0, 3669, 3670, 0, 0, 3745, 3744, 3743, 0,
	0, 3741, 3742, 3740, 0, 0, 0, 0, 1785, 164,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4103, 0, 4104, 0,
	71, 0, 0, 0, 0, 0, 3746, 898, 1070, 754,
	755, 3747, 3748, 902, 3749, 757, 758, 899, 900, 0,
	752, 756, 901, 903, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1070, 0, 0, 0, 0, 159, 2018, 0, 775,
	776, 3654, 3658, 3659, 3660, 3671, 3718, 3719, 3727, 3729,
	854, 3728, 3730, 3731, 3732, 3735, 3736, 3737, 3738, 3733,
	3734, 3739, 3638, 3642, 3639, 3640, 3641, 3653, 3643, 3644,
	3645, 3646, 3647, 3648, 3649, 3650, 3651, 3652, 3750, 3751,
	3752, 3753, 3754, 3755, 3664, 3668, 3667, 3665, 3666, 3662,
	3663, 3690, 3689, 3691, 3692, 3693, 3694, 3695, 3696, 3698,
	3697, 3699, 3700, 3701, 3702, 3703, 3704, 3672, 3673, 3676,
	3677, 3675, 3674, 3678, 3687, 3688, 3679, 3680, 3681, 3682,
	3683, 3684, 3686, 3685, 3705, 3706, 3707, 3708, 3709, 3711,
	3710, 3714, 3715, 3713, 3712, 3717, 3716, 0, 0, 0,
	0, 0, 0, 152, 0, 0, 153, 0, 0, 904,
	0, 905, 0, 0, 909, 0, 0, 0, 911, 910,
	0, 912, 0, 874, 873, 0, 0, 906, 907, 0,
	908, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 945,
	0, 2242, 0, 0, 946, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2068, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2531, 185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3756, 3757, 3758, 3759, 3760,
	3761, 3762, 3763, 0, 0, 0, 0, 0, 1494, 0,
	1494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2543, 0, 166, 171,
	168, 174, 175, 176, 178, 180, 181, 182, 183, 0,
	0, 0, 0, 0, 184, 186, 187, 188, 952, 953,
	954, 955, 956, 957, 958, 959, 960, 961, 962, 963,
	964, 965, 966, 967, 968, 969, 970, 971, 972, 973,
	974, 975, 976, 977, 978, 979, 980, 981, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	0, 2317, 0, 0, 0, 0, 0, 0, 0, 2321,
	0, 2324, 0, 0, 0, 2018, 0, 195, 0, 195,
	0, 0, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 707, 0, 707, 707, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 707, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1486, 0, 0,
	0, 0, 0, 0, 0, 0, 2722, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2754, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1006, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2793, 2794, 0,
	0, 0, 0, 0, 0, 0, 0, 2332, 0, 0,
	1006, 2814, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2018, 0, 0, 0, 0, 0, 0,
	2482, 0, 0, 0, 0, 0, 945, 0, 0, 2499,
	2500, 946, 0, 2504, 0, 0, 0, 0, 0, 0,
	0, 2068, 0, 0, 2509, 0, 0, 0, 0, 0,
	0, 2512, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2515, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1486, 0, 0, 0,
	0, 0, 0, 0, 2891, 952, 953, 954, 955, 956,
	957, 958, 959, 960, 961, 962, 963, 964, 965, 966,
	967, 968, 969, 970, 971, 972, 973, 974, 975, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 0, 0, 0,
	0, 0, 195, 0, 0, 0, 707, 707, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 707, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	707, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 707, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1486, 0, 0,
	0, 0, 0, 707, 707, 0, 707, 0, 707, 707,
	0, 707, 707, 707, 707, 707, 707, 0, 0, 0,
	0, 0, 0, 0, 1486, 0, 0, 1486, 707, 1486,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 707, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 707,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3042, 0, 195, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 707, 0, 0, 94, 0, 0, 945,
	0, 0, 0, 933, 946, 947, 948, 949, 934, 0,
	2815, 935, 936, 0, 937, 0, 0, 0, 0, 0,
	0, 0, 0, 2332, 0, 0, 0, 0, 942, 950,
	951, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3110, 0, 86, 0,
	0, 0, 2332, 2332, 2332, 2332, 2332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2332, 0, 0, 2332, 3229, 3230, 0, 0,
	0, 0, 0, 0, 2864, 0, 0, 0, 952, 953,
	954, 955, 956, 957, 958, 959, 960, 961, 962, 963,
	964, 965, 966, 967, 968, 969, 970, 971, 972, 973,
	974, 975, 976, 977, 978, 979, 980, 981, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3225,
	2913, 2914, 2915, 2916, 2917, 0, 0, 0, 0, 0,
	707, 707, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3231, 0, 707, 2018, 2927, 0, 0, 0, 0,
	0, 0, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2935,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 707, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1486, 0, 0, 0, 0, 0, 0, 3232, 3233,
	0, 0, 0, 0, 0, 0, 0, 0, 1486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 707, 707, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1494, 0,
	0, 0, 1494, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 898, 0, 0, 0, 0, 0, 902, 0,
	0, 0, 899, 900, 0, 0, 0, 901, 903, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2332,
	0, 2254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3452, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 0, 0, 707,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 707, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 0,
	707, 0, 0, 2254, 195, 0, 195, 0, 0, 195,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 707, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3185,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 707, 0, 0, 0, 3223, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3235,
	0, 0, 0, 0, 0, 0, 0, 0, 707, 0,
	0, 0, 0, 0, 707, 0, 0, 0, 3252, 0,
	0, 3255, 0, 927, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 707, 0, 0, 0, 0, 707, 0, 0, 0,
	707, 707, 0, 0, 0, 0, 3594, 0, 3598, 3599,
	0, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	0, 0, 706, 0, 0, 0, 0, 0, 0, 0,
	0, 3110, 0, 86, 0, 3110, 0, 0, 195, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 195, 0, 0, 195, 0,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 195,
	0, 0, 0, 706, 0, 706, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3407, 0, 195, 3780, 0, 0, 0, 0, 0, 0,
	0, 707, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3433, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1486, 0, 2254, 0, 0, 0, 3469, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3484, 0, 0, 3485,
	3486, 3487, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3110, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1511, 1512, 1513, 1514, 1515, 1516, 1517,
	1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1530,
	1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540,
	1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550,
	1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560,
	1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570,
	1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580,
	1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590,
	1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600,
	1601, 1602, 1603, 1604, 1605, 1607, 1608, 1609, 1610, 1611,
	1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621,
	1622, 1628, 1629, 1630, 1631, 1645, 1646, 1647, 1648, 1649,
	1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3906, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 86, 0, 0, 707, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 707, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 884, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3950, 0, 0, 0, 0, 0, 0, 3958,
	0, 0, 0, 0, 86, 0, 0, 0, 0, 0,
	0, 0, 0, 707, 0, 0, 0, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	707, 0, 0, 0, 0, 0, 705, 707, 0, 0,
	0, 0, 0, 0, 0, 0, 707, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 195, 195, 195, 195,
	0, 0, 0, 0, 0, 0, 0, 1062, 0, 1069,
	0, 0, 0, 0, 0, 0, 4049, 0, 0, 195,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	706, 1402, 706, 706, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 707, 0, 0,
	0, 0, 706, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 885, 0,
	0, 0, 0, 1485, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 707, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 0, 0, 653, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1016, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1035,
	1035, 0, 0, 0, 0, 0, 0, 0, 0, 653,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 707,
	0, 0, 0, 0, 3917, 0, 0, 0, 0, 0,
	0, 707, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 707, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 0,
	707, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1485, 0, 707, 0, 0, 0, 1486, 0,
	0, 707, 707, 0, 1486, 195, 195, 195, 195, 195,
	0, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 195, 0, 195, 0, 0, 195, 195,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 706, 706, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 707, 706, 0,
	1486, 0, 0, 0, 0, 707, 0, 0, 0, 0,
	195, 0, 0, 0, 0, 0, 706, 0, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 1800, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1809, 0, 0,
	0, 0, 0, 195, 0, 0, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	706, 0, 1835, 0, 0, 0, 0, 0, 0, 0,
	1844, 0, 0, 1485, 1846, 0, 0, 1849, 1850, 706,
	706, 0, 706, 0, 706, 706, 0, 706, 706, 706,
	706, 706, 706, 0, 0, 0, 0, 0, 0, 0,
	1485, 1881, 1882, 1485, 706, 1485, 0, 1887, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 706,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1949, 0, 0, 706, 0, 0, 0, 0,
	707, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1249, 0, 1249, 1249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 1414, 0, 0, 706,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 195, 195, 195, 0, 0, 0,
	0, 0, 0, 0, 707, 707, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 653, 0,
	653, 0, 0, 653, 0, 0, 0, 0, 0, 0,
	0, 707, 707, 707, 707, 0, 706, 706, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 706,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 653, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 706, 1487, 0,
	0, 0, 0, 0, 0, 0, 0, 1485, 0, 0,
	0, 0, 0, 0, 0, 0, 2077, 0, 0, 0,
	0, 0, 0, 0, 1485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1679, 1680, 0, 0,
	0, 706, 706, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1723, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1742, 0, 1486, 0, 0, 0, 0, 707, 0, 707,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1062, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 706, 0, 0,
	0, 0, 0, 1852, 1852, 0, 1852, 0, 1852, 1852,
	707, 1861, 1852, 1852, 1852, 1852, 1852, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 707, 0, 1062, 0,
	0, 0, 0, 0, 0, 0, 0, 1487, 0, 707,
	0, 0, 0, 0, 0, 706, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1929, 0, 0, 0, 0, 0, 0,
	0, 0, 706, 0, 0, 0, 0, 0, 0, 1953,
	0, 0, 0, 0, 0, 0, 706, 0, 0, 706,
	0, 0, 0, 653, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	706, 0, 707, 1016, 0, 0, 707, 707, 0, 0,
	0, 0, 0, 1249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 653, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 707,
	0, 0, 0, 0, 0, 0, 0, 0, 653, 0,
	0, 0, 0, 0, 0, 0, 0, 706, 0, 0,
	0, 0, 0, 0, 2415, 2416, 2417, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 706, 0, 0, 0, 0, 0,
	706, 1844, 0, 0, 1844, 0, 1844, 0, 1487, 0,
	0, 0, 2447, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1487, 0, 0, 1487, 0,
	1487, 653, 0, 0, 0, 0, 0, 706, 0, 0,
	0, 0, 706, 0, 0, 0, 706, 706, 0, 0,
	0, 1903, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 653, 0, 0, 0,
	0, 0, 0, 0, 707, 0, 0, 0, 0, 0,
	1249, 1249, 1955, 0, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 2006, 0, 0, 0, 0, 0, 653,
	0, 0, 0, 0, 0, 0, 653, 0, 707, 195,
	0, 0, 0, 0, 0, 1980, 1981, 653, 653, 653,
	653, 653, 653, 653, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2063, 0, 0, 0, 0, 0, 706, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 707, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1486, 0, 707, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2131, 2132, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 707, 2254, 0, 0, 1485, 0, 706, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 707, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 707, 0,
	0, 0, 0, 0, 0, 195, 707, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 707, 0,
	0, 1249, 0, 653, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 707, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 707, 0, 2291,
	0, 0, 0, 0, 707, 0, 0, 0, 0, 0,
	0, 0, 1487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1035, 1035, 2303, 0, 0, 1487,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1723, 0, 0, 1249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1062, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	706, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 706, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1069, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2828, 1062, 0,
	0, 0, 0, 0, 1069, 0, 0, 0, 0, 0,
	0, 1035, 1955, 1035, 1035, 1035, 1035, 1035, 0, 0,
	94, 0, 0, 945, 0, 0, 0, 933, 946, 947,
	948, 949, 934, 0, 0, 935, 936, 0, 937, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 706,
	0, 1062, 942, 950, 951, 1903, 2063, 0, 0, 0,
	2063, 2063, 0, 0, 0, 0, 0, 0, 0, 0,
	1035, 0, 0, 0, 0, 0, 706, 0, 0, 0,
	0, 0, 0, 706, 1016, 0, 0, 1844, 1844, 0,
	0, 0, 706, 0, 0, 0, 0, 653, 0, 0,
	3229, 3230, 0, 0, 1955, 653, 0, 653, 1485, 2901,
	653, 2341, 952, 953, 954, 955, 956, 957, 958, 959,
	960, 961, 962, 963, 964, 965, 966, 967, 968, 969,
	970, 971, 972, 973, 974, 975, 976, 977, 978, 979,
	980, 981, 982, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2518, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 706, 0, 3231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	706, 0, 1249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3232, 3233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 653,
	0, 0, 0, 0, 0, 0, 653, 0, 0, 0,
	0, 0, 0, 0, 0, 653, 653, 0, 0, 653,
	0, 2506, 0, 0, 0, 0, 0, 0, 0, 0,
	653, 0, 0, 0, 0, 0, 0, 653, 0, 0,
	0, 0, 0, 0, 0, 706, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 706, 0, 0,
	0, 0, 0, 653, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 706, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 706, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	706, 0, 0, 0, 1485, 0, 0, 706, 706, 0,
	1485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1487, 0, 1955, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2762, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2777, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 706, 0, 0, 1485, 0, 0, 0,
	0, 706, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2860, 0, 0, 0, 0, 0, 0,
	0, 0, 3259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2303, 0, 0, 0, 0, 0, 0, 2885, 0, 0,
	0, 0, 0, 0, 0, 0, 2890, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 653, 0, 0, 0,
	0, 0, 0, 0, 1903, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 706, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 653, 0, 0, 0, 0, 653, 2063, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2063, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	653, 0, 0, 0, 0, 0, 3459, 2870, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	706, 706, 0, 1487, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 653, 653, 653, 653,
	653, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3043,
	653, 653, 0, 0, 0, 0, 0, 706, 706, 706,
	706, 1249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 653, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1852, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1035, 0, 0, 0, 0, 0, 0, 0,
	3086, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1249, 0, 0, 0, 0, 0,
	0, 3113, 1852, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1062, 0, 0,
	0, 0, 0, 0, 0, 2303, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1485, 0,
	0, 0, 0, 706, 0, 706, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1035, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 706, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 0, 0,
	0, 0, 706, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 706, 0, 0, 0, 1487,
	0, 0, 0, 0, 0, 1487, 653, 653, 653, 653,
	653, 0, 0, 0, 0, 0, 0, 0, 3130, 0,
	0, 0, 0, 0, 1903, 0, 653, 0, 0, 653,
	3138, 1955, 0, 0, 0, 0, 0, 0, 0, 0,
	3372, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 706, 0,
	0, 0, 706, 706, 0, 653, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1487, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 653, 0, 0, 0, 706, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 653, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 653, 0, 0, 653, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2303, 2303, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	706, 3523, 3524, 3525, 3526, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 706, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 653, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 653, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 653, 0, 0, 0, 0, 706, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1485, 0,
	706, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 653, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 706, 706,
	0, 0, 653, 0, 0, 653, 653, 653, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	706, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 706, 0, 0, 3622, 0, 3624,
	0, 0, 706, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 706, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2303, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 706, 0, 3790, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1249,
	0, 0, 0, 706, 0, 0, 0, 0, 0, 0,
	706, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3863, 0, 0, 0, 3863, 3863, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1903, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2303,
	0, 0, 0, 1487, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1903, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2303, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2303, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3944, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3948, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1249, 1249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3997, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3113, 0,
	0, 0, 0, 0, 0, 0, 4013, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1903, 0, 0, 0, 0, 0, 0, 3944, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	653, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2303, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3372, 0, 0,
	0, 0, 0, 0, 4013, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1487, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3977, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	0, 0, 0, 1385, 1369, 511, 1903, 1312, 1388, 1281,
	1300, 1398, 1303, 1306, 1348, 1259, 1326, 410, 1297, 1252,
	1285, 1254, 1292, 1255, 1283, 1314, 268, 1280, 1371, 1330,
	1387, 361, 265, 1261, 1286, 424, 1302, 203, 1350, 480,
	250, 372, 369, 566, 280, 271, 267, 248, 314, 380,
	422, 501, 416, 1394, 365, 1336, 0, 490, 395, 0,
	0, 0, 1316, 1375, 1324, 1362, 1311, 1349, 1269, 1335,
	1389, 1298, 1345, 1390, 320, 246, 322, 202, 407, 491,
	284, 0, 0, 0, 1955, 3979, 929, 0, 0, 0,
	0, 3980, 0, 0, 0, 0, 236, 0, 0, 243,
	0, 0, 0, 346, 355, 354, 335, 336, 338, 340,
	345, 352, 358, 1294, 1342, 1384, 1295, 1344, 263, 318,
	270, 262, 563, 1395, 1374, 1258, 1323, 1383, 0, 0,
	227, 1386, 1318, 0, 1347, 0, 1401, 1253, 1338, 0,
	1256, 1260, 1397, 1379, 1289, 273, 0, 0, 0, 0,
	0, 0, 0, 1315, 1325, 1359, 1363, 1309, 0, 0,
	0, 0, 0, 0, 0, 0, 1287, 0, 1334, 0,
	0, 0, 1265, 1257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1313, 0, 0, 0,
	0, 1268, 0, 1288, 1360, 0, 1251, 295, 1262, 396,
	255, 0, 447, 1367, 1378, 1310, 605, 1382, 1308, 1307,
	1354, 1266, 1373, 1301, 360, 1264, 327, 197, 223, 0,
	1299, 406, 455, 467, 1372, 1284, 1293, 251, 1291, 465,
	420, 583, 231, 282, 452, 426, 463, 434, 285, 1333,
	1352, 464, 367, 568, 444, 580, 606, 607, 261, 400,
	592, 505, 600, 624, 224, 258, 414, 498, 586, 487,
	392, 564, 565, 326, 486, 293, 201, 364, 612, 222,
	473, 366, 240, 229, 570, 589, 287, 450, 619, 211,
	500, 578, 237, 477, 0, 0, 627, 245, 497, 213,
	575, 496, 388, 323, 324, 212, 0, 451, 266, 291,
	0, 0, 256, 409, 572, 573, 254, 628, 226, 599,
	218, 1263, 598, 402, 567, 576, 389, 378, 217, 574,
	387, 377, 331, 350, 351, 278, 304, 441, 370, 442,
	303, 305, 398, 397, 399, 205, 587, 0, 206, 0,
	492, 588, 629, 446, 210, 232, 233, 235, 1279, 277,
	281, 289, 292, 300, 301, 310, 362, 413, 440, 436,
	445, 1368, 562, 581, 593, 604, 610, 611, 613, 614,
	615, 616, 617, 620, 618, 401, 308, 488, 330, 368,
	1357, 1400, 419, 466, 238, 585, 489, 199, 1273, 1278,
	1271, 0, 252, 253, 1339, 558, 1274, 1272, 1328, 1329,
	1275, 1391, 1392, 1393, 1376, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 625, 1361, 1267, 0, 1276, 1277, 1370,
	1380, 1381, 648, 379, 479, 582, 332, 344, 347, 337,
	356, 0, 357, 333, 334, 339, 341, 342, 343, 348,
	349, 353, 359, 247, 208, 385, 393, 561, 309, 214,
	215, 216, 507, 508, 509, 510, 596, 597, 601, 456,
	457, 458, 459, 290, 591, 306, 462, 461, 328, 329,
	374, 443, 523, 525, 536, 540, 542, 544, 550, 553,
	524, 526, 537, 541, 543, 545, 551, 554, 513, 515,
	517, 519, 532, 531, 528, 556, 557, 534, 539, 518,
	530, 535, 548, 555, 552, 512, 516, 520, 529, 547,
	546, 527, 538, 549, 533, 521, 514, 522, 1332, 196,
	219, 363, 1396, 448, 286, 626, 595, 590, 204, 221,
	1270, 260, 1282, 1290, 0, 1296, 1304, 1305, 1317, 1319,
	1320, 1321, 1322, 0, 1340, 1341, 1343, 1351, 1353, 1356,
	1358, 1365, 1377, 1399, 198, 200, 207, 220, 230, 234,
	241, 259, 274, 276, 283, 296, 307, 315, 316, 319,
	325, 375, 381, 382, 383, 384, 403, 404, 405, 408,
	411, 412, 415, 417, 418, 421, 425, 429, 430, 431,
	433, 435, 437, 449, 454, 468, 469, 470, 471, 472,
	475, 476, 481, 482, 483, 484, 485, 493, 494, 499,
	569, 571, 584, 602, 608, 474, 298, 299, 438, 439,
	311, 312, 622, 623, 297, 579, 609, 577, 621, 603,
	432, 373, 1331, 1337, 376, 279, 302, 317, 1346, 594,
	495, 225, 460, 288, 249, 1364, 1366, 209, 244, 228,
	257, 272, 275, 321, 386, 394, 423, 428, 294, 269,
	242, 453, 239, 478, 502, 503, 504, 506, 390, 264,
	427, 1327, 1355, 371, 559, 560, 313, 391, 0, 0,
	0, 1385, 1369, 511, 0, 1312, 1388, 1281, 1300, 1398,
	1303, 1306, 1348, 1259, 1326, 410, 1297, 1252, 1285, 1254,
	1292, 1255, 1283, 1314, 268, 1280, 1371, 1330, 1387, 361,
	265, 1261, 1286, 424, 1302, 203, 1350, 480, 250, 372,
	369, 566, 280, 271, 267, 248, 314, 380, 422, 501,
	416, 1394, 365, 1336, 0, 490, 395, 0, 0, 0,
	1316, 1375, 1324, 1362, 1311, 1349, 1269, 1335, 1389, 1298,
	1345, 1390, 320, 246, 322, 202, 407, 491, 284, 0,
	0, 0, 0, 0, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 243, 0, 0,
	0, 346, 355, 354, 335, 336, 338, 340, 345, 352,
	358, 1294, 1342, 1384, 1295, 1344, 263, 318, 270, 262,
	563, 1395, 1374, 1258, 1323, 1383, 0, 0, 227, 1386,
	1318, 0, 1347, 0, 1401, 1253, 1338, 0, 1256, 1260,
	1397, 1379, 1289, 273, 0, 0, 0, 0, 0, 0,
	0, 1315, 1325, 1359, 1363, 1309, 0, 0, 0, 0,
	0, 0, 3139, 0, 1287, 0, 1334, 0, 0, 0,
	1265, 1257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1313, 0, 0, 0, 0, 1268,
	0, 1288, 1360, 0, 1251, 295, 1262, 396, 255, 0,
	447, 1367, 1378, 1310, 605, 1382, 1308, 1307, 1354, 1266,
	1373, 1301, 360, 1264, 327, 197, 223, 0, 1299, 406,
	455, 467, 1372, 1284, 1293, 251, 1291, 465, 420, 583,
	231, 282, 452, 426, 463, 434, 285, 1333, 1352, 464,
	367, 568, 444, 580, 606, 607, 261, 400, 592, 505,
	600, 624, 224, 258, 414, 498, 586, 487, 392, 564,
	565, 326, 486, 293, 201, 364, 612, 222, 473, 366,
	240, 229, 570, 589, 287, 450, 619, 211, 500, 578,
	237, 477, 0, 0, 627, 245, 497, 213, 575, 496,
	388, 323, 324, 212, 0, 451, 266, 291, 0, 0,
	256, 409, 572, 573, 254, 628, 226, 599, 218, 1263,
	598, 402, 567, 576, 389, 378, 217, 574, 387, 377,
	331, 350, 351, 278, 304, 441, 370, 442, 303, 305,
	398, 397, 399, 205, 587, 0, 206, 0, 492, 588,
	629, 446, 210, 232, 233, 235, 1279, 277, 281, 289,
	292, 300, 301, 310, 362, 413, 440, 436, 445, 1368,
	562, 581, 593, 604, 610, 611, 613, 614, 615, 616,
	617, 620, 618, 401, 308, 488, 330, 368, 1357, 1400,
	419, 466, 238, 585, 489, 199, 1273, 1278, 1271, 0,
	252, 253, 1339, 558, 1274, 1272, 1328, 1329, 1275, 1391,
	1392, 1393, 1376, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 625, 1361, 1267, 0, 1276, 1277, 1370, 1380, 1381,
	648, 379, 479, 582, 332, 344, 347, 337, 356, 0,
	357, 333, 334, 339, 341, 342, 343, 348, 349, 353,
	359, 247, 208, 385, 393, 561, 309, 214, 215, 216,
	507, 508, 509, 510, 596, 597, 601, 456, 457, 458,
	459, 290, 591, 306, 462, 461, 328, 329, 374, 443,
	523, 525, 536, 540, 542, 544, 550, 553, 524, 526,
	537, 541, 543, 545, 551, 554, 513, 515, 517, 519,
	532, 531, 528, 556, 557, 534, 539, 518, 530, 535,
	548, 555, 552, 512, 516, 520, 529, 547, 546, 527,
	538, 549, 533, 521, 514, 522, 1332, 196, 219, 363,
	1396, 448, 286, 626, 595, 590, 204, 221, 1270, 260,
	1282, 1290, 0, 1296, 1304, 1305, 1317, 1319, 1320, 1321,
	1322, 0, 1340, 1341, 1343, 1351, 1353, 1356, 1358, 1365,
	1377, 1399, 198, 200, 207, 220, 230, 234, 241, 259,
	274, 276, 283, 296, 307, 315, 316, 319, 325, 375,
	381, 382, 383, 384, 403, 404, 405, 408, 411, 412,
	415, 417, 418, 421, 425, 429, 430, 431, 433, 435,
	437, 449, 454, 468, 469, 470, 471, 472, 475, 476,
	481, 482, 483, 484, 485, 493, 494, 499, 569, 571,
	584, 602, 608, 474, 298, 299, 438, 439, 311, 312,
	622, 623, 297, 579, 609, 577, 621, 603, 432, 373,
	1331, 1337, 376, 279, 302, 317, 1346, 594, 495, 225,
	460, 288, 249, 1364, 1366, 209, 244, 228, 257, 272,
	275, 321, 386, 394, 423, 428, 294, 269, 242, 453,
	239, 478, 502, 503, 504, 506, 390, 264, 427, 1327,
	1355, 371, 559, 560, 313, 391, 0, 0, 0, 1385,
	1369, 511, 0, 1312, 1388, 1281, 1300, 1398, 1303, 1306,
	1348, 1259, 1326, 410, 1297, 1252, 1285, 1254, 1292, 1255,
	1283, 1314, 268, 1280, 1371, 1330, 1387, 361, 265, 1261,
	1286, 424, 1302, 203, 1350, 480, 250, 372, 369, 566,
	280, 271, 267, 248, 314, 380, 422, 501, 416, 1394,
	365, 1336, 0, 490, 395, 0, 0, 0, 1316, 1375,
	1324, 1362, 1311, 1349, 1269, 1335, 1389, 1298, 1345, 1390,
	320, 246, 322, 202, 407, 491, 284, 0, 0, 0,
	0, 0, 696, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 0, 243, 0, 0, 0, 346,
	355, 354, 335, 336, 338, 340, 345, 352, 358, 1294,
	1342, 1384, 1295, 1344, 263, 318, 270, 262, 563, 1395,
	1374, 1258, 1323, 1383, 0, 0, 227, 1386, 1318, 0,
	1347, 0, 1401, 1253, 1338, 0, 1256, 1260, 1397, 1379,
	1289, 273, 0, 0, 0, 0, 0, 0, 0, 1315,
	1325, 1359, 1363, 1309, 0, 0, 0, 0, 0, 0,
	3099, 0, 1287, 0, 1334, 0, 0, 0, 1265, 1257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1313, 0, 0, 0, 0, 1268, 0, 1288,
	1360, 0, 1251, 295, 1262, 396, 255, 0, 447, 1367,
	1378, 1310, 605, 1382, 1308, 1307, 1354, 1266, 1373, 1301,
	360, 1264, 327, 197, 223, 0, 1299, 406, 455, 467,
	1372, 1284, 1293, 251, 1291, 465, 420, 583, 231, 282,
	452, 426, 463, 434, 285, 1333, 1352, 464, 367, 568,
	444, 580, 606, 607, 261, 400, 592, 505, 600, 624,
	224, 258, 414, 498, 586, 487, 392, 564, 565, 326,
	486, 293, 201, 364, 612, 222, 473, 366, 240, 229,
	570, 589, 287, 450, 619, 211, 500, 578, 237, 477,
	0, 0, 627, 245, 497, 213, 575, 496, 388, 323,
	324, 212, 0, 451, 266, 291, 0, 0, 256, 409,
	572, 573, 254, 628, 226, 599, 218, 1263, 598, 402,
	567, 576, 389, 378, 217, 574, 387, 377, 331, 350,
	351, 278, 304, 441, 370, 442, 303, 305, 398, 397,
	399, 205, 587, 0, 206, 0, 492, 588, 629, 446,
	210, 232, 233, 235, 1279, 277, 281, 289, 292, 300,
	301, 310, 362, 413, 440, 436, 445, 1368, 562, 581,
	593, 604, 610, 611, 613, 614, 615, 616, 617, 620,
	618, 401, 308, 488, 330, 368, 1357, 1400, 419, 466,
	238, 585, 489, 199, 1273, 1278, 1271, 0, 252, 253,
	1339, 558, 1274, 1272, 1328, 1329, 1275, 1391, 1392, 1393,
	1376, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 625,
	1361, 1267, 0, 1276, 1277, 1370, 1380, 1381, 648, 379,
	479, 582, 332, 344, 347, 337, 356, 0, 357, 333,
	334, 339, 341, 342, 343, 348, 349, 353, 359, 247,
	208, 385, 393, 561, 309, 214, 215, 216, 507, 508,
	509, 510, 596, 597, 601, 456, 457, 458, 459, 290,
	591, 306, 462, 461, 328, 329, 374, 443, 523, 525,
	536, 540, 542, 544, 550, 553, 524, 526, 537, 541,
	543, 545, 551, 554, 513, 515, 517, 519, 532, 531,
	528, 556, 557, 534, 539, 518, 530, 535, 548, 555,
	552, 512, 516, 520, 529, 547, 546, 527, 538, 549,
	533, 521, 514, 522, 1332, 196, 219, 363, 1396, 448,
	286, 626, 595, 590, 204, 221, 1270, 260, 1282, 1290,
	0, 1296, 1304, 1305, 1317, 1319, 1320, 1321, 1322, 0,
	1340, 1341, 1343, 1351, 1353, 1356, 1358, 1365, 1377, 1399,
	198, 200, 207, 220, 230, 234, 241, 259, 274, 276,
	283, 296, 307, 315, 316, 319, 325, 375, 381, 382,
	383, 384, 403, 404, 405, 408, 411, 412, 415, 417,
	418, 421, 425, 429, 430, 431, 433, 435, 437, 449,
	454, 468, 469, 470, 471, 472, 475, 476, 481, 482,
	483, 484, 485, 493, 494, 499, 569, 571, 584, 602,
	608, 474, 298, 299, 438, 439, 311, 312, 622, 623,
	297, 579, 609, 577, 621, 603, 432, 373, 1331, 1337,
	376, 279, 302, 317, 1346, 594, 495, 225, 460, 288,
	249, 1364, 1366, 209, 244, 228, 257, 272, 275, 321,
	386, 394, 423, 428, 294, 269, 242, 453, 239, 478,
	502, 503, 504, 506, 390, 264, 427, 1327, 1355, 371,
	559, 560, 313, 391, 0, 0, 0, 1385, 1369, 511,
	0, 1312, 1388, 1281, 1300, 1398, 1303, 1306, 1348, 1259,
	1326, 410, 1297, 1252, 1285, 1254, 1292, 1255, 1283, 1314,
	268, 1280, 1371, 1330, 1387, 361, 265, 1261, 1286, 424,
	1302, 203, 1350, 480, 250, 372, 369, 566, 280, 271,
	267, 248, 314, 380, 422, 501, 416, 1394, 365, 1336,
	0, 490, 395, 0, 0, 0, 1316, 1375, 1324, 1362,
	1311, 1349, 1269, 1335, 1389, 1298, 1345, 1390, 320, 246,
	322, 202, 407, 491, 284, 0, 0, 0, 0, 0,
	929, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 0, 0, 243, 0, 0, 0, 346, 355, 354,
	335, 336, 338, 340, 345, 352, 358, 1294, 1342, 1384,
	1295, 1344, 263, 318, 270, 262, 563, 1395, 1374, 1258,
	1323, 1383, 0, 0, 227, 1386, 1318, 0, 1347, 0,
	1401, 1253, 1338, 0, 1256, 1260, 1397, 1379, 1289, 273,
	0, 0, 0, 0, 0, 0, 0, 1315, 1325, 1359,
	1363, 1309, 0, 0, 0, 0, 0, 0, 2319, 0,
	1287, 0, 1334, 0, 0, 0, 1265, 1257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1313, 0, 0, 0, 0, 1268, 0, 1288, 1360, 0,
	1251, 295, 1262, 396, 255, 0, 447, 1367, 1378, 1310,
	605, 1382, 1308, 1307, 1354, 1266, 1373, 1301, 360, 1264,
	327, 197, 223, 0, 1299, 406, 455, 467, 1372, 1284,
	1293, 251, 1291, 465, 420, 583, 231, 282, 452, 426,
	463, 434, 285, 1333, 1352, 464, 367, 568, 444, 580,
	606, 607, 261, 400, 592, 505, 600, 624, 224, 258,
	414, 498, 586, 487, 392, 564, 565, 326, 486, 293,
	201, 364, 612, 222, 473, 366, 240, 229, 570, 589,
	287, 450, 619, 211, 500, 578, 237, 477, 0, 0,
	627, 245, 497, 213, 575, 496, 388, 323, 324, 212,
	0, 451, 266, 291, 0, 0, 256, 409, 572, 573,
	254, 628, 226, 599, 218, 1263, 598, 402, 567, 576,
	389, 378, 217, 574, 387, 377, 331, 350, 351, 278,
	304, 441, 370, 442, 303, 305, 398, 397, 399, 205,
	587, 0, 206, 0, 492, 588, 629, 446, 210, 232,
	233, 235, 1279, 277, 281, 289, 292, 300, 301, 310,
	362, 413, 440, 436, 445, 1368, 562, 581, 593, 604,
	610, 611, 613, 614, 615, 616, 617, 620, 618, 401,
	308, 488, 330, 368, 1357, 1400, 419, 466, 238, 585,
	489, 199, 1273, 1278, 1271, 0, 252, 253, 1339, 558,
	1274, 1272, 1328, 1329, 1275, 1391, 1392, 1393, 1376, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 625, 1361, 1267,
	0, 1276, 1277, 1370, 1380, 1381, 648, 379, 479, 582,
	332, 344, 347, 337, 356, 0, 357, 333, 334, 339,
	341, 342, 343, 348, 349, 353, 359, 247, 208, 385,
	393, 561, 309, 214, 215, 216, 507, 508, 509, 510,
	596, 597, 601, 456, 457, 458, 459, 290, 591, 306,
	462, 461, 328, 329, 374, 443, 523, 525, 536, 540,
	542, 544, 550, 553, 524, 526, 537, 541, 543, 545,
	551, 554, 513, 515, 517, 519, 532, 531, 528, 556,
	557, 534, 539, 518, 530, 535, 548, 555, 552, 512,
	516, 520, 529, 547, 546, 527, 538, 549, 533, 521,
	514, 522, 1332, 196, 219, 363, 1396, 448, 286, 626,
	595, 590, 204, 221, 1270, 260, 1282, 1290, 0, 1296,
	1304, 1305, 1317, 1319, 1320, 1321, 1322, 0, 1340, 1341,
	1343, 1351, 1353, 1356, 1358, 1365, 1377, 1399, 198, 200,
	207, 220, 230, 234, 241, 259, 274, 276, 283, 296,
	307, 315, 316, 319, 325, 375, 381, 382, 383, 384,
	403, 404, 405, 408, 411, 412, 415, 417, 418, 421,
	425, 429, 430, 431, 433, 435, 437, 449, 454, 468,
	469, 470, 471, 472, 475, 476, 481, 482, 483, 484,
	485, 493, 494, 499, 569, 571, 584, 602, 608, 474,
	298, 299, 438, 439, 311, 312, 622, 623, 297, 579,
	609, 577, 621, 603, 432, 373, 1331, 1337, 376, 279,
	302, 317, 1346, 594, 495, 225, 460, 288, 249, 1364,
	1366, 209, 244, 228, 257, 272, 275, 321, 386, 394,
	423, 428, 294, 269, 242, 453, 239, 478, 502, 503,
	504, 506, 390, 264, 427, 1327, 1355, 371, 559, 560,
	313, 391, 0, 0, 0, 1385, 1369, 511, 0, 1312,
	1388, 1281, 1300, 1398, 1303, 1306, 1348, 1259, 1326, 410,
	1297, 1252, 1285, 1254, 1292, 1255, 1283, 1314, 268, 1280,
	1371, 1330, 1387, 361, 265, 1261, 1286, 424, 1302, 203,
	1350, 480, 250, 372, 369, 566, 280, 271, 267, 248,
	314, 380, 422, 501, 416, 1394, 365, 1336, 0, 490,
	395, 0, 0, 0, 1316, 1375, 1324, 1362, 1311, 1349,
	1269, 1335, 1389, 1298, 1345, 1390, 320, 246, 322, 202,
	407, 491, 284, 0, 94, 0, 0, 0, 696, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 236, 0,
	0, 243, 0, 0, 0, 346, 355, 354, 335, 336,
	338, 340, 345, 352, 358, 1294, 1342, 1384, 1295, 1344,
	263, 318, 270, 262, 563, 1395, 1374, 1258, 1323, 1383,
	0, 0, 227, 1386, 1318, 0, 1347, 0, 1401, 1253,
	1338, 0, 1256, 1260, 1397, 1379, 1289, 273, 0, 0,
	0, 0, 0, 0, 0, 1315, 1325, 1359, 1363, 1309,
	0, 0, 0, 0, 0, 0, 0, 0, 1287, 0,
	1334, 0, 0, 0, 1265, 1257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1313, 0,
	0, 0, 0, 1268, 0, 1288, 1360, 0, 1251, 295,
	1262, 396, 255, 0, 447, 1367, 1378, 1310, 605, 1382,
	1308, 1307, 1354, 1266, 1373, 1301, 360, 1264, 327, 197,
	223, 0, 1299, 406, 455, 467, 1372, 1284, 1293, 251,
	1291, 465, 420, 583, 231, 282, 452, 426, 463, 434,
	285, 1333, 1352, 464, 367, 568, 444, 580, 606, 607,
	261, 400, 592, 505, 600, 624, 224, 258, 414, 498,
	586, 487, 392, 564, 565, 326, 486, 293, 201, 364,
	612, 222, 473, 366, 240, 229, 570, 589, 287, 450,
	619, 211, 500, 578, 237, 477, 0, 0, 627, 245,
	497, 213, 575, 496, 388, 323, 324, 212, 0, 451,
	266, 291, 0, 0, 256, 409, 572, 573, 254, 628,
	226, 599, 218, 1263, 598, 402, 567, 576, 389, 378,
	217, 574, 387, 377, 331, 350, 351, 278, 304, 441,
	370, 442, 303, 305, 398, 397, 399, 205, 587, 0,
	206, 0, 492, 588, 629, 446, 210, 232, 233, 235,
	1279, 277, 281, 289, 292, 300, 301, 310, 362, 413,
	440, 436, 445, 1368, 562, 581, 593, 604, 610, 611,
	613, 614, 615, 616, 617, 620, 618, 401, 308, 488,
	330, 368, 1357, 1400, 419, 466, 238, 585, 489, 199,
	1273, 1278, 1271, 0, 252, 253, 1339, 558, 1274, 1272,
	1328, 1329, 1275, 1391, 1392, 1393, 1376, 630, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 644, 645, 646, 647, 625, 1361, 1267, 0, 1276,
	1277, 1370, 1380, 1381, 648, 379, 479, 582, 332, 344,
	347, 337, 356, 0, 357, 333, 334, 339, 341, 342,
	343, 348, 349, 353, 359, 247, 208, 385, 393, 561,
	309, 214, 215, 216, 507, 508, 509, 510, 596, 597,
	601, 456, 457, 458, 459, 290, 591, 306, 462, 461,
	328, 329, 374, 443, 523, 525, 536, 540, 542, 544,
	550, 553, 524, 526, 537, 541, 543, 545, 551, 554,
	513, 515, 517, 519, 532, 531, 528, 556, 557, 534,
	539, 518, 530, 535, 548, 555, 552, 512, 516, 520,
	529, 547, 546, 527, 538, 549, 533, 521, 514, 522,
	1332, 196, 219, 363, 1396, 448, 286, 626, 595, 590,
	204, 221, 1270, 260, 1282, 1290, 0, 1296, 1304, 1305,
	1317, 1319, 1320, 1321, 1322, 0, 1340, 1341, 1343, 1351,
	1353, 1356, 1358, 1365, 1377, 1399, 198, 200, 207, 220,
	230, 234, 241, 259, 274, 276, 283, 296, 307, 315,
	316, 319, 325, 375, 381, 382, 383, 384, 403, 404,
	405, 408, 411, 412, 415, 417, 418, 421, 425, 429,
	430, 431, 433, 435, 437, 449, 454, 468, 469, 470,
	471, 472, 475, 476, 481, 482, 483, 484, 485, 493,
	494, 499, 569, 571, 584, 602, 608, 474, 298, 299,
	438, 439, 311, 312, 622, 623, 297, 579, 609, 577,
	621, 603, 432, 373, 1331, 1337, 376, 279, 302, 317,
	1346, 594, 495, 225, 460, 288, 249, 1364, 1366, 209,
	244, 228, 257, 272, 275, 321, 386, 394, 423, 428,
	294, 269, 242, 453, 239, 478, 502, 503, 504, 506,
	390, 264, 427, 1327, 1355, 371, 559, 560, 313, 391,
	0, 0, 0, 1385, 1369, 511, 0, 1312, 1388, 1281,
	1300, 1398, 1303, 1306, 1348, 1259, 1326, 410, 1297, 1252,
	1285, 1254, 1292, 1255, 1283, 1314, 268, 1280, 1371, 1330,
	1387, 361, 265, 1261, 1286, 424, 1302, 203, 1350, 480,
	250, 372, 369, 566, 280, 271, 267, 248, 314, 380,
	422, 501, 416, 1394, 365, 1336, 0, 490, 395, 0,
	0, 0, 1316, 1375, 1324, 1362, 1311, 1349, 1269, 1335,
	1389, 1298, 1345, 1390, 320, 246, 322, 202, 407, 491,
	284, 0, 0, 0, 0, 0, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 0, 243,
	0, 0, 0, 346, 355, 354, 335, 336, 338, 340,
	345, 352, 358, 1294, 1342, 1384, 1295, 1344, 263, 318,
	270, 262, 563, 1395, 1374, 1258, 1323, 1383, 0, 0,
	227, 1386, 1318, 0, 1347, 0, 1401, 1253, 1338, 0,
	1256, 1260, 1397, 1379, 1289, 273, 0, 0, 0, 0,
	0, 0, 0, 1315, 1325, 1359, 1363, 1309, 0, 0,
	0, 0, 0, 0, 0, 0, 1287, 0, 1334, 0,
	0, 0, 1265, 1257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1313, 0, 0, 0,
	0, 1268, 0, 1288, 1360, 0, 1251, 295, 1262, 396,
	255, 0, 447, 1367, 1378, 1310, 605, 1382, 1308, 1307,
	1354, 1266, 1373, 1301, 360, 1264, 327, 197, 223, 0,
	1299, 406, 455, 467, 1372, 1284, 1293, 251, 1291, 465,
	420, 583, 231, 282, 452, 426, 463, 434, 285, 1333,
	1352, 464, 367, 568, 444, 580, 606, 607, 261, 400,
	592, 505, 600, 624, 224, 258, 414, 498, 586, 487,
	392, 564, 565, 326, 486, 293, 201, 364, 612, 222,
	473, 366, 240, 229, 570, 589, 287, 450, 619, 211,
	500, 578, 237, 477, 0, 0, 627, 245, 497, 213,
	575, 496, 388, 323, 324, 212, 0, 451, 266, 291,
	0, 0, 256, 409, 572, 573, 254, 628, 226, 599,
	218, 1263, 598, 402, 567, 576, 389, 378, 217, 574,
	387, 377, 331, 350, 351, 278, 304, 441, 370, 442,
	303, 305, 398, 397, 399, 205, 587, 0, 206, 0,
	492, 588, 629, 446, 210, 232, 233, 235, 1279, 277,
	281, 289, 292, 300, 301, 310, 362, 413, 440, 436,
	445, 1368, 562, 581, 593, 604, 610, 611, 613, 614,
	615, 616, 617, 620, 618, 401, 308, 488, 330, 368,
	1357, 1400, 419, 466, 238, 585, 489, 199, 1273, 1278,
	1271, 0, 252, 253, 1339, 558, 1274, 1272, 1328, 1329,
	1275, 1391, 1392, 1393, 1376, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 625, 1361, 1267, 0, 1276, 1277, 1370,
	1380, 1381, 648, 379, 479, 582, 332, 344, 347, 337,
	356, 0, 357, 333, 334, 339, 341, 342, 343, 348,
	349, 353, 359, 247, 208, 385, 393, 561, 309, 214,
	215, 216, 507, 508, 509, 510, 596, 597, 601, 456,
	457, 458, 459, 290, 591, 306, 462, 461, 328, 329,
	374, 443, 523, 525, 536, 540, 542, 544, 550, 553,
	524, 526, 537, 541, 543, 545, 551, 554, 513, 515,
	517, 519, 532, 531, 528, 556, 557, 534, 539, 518,
	530, 535, 548, 555, 552, 512, 516, 520, 529, 547,
	546, 527, 538, 549, 533, 521, 514, 522, 1332, 196,
	219, 363, 1396, 448, 286, 626, 595, 590, 204, 221,
	1270, 260, 1282, 1290, 0, 1296, 1304, 1305, 1317, 1319,
	1320, 1321, 1322, 0, 1340, 1341, 1343, 1351, 1353, 1356,
	1358, 1365, 1377, 1399, 198, 200, 207, 220, 230, 234,
	241, 259, 274, 276, 283, 296, 307, 315, 316, 319,
	325, 375, 381, 382, 383, 384, 403, 404, 405, 408,
	411, 412, 415, 417, 418, 421, 425, 429, 430, 431,
	433, 435, 437, 449, 454, 468, 469, 470, 471, 472,
	475, 476, 481, 482, 483, 484, 485, 493, 494, 499,
	569, 571, 584, 602, 608, 474, 298, 299, 438, 439,
	311, 312, 622, 623, 297, 579, 609, 577, 621, 603,
	432, 373, 1331, 1337, 376, 279, 302, 317, 1346, 594,
	495, 225, 460, 288, 249, 1364, 1366, 209, 244, 228,
	257, 272, 275, 321, 386, 394, 423, 428, 294, 269,
	242, 453, 239, 478, 502, 503, 504, 506, 390, 264,
	427, 1327, 1355, 371, 559, 560, 313, 391, 0, 0,
	0, 1385, 1369, 511, 0, 1312, 1388, 1281, 1300, 1398,
	1303, 1306, 1348, 1259, 1326, 410, 1297, 1252, 1285, 1254,
	1292, 1255, 1283, 1314, 268, 1280, 1371, 1330, 1387, 361,
	265, 1261, 1286, 424, 1302, 203, 1350, 480, 250, 372,
	369, 566, 280, 271, 267, 248, 314, 380, 422, 501,
	416, 1394, 365, 1336, 0, 490, 395, 0, 0, 0,
	1316, 1375, 1324, 1362, 1311, 1349, 1269, 1335, 1389, 1298,
	1345, 1390, 320, 246, 322, 202, 407, 491, 284, 0,
	0, 0, 0, 0, 696, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 243, 0, 0,
	0, 346, 355, 354, 335, 336, 338, 340, 345, 352,
	358, 1294, 1342, 1384, 1295, 1344, 263, 318, 270, 262,
	563, 1395, 1374, 1258, 1323, 1383, 0, 0, 227, 1386,
	1318, 0, 1347, 0, 1401, 1253, 1338, 0, 1256, 1260,
	1397, 1379, 1289, 273, 0, 0, 0, 0, 0, 0,
	0, 1315, 1325, 1359, 1363, 1309, 0, 0, 0, 0,
	0, 0, 0, 0, 1287, 0, 1334, 0, 0, 0,
	1265, 1257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1313, 0, 0, 0, 0, 1268,
	0, 1288, 1360, 0, 1251, 295, 1262, 396, 255, 0,
	447, 1367, 1378, 1310, 605, 1382, 1308, 1307, 1354, 1266,
	1373, 1301, 360, 1264, 327, 197, 223, 0, 1299, 406,
	455, 467, 1372, 1284, 1293, 251, 1291, 465, 420, 583,
	231, 282, 452, 426, 463, 434, 285, 1333, 1352, 464,
	367, 568, 444, 580, 606, 607, 261, 400, 592, 505,
	600, 624, 224, 258, 414, 498, 586, 487, 392, 564,
	565, 326, 486, 293, 201, 364, 612, 222, 473, 366,
	240, 229, 570, 589, 287, 450, 619, 211, 500, 578,
	237, 477, 0, 0, 627, 245, 497, 213, 575, 496,
	388, 323, 324, 212, 0, 451, 266, 291, 0, 0,
	256, 409, 572, 573, 254, 628, 226, 599, 218, 1263,
	598, 402, 567, 576, 389, 378, 217, 574, 387, 377,
	331, 350, 351, 278, 304, 441, 370, 442, 303, 305,
	398, 397, 399, 205, 587, 0, 206, 0, 492, 588,
	629, 446, 210, 232, 233, 235, 1279, 277, 281, 289,
	292, 300, 301, 310, 362, 413, 440, 436, 445, 1368,
	562, 581, 593, 604, 610, 611, 613, 614, 615, 616,
	617, 620, 618, 401, 308, 488, 330, 368, 1357, 1400,
	419, 466, 238, 585, 489, 199, 1273, 1278, 1271, 0,
	252, 253, 1339, 558, 1274, 1272, 1328, 1329, 1275, 1391,
	1392, 1393, 1376, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 625, 1361, 1267, 0, 1276, 1277, 1370, 1380, 1381,
	648, 379, 479, 582, 332, 344, 347, 337, 356, 0,
	357, 333, 334, 339, 341, 342, 343, 348, 349, 353,
	359, 247, 208, 385, 393, 561, 309, 214, 215, 216,
	507, 508, 509, 510, 596, 597, 601, 456, 457, 458,
	459, 290, 591, 306, 462, 461, 328, 329, 374, 443,
	523, 525, 536, 540, 542, 544, 550, 553, 524, 526,
	537, 541, 543, 545, 551, 554, 513, 515, 517, 519,
	532, 531, 528, 556, 557, 534, 539, 518, 530, 535,
	548, 555, 552, 512, 516, 520, 529, 547, 546, 527,
	538, 549, 533, 521, 514, 522, 1332, 196, 219, 363,
	1396, 448, 286, 626, 595, 590, 204, 221, 1270, 260,
	1282, 1290, 0, 1296, 1304, 1305, 1317, 1319, 1320, 1321,
	1322, 0, 1340, 1341, 1343, 1351, 1353, 1356, 1358, 1365,
	1377, 1399, 198, 200, 207, 220, 230, 234, 241, 259,
	274, 276, 283, 296, 307, 315, 316, 319, 325, 375,
	381, 382, 383, 384, 403, 404, 405, 408, 411, 412,
	415, 417, 418, 421, 425, 429, 430, 431, 433, 435,
	437, 449, 454, 468, 469, 470, 471, 472, 475, 476,
	481, 482, 483, 484, 485, 493, 494, 499, 569, 571,
	584, 602, 608, 474, 298, 299, 438, 439, 311, 312,
	622, 623, 297, 579, 609, 577, 621, 603, 432, 373,
	1331, 1337, 376, 279, 302, 317, 1346, 594, 495, 225,
	460, 288, 249, 1364, 1366, 209, 244, 228, 257, 272,
	275, 321, 386, 394, 423, 428, 294, 269, 242, 453,
	239, 478, 502, 503, 504, 506, 390, 264, 427, 1327,
	1355, 371, 559, 560, 313, 391, 0, 0, 0, 1385,
	1369, 511, 0, 1312, 1388, 1281, 1300, 1398, 1303, 1306,
	1348, 1259, 1326, 410, 1297, 1252, 1285, 1254, 1292, 1255,
	1283, 1314, 268, 1280, 1371, 1330, 1387, 361, 265, 1261,
	1286, 424, 1302, 203, 1350, 480, 250, 372, 369, 566,
	280, 271, 267, 248, 314, 380, 422, 501, 416, 1394,
	365, 1336, 0, 490, 395, 0, 0, 0, 1316, 1375,
	1324, 1362, 1311, 1349, 1269, 1335, 1389, 1298, 1345, 1390,
	320, 246, 322, 202, 407, 491, 284, 0, 0, 0,
	0, 0, 929, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 0, 243, 0, 0, 0, 346,
	355, 354, 335, 336, 338, 340, 345, 352, 358, 1294,
	1342, 1384, 1295, 1344, 263, 318, 270, 262, 563, 1395,
	1374, 1258, 1323, 1383, 0, 0, 227, 1386, 1318, 0,
	1347, 0, 1401, 1253, 1338, 0, 1256, 1260, 1397, 1379,
	1289, 273, 0, 0, 0, 0, 0, 0, 0, 1315,
	1325, 1359, 1363, 1309, 0, 0, 0, 0, 0, 0,
	0, 0, 1287, 0, 1334, 0, 0, 0, 1265, 1257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1313, 0, 0, 0, 0, 1268, 0, 1288,
	1360, 0, 1251, 295, 1262, 396, 255, 0, 447, 1367,
	1378, 1310, 605, 1382, 1308, 1307, 1354, 1266, 1373, 1301,
	360, 1264, 327, 197, 223, 0, 1299, 406, 455, 467,
	1372, 1284, 1293, 251, 1291, 465, 420, 583, 231, 282,
	452, 426, 463, 434, 285, 1333, 1352, 464, 367, 568,
	444, 580, 606, 607, 261, 400, 592, 505, 600, 624,
	224, 258, 414, 498, 586, 487, 392, 564, 565, 326,
	486, 293, 201, 364, 612, 222, 473, 366, 240, 229,
	570, 589, 287, 450, 619, 211, 500, 578, 237, 477,
	0, 0, 627, 245, 497, 213, 575, 496, 388, 323,
	324, 212, 0, 451, 266, 291, 0, 0, 256, 409,
	572, 573, 254, 628, 226, 599, 218, 1263, 598, 402,
	567, 576, 389, 378, 217, 574, 387, 377, 331, 350,
	351, 278, 304, 441, 370, 442, 303, 305, 398, 397,
	399, 205, 587, 0, 206, 0, 492, 588, 629, 446,
	210, 232, 233, 235, 1279, 277, 281, 289, 292, 300,
	301, 310, 362, 413, 440, 436, 445, 1368, 562, 581,
	593, 604, 610, 611, 613, 614, 615, 616, 617, 620,
	618, 401, 308, 488, 330, 368, 1357, 1400, 419, 466,
	238, 585, 489, 199, 1273, 1278, 1271, 0, 252, 253,
	1339, 558, 1274, 1272, 1328, 1329, 1275, 1391, 1392, 1393,
	1376, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 625,
	1361, 1267, 0, 1276, 1277, 1370, 1380, 1381, 648, 379,
	479, 582, 332, 344, 347, 337, 356, 0, 357, 333,
	334, 339, 341, 342, 343, 348, 349, 353, 359, 247,
	208, 385, 393, 561, 309, 214, 215, 216, 507, 508,
	509, 510, 596, 597, 601, 456, 457, 458, 459, 290,
	591, 306, 462, 461, 328, 329, 374, 443, 523, 525,
	536, 540, 542, 544, 550, 553, 524, 526, 537, 541,
	543, 545, 551, 554, 513, 515, 517, 519, 532, 531,
	528, 556, 557, 534, 539, 518, 530, 535, 548, 555,
	552, 512, 516, 520, 529, 547, 546, 527, 538, 549,
	533, 521, 514, 522, 1332, 196, 219, 363, 1396, 448,
	286, 626, 595, 590, 204, 221, 1270, 260, 1282, 1290,
	0, 1296, 1304, 1305, 1317, 1319, 1320, 1321, 1322, 0,
	1340, 1341, 1343, 1351, 1353, 1356, 1358, 1365, 1377, 1399,
	198, 200, 207, 220, 230, 234, 241, 259, 274, 276,
	283, 296, 307, 315, 316, 319, 325, 375, 381, 382,
	383, 384, 403, 404, 405, 408, 411, 412, 415, 417,
	418, 421, 425, 429, 430, 431, 433, 435, 437, 449,
	454, 468, 469, 470, 471, 472, 475, 476, 481, 482,
	483, 484, 485, 493, 494, 499, 569, 571, 584, 602,
	608, 474, 298, 299, 438, 439, 311, 312, 622, 623,
	297, 579, 609, 577, 621, 603, 432, 373, 1331, 1337,
	376, 279, 302, 317, 1346, 594, 495, 225, 460, 288,
	249, 1364, 1366, 209, 244, 228, 257, 272, 275, 321,
	386, 394, 423, 428, 294, 269, 242, 453, 239, 478,
	502, 503, 504, 506, 390, 264, 427, 1327, 1355, 371,
	559, 560, 313, 391, 0, 0, 0, 0, 0, 511,
	0, 750, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 410, 0, 0, 0, 0, 738, 0, 0, 0,
	268, 743, 0, 0, 0, 361, 265, 0, 0, 424,
	0, 203, 0, 480, 250, 372, 369, 566, 280, 271,
	267, 248, 314, 380, 422, 501, 416, 749, 365, 0,
	0, 490, 395, 0, 0, 0, 0, 0, 745, 746,
	0, 0, 0, 0, 0, 0, 0, 0, 320, 246,
	322, 202, 407, 491, 284, 0, 94, 0, 0, 945,
	929, 722, 895, 933, 946, 947, 948, 949, 934, 0,
	236, 935, 936, 243, 937, 0, 894, 779, 781, 780,
	844, 845, 846, 847, 848, 849, 850, 777, 942, 950,
	951, 0, 263, 318, 270, 262, 563, 0, 0, 2142,
	2143, 2144, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 718, 735, 0, 748, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 732, 733, 0, 0,
	0, 0, 889, 0, 734, 0, 0, 742, 952, 953,
	954, 955, 956, 957, 958, 959, 960, 961, 962, 963,
	964, 965, 966, 967, 968, 969, 970, 971, 972, 973,
	974, 975, 976, 977, 978, 979, 980, 981, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 0, 396, 255, 0, 447, 888, 0, 0,
	605, 0, 0, 886, 0, 0, 0, 0, 360, 0,
	327, 197, 223, 0, 0, 406, 455, 467, 0, 0,
	0, 939, 0, 465, 420, 583, 231, 282, 452, 426,
	463, 434, 285, 0, 0, 464, 367, 568, 444, 580,
	606, 607, 261, 400, 592, 505, 600, 624, 224, 258,
	414, 498, 586, 487, 392, 564, 565, 326, 486, 293,
	201, 364, 612, 222, 473, 366, 240, 229, 570, 589,
	287, 450, 619, 211, 500, 578, 237, 477, 0, 0,
	627, 245, 497, 213, 575, 496, 388, 323, 324, 212,
	0, 451, 266, 291, 0, 0, 256, 409, 940, 941,
	254, 628, 785, 599, 218, 0, 598, 402, 567, 576,
	389, 378, 217, 574, 387, 377, 331, 793, 794, 278,
	304, 870, 869, 868, 303, 305, 866, 867, 865, 205,
	587, 0, 206, 0, 492, 588, 629, 446, 210, 232,
	233, 235, 0, 277, 281, 289, 292, 300, 301, 310,
	362, 413, 440, 436, 445, 0, 562, 581, 593, 604,
	610, 611, 613, 614, 615, 616, 617, 620, 618, 401,
	308, 488, 330, 368, 0, 0, 419, 466, 238, 585,
	489, 876, 898, 887, 754, 755, 877, 878, 902, 879,
	757, 758, 899, 900, 751, 752, 756, 901, 903, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 625, 890, 741,
	740, 0, 747, 0, 775, 776, 778, 782, 783, 784,
	795, 842, 843, 851, 853, 854, 852, 855, 856, 857,
	860, 861, 862, 863, 858, 859, 864, 759, 763, 760,
	761, 762, 774, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 913, 914, 915, 916, 917, 918, 788,
	792, 791, 789, 790, 786, 787, 814, 813, 815, 816,
	817, 818, 819, 820, 822, 821, 823, 824, 825, 826,
	827, 828, 796, 797, 800, 801, 799, 798, 802, 811,
	812, 803, 804, 805, 806, 807, 808, 810, 809, 829,
	830, 831, 832, 833, 835, 834, 838, 839, 837, 836,
	841, 840, 739, 196, 219, 363, 0, 448, 286, 626,
	595, 590, 204, 221, 904, 260, 905, 0, 0, 909,
	0, 0, 0, 911, 910, 0, 912, 0, 874, 873,
	0, 0, 906, 907, 0, 908, 0, 0, 198, 200,
	207, 220, 230, 234, 241, 259, 274, 276, 283, 296,
	307, 315, 316, 319, 325, 375, 381, 382, 383, 384,
	403, 404, 405, 408, 411, 412, 415, 417, 418, 421,
	425, 429, 430, 431, 433, 435, 437, 449, 454, 468,
	469, 470, 471, 472, 475, 476, 481, 482, 483, 484,
	485, 493, 494, 499, 569, 571, 584, 602, 608, 474,
	919, 920, 921, 922, 923, 924, 925, 926, 297, 579,
	609, 577, 621, 603, 432, 373, 0, 0, 376, 279,
	302, 317, 0, 594, 495, 225, 460, 288, 249, 944,
	0, 209, 244, 228, 257, 272, 275, 321, 386, 394,
	423, 428, 294, 269, 242, 453, 239, 478, 502, 503,
	504, 506, 390, 264, 427, 391, 0, 371, 559, 560,
	313, 511, 0, 750, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 410, 0, 0, 0, 0, 738, 0,
	0, 0, 268, 743, 0, 0, 0, 361, 265, 0,
	0, 424, 0, 203, 0, 480, 250, 372, 369, 566,
	280, 271, 267, 248, 314, 380, 422, 501, 416, 749,
	365, 0, 0, 490, 395, 0, 0, 0, 0, 0,
	745, 746, 0, 0, 0, 0, 0, 0, 2349, 0,
	320, 246, 322, 202, 407, 491, 284, 0, 94, 0,
	0, 945, 929, 722, 895, 933, 946, 947, 948, 949,
	934, 0, 236, 935, 936, 243, 937, 0, 894, 779,
	781, 780, 844, 845, 846, 847, 848, 849, 850, 777,
	942, 950, 951, 2350, 263, 318, 270, 262, 563, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 718, 735, 0, 748, 0, 0,
	0, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 732, 733,
	0, 0, 0, 0, 889, 0, 734, 0, 0, 742,
	952, 953, 954, 955, 956, 957, 958, 959, 960, 961,
	962, 963, 964, 965, 966, 967, 968, 969, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 744, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 0, 396, 255, 0, 447, 888,
	0, 0, 605, 0, 0, 886, 0, 0, 0, 0,
	360, 0, 327, 197, 223, 0, 0, 406, 455, 467,
	0, 0, 0, 939, 0, 465, 420, 583, 231, 282,
	452, 426, 463, 434, 285, 0, 0, 464, 367, 568,
	444, 580, 606, 607, 261, 400, 592, 505, 600, 624,
	224, 258, 414, 498, 586, 487, 392, 564, 565, 326,
	486, 293, 201, 364, 612, 222, 473, 366, 240, 229,
	570, 589, 287, 450, 619, 211, 500, 578, 237, 477,
	0, 0, 627, 245, 497, 213, 575, 496, 388, 323,
	324, 212, 0, 451, 266, 291, 0, 0, 256, 409,
	940, 941, 254, 628, 785, 599, 218, 0, 598, 402,
	567, 576, 389, 378, 217, 574, 387, 377, 331, 793,
	794, 278, 304, 870, 869, 868, 303, 305, 866, 867,
	865, 205, 587, 0, 206, 0, 492, 588, 629, 446,
	210, 232, 233, 235, 0, 277, 281, 289, 292, 300,
	301, 310, 362, 413, 440, 436, 445, 0, 562, 581,
	593, 604, 610, 611, 613, 614, 615, 616, 617, 620,
	618, 401, 308, 488, 330, 368, 0, 0, 419, 466,
	238, 585, 489, 876, 898, 887, 754, 755, 877, 878,
	902, 879, 757, 758, 899, 900, 751, 752, 756, 901,
	903, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 625,
	890, 741, 740, 0, 747, 0, 775, 776, 778, 782,
	783, 784, 795, 842, 843, 851, 853, 854, 852, 855,
	856, 857, 860, 861, 862, 863, 858, 859, 864, 759,
	763, 760, 761, 762, 774, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 913, 914, 915, 916, 917,
	918, 788, 792, 791, 789, 790, 786, 787, 814, 813,
	815, 816, 817, 818, 819, 820, 822, 821, 823, 824,
	825, 826, 827, 828, 796, 797, 800, 801, 799, 798,
	802, 811, 812, 803, 804, 805, 806, 807, 808, 810,
	809, 829, 830, 831, 832, 833, 835, 834, 838, 839,
	837, 836, 841, 840, 739, 196, 219, 363, 0, 448,
	286, 626, 595, 590, 204, 221, 904, 260, 905, 0,
	0, 909, 0, 0, 0, 911, 910, 0, 912, 0,
	874, 873, 0, 0, 906, 907, 0, 908, 0, 0,
	198, 200, 207, 220, 230, 234, 241, 259, 274, 276,
	283, 296, 307, 315, 316, 319, 325, 375, 381, 382,
	383, 384, 403, 404, 405, 408, 411, 412, 415, 417,
	418, 421, 425, 429, 430, 431, 433, 435, 437, 449,
	454, 468, 469, 470, 471, 472, 475, 476, 481, 482,
	483, 484, 485, 493, 494, 499, 569, 571, 584, 602,
	608, 474, 919, 920, 921, 922, 923, 924, 925, 926,
	297, 579, 609, 577, 621, 603, 432, 373, 0, 0,
	376, 279, 302, 317, 0, 594, 495, 225, 460, 288,
	249, 944, 0, 209, 244, 228, 257, 272, 275, 321,
	386, 394, 423, 428, 294, 269, 242, 453, 239, 478,
	502, 503, 504, 506, 390, 264, 427, 0, 391, 371,
	559, 560, 313, 85, 511, 0, 750, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 410, 0, 0, 0,
	0, 738, 0, 0, 0, 268, 743, 0, 0, 0,
	361, 265, 0, 0, 424, 0, 203, 0, 480, 250,
	372, 369, 566, 280, 271, 267, 248, 314, 380, 422,
	501, 416, 749, 365, 0, 0, 490, 395, 0, 0,
	0, 0, 0, 745, 746, 0, 0, 0, 0, 0,
	0, 0, 0, 320, 246, 322, 202, 407, 491, 284,
	0, 94, 0, 0, 945, 929, 722, 895, 933, 946,
	947, 948, 949, 934, 0, 236, 935, 936, 243, 937,
	0, 894, 779, 781, 780, 844, 845, 846, 847, 848,
	849, 850, 777, 942, 950, 951, 0, 263, 318, 270,
	262, 563, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 718, 735, 0,
	748, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 732, 733, 0, 0, 0, 0, 889, 0, 734,
	0, 0, 742, 952, 953, 954, 955, 956, 957, 958,
	959, 960, 961, 962, 963, 964, 965, 966, 967, 968,
	969, 970, 971, 972, 973, 974, 975, 976, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 744, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 0, 396, 255,
	0, 447, 888, 0, 0, 605, 0, 0, 886, 0,
	0, 0, 0, 360, 0, 327, 197, 223, 0, 0,
	406, 455, 467, 0, 0, 0, 939, 0, 465, 420,
	583, 231, 282, 452, 426, 463, 434, 285, 0, 0,
	464, 367, 568, 444, 580, 606, 607, 261, 400, 592,
	505, 600, 624, 224, 258, 414, 498, 586, 487, 392,
	564, 565, 326, 486, 293, 201, 364, 612, 222, 473,
	366, 240, 229, 570, 589, 287, 450, 619, 211, 500,
	578, 237, 477, 0, 0, 627, 245, 497, 213, 575,
	496, 388, 323, 324, 212, 0, 451, 266, 291, 0,
	0, 256, 409, 940, 941, 254, 628, 785, 599, 218,
	0, 598, 402, 567, 576, 389, 378, 217, 574, 387,
	377, 331, 793, 794, 278, 304, 870, 869, 868, 303,
	305, 866, 867, 865, 205, 587, 0, 206, 0, 492,
	588, 629, 446, 210, 232, 233, 235, 0, 277, 281,
	289, 292, 300, 301, 310, 362, 413, 440, 436, 445,
	0, 562, 581, 593, 604, 610, 611, 613, 614, 615,
	616, 617, 620, 618, 401, 308, 488, 330, 368, 0,
	0, 419, 466, 238, 585, 489, 876, 898, 887, 754,
	755, 877, 878, 902, 879, 757, 758, 899, 900, 751,
	752, 756, 901, 903, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 625, 890, 741, 740, 0, 747, 0, 775,
	776, 778, 782, 783, 784, 795, 842, 843, 851, 853,
	854, 852, 855, 856, 857, 860, 861, 862, 863, 858,
	859, 864, 759, 763, 760, 761, 762, 774, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 913, 914,
	915, 916, 917, 918, 788, 792, 791, 789, 790, 786,
	787, 814, 813, 815, 816, 817, 818, 819, 820, 822,
	821, 823, 824, 825, 826, 827, 828, 796, 797, 800,
	801, 799, 798, 802, 811, 812, 803, 804, 805, 806,
	807, 808, 810, 809, 829, 830, 831, 832, 833, 835,
	834, 838, 839, 837, 836, 841, 840, 739, 196, 219,
	363, 93, 448, 286, 626, 595, 590, 204, 221, 904,
	260, 905, 0, 0, 909, 0, 0, 0, 911, 910,
	0, 912, 0, 874, 873, 0, 0, 906, 907, 0,
	908, 0, 0, 198, 200, 207, 220, 230, 234, 241,
	259, 274, 276, 283, 296, 307, 315, 316, 319, 325,
	375, 381, 382, 383, 384, 403, 404, 405, 408, 411,
	412, 415, 417, 418, 421, 425, 429, 430, 431, 433,
	435, 437, 449, 454, 468, 469, 470, 471, 472, 475,
	476, 481, 482, 483, 484, 485, 493, 494, 499, 569,
	571, 584, 602, 608, 474, 919, 920, 921, 922, 923,
	924, 925, 926, 297, 579, 609, 577, 621, 603, 432,
	373, 0, 0, 376, 279, 302, 317, 0, 594, 495,
	225, 460, 288, 249, 944, 0, 209, 244, 228, 257,
	272, 275, 321, 386, 394, 423, 428, 294, 269, 242,
	453, 239, 478, 502, 503, 504, 506, 390, 264, 427,
	391, 0, 371, 559, 560, 313, 511, 0, 750, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 410, 0,
	0, 0, 0, 738, 0, 0, 0, 268, 743, 0,
	0, 0, 361, 265, 0, 0, 424, 0, 203, 0,
	480, 250, 372, 369, 566, 280, 271, 267, 248, 314,
	380, 422, 501, 416, 749, 365, 0, 0, 490, 395,
	0, 0, 0, 0, 0, 745, 746, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 246, 322, 202, 407,
	491, 284, 0, 94, 0, 0, 945, 929, 722, 895,
	933, 946, 947, 948, 949, 934, 0, 236, 935, 936,
	243, 937, 0, 894, 779, 781, 780, 844, 845, 846,
	847, 848, 849, 850, 777, 942, 950, 951, 0, 263,
	318, 270, 262, 563, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 718,
	735, 0, 748, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 732, 733, 0, 0, 0, 0, 889,
	0, 734, 0, 0, 742, 952, 953, 954, 955, 956,
	957, 958, 959, 960, 961, 962, 963, 964, 965, 966,
	967, 968, 969, 970, 971, 972, 973, 974, 975, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 744, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 0,
	396, 255, 0, 447, 888, 0, 0, 605, 0, 0,
	886, 0, 0, 0, 0, 360, 0, 327, 197, 223,
	0, 0, 406, 455, 467, 0, 0, 0, 939, 0,
	465, 420, 583, 231, 282, 452, 426, 463, 434, 285,
	3965, 0, 464, 367, 568, 444, 580, 606, 607, 261,
	400, 592, 505, 600, 624, 224, 258, 414, 498, 586,
	487, 392, 564, 565, 326, 486, 293, 201, 364, 612,
	222, 473, 366, 240, 229, 570, 589, 287, 450, 619,
	211, 500, 578, 237, 477, 0, 0, 627, 245, 497,
	213, 575, 496, 388, 323, 324, 212, 0, 451, 266,
	291, 0, 0, 256, 409, 940, 941, 254, 628, 785,
	599, 218, 0, 598, 402, 567, 576, 389, 378, 217,
	574, 387, 377, 331, 793, 794, 278, 304, 870, 869,
	868, 303, 305, 866, 867, 865, 205, 587, 0, 206,
	0, 492, 588, 629, 446, 210, 232, 233, 235, 0,
	277, 281, 289, 292, 300, 301, 310, 362, 413, 440,
	436, 445, 0, 562, 581, 593, 604, 610, 611, 613,
	614, 615, 616, 617, 620, 618, 401, 308, 488, 330,
	368, 0, 0, 419, 466, 238, 585, 489, 876, 898,
	887, 754, 755, 877, 878, 902, 879, 757, 758, 899,
	900, 751, 752, 756, 901, 903, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 625, 890, 741, 740, 0, 747,
	0, 775, 776, 778, 782, 783, 784, 795, 842, 843,
	851, 853, 854, 852, 855, 856, 857, 860, 861, 862,
	863, 858, 859, 864, 759, 763, 760, 761, 762, 774,
	764, 765, 766, 767, 768, 769, 770, 771, 772, 773,
	913, 914, 915, 916, 917, 918, 788, 792, 791, 789,
	790, 786, 787, 814, 813, 815, 816, 817, 818, 819,
	820, 822, 821, 823, 824, 825, 826, 827, 828, 796,
	797, 800, 801, 799, 798, 802, 811, 812, 803, 804,
	805, 806, 807, 808, 810, 809, 829, 830, 831, 832,
	833, 835, 834, 838, 839, 837, 836, 841, 840, 739,
	196, 219, 363, 0, 448, 286, 626, 595, 590, 204,
	221, 904, 260, 905, 0, 0, 909, 0, 0, 0,
	911, 910, 0, 912, 0, 874, 873, 0, 0, 906,
	907, 0, 908, 0, 0, 198, 200, 207, 220, 230,
	234, 241, 259, 274, 276, 283, 296, 307, 315, 316,
	319, 325, 375, 381, 382, 383, 384, 403, 404, 405,
	408, 411, 412, 415, 417, 418, 421, 425, 429, 430,
	431, 433, 435, 437, 449, 454, 468, 469, 470, 471,
	472, 475, 476, 481, 482, 483, 484, 485, 493, 494,
	499, 569, 571, 584, 602, 608, 474, 919, 920, 921,
	922, 923, 924, 925, 926, 297, 579, 609, 577, 621,
	603, 432, 373, 0, 0, 376, 279, 302, 317, 0,
	594, 495, 225, 460, 288, 249, 944, 0, 209, 244,
	228, 257, 272, 275, 321, 386, 394, 423, 428, 294,
	269, 242, 453, 239, 478, 502, 503, 504, 506, 390,
	264, 427, 391, 0, 371, 559, 560, 313, 511, 0,
	750, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	410, 0, 0, 0, 0, 738, 0, 0, 0, 268,
	743, 0, 0, 0, 361, 265, 0, 0, 424, 0,
	203, 0, 480, 250, 372, 369, 566, 280, 271, 267,
	248, 314, 380, 422, 501, 416, 749, 365, 0, 0,
	490, 395, 0, 0, 0, 0, 0, 745, 746, 0,
	0, 0, 0, 0, 0, 0, 0, 320, 246, 322,
	202, 407, 491, 284, 0, 94, 0, 1701, 945, 929,
	722, 895, 933, 946, 947, 948, 949, 934, 0, 236,
	935, 936, 243, 937, 0, 894, 779, 781, 780, 844,
	845, 846, 847, 848, 849, 850, 777, 942, 950, 951,
	0, 263, 318, 270, 262, 563, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 718, 735, 0, 748, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 732, 733, 0, 0, 0,
	0, 889, 0, 734, 0, 0, 742, 952, 953, 954,
	955, 956, 957, 958, 959, 960, 961, 962, 963, 964,
	965, 966, 967, 968, 969, 970, 971, 972, 973, 974,
	975, 976, 977, 978, 979, 980, 981, 982, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 744,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 0, 396, 255, 0, 447, 888, 0, 0, 605,
	0, 0, 886, 0, 0, 0, 0, 360, 0, 327,
	197, 223, 0, 0, 406, 455, 467, 0, 0, 0,
	939, 0, 465, 420, 583, 231, 282, 452, 426, 463,
	434, 285, 0, 0, 464, 367, 568, 444, 580, 606,
	607, 261, 400, 592, 505, 600, 624, 224, 258, 414,
	498, 586, 487, 392, 564, 565, 326, 486, 293, 201,
	364, 612, 222, 473, 366, 240, 229, 570, 589, 287,
	450, 619, 211, 500, 578, 237, 477, 0, 0, 627,
	245, 497, 213, 575, 496, 388, 323, 324, 212, 0,
	451, 266, 291, 0, 0, 256, 409, 940, 941, 254,
	628, 785, 599, 218, 0, 598, 402, 567, 576, 389,
	378, 217, 574, 387, 377, 331, 793, 794, 278, 304,
	870, 869, 868, 303, 305, 866, 867, 865, 205, 587,
	0, 206, 0, 492, 588, 629, 446, 210, 232, 233,
	235, 0, 277, 281, 289, 292, 300, 301, 310, 362,
	413, 440, 436, 445, 0, 562, 581, 593, 604, 610,
	611, 613, 614, 615, 616, 617, 620, 618, 401, 308,
	488, 330, 368, 0, 0, 419, 466, 238, 585, 489,
	876, 898, 887, 754, 755, 877, 878, 902, 879, 757,
	758, 899, 900, 751, 752, 756, 901, 903, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 625, 890, 741, 740,
	0, 747, 0, 775, 776, 778, 782, 783, 784, 795,
	842, 843, 851, 853, 854, 852, 855, 856, 857, 860,
	861, 862, 863, 858, 859, 864, 759, 763, 760, 761,
	762, 774, 764, 765, 766, 767, 768, 769, 770, 771,
	772, 773, 913, 914, 915, 916, 917, 918, 788, 792,
	791, 789, 790, 786, 787, 814, 813, 815, 816, 817,
	818, 819, 820, 822, 821, 823, 824, 825, 826, 827,
	828, 796, 797, 800, 801, 799, 798, 802, 811, 812,
	803, 804, 805, 806, 807, 808, 810, 809, 829, 830,
	831, 832, 833, 835, 834, 838, 839, 837, 836, 841,
	840, 739, 196, 219, 363, 0, 448, 286, 626, 595,
	590, 204, 221, 904, 260, 905, 0, 0, 909, 0,
	0, 0, 911, 910, 0, 912, 0, 874, 873, 0,
	0, 906, 907, 0, 908, 0, 0, 198, 200, 207,
	220, 230, 234, 241, 259, 274, 276, 283, 296, 307,
	315, 316, 319, 325, 375, 381, 382, 383, 384, 403,
	404, 405, 408, 411, 412, 415, 417, 418, 421, 425,
	429, 430, 431, 433, 435, 437, 449, 454, 468, 469,
	470, 471, 472, 475, 476, 481, 482, 483, 484, 485,
	493, 494, 499, 569, 571, 584, 602, 608, 474, 919,
	920, 921, 922, 923, 924, 925, 926, 297, 579, 609,
	577, 621, 603, 432, 373, 0, 0, 376, 279, 302,
	317, 0, 594, 495, 225, 460, 288, 249, 944, 0,
	209, 244, 228, 257, 272, 275, 321, 386, 394, 423,
	428, 294, 269, 242, 453, 239, 478, 502, 503, 504,
	506, 390, 264, 427, 391, 0, 371, 559, 560, 313,
	511, 0, 750, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 410, 0, 0, 0, 0, 738, 0, 0,
	0, 268, 743, 0, 0, 0, 361, 265, 0, 0,
	424, 0, 203, 0, 480, 250, 372, 369, 566, 280,
	271, 267, 248, 314, 380, 422, 501, 416, 749, 365,
	0, 0, 490, 395, 0, 0, 0, 0, 0, 745,
	746, 0, 0, 0, 0, 0, 0, 0, 0, 320,
	246, 322, 202, 407, 491, 284, 0, 94, 0, 0,
	945, 929, 722, 895, 933, 946, 947, 948, 949, 934,
	0, 236, 935, 936, 243, 937, 0, 894, 779, 781,
	780, 844, 845, 846, 847, 848, 849, 850, 777, 942,
	950, 951, 0, 263, 318, 270, 262, 563, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 718, 735, 0, 748, 0, 0, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 732, 733, 1033,
	0, 0, 0, 889, 0, 734, 0, 0, 742, 952,
	953, 954, 955, 956, 957, 958, 959, 960, 961, 962,
	963, 964, 965, 966, 967, 968, 969, 970, 971, 972,
	973, 974, 975, 976, 977, 978, 979, 980, 981, 982,
	983, 984, 985, 986, 987, 988, 989, 990, 991, 992,
	993, 744, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 0, 396, 255, 0, 447, 888, 0,
	0, 605, 0, 0, 886, 0, 0, 0, 0, 360,
	0, 327, 197, 223, 0, 0, 406, 455, 467, 0,
	0, 0, 939, 0, 465, 420, 583, 231, 282, 452,
	426, 463, 434, 285, 0, 0, 464, 367, 568, 444,
	580, 606, 607, 261, 400, 592, 505, 600, 624, 224,
	258, 414, 498, 586, 487, 392, 564, 565, 326, 486,
	293, 201, 364, 612, 222, 473, 366, 240, 229, 570,
	589, 287, 450, 619, 211, 500, 578, 237, 477, 0,
	0, 627, 245, 497, 213, 575, 496, 388, 323, 324,
	212, 0, 451, 266, 291, 0, 0, 256, 409, 940,
	941, 254, 628, 785, 599, 218, 0, 598, 402, 567,
	576, 389, 378, 217, 574, 387, 377, 331, 793, 794,
	278, 304, 870, 869, 868, 303, 305, 866, 867, 865,
	205, 587, 0, 206, 0, 492, 588, 629, 446, 210,
	232, 233, 235, 0, 277, 281, 289, 292, 300, 301,
	310, 362, 413, 440, 436, 445, 0, 562, 581, 593,
	604, 610, 611, 613, 614, 615, 616, 617, 620, 618,
	401, 308, 488, 330, 368, 0, 0, 419, 466, 238,
	585, 489, 876, 898, 887, 754, 755, 877, 878, 902,
	879, 757, 758, 899, 900, 751, 752, 756, 901, 903,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 625, 890,
	741, 740, 0, 747, 0, 775, 776, 778, 782, 783,
	784, 795, 842, 843, 851, 853, 854, 852, 855, 856,
	857, 860, 861, 862, 863, 858, 859, 864, 759, 763,
	760, 761, 762, 774, 764, 765, 766, 767, 768, 769,
	770, 771, 772, 773, 913, 914, 915, 916, 917, 918,
	788, 792, 791, 789, 790, 786, 787, 814, 813, 815,
	816, 817, 818, 819, 820, 822, 821, 823, 824, 825,
	826, 827, 828, 796, 797, 800, 801, 799, 798, 802,
	811, 812, 803, 804, 805, 806, 807, 808, 810, 809,
	829, 830, 831, 832, 833, 835, 834, 838, 839, 837,
	836, 841, 840, 739, 196, 219, 363, 0, 448, 286,
	626, 595, 590, 204, 221, 904, 260, 905, 0, 0,
	909, 0, 0, 0, 911, 910, 0, 912, 0, 874,
	873, 0, 0, 906, 907, 0, 908, 0, 0, 198,
	200, 207, 220, 230, 234, 241, 259, 274, 276, 283,
	296, 307, 315, 316, 319, 325, 375, 381, 382, 383,
	384, 403, 404, 405, 408, 411, 412, 415, 417, 418,
	421, 425, 429, 430, 431, 433, 435, 437, 449, 454,
	468, 469, 470, 471, 472, 475, 476, 481, 482, 483,
	484, 485, 493, 494, 499, 569, 571, 584, 602, 608,
	474, 919, 920, 921, 922, 923, 924, 925, 926, 297,
	579, 609, 577, 621, 603, 432, 373, 0, 0, 376,
	279, 302, 317, 0, 594, 495, 225, 460, 288, 249,
	944, 0, 209, 244, 228, 257, 272, 275, 321, 386,
	394, 423, 428, 294, 269, 242, 453, 239, 478, 502,
	503, 504, 506, 390, 264, 427, 391, 0, 371, 559,
	560, 313, 511, 0, 750, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 410, 0, 0, 0, 0, 738,
	0, 0, 0, 268, 743, 0, 0, 0, 361, 265,
	0, 0, 424, 0, 203, 0, 480, 250, 372, 369,
	566, 280, 271, 267, 248, 314, 380, 422, 501, 416,
	749, 365, 0, 0, 490, 395, 0, 0, 0, 0,
	0, 745, 746, 0, 0, 0, 0, 0, 0, 0,
	0, 320, 246, 322, 202, 407, 491, 284, 0, 94,
	0, 0, 945, 929, 722, 895, 933, 946, 947, 948,
	949, 934, 0, 236, 935, 936, 243, 937, 0, 894,
	779, 781, 780, 844, 845, 846, 847, 848, 849, 850,
	777, 942, 950, 951, 0, 263, 318, 270, 262, 563,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 718, 735, 0, 748, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 732,
	733, 0, 0, 0, 0, 889, 0, 734, 0, 0,
	742, 952, 953, 954, 955, 956, 957, 958, 959, 960,
	961, 962, 963, 964, 965, 966, 967, 968, 969, 970,
	971, 972, 973, 974, 975, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 744, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 0, 396, 255, 0, 447,
	888, 0, 0, 605, 0, 0, 886, 0, 0, 0,
	0, 360, 0, 327, 197, 223, 0, 0, 406, 455,
	467, 0, 0, 0, 939, 0, 465, 420, 583, 231,
	282, 452, 426, 463, 434, 285, 0, 0, 464, 367,
	568, 444, 580, 606, 607, 261, 400, 592, 505, 600,
	624, 224, 258, 414, 498, 586, 487, 392, 564, 565,
	326, 486, 293, 201, 364, 612, 222, 473, 366, 240,
	229, 570, 589, 287, 450, 619, 211, 500, 578, 237,
	477, 0, 0, 627, 245, 497, 213, 575, 496, 388,
	323, 324, 212, 0, 451, 266, 291, 0, 0, 256,
	409, 940, 941, 254, 628, 785, 599, 218, 0, 598,
	402, 567, 576, 389, 378, 217, 574, 387, 377, 331,
	793, 794, 278, 304, 870, 869, 868, 303, 305, 866,
	867, 865, 205, 587, 0, 206, 0, 492, 588, 629,
	446, 210, 232, 233, 235, 0, 277, 281, 289, 292,
	300, 301, 310, 362, 413, 440, 436, 445, 0, 562,
	581, 593, 604, 610, 611, 613, 614, 615, 616, 617,
	620, 618, 401, 308, 488, 330, 368, 0, 0, 419,
	466, 238, 585, 489, 876, 898, 887, 754, 755, 877,
	878, 902, 879, 757, 758, 899, 900, 751, 752, 756,
	901, 903, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	625, 890, 741, 740, 0, 747, 0, 775, 776, 778,
	782, 783, 784, 795, 842, 843, 851, 853, 854, 852,
	855, 856, 857, 860, 861, 862, 863, 858, 859, 864,
	759, 763, 760, 761, 762, 774, 764, 765, 766, 767,
	768, 769, 770, 771, 772, 773, 913, 914, 915, 916,
	917, 918, 788, 792, 791, 789, 790, 786, 787, 814,
	813, 815, 816, 817, 818, 819, 820, 822, 821, 823,
	824, 825, 826, 827, 828, 796, 797, 800, 801, 799,
	798, 802, 811, 812, 803, 804, 805, 806, 807, 808,
	810, 809, 829, 830, 831, 832, 833, 835, 834, 838,
	839, 837, 836, 841, 840, 739, 196, 219, 363, 0,
	448, 286, 626, 595, 590, 204, 221, 904, 260, 905,
	0, 0, 909, 0, 0, 0, 911, 910, 0, 912,
	0, 874, 873, 0, 0, 906, 907, 0, 908, 0,
	0, 198, 200, 207, 220, 230, 234, 241, 259, 274,
	276, 283, 296, 307, 315, 316, 319, 325, 375, 381,
	382, 383, 384, 403, 404, 405, 408, 411, 412, 415,
	417, 418, 421, 425, 429, 430, 431, 433, 435, 437,
	449, 454, 468, 469, 470, 471, 472, 475, 476, 481,
	482, 483, 484, 485, 493, 494, 499, 569, 571, 584,
	602, 608, 474, 919, 920, 921, 922, 923, 924, 925,
	926, 297, 579, 609, 577, 621, 603, 432, 373, 0,
	0, 376, 279, 302, 317, 0, 594, 495, 225, 460,
	288, 249, 944, 0, 209, 244, 228, 257, 272, 275,
	321, 386, 394, 423, 428, 294, 269, 242, 453, 239,
	478, 502, 503, 504, 506, 390, 264, 427, 391, 0,
	371, 559, 560, 313, 511, 0, 750, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 410, 0, 0, 0,
	0, 738, 0, 0, 0, 268, 743, 0, 0, 0,
	361, 265, 0, 0, 424, 0, 203, 0, 480, 250,
	372, 369, 566, 280, 271, 267, 248, 314, 380, 422,
	501, 416, 749, 365, 0, 0, 490, 395, 0, 0,
	0, 0, 0, 745, 746, 0, 0, 0, 0, 0,
	0, 0, 0, 320, 246, 322, 202, 407, 491, 284,
	0, 94, 0, 0, 945, 929, 722, 895, 933, 946,
	947, 948, 949, 934, 0, 236, 935, 936, 243, 937,
	0, 894, 779, 781, 780, 844, 845, 846, 847, 848,
	849, 850, 777, 942, 950, 951, 0, 263, 318, 270,
	262, 563, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 718, 735, 0,
	748, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 732, 733, 0, 0, 0, 0, 889, 0, 734,
	0, 0, 742, 952, 953, 954, 955, 956, 957, 958,
	959, 960, 961, 962, 963, 964, 965, 966, 967, 968,
	969, 970, 971, 972, 973, 974, 975, 976, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 3057, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 0, 396, 255,
	0, 447, 888, 0, 0, 605, 0, 0, 886, 0,
	0, 0, 0, 360, 0, 327, 197, 223, 0, 0,
	406, 455, 467, 0, 0, 0, 939, 0, 465, 420,
	583, 231, 282, 452, 426, 463, 434, 285, 0, 0,
	464, 367, 568, 444, 580, 606, 607, 261, 400, 592,
	505, 600, 624, 224, 258, 414, 498, 586, 487, 392,
	564, 565, 326, 486, 293, 201, 364, 612, 222, 473,
	366, 240, 229, 570, 589, 287, 450, 619, 211, 500,
	578, 237, 477, 0, 0, 627, 245, 497, 213, 575,
	496, 388, 323, 324, 212, 0, 451, 266, 291, 0,
	0, 256, 409, 940, 941, 254, 628, 785, 599, 218,
	0, 598, 402, 567, 576, 389, 378, 217, 574, 387,
	377, 331, 793, 794, 278, 304, 870, 869, 868, 303,
	305, 866, 867, 865, 205, 587, 0, 206, 0, 492,
	588, 629, 446, 210, 232, 233, 235, 0, 277, 281,
	289, 292, 300, 301, 310, 362, 413, 440, 436, 445,
	0, 562, 581, 593, 604, 610, 611, 613, 614, 615,
	616, 617, 620, 618, 401, 308, 488, 330, 368, 0,
	0, 419, 466, 238, 585, 489, 876, 898, 887, 754,
	755, 877, 878, 902, 879, 757, 758, 899, 900, 751,
	752, 756, 901, 903, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 625, 890, 741, 740, 0, 747, 0, 775,
	776, 778, 782, 783, 784, 795, 842, 843, 851, 853,
	854, 852, 855, 856, 857, 860, 861, 862, 863, 858,
	859, 864, 759, 763, 760, 761, 762, 774, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 913, 914,
	915, 916, 917, 918, 788, 792, 791, 789, 790, 786,
	787, 814, 813, 815, 816, 817, 818, 819, 820, 822,
	821, 823, 824, 825, 826, 827, 828, 796, 797, 800,
	801, 799, 798, 802, 811, 812, 803, 804, 805, 806,
	807, 808, 810, 809, 829, 830, 831, 832, 833, 835,
	834, 838, 839, 837, 836, 841, 840, 739, 196, 219,
	363, 0, 448, 286, 626, 595, 590, 204, 221, 904,
	260, 905, 0, 0, 909, 0, 0, 0, 911, 910,
	0, 912, 0, 874, 873, 0, 0, 906, 907, 0,
	908, 0, 0, 198, 200, 207, 220, 230, 234, 241,
	259, 274, 276, 283, 296, 307, 315, 316, 319, 325,
	375, 381, 382, 383, 384, 403, 404, 405, 408, 411,
	412, 415, 417, 418, 421, 425, 429, 430, 431, 433,
	435, 437, 449, 454, 468, 469, 470, 471, 472, 475,
	476, 481, 482, 483, 484, 485, 493, 494, 499, 569,
	571, 584, 602, 608, 474, 919, 920, 921, 922, 923,
	924, 925, 926, 297, 579, 609, 577, 621, 603, 432,
	373, 0, 0, 376, 279, 302, 317, 0, 594, 495,
	225, 460, 288, 249, 944, 0, 209, 244, 228, 257,
	272, 275, 321, 386, 394, 423, 428, 294, 269, 242,
	453, 239, 478, 502, 503, 504, 506, 390, 264, 427,
	391, 0, 371, 559, 560, 313, 511, 0, 750, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 410, 0,
	0, 0, 0, 738, 0, 0, 0, 268, 743, 0,
	0, 0, 361, 265, 0, 0, 424, 0, 203, 0,
	480, 250, 372, 369, 566, 280, 271, 267, 248, 314,
	380, 422, 501, 416, 749, 365, 0, 0, 490, 395,
	0, 0, 0, 0, 0, 745, 746, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 246, 322, 202, 407,
	491, 284, 0, 94, 0, 0, 945, 929, 722, 895,
	933, 946, 947, 948, 949, 934, 0, 236, 935, 936,
	243, 937, 0, 894, 779, 781, 780, 844, 845, 846,
	847, 848, 849, 850, 777, 942, 950, 951, 0, 263,
	318, 270, 262, 563, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 718,
	735, 0, 748, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 732, 733, 0, 0, 0, 0, 889,
	0, 734, 0, 0, 742, 952, 953, 954, 955, 956,
	957, 958, 959, 960, 961, 962, 963, 964, 965, 966,
	967, 968, 969, 970, 971, 972, 973, 974, 975, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 3053, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 0,
	396, 255, 0, 447, 888, 0, 0, 605, 0, 0,
	886, 0, 0, 0, 0, 360, 0, 327, 197, 223,
	0, 0, 406, 455, 467, 0, 0, 0, 939, 0,
	465, 420, 583, 231, 282, 452, 426, 463, 434, 285,
	0, 0, 464, 367, 568, 444, 580, 606, 607, 261,
	400, 592, 505, 600, 624, 224, 258, 414, 498, 586,
	487, 392, 564, 565, 326, 486, 293, 201, 364, 612,
	222, 473, 366, 240, 229, 570, 589, 287, 450, 619,
	211, 500, 578, 237, 477, 0, 0, 627, 245, 497,
	213, 575, 496, 388, 323, 324, 212, 0, 451, 266,
	291, 0, 0, 256, 409, 940, 941, 254, 628, 785,
	599, 218, 0, 598, 402, 567, 576, 389, 378, 217,
	574, 387, 377, 331, 793, 794, 278, 304, 870, 869,
	868, 303, 305, 866, 867, 865, 205, 587, 0, 206,
	0, 492, 588, 629, 446, 210, 232, 233, 235, 0,
	277, 281, 289, 292, 300, 301, 310, 362, 413, 440,
	436, 445, 0, 562, 581, 593, 604, 610, 611, 613,
	614, 615, 616, 617, 620, 618, 401, 308, 488, 330,
	368, 0, 0, 419, 466, 238, 585, 489, 876, 898,
	887, 754, 755, 877, 878, 902, 879, 757, 758, 899,
	900, 751, 752, 756, 901, 903, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 625, 890, 741, 740, 0, 747,
	0, 775, 776, 778, 782, 783, 784, 795, 842, 843,
	851, 853, 854, 852, 855, 856, 857, 860, 861, 862,
	863, 858, 859, 864, 759, 763, 760, 761, 762, 774,
	764, 765, 766, 767, 768, 769, 770, 771, 772, 773,
	913, 914, 915, 916, 917, 918, 788, 792, 791, 789,
	790, 786, 787, 814, 813, 815, 816, 817, 818, 819,
	820, 822, 821, 823, 824, 825, 826, 827, 828, 796,
	797, 800, 801, 799, 798, 802, 811, 812, 803, 804,
	805, 806, 807, 808, 810, 809, 829, 830, 831, 832,
	833, 835, 834, 838, 839, 837, 836, 841, 840, 739,
	196, 219, 363, 0, 448, 286, 626, 595, 590, 204,
	221, 904, 260, 905, 0, 0, 909, 0, 0, 0,
	911, 910, 0, 912, 0, 874, 873, 0, 0, 906,
	907, 0, 908, 0, 0, 198, 200, 207, 220, 230,
	234, 241, 259, 274, 276, 283, 296, 307, 315, 316,
	319, 325, 375, 381, 382, 383, 384, 403, 404, 405,
	408, 411, 412, 415, 417, 418, 421, 425, 429, 430,
	431, 433, 435, 437, 449, 454, 468, 469, 470, 471,
	472, 475, 476, 481, 482, 483, 484, 485, 493, 494,
	499, 569, 571, 584, 602, 608, 474, 919, 920, 921,
	922, 923, 924, 925, 926, 297, 579, 609, 577, 621,
	603, 432, 373, 0, 0, 376, 279, 302, 317, 0,
	594, 495, 225, 460, 288, 249, 944, 0, 209, 244,
	228, 257, 272, 275, 321, 386, 394, 423, 428, 294,
	269, 242, 453, 239, 478, 502, 503, 504, 506, 390,
	264, 427, 391, 0, 371, 559, 560, 313, 511, 0,
	750, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	410, 0, 0, 0, 0, 738, 0, 0, 0, 268,
	743, 0, 0, 0, 361, 265, 0, 0, 424, 0,
	203, 0, 480, 250, 372, 369, 566, 280, 271, 267,
	248, 314, 380, 422, 501, 416, 749, 365, 0, 0,
	490, 395, 0, 0, 0, 0, 0, 745, 746, 0,
	0, 0, 0, 0, 0, 0, 0, 320, 246, 322,
	202, 407, 491, 284, 0, 94, 0, 0, 945, 929,
	1057, 895, 933, 946, 947, 948, 949, 934, 0, 236,
	935, 936, 243, 937, 0, 894, 779, 781, 780, 844,
	845, 846, 847, 848, 849, 850, 777, 942, 950, 951,
	0, 263, 318, 270, 262, 563, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 735, 0, 748, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 732, 733, 0, 0, 0,
	0, 889, 0, 734, 0, 0, 742, 952, 953, 954,
	955, 956, 957, 958, 959, 960, 961, 962, 963, 964,
	965, 966, 967, 968, 969, 970, 971, 972, 973, 974,
	975, 976, 977, 978, 979, 980, 981, 982, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 744,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 0, 396, 255, 0, 447, 888, 0, 0, 605,
	0, 0, 886, 0, 0, 0, 0, 360, 0, 327,
	197, 223, 0, 0, 406, 455, 467, 0, 0, 0,
	939, 0, 465, 420, 583, 231, 282, 452, 426, 463,
	434, 285, 0, 0, 464, 367, 568, 444, 580, 606,
	607, 261, 400, 592, 505, 600, 624, 224, 258, 414,
	498, 586, 487, 392, 564, 565, 326, 486, 293, 201,
	364, 612, 222, 473, 366, 240, 229, 570, 589, 287,
	450, 619, 211, 500, 578, 237, 477, 0, 0, 627,
	245, 497, 213, 575, 496, 388, 323, 324, 212, 0,
	451, 266, 291, 0, 0, 256, 409, 940, 941, 254,
	628, 785, 599, 218, 0, 598, 402, 567, 576, 389,
	378, 217, 574, 387, 377, 331, 793, 794, 278, 304,
	870, 869, 868, 303, 305, 866, 867, 865, 205, 587,
	0, 206, 0, 492, 588, 629, 446, 210, 232, 233,
	235, 0, 277, 281, 289, 292, 300, 301, 310, 362,
	413, 440, 436, 445, 0, 562, 581, 593, 604, 610,
	611, 613, 614, 615, 616, 617, 620, 618, 401, 308,
	488, 330, 368, 0, 0, 419, 466, 238, 585, 489,
	876, 898, 887, 754, 755, 877, 878, 902, 879, 757,
	758, 899, 900, 751, 752, 756, 901, 903, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 625, 890, 741, 740,
	0, 747, 0, 775, 776, 778, 782, 783, 784, 795,
	842, 843, 851, 853, 854, 852, 855, 856, 857, 860,
	861, 862, 863, 858, 859, 864, 759, 763, 760, 761,
	762, 774, 764, 765, 766, 767, 768, 769, 770, 771,
	772, 773, 913, 914, 915, 916, 917, 918, 788, 792,
	791, 789, 790, 786, 787, 814, 813, 815, 816, 817,
	818, 819, 820, 822, 821, 823, 824, 825, 826, 827,
	828, 796, 797, 800, 801, 799, 798, 802, 811, 812,
	803, 804, 805, 806, 807, 808, 810, 809, 829, 830,
	831, 832, 833, 835, 834, 838, 839, 837, 836, 841,
	840, 739, 196, 219, 363, 0, 448, 286, 626, 595,
	590, 204, 221, 904, 260, 905, 0, 0, 909, 0,
	0, 0, 911, 910, 0, 912, 0, 874, 873, 0,
	0, 906, 907, 0, 908, 0, 0, 198, 200, 207,
	220, 230, 234, 241, 259, 274, 276, 283, 296, 307,
	315, 316, 319, 325, 375, 381, 382, 383, 384, 403,
	404, 405, 408, 411, 412, 415, 417, 418, 421, 425,
	429, 430, 431, 433, 435, 437, 449, 454, 468, 469,
	470, 471, 472, 475, 476, 481, 482, 483, 484, 485,
	493, 494, 499, 569, 571, 584, 602, 608, 474, 919,
	920, 921, 922, 923, 924, 925, 926, 297, 579, 609,
	577, 621, 603, 432, 373, 0, 0, 376, 279, 302,
	317, 0, 594, 495, 225, 460, 288, 249, 944, 0,
	209, 244, 228, 257, 272, 275, 321, 386, 394, 423,
	428, 294, 269, 242, 453, 239, 478, 502, 503, 504,
	506, 390, 264, 427, 391, 0, 371, 559, 560, 313,
	511, 0, 750, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 410, 0, 0, 0, 0, 738, 0, 0,
	0, 268, 743, 0, 0, 0, 361, 265, 0, 0,
	424, 0, 203, 0, 480, 250, 372, 369, 566, 280,
	271, 267, 248, 314, 380, 422, 501, 416, 749, 365,
	0, 0, 490, 395, 0, 0, 0, 0, 0, 745,
	746, 0, 0, 0, 0, 0, 0, 0, 0, 320,
	246, 322, 202, 407, 491, 284, 0, 94, 0, 0,
	945, 929, 1057, 895, 933, 946, 947, 948, 949, 934,
	0, 236, 935, 936, 243, 937, 0, 894, 779, 781,
	780, 844, 845, 846, 847, 848, 849, 850, 777, 942,
	950, 951, 0, 263, 318, 270, 262, 563, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 735, 0, 748, 0, 0, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 732, 733, 0,
	0, 0, 0, 889, 0, 734, 0, 0, 742, 952,
	953, 954, 955, 956, 957, 958, 959, 960, 961, 962,
	963, 964, 965, 966, 967, 968, 969, 970, 971, 972,
	973, 974, 975, 976, 977, 978, 979, 980, 981, 982,
	983, 984, 985, 986, 987, 988, 989, 990, 991, 992,
	993, 2055, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 0, 396, 255, 0, 447, 888, 0,
	0, 605, 0, 0, 886, 0, 0, 0, 0, 360,
	0, 327, 197, 223, 0, 0, 406, 455, 467, 0,
	0, 0, 939, 0, 465, 420, 583, 231, 282, 452,
	426, 463, 434, 285, 0, 0, 464, 367, 568, 444,
	580, 606, 607, 261, 400, 592, 505, 600, 624, 224,
	258, 414, 498, 586, 487, 392, 564, 565, 326, 486,
	293, 201, 364, 612, 222, 473, 366, 240, 229, 570,
	589, 287, 450, 619, 211, 500, 578, 237, 477, 0,
	0, 627, 245, 497, 213, 575, 496, 388, 323, 324,
	212, 0, 451, 266, 291, 0, 0, 256, 409, 940,
	941, 254, 628, 785, 599, 218, 0, 598, 402, 567,
	576, 389, 378, 217, 574, 387, 377, 331, 793, 794,
	278, 304, 870, 869, 868, 303, 305, 866, 867, 865,
	205, 587, 0, 206, 0, 492, 588, 629, 446, 210,
	232, 233, 235, 0, 277, 281, 289, 292, 300, 301,
	310, 362, 413, 440, 436, 445, 0, 562, 581, 593,
	604, 610, 611, 613, 614, 615, 616, 617, 620, 618,
	401, 308, 488, 330, 368, 0, 0, 419, 466, 238,
	585, 489, 876, 898, 887, 754, 755, 877, 878, 902,
	879, 757, 758, 899, 900, 751, 752, 756, 901, 903,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 625, 890,
	741, 740, 0, 747, 0, 775, 776, 778, 782, 783,
	784, 795, 842, 843, 851, 853, 854, 852, 855, 856,
	857, 860, 861, 862, 863, 858, 859, 864, 759, 763,
	760, 761, 762, 774, 764, 765, 766, 767, 768, 769,
	770, 771, 772, 773, 913, 914, 915, 916, 917, 918,
	788, 792, 791, 789, 790, 786, 787, 814, 813, 815,
	816, 817, 818, 819, 820, 822, 821, 823, 824, 825,
	826, 827, 828, 796, 797, 800, 801, 799, 798, 802,
	811, 812, 803, 804, 805, 806, 807, 808, 810, 809,
	829, 830, 831, 832, 833, 835, 834, 838, 839, 837,
	836, 841, 840, 739, 196, 219, 363, 0, 448, 286,
	626, 595, 590, 204, 221, 904, 260, 905, 0, 0,
	909, 0, 0, 0, 911, 910, 0, 912, 0, 874,
	873, 0, 0, 906, 907, 0, 908, 0, 0, 198,
	200, 207, 220, 230, 234, 241, 259, 274, 276, 283,
	296, 307, 315, 316, 319, 325, 375, 381, 382, 383,
	384, 403, 404, 405, 408, 411, 412, 415, 417, 418,
	421, 425, 429, 430, 431, 433, 435, 437, 449, 454,
	468, 469, 470, 471, 472, 475, 476, 481, 482, 483,
	484, 485, 493, 494, 499, 569, 571, 584, 602, 608,
	474, 919, 920, 921, 922, 923, 924, 925, 926, 297,
	579, 609, 577, 621, 603, 432, 373, 0, 0, 376,
	279, 302, 317, 0, 594, 495, 225, 460, 288, 249,
	944, 0, 209, 244, 228, 257, 272, 275, 321, 386,
	394, 423, 428, 294, 269, 242, 453, 239, 478, 502,
	503, 504, 506, 390, 264, 427, 391, 0, 371, 559,
	560, 313, 511, 0, 750, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 410, 0, 0, 0, 0, 738,
	0, 0, 0, 268, 743, 0, 0, 0, 361, 265,
	0, 0, 424, 0, 203, 0, 480, 250, 372, 369,
	566, 280, 271, 267, 248, 314, 380, 422, 501, 416,
	749, 365, 0, 0, 490, 395, 0, 0, 0, 0,
	0, 745, 746, 0, 0, 0, 0, 0, 0, 0,
	0, 320, 246, 322, 202, 407, 491, 284, 0, 94,
	0, 0, 945, 929, 1057, 895, 933, 946, 947, 948,
	949, 934, 0, 236, 935, 936, 243, 937, 0, 894,
	779, 781, 780, 844, 845, 846, 847, 848, 849, 850,
	777, 942, 950, 951, 0, 263, 318, 270, 262, 563,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 735, 0, 748, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 732,
	733, 0, 0, 0, 0, 889, 0, 734, 0, 0,
	742, 952, 953, 954, 955, 956, 957, 958, 959, 960,
	961, 962, 963, 964, 965, 966, 967, 968, 969, 970,
	971, 972, 973, 974, 975, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 2053, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 0, 396, 255, 0, 447,
	888, 0, 0, 605, 0, 0, 886, 0, 0, 0,
	0, 360, 0, 327, 197, 223, 0, 0, 406, 455,
	467, 0, 0, 0, 939, 0, 465, 420, 583, 231,
	282, 452, 426, 463, 434, 285, 0, 0, 464, 367,
	568, 444, 580, 606, 607, 261, 400, 592, 505, 600,
	624, 224, 258, 414, 498, 586, 487, 392, 564, 565,
	326, 486, 293, 201, 364, 612, 222, 473, 366, 240,
	229, 570, 589, 287, 450, 619, 211, 500, 578, 237,
	477, 0, 0, 627, 245, 497, 213, 575, 496, 388,
	323, 324, 212, 0, 451, 266, 291, 0, 0, 256,
	409, 940, 941, 254, 628, 785, 599, 218, 0, 598,
	402, 567, 576, 389, 378, 217, 574, 387, 377, 331,
	793, 794, 278, 304, 870, 869, 868, 303, 305, 866,
	867, 865, 205, 587, 0, 206, 0, 492, 588, 629,
	446, 210, 232, 233, 235, 0, 277, 281, 289, 292,
	300, 301, 310, 362, 413, 440, 436, 445, 0, 562,
	581, 593, 604, 610, 611, 613, 614, 615, 616, 617,
	620, 618, 401, 308, 488, 330, 368, 0, 0, 419,
	466, 238, 585, 489, 876, 898, 887, 754, 755, 877,
	878, 902, 879, 757, 758, 899, 900, 751, 752, 756,
	901, 903, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	625, 890, 741, 740, 0, 747, 0, 775, 776, 778,
	782, 783, 784, 795, 842, 843, 851, 853, 854, 852,
	855, 856, 857, 860, 861, 862, 863, 858, 859, 864,
	759, 763, 760, 761, 762, 774, 764, 765, 766, 767,
	768, 769, 770, 771, 772, 773, 913, 914, 915, 916,
	917, 918, 788, 792, 791, 789, 790, 786, 787, 814,
	813, 815, 816, 817, 818, 819, 820, 822, 821, 823,
	824, 825, 826, 827, 828, 796, 797, 800, 801, 799,
	798, 802, 811, 812, 803, 804, 805, 806, 807, 808,
	810, 809, 829, 830, 831, 832, 833, 835, 834, 838,
	839, 837, 836, 841, 840, 739, 196, 219, 363, 0,
	448, 286, 626, 595, 590, 204, 221, 904, 260, 905,
	0, 0, 909, 0, 0, 0, 911, 910, 0, 912,
	0, 874, 873, 0, 0, 906, 907, 0, 908, 0,
	0, 198, 200, 207, 220, 230, 234, 241, 259, 274,
	276, 283, 296, 307, 315, 316, 319, 325, 375, 381,
	382, 383, 384, 403, 404, 405, 408, 411, 412, 415,
	417, 418, 421, 425, 429, 430, 431, 433, 435, 437,
	449, 454, 468, 469, 470, 471, 472, 475, 476, 481,
	482, 483, 484, 485, 493, 494, 499, 569, 571, 584,
	602, 608, 474, 919, 920, 921, 922, 923, 924, 925,
	926, 297, 579, 609, 577, 621, 603, 432, 373, 0,
	0, 376, 279, 302, 317, 0, 594, 495, 225, 460,
	288, 249, 944, 0, 209, 244, 228, 257, 272, 275,
	321, 386, 394, 423, 428, 294, 269, 242, 453, 239,
	478, 502, 503, 504, 506, 390, 264, 427, 391, 0,
	371, 559, 560, 313, 511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 410, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	361, 265, 0, 0, 424, 0, 203, 0, 480, 250,
	372, 369, 566, 280, 271, 267, 248, 314, 380, 422,
	501, 416, 0, 365, 0, 0, 490, 395, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 320, 246, 322, 202, 407, 491, 284,
	0, 0, 0, 0, 0, 696, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 236, 0, 0, 243, 0,
	0, 0, 346, 355, 354, 335, 336, 338, 340, 345,
	352, 358, 0, 0, 0, 0, 0, 263, 318, 270,
	262, 563, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 1108, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 0, 396, 255,
	0, 447, 0, 0, 1107, 605, 0, 0, 0, 0,
	0, 1104, 1105, 360, 1065, 327, 197, 223, 1098, 1102,
	406, 455, 467, 0, 0, 0, 251, 0, 465, 420,
	583, 231, 282, 452, 426, 463, 434, 285, 0, 0,
	464, 367, 568, 444, 580, 606, 607, 261, 400, 592,
	505, 600, 624, 224, 258, 414, 498, 586, 487, 392,
	564, 565, 326, 486, 293, 201, 364, 612, 222, 473,
	366, 240, 229, 570, 589, 287, 450, 619, 211, 500,
	578, 237, 477, 0, 0, 627, 245, 497, 213, 575,
	496, 388, 323, 324, 212, 0, 451, 266, 291, 0,
	0, 256, 409, 572, 573, 254, 628, 226, 599, 218,
	0, 598, 402, 567, 576, 389, 378, 217, 574, 387,
	377, 331, 350, 351, 278, 304, 441, 370, 442, 303,
	305, 398, 397, 399, 205, 587, 0, 206, 0, 492,
	588, 629, 446, 210, 232, 233, 235, 0, 277, 281,
	289, 292, 300, 301, 310, 362, 413, 440, 436, 445,
	0, 562, 581, 593, 604, 610, 611, 613, 614, 615,
	616, 617, 620, 618, 401, 308, 488, 330, 368, 0,
	0, 419, 466, 238, 585, 489, 199, 0, 0, 0,
	0, 252, 253, 0, 558, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 625, 0, 0, 0, 0, 0, 0, 0,
	0, 648, 379, 479, 582, 332, 344, 347, 337, 356,
	0, 357, 333, 334, 339, 341, 342, 343, 348, 349,
	353, 359, 247, 208, 385, 393, 561, 309, 214, 215,
	216, 507, 508, 509, 510, 596, 597, 601, 456, 457,
	458, 459, 290, 591, 306, 462, 461, 328, 329, 374,
	443, 523, 525, 536, 540, 542, 544, 550, 553, 524,
	526, 537, 541, 543, 545, 551, 554, 513, 515, 517,
	519, 532, 531, 528, 556, 557, 534, 539, 518, 530,
	535, 548, 555, 552, 512, 516, 520, 529, 547, 546,
	527, 538, 549, 533, 521, 514, 522, 0, 196, 219,
	363, 0, 448, 286, 626, 595, 590, 204, 221, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 207, 220, 230, 234, 241,
	259, 274, 276, 283, 296, 307, 315, 316, 319, 325,
	375, 381, 382, 383, 384, 403, 404, 405, 408, 411,
	412, 415, 417, 418, 421, 425, 429, 430, 431, 433,
	435, 437, 449, 454, 468, 469, 470, 471, 472, 475,
	476, 481, 482, 483, 484, 485, 493, 494, 499, 569,
	571, 584, 602, 608, 474, 298, 299, 438, 439, 311,
	312, 622, 623, 297, 579, 609, 577, 621, 603, 432,
	373, 0, 0, 376, 279, 302, 317, 0, 594, 495,
	225, 460, 288, 249, 0, 0, 209, 244, 228, 257,
	272, 275, 321, 386, 394, 423, 428, 294, 269, 242,
	453, 239, 478, 502, 503, 504, 506, 390, 264, 427,
	391, 0, 371, 559, 560, 313, 511, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 410, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 361, 265, 0, 0, 424, 0, 203, 0,
	480, 250, 372, 369, 566, 280, 271, 267, 248, 314,
	380, 422, 501, 416, 0, 365, 0, 0, 490, 395,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 246, 322, 202, 407,
	491, 284, 0, 0, 0, 0, 1665, 929, 0, 0,
	1662, 0, 0, 0, 0, 1660, 0, 236, 1661, 1659,
	243, 1664, 0, 894, 346, 355, 354, 335, 336, 338,
	340, 345, 352, 358, 0, 0, 0, 0, 0, 263,
	318, 270, 262, 563, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 0,
	396, 255, 0, 447, 0, 0, 0, 605, 0, 0,
	0, 0, 0, 0, 0, 360, 0, 327, 197, 223,
	0, 0, 406, 455, 467, 0, 0, 0, 251, 0,
	465, 420, 583, 231, 282, 452, 426, 463, 434, 285,
	0, 0, 464, 367, 568, 444, 580, 606, 607, 261,
	400, 592, 505, 600, 624, 224, 258, 414, 498, 586,
	487, 392, 564, 565, 326, 486, 293, 201, 364, 612,
	222, 473, 366, 240, 229, 570, 589, 287, 450, 619,
	211, 500, 578, 237, 477, 0, 0, 627, 245, 497,
	213, 575, 496, 388, 323, 324, 212, 0, 451, 266,
	291, 0, 0, 256, 409, 572, 573, 254, 628, 226,
	599, 218, 0, 598, 402, 567, 576, 389, 378, 217,
	574, 387, 377, 331, 350, 351, 278, 304, 441, 370,
	442, 303, 305, 398, 397, 399, 205, 587, 0, 206,
	0, 492, 588, 629, 446, 210, 232, 233, 235, 0,
	277, 281, 289, 292, 300, 301, 310, 362, 413, 440,
	436, 445, 0, 562, 581, 593, 604, 610, 611, 613,
	614, 615, 616, 617, 620, 618, 401, 308, 488, 330,
	368, 0, 0, 419, 466, 238, 585, 489, 199, 0,
	0, 0, 0, 252, 253, 0, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 625, 0, 0, 0, 0, 0,
	0, 0, 0, 648, 379, 479, 582, 332, 344, 347,
	337, 356, 0, 357, 333, 334, 339, 341, 342, 343,
	348, 349, 353, 359, 247, 208, 385, 393, 561, 309,
	214, 215, 216, 507, 508, 509, 510, 596, 597, 601,
	456, 457, 458, 459, 290, 591, 306, 462, 461, 328,
	329, 374, 443, 523, 525, 536, 540, 542, 544, 550,
	553, 524, 526, 537, 541, 543, 545, 551, 554, 513,
	515, 517, 519, 532, 531, 528, 556, 557, 534, 539,
	518, 530, 535, 548, 555, 552, 512, 516, 520, 529,
	547, 546, 527, 538, 549, 533, 521, 514, 522, 0,
	196, 219, 363, 0, 448, 286, 626, 595, 590, 204,
	221, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 207, 220, 230,
	234, 241, 259, 274, 276, 283, 296, 307, 315, 316,
	319, 325, 375, 381, 382, 383, 384, 403, 404, 405,
	408, 411, 412, 415, 417, 418, 421, 425, 429, 430,
	431, 433, 435, 437, 449, 454, 468, 469, 470, 471,
	472, 475, 476, 481, 482, 483, 484, 485, 493, 494,
	499, 569, 571, 584, 602, 608, 474, 298, 299, 438,
	439, 311, 312, 622, 623, 297, 579, 609, 577, 621,
	603, 432, 373, 0, 0, 376, 279, 302, 317, 0,
	594, 495, 225, 460, 288, 249, 0, 0, 209, 244,
	228, 257, 272, 275, 321, 386, 394, 423, 428, 294,
	269, 242, 453, 239, 478, 502, 503, 504, 506, 390,
	264, 427, 0, 391, 371, 559, 560, 313, 85, 511,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 410, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 0, 0, 0, 361, 265, 0, 0, 424,
	0, 203, 0, 480, 250, 372, 369, 566, 280, 271,
	267, 248, 314, 380, 422, 501, 416, 0, 365, 0,
	0, 490, 395, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 320, 246,
	322, 202, 407, 491, 284, 0, 94, 0, 0, 0,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 0, 0, 243, 0, 0, 0, 346, 355, 354,
	335, 336, 338, 340, 345, 352, 358, 0, 0, 0,
	0, 0, 263, 318, 270, 262, 563, 0, 0, 0,
	0, 0, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 0, 396, 255, 0, 447, 0, 0, 0,
	605, 0, 0, 0, 0, 0, 0, 0, 360, 0,
	327, 197, 223, 0, 0, 406, 455, 467, 0, 0,
	0, 251, 0, 465, 420, 583, 231, 282, 452, 426,
	463, 434, 285, 0, 0, 464, 367, 568, 444, 580,
	606, 607, 261, 400, 592, 505, 600, 624, 224, 258,
	414, 498, 586, 487, 392, 564, 565, 326, 486, 293,
	201, 364, 612, 222, 473, 366, 240, 229, 570, 589,
	287, 450, 619, 211, 500, 578, 237, 477, 0, 0,
	627, 245, 497, 213, 575, 496, 388, 323, 324, 212,
	0, 451, 266, 291, 0, 0, 256, 409, 572, 573,
	254, 628, 226, 599, 218, 0, 598, 402, 567, 576,
	389, 378, 217, 574, 387, 377, 331, 350, 351, 278,
	304, 441, 370, 442, 303, 305, 398, 397, 399, 205,
	587, 0, 206, 0, 492, 588, 629, 446, 210, 232,
	233, 235, 0, 277, 281, 289, 292, 300, 301, 310,
	362, 413, 440, 436, 445, 0, 562, 581, 593, 604,
	610, 611, 613, 614, 615, 616, 617, 620, 618, 401,
	308, 488, 330, 368, 0, 0, 419, 466, 238, 585,
	489, 199, 0, 0, 0, 0, 252, 253, 0, 558,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 625, 0, 0,
	0, 0, 0, 0, 0, 0, 648, 379, 479, 582,
	332, 344, 347, 337, 356, 0, 357, 333, 334, 339,
	341, 342, 343, 348, 349, 353, 359, 247, 208, 385,
	393, 561, 309, 214, 215, 216, 507, 508, 509, 510,
	596, 597, 601, 456, 457, 458, 459, 290, 591, 306,
	462, 461, 328, 329, 374, 443, 523, 525, 536, 540,
	542, 544, 550, 553, 524, 526, 537, 541, 543, 545,
	551, 554, 513, 515, 517, 519, 532, 531, 528, 556,
	557, 534, 539, 518, 530, 535, 548, 555, 552, 512,
	516, 520, 529, 547, 546, 527, 538, 549, 533, 521,
	514, 522, 0, 196, 219, 363, 93, 448, 286, 626,
	595, 590, 204, 221, 0, 260, 0, 0, 0, 0,
	0, 0, 2336, 0, 0, 2335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	207, 220, 230, 234, 241, 259, 274, 276, 283, 296,
	307, 315, 316, 319, 325, 375, 381, 382, 383, 384,
	403, 404, 405, 408, 411, 412, 415, 417, 418, 421,
	425, 429, 430, 431, 433, 435, 437, 449, 454, 468,
	469, 470, 471, 472, 475, 476, 481, 482, 483, 484,
	485, 493, 494, 499, 569, 571, 584, 602, 608, 474,
	298, 299, 438, 439, 311, 312, 622, 623, 297, 579,
	609, 577, 621, 603, 432, 373, 0, 0, 376, 279,
	302, 317, 0, 594, 495, 225, 460, 288, 249, 0,
	0, 209, 244, 228, 257, 272, 275, 321, 386, 394,
	423, 428, 294, 269, 242, 453, 239, 478, 502, 503,
	504, 506, 390, 264, 427, 1720, 0, 371, 559, 560,
	313, 511, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 410, 0, 0, 0, 1722, 0, 0,
	0, 0, 268, 0, 0, 0, 0, 361, 265, 0,
	0, 424, 0, 203, 0, 480, 250, 372, 369, 566,
	280, 271, 267, 248, 314, 380, 422, 501, 416, 0,
	365, 0, 0, 490, 395, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	320, 246, 322, 202, 407, 491, 284, 0, 0, 0,
	0, 1724, 696, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 0, 243, 0, 0, 0, 346,
	355, 354, 335, 336, 338, 340, 345, 352, 358, 0,
	0, 0, 0, 0, 263, 318, 270, 262, 563, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 0, 0,
	1439, 0, 1440, 1441, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 0, 396, 255, 0, 447, 0,
	0, 0, 605, 0, 0, 0, 0, 0, 0, 0,
	360, 0, 327, 197, 223, 0, 0, 406, 455, 467,
	0, 0, 0, 251, 0, 465, 420, 583, 231, 282,
	452, 426, 463, 434, 285, 0, 0, 464, 367, 568,
	444, 580, 606, 607, 261, 400, 592, 505, 600, 624,
	224, 258, 414, 498, 586, 487, 392, 564, 565, 326,
	486, 293, 201, 364, 612, 222, 473, 366, 240, 229,
	570, 589, 287, 450, 619, 211, 500, 578, 237, 477,
	0, 0, 627, 245, 497, 213, 575, 496, 388, 323,
	324, 212, 0, 451, 266, 291, 0, 0, 256, 409,
	572, 573, 254, 628, 226, 599, 218, 0, 598, 402,
	567, 576, 389, 378, 217, 574, 387, 377, 331, 350,
	351, 278, 304, 441, 370, 442, 303, 305, 398, 397,
	399, 205, 587, 0, 206, 0, 492, 588, 629, 446,
	210, 232, 233, 235, 0, 277, 281, 289, 292, 300,
	301, 310, 362, 413, 440, 436, 445, 0, 562, 581,
	593, 604, 610, 611, 613, 614, 615, 616, 617, 620,
	618, 401, 308, 488, 330, 368, 0, 0, 419, 466,
	238, 585, 489, 199, 0, 0, 0, 0, 252, 253,
	0, 558, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 625,
	0, 0, 0, 0, 0, 0, 0, 0, 648, 379,
	479, 582, 332, 344, 347, 337, 356, 0, 357, 333,
	334, 339, 341, 342, 343, 348, 349, 353, 359, 247,
	208, 385, 393, 561, 309, 214, 215, 216, 507, 508,
	509, 510, 596, 597, 601, 456, 457, 458, 459, 290,
	591, 306, 462, 461, 328, 329, 374, 443, 523, 525,
	536, 540, 542, 544, 550, 553, 524, 526, 537, 541,
	543, 545, 551, 554, 513, 515, 517, 519, 532, 531,
	528, 556, 557, 534, 539, 518, 530, 535, 548, 555,
	552, 512, 516, 520, 529, 547, 546, 527, 538, 549,
	533, 521, 514, 522, 0, 196, 219, 363, 0, 448,
	286, 626, 595, 590, 204, 221, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 207, 220, 230, 234, 241, 259, 274, 276,
	283, 296, 307, 315, 316, 319, 325, 375, 381, 382,
	383, 384, 403, 404, 405, 408, 411, 412, 415, 417,
	418, 421, 425, 429, 430, 431, 433, 435, 437, 449,
	454, 468, 469, 470, 471, 472, 475, 476, 481, 482,
	483, 484, 485, 493, 494, 499, 569, 571, 584, 602,
	608, 474, 298, 299, 438, 439, 311, 312, 622, 623,
	297, 579, 609, 577, 621, 603, 432, 373, 0, 0,
	376, 279, 302, 317, 0, 594, 495, 225, 460, 288,
	249, 0, 0, 209, 244, 228, 257, 272, 275, 321,
	386, 394, 423, 428, 294, 269, 242, 453, 239, 478,
	502, 503, 504, 506, 390, 264, 427, 0, 391, 371,
	559, 560, 313, 85, 511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 410, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	361, 265, 0, 0, 424, 0, 203, 0, 480, 250,
	372, 369, 566, 280, 271, 267, 248, 314, 380, 422,
	501, 416, 0, 365, 0, 0, 490, 395, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 320, 246, 322, 202, 407, 491, 284,
	0, 94, 0, 1701, 0, 696, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 236, 0, 0, 243, 0,
	0, 0, 346, 355, 354, 335, 336, 338, 340, 345,
	352, 358, 0, 0, 0, 0, 0, 263, 318, 270,
	262, 563, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 0, 396, 255,
	0, 447, 0, 0, 0, 605, 0, 0, 0, 0,
	0, 0, 0, 360, 0, 327, 197, 223, 0, 0,
	406, 455, 467, 0, 0, 0, 251, 0, 465, 420,
	583, 231, 282, 452, 426, 463, 434, 285, 0, 0,
	464, 367, 568, 444, 580, 606, 607, 261, 400, 592,
	505, 600, 624, 224, 258, 414, 498, 586, 487, 392,
	564, 565, 326, 486, 293, 201, 364, 612, 222, 473,
	366, 240, 229, 570, 589, 287, 450, 619, 211, 500,
	578, 237, 477, 0, 0, 627, 245, 497, 213, 575,
	496, 388, 323, 324, 212, 0, 451, 266, 291, 0,
	0, 256, 409, 572, 573, 254, 628, 226, 599, 218,
	0, 598, 402, 567, 576, 389, 378, 217, 574, 387,
	377, 331, 350, 351, 278, 304, 441, 370, 442, 303,
	305, 398, 397, 399, 205, 587, 0, 206, 0, 492,
	588, 629, 446, 210, 232, 233, 235, 0, 277, 281,
	289, 292, 300, 301, 310, 362, 413, 440, 436, 445,
	0, 562, 581, 593, 604, 610, 611, 613, 614, 615,
	616, 617, 620, 618, 401, 308, 488, 330, 368, 0,
	0, 419, 466, 238, 585, 489, 199, 0, 0, 0,
	0, 252, 253, 0, 558, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 625, 0, 0, 0, 0, 0, 0, 0,
	0, 648, 379, 479, 582, 332, 344, 347, 337, 356,
	0, 357, 333, 334, 339, 341, 342, 343, 348, 349,
	353, 359, 247, 208, 385, 393, 561, 309, 214, 215,
	216, 507, 508, 509, 510, 596, 597, 601, 456, 457,
	458, 459, 290, 591, 306, 462, 461, 328, 329, 374,
	443, 523, 525, 536, 540, 542, 544, 550, 553, 524,
	526, 537, 541, 543, 545, 551, 554, 513, 515, 517,
	519, 532, 531, 528, 556, 557, 534, 539, 518, 530,
	535, 548, 555, 552, 512, 516, 520, 529, 547, 546,
	527, 538, 549, 533, 521, 514, 522, 0, 196, 219,
	363, 93, 448, 286, 626, 595, 590, 204, 221, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 207, 220, 230, 234, 241,
	259, 274, 276, 283, 296, 307, 315, 316, 319, 325,
	375, 381, 382, 383, 384, 403, 404, 405, 408, 411,
	412, 415, 417, 418, 421, 425, 429, 430, 431, 433,
	435, 437, 449, 454, 468, 469, 470, 471, 472, 475,
	476, 481, 482, 483, 484, 485, 493, 494, 499, 569,
	571, 584, 602, 608, 474, 298, 299, 438, 439, 311,
	312, 622, 623, 297, 579, 609, 577, 621, 603, 432,
	373, 0, 0, 376, 279, 302, 317, 0, 594, 495,
	225, 460, 288, 249, 0, 0, 209, 244, 228, 257,
	272, 275, 321, 386, 394, 423, 428, 294, 269, 242,
	453, 239, 478, 502, 503, 504, 506, 390, 264, 427,
	391, 0, 371, 559, 560, 313, 511, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 410, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 361, 265, 0, 0, 424, 0, 203, 0,
	480, 250, 372, 369, 566, 280, 271, 267, 248, 314,
	380, 422, 501, 416, 0, 365, 0, 0, 490, 395,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 246, 322, 202, 407,
	491, 284, 0, 94, 0, 0, 0, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	243, 0, 0, 0, 346, 355, 354, 335, 336, 338,
	340, 345, 352, 358, 0, 0, 0, 0, 0, 263,
	318, 270, 262, 563, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 0,
	396, 255, 0, 447, 0, 0, 0, 605, 0, 0,
	0, 0, 0, 0, 0, 360, 0, 327, 197, 223,
	0, 0, 406, 455, 467, 0, 0, 0, 251, 0,
	465, 420, 583, 231, 282, 452, 426, 463, 434, 285,
	0, 0, 464, 367, 568, 444, 580, 606, 607, 261,
	400, 592, 505, 600, 624, 224, 258, 414, 498, 586,
	487, 392, 564, 565, 326, 486, 293, 201, 364, 612,
	222, 473, 366, 240, 229, 570, 589, 287, 450, 619,
	211, 500, 578, 237, 477, 0, 0, 627, 245, 497,
	213, 575, 496, 388, 323, 324, 212, 0, 451, 266,
	291, 0, 0, 256, 409, 572, 573, 254, 628, 226,
	599, 218, 0, 598, 402, 567, 576, 389, 378, 217,
	574, 387, 377, 331, 350, 351, 278, 304, 441, 370,
	442, 303, 305, 398, 397, 399, 205, 587, 0, 206,
	0, 492, 588, 629, 446, 210, 232, 233, 235, 0,
	277, 281, 289, 292, 300, 301, 310, 362, 413, 440,
	436, 445, 0, 562, 581, 593, 604, 610, 611, 613,
	614, 615, 616, 617, 620, 618, 401, 308, 488, 330,
	368, 0, 0, 419, 466, 238, 585, 489, 199, 0,
	0, 0, 0, 252, 253, 0, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 625, 0, 0, 0, 0, 0,
	0, 0, 0, 648, 379, 479, 582, 332, 344, 347,
	337, 356, 0, 357, 333, 334, 339, 341, 342, 343,
	348, 349, 353, 359, 247, 208, 385, 393, 561, 309,
	214, 215, 216, 507, 508, 509, 510, 596, 597, 601,
	456, 457, 458, 459, 290, 591, 306, 462, 461, 328,
	329, 374, 443, 523, 525, 536, 540, 542, 544, 550,
	553, 524, 526, 537, 541, 543, 545, 551, 554, 513,
	515, 517, 519, 532, 531, 528, 556, 557, 534, 539,
	518, 530, 535, 548, 555, 552, 512, 516, 520, 529,
	547, 546, 527, 538, 549, 533, 521, 514, 522, 0,
	196, 219, 363, 0, 448, 286, 626, 595, 590, 204,
	221, 0, 260, 0, 0, 0, 0, 0, 0, 2336,
	0, 0, 2335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 207, 220, 230,
	234, 241, 259, 274, 276, 283, 296, 307, 315, 316,
	319, 325, 375, 381, 382, 383, 384, 403, 404, 405,
	408, 411, 412, 415, 417, 418, 421, 425, 429, 430,
	431, 433, 435, 437, 449, 454, 468, 469, 470, 471,
	472, 475, 476, 481, 482, 483, 484, 485, 493, 494,
	499, 569, 571, 584, 602, 608, 474, 298, 299, 438,
	439, 311, 312, 622, 623, 297, 579, 609, 577, 621,
	603, 432, 373, 0, 0, 376, 279, 302, 317, 0,
	594, 495, 225, 460, 288, 249, 0, 0, 209, 244,
	228, 257, 272, 275, 321, 386, 394, 423, 428, 294,
	269, 242, 453, 239, 478, 502, 503, 504, 506, 390,
	264, 427, 391, 0, 371, 559, 560, 313, 511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	410, 0, 0, 0, 2285, 0, 0, 0, 0, 268,
	0, 0, 0, 0, 361, 265, 0, 0, 424, 0,
	203, 0, 480, 250, 372, 369, 566, 280, 271, 267,
	248, 314, 380, 422, 501, 416, 0, 365, 0, 0,
	490, 395, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 320, 246, 322,
	202, 407, 491, 284, 0, 0, 0, 0, 1904, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 236,
	0, 0, 243, 0, 0, 0, 346, 355, 354, 335,
	336, 338, 340, 345, 352, 358, 0, 0, 0, 0,
	0, 263, 318, 270, 262, 563, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 0, 396, 255, 0, 447, 0, 0, 0, 605,
	0, 0, 0, 0, 0, 0, 0, 360, 0, 327,
	197, 223, 0, 0, 406, 455, 467, 0, 0, 0,
	251, 0, 465, 420, 583, 231, 282, 452, 426, 463,
	434, 285, 0, 2283, 464, 367, 568, 444, 580, 606,
	607, 261, 400, 592, 505, 600, 624, 224, 258, 414,
	498, 586, 487, 392, 564, 565, 326, 486, 293, 201,
	364, 612, 222, 473, 366, 240, 229, 570, 589, 287,
	450, 619, 211, 500, 578, 237, 477, 0, 0, 627,
	245, 497, 213, 575, 496, 388, 323, 324, 212, 0,
	451, 266, 291, 0, 0, 256, 409, 572, 573, 254,
	628, 226, 599, 218, 0, 598, 402, 567, 576, 389,
	378, 217, 574, 387, 377, 331, 350, 351, 278, 304,
	441, 370, 442, 303, 305, 398, 397, 399, 205, 587,
	0, 206, 0, 492, 588, 629, 446, 210, 232, 233,
	235, 0, 277, 281, 289, 292, 300, 301, 310, 362,
	413, 440, 436, 445, 0, 562, 581, 593, 604, 610,
	611, 613, 614, 615, 616, 617, 620, 618, 401, 308,
	488, 330, 368, 0, 0, 419, 466, 238, 585, 489,
	199, 0, 0, 0, 0, 252, 253, 0, 558, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 625, 0, 0, 0,
	0, 0, 0, 0, 0, 648, 379, 479, 582, 332,
	344, 347, 337, 356, 0, 357, 333, 334, 339, 341,
	342, 343, 348, 349, 353, 359, 247, 208, 385, 393,
	561, 309, 214, 215, 216, 507, 508, 509, 510, 596,
	597, 601, 456, 457, 458, 459, 290, 591, 306, 462,
	461, 328, 329, 374, 443, 523, 525, 536, 540, 542,
	544, 550, 553, 524, 526, 537, 541, 543, 545, 551,
	554, 513, 515, 517, 519, 532, 531, 528, 556, 557,
	534, 539, 518, 530, 535, 548, 555, 552, 512, 516,
	520, 529, 547, 546, 527, 538, 549, 533, 521, 514,
	522, 0, 196, 219, 363, 0, 448, 286, 626, 595,
	590, 204, 221, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 207,
	220, 230, 234, 241, 259, 274, 276, 283, 296, 307,
	315, 316, 319, 325, 375, 381, 382, 383, 384, 403,
	404, 405, 408, 411, 412, 415, 417, 418, 421, 425,
	429, 430, 431, 433, 435, 437, 449, 454, 468, 469,
	470, 471, 472, 475, 476, 481, 482, 483, 484, 485,
	493, 494, 499, 569, 571, 584, 602, 608, 474, 298,
	299, 438, 439, 311, 312, 622, 623, 297, 579, 609,
	577, 621, 603, 432, 373, 0, 0, 376, 279, 302,
	317, 0, 594, 495, 225, 460, 288, 249, 0, 0,
	209, 244, 228, 257, 272, 275, 321, 386, 394, 423,
	428, 294, 269, 242, 453, 239, 478, 502, 503, 504,
	506, 390, 264, 427, 391, 0, 371, 559, 560, 313,
	511, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 410, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 361, 265, 0, 0,
	424, 0, 203, 0, 480, 250, 372, 369, 566, 280,
	271, 267, 248, 314, 380, 422, 501, 416, 0, 365,
	0, 0, 490, 395, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 320,
	246, 322, 202, 407, 491, 284, 0, 0, 0, 0,
	0, 696, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 243, 0, 0, 0, 346, 355,
	354, 335, 336, 338, 340, 345, 352, 358, 0, 0,
	0, 0, 0, 263, 318, 270, 262, 563, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 1059,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 0, 396, 255, 0, 447, 0, 0,
	0, 605, 0, 0, 0, 0, 0, 0, 0, 360,
	1065, 327, 197, 223, 1063, 0, 406, 455, 467, 0,
	0, 0, 251, 0, 465, 420, 583, 231, 282, 452,
	426, 463, 434, 285, 0, 0, 464, 367, 568, 444,
	580, 606, 607, 261, 400, 592, 505, 600, 624, 224,
	258, 414, 498, 586, 487, 392, 564, 565, 326, 486,
	293, 201, 364, 612, 222, 473, 366, 240, 229, 570,
	589, 287, 450, 619, 211, 500, 578, 237, 477, 0,
	0, 627, 245, 497, 213, 575, 496, 388, 323, 324,
	212, 0, 451, 266, 291, 0, 0, 256, 409, 572,
	573, 254, 628, 226, 599, 218, 0, 598, 402, 567,
	576, 389, 378, 217, 574, 387, 377, 331, 350, 351,
	278, 304, 441, 370, 442, 303, 305, 398, 397, 399,
	205, 587, 0, 206, 0, 492, 588, 629, 446, 210,
	232, 233, 235, 0, 277, 281, 289, 292, 300, 301,
	310, 362, 413, 440, 436, 445, 0, 562, 581, 593,
	604, 610, 611, 613, 614, 615, 616, 617, 620, 618,
	401, 308, 488, 330, 368, 0, 0, 419, 466, 238,
	585, 489, 199, 0, 0, 0, 0, 252, 253, 0,
	558, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 625, 0,
	0, 0, 0, 0, 0, 0, 0, 648, 379, 479,
	582, 332, 344, 347, 337, 356, 0, 357, 333, 334,
	339, 341, 342, 343, 348, 349, 353, 359, 247, 208,
	385, 393, 561, 309, 214, 215, 216, 507, 508, 509,
	510, 596, 597, 601, 456, 457, 458, 459, 290, 591,
	306, 462, 461, 328, 329, 374, 443, 523, 525, 536,
	540, 542, 544, 550, 553, 524, 526, 537, 541, 543,
	545, 551, 554, 513, 515, 517, 519, 532, 531, 528,
	556, 557, 534, 539, 518, 530, 535, 548, 555, 552,
	512, 516, 520, 529, 547, 546, 527, 538, 549, 533,
	521, 514, 522, 0, 196, 219, 363, 0, 448, 286,
	626, 595, 590, 204, 221, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 207, 220, 230, 234, 241, 259, 274, 276, 283,
	296, 307, 315, 316, 319, 325, 375, 381, 382, 383,
	384, 403, 404, 405, 408, 411, 412, 415, 417, 418,
	421, 425, 429, 430, 431, 433, 435, 437, 449, 454,
	468, 469, 470, 471, 472, 475, 476, 481, 482, 483,
	484, 485, 493, 494, 499, 569, 571, 584, 602, 608,
	474, 298, 299, 438, 439, 311, 312, 622, 623, 297,
	579, 609, 577, 621, 603, 432, 373, 0, 0, 376,
	279, 302, 317, 0, 594, 495, 225, 460, 288, 249,
	0, 0, 209, 244, 228, 257, 272, 275, 321, 386,
	394, 423, 428, 294, 269, 242, 453, 239, 478, 502,
	503, 504, 506, 390, 264, 427, 391, 0, 371, 559,
	560, 313, 511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 410, 0, 0, 0, 2285, 0,
	0, 0, 0, 268, 0, 0, 0, 0, 361, 265,
	0, 0, 424, 0, 203, 0, 480, 250, 372, 369,
	566, 280, 271, 267, 248, 314, 380, 422, 501, 416,
	0, 365, 0, 0, 490, 395, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 320, 246, 322, 202, 407, 491, 284, 0, 0,
	0, 0, 1904, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 243, 0, 0, 0,
	346, 355, 354, 335, 336, 338, 340, 345, 352, 358,
	0, 0, 0, 0, 0, 263, 318, 270, 262, 563,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 0, 396, 255, 0, 447,
	0, 0, 0, 605, 0, 0, 0, 0, 0, 0,
	0, 360, 0, 327, 197, 223, 0, 0, 406, 455,
	467, 0, 0, 0, 251, 0, 465, 420, 583, 231,
	282, 452, 426, 463, 434, 285, 0, 0, 464, 367,
	568, 444, 580, 606, 607, 261, 400, 592, 505, 600,
	624, 224, 258, 414, 498, 586, 487, 392, 564, 565,
	326, 486, 293, 201, 364, 612, 222, 473, 366, 240,
	229, 570, 589, 287, 450, 619, 211, 500, 578, 237,
	477, 0, 0, 627, 245, 497, 213, 575, 496, 388,
	323, 324, 212, 0, 451, 266, 291, 0, 0, 256,
	409, 572, 573, 254, 628, 226, 599, 218, 0, 598,
	402, 567, 576, 389, 378, 217, 574, 387, 377, 331,
	350, 351, 278, 304, 441, 370, 442, 303, 305, 398,
	397, 399, 205, 587, 0, 206, 0, 492, 588, 629,
	446, 210, 232, 233, 235, 0, 277, 281, 289, 292,
	300, 301, 310, 362, 413, 440, 436, 445, 0, 562,
	581, 593, 604, 610, 611, 613, 614, 615, 616, 617,
	620, 618, 401, 308, 488, 330, 368, 0, 0, 419,
	466, 238, 585, 489, 199, 0, 0, 0, 0, 252,
	253, 0, 558, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	625, 0, 0, 0, 0, 0, 0, 0, 0, 648,
	379, 479, 582, 332, 344, 347, 337, 356, 0, 357,
	333, 334, 339, 341, 342, 343, 348, 349, 353, 359,
	247, 208, 385, 393, 561, 309, 214, 215, 216, 507,
	508, 509, 510, 596, 597, 601, 456, 457, 458, 459,
	290, 591, 306, 462, 461, 328, 329, 374, 443, 523,
	525, 536, 540, 542, 544, 550, 553, 524, 526, 537,
	541, 543, 545, 551, 554, 513, 515, 517, 519, 532,
	531, 528, 556, 557, 534, 539, 518, 530, 535, 548,
	555, 552, 512, 516, 520, 529, 547, 546, 527, 538,
	549, 533, 521, 514, 522, 0, 196, 219, 363, 0,
	448, 286, 626, 595, 590, 204, 221, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 207, 220, 230, 234, 241, 259, 274,
	276, 283, 296, 307, 315, 316, 319, 325, 375, 381,
	382, 383, 384, 403, 404, 405, 408, 411, 412, 415,
	417, 418, 421, 425, 429, 430, 431, 433, 435, 437,
	449, 454, 468, 469, 470, 471, 472, 475, 476, 481,
	482, 483, 484, 485, 493, 494, 499, 569, 571, 584,
	602, 608, 474, 298, 299, 438, 439, 311, 312, 622,
	623, 297, 579, 609, 577, 621, 603, 432, 373, 0,
	0, 376, 279, 302, 317, 0, 594, 495, 225, 460,
	288, 249, 0, 0, 209, 244, 228, 257, 272, 275,
	321, 386, 394, 423, 428, 294, 269, 242, 453, 239,
	478, 502, 503, 504, 506, 390, 264, 427, 391, 0,
	371, 559, 560, 313, 511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 410, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	361, 265, 0, 0, 424, 0, 203, 0, 480, 250,
	372, 369, 566, 280, 271, 267, 248, 314, 380, 422,
	501, 416, 0, 365, 0, 0, 490, 395, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 320, 246, 322, 202, 407, 491, 284,
	0, 0, 0, 1701, 0, 696, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 236, 0, 0, 243, 0,
	0, 0, 346, 355, 354, 335, 336, 338, 340, 345,
	352, 358, 0, 0, 0, 0, 0, 263, 318, 270,
	262, 563, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 0, 396, 255,
	0, 447, 0, 0, 0, 605, 0, 0, 0, 3864,
	0, 0, 0, 360, 0, 327, 197, 223, 0, 0,
	406, 455, 467, 0, 0, 0, 251, 0, 465, 420,
	583, 231, 282, 452, 426, 463, 434, 285, 0, 0,
	464, 367, 568, 444, 580, 606, 607, 261, 400, 592,
	505, 600, 624, 224, 258, 414, 498, 586, 487, 392,
	564, 565, 326, 486, 293, 201, 364, 612, 222, 473,
	366, 240, 229, 570, 589, 287, 450, 619, 211, 500,
	578, 237, 477, 0, 0, 627, 245, 497, 213, 575,
	496, 388, 323, 324, 212, 0, 451, 266, 291, 0,
	0, 256, 409, 572, 573, 254, 628, 226, 599, 218,
	0, 598, 402, 567, 576, 389, 378, 217, 574, 387,
	377, 331, 350, 351, 278, 304, 441, 370, 442, 303,
	305, 398, 397, 399, 205, 587, 0, 206, 0, 492,
	588, 629, 446, 210, 232, 233, 235, 0, 277, 281,
	289, 292, 300, 301, 310, 362, 413, 440, 436, 445,
	0, 562, 581, 593, 604, 610, 611, 613, 614, 615,
	616, 617, 620, 618, 401, 308, 488, 330, 368, 0,
	0, 419, 466, 238, 585, 489, 199, 0, 0, 0,
	0, 252, 253, 0, 558, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 625, 0, 0, 0, 0, 0, 0, 0,
	0, 648, 379, 479, 582, 332, 344, 347, 337, 356,
	0, 357, 333, 334, 339, 341, 342, 343, 348, 349,
	353, 359, 247, 208, 385, 393, 561, 309, 214, 215,
	216, 507, 508, 509, 510, 596, 597, 601, 456, 457,
	458, 459, 290, 591, 306, 462, 461, 328, 329, 374,
	443, 523, 525, 536, 540, 542, 544, 550, 553, 524,
	526, 537, 541, 543, 545, 551, 554, 513, 515, 517,
	519, 532, 531, 528, 556, 557, 534, 539, 518, 530,
	535, 548, 555, 552, 512, 516, 520, 529, 547, 546,
	527, 538, 549, 533, 521, 514, 522, 0, 196, 219,
	363, 0, 448, 286, 626, 595, 590, 204, 221, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 207, 220, 230, 234, 241,
	259, 274, 276, 283, 296, 307, 315, 316, 319, 325,
	375, 381, 382, 383, 384, 403, 404, 405, 408, 411,
	412, 415, 417, 418, 421, 425, 429, 430, 431, 433,
	435, 437, 449, 454, 468, 469, 470, 471, 472, 475,
	476, 481, 482, 483, 484, 485, 493, 494, 499, 569,
	571, 584, 602, 608, 474, 298, 299, 438, 439, 311,
	312, 622, 623, 297, 579, 609, 577, 621, 603, 432,
	373, 0, 0, 376, 279, 302, 317, 0, 594, 495,
	225, 460, 288, 249, 0, 0, 209, 244, 228, 257,
	272, 275, 321, 386, 394, 423, 428, 294, 269, 242,
	453, 239, 478, 502, 503, 504, 506, 390, 264, 427,
	391, 0, 371, 559, 560, 313, 511, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 410, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 361, 265, 0, 0, 424, 0, 203, 0,
	480, 250, 372, 369, 566, 280, 271, 267, 248, 314,
	380, 422, 501, 416, 0, 365, 0, 0, 490, 395,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 246, 322, 202, 407,
	491, 284, 0, 0, 0, 0, 2064, 696, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	243, 0, 0, 0, 346, 355, 354, 335, 336, 338,
	340, 345, 352, 358, 0, 0, 0, 0, 0, 263,
	318, 270, 262, 563, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2065, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 0,
	396, 255, 0, 447, 0, 0, 0, 605, 0, 0,
	0, 0, 0, 0, 0, 360, 0, 327, 197, 223,
	0, 0, 406, 455, 467, 0, 0, 0, 251, 0,
	465, 420, 583, 231, 282, 452, 426, 463, 434, 285,
	0, 0, 464, 367, 568, 444, 580, 606, 607, 261,
	400, 592, 505, 600, 624, 224, 258, 414, 498, 586,
	487, 392, 564, 565, 326, 486, 293, 201, 364, 612,
	222, 473, 366, 240, 229, 570, 589, 287, 450, 619,
	211, 500, 578, 237, 477, 0, 0, 627, 245, 497,
	213, 575, 496, 388, 323, 324, 212, 0, 451, 266,
	291, 0, 0, 256, 409, 572, 573, 254, 628, 226,
	599, 218, 0, 598, 402, 567, 576, 389, 378, 217,
	574, 387, 377, 331, 350, 351, 278, 304, 441, 370,
	442, 303, 305, 398, 397, 399, 205, 587, 0, 206,
	0, 492, 588, 629, 446, 210, 232, 233, 235, 0,
	277, 281, 289, 292, 300, 301, 310, 362, 413, 440,
	436, 445, 0, 562, 581, 593, 604, 610, 611, 613,
	614, 615, 616, 617, 620, 618, 401, 308, 488, 330,
	368, 0, 0, 419, 466, 238, 585, 489, 199, 0,
	0, 0, 0, 252, 253, 0, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 625, 0, 0, 0, 0, 0,
	0, 0, 0, 648, 379, 479, 582, 332, 344, 347,
	337, 356, 0, 357, 333, 334, 339, 341, 342, 343,
	348, 349, 353, 359, 247, 208, 385, 393, 561, 309,
	214, 215, 216, 507, 508, 509, 510, 596, 597, 601,
	456, 457, 458, 459, 290, 591, 306, 462, 461, 328,
	329, 374, 443, 523, 525, 536, 540, 542, 544, 550,
	553, 524, 526, 537, 541, 543, 545, 551, 554, 513,
	515, 517, 519, 532, 531, 528, 556, 557, 534, 539,
	518, 530, 535, 548, 555, 552, 512, 516, 520, 529,
	547, 546, 527, 538, 549, 533, 521, 514, 522, 0,
	196, 219, 363, 0, 448, 286, 626, 595, 590, 204,
	221, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 207, 220, 230,
	234, 241, 259, 274, 276, 283, 296, 307, 315, 316,
	319, 325, 375, 381, 382, 383, 384, 403, 404, 405,
	408, 411, 412, 415, 417, 418, 421, 425, 429, 430,
	431, 433, 435, 437, 449, 454, 468, 469, 470, 471,
	472, 475, 476, 481, 482, 483, 484, 485, 493, 494,
	499, 569, 571, 584, 602, 608, 474, 298, 299, 438,
	439, 311, 312, 622, 623, 297, 579, 609, 577, 621,
	603, 432, 373, 0, 0, 376, 279, 302, 317, 0,
	594, 495, 225, 460, 288, 249, 0, 0, 209, 244,
	228, 257, 272, 275, 321, 386, 394, 423, 428, 294,
	269, 242, 453, 239, 478, 502, 503, 504, 506, 390,
	264, 427, 391, 0, 371, 559, 560, 313, 511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	410, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 0, 0, 361, 265, 0, 0, 424, 0,
	203, 0, 480, 250, 372, 369, 566, 280, 271, 267,
	248, 314, 380, 422, 501, 416, 0, 365, 0, 0,
	490, 395, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 320, 246, 322,
	202, 407, 491, 284, 0, 0, 0, 0, 2778, 696,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 236,
	0, 0, 243, 0, 0, 0, 346, 355, 354, 335,
	336, 338, 340, 345, 352, 358, 0, 0, 0, 0,
	0, 263, 318, 270, 262, 563, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2779, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 0, 396, 255, 0, 447, 0, 0, 0, 605,
	0, 0, 0, 0, 0, 0, 0, 360, 0, 327,
	197, 223, 0, 0, 406, 455, 467, 0, 0, 0,
	251, 0, 465, 420, 583, 231, 282, 452, 426, 463,
	434, 285, 0, 0, 464, 367, 568, 444, 580, 606,
	607, 261, 400, 592, 505, 600, 624, 224, 258, 414,
	498, 586, 487, 392, 564, 565, 326, 486, 293, 201,
	364, 612, 222, 473, 366, 240, 229, 570, 589, 287,
	450, 619, 211, 500, 578, 237, 477, 0, 0, 627,
	245, 497, 213, 575, 496, 388, 323, 324, 212, 0,
	451, 266, 291, 0, 0, 256, 409, 572, 573, 254,
	628, 226, 599, 218, 0, 598, 402, 567, 576, 389,
	378, 217, 574, 387, 377, 331, 350, 351, 278, 304,
	441, 370, 442, 303, 305, 398, 397, 399, 205, 587,
	0, 206, 0, 492, 588, 629, 446, 210, 232, 233,
	235, 0, 277, 281, 289, 292, 300, 301, 310, 362,
	413, 440, 436, 445, 0, 562, 581, 593, 604, 610,
	611, 613, 614, 615, 616, 617, 620, 618, 401, 308,
	488, 330, 368, 0, 0, 419, 466, 238, 585, 489,
	199, 0, 0, 0, 0, 252, 253, 0, 558, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 625, 0, 0, 0,
	0, 0, 0, 0, 0, 648, 379, 479, 582, 332,
	344, 347, 337, 356, 0, 357, 333, 334, 339, 341,
	342, 343, 348, 349, 353, 359, 247, 208, 385, 393,
	561, 309, 214, 215, 216, 507, 508, 509, 510, 596,
	597, 601, 456, 457, 458, 459, 290, 591, 306, 462,
	461, 328, 329, 374, 443, 523, 525, 536, 540, 542,
	544, 550, 553, 524, 526, 537, 541, 543, 545, 551,
	554, 513, 515, 517, 519, 532, 531, 528, 556, 557,
	534, 539, 518, 530, 535, 548, 555, 552, 512, 516,
	520, 529, 547, 546, 527, 538, 549, 533, 521, 514,
	522, 0, 196, 219, 363, 0, 448, 286, 626, 595,
	590, 204, 221, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 207,
	220, 230, 234, 241, 259, 274, 276, 283, 296, 307,
	315, 316, 319, 325, 375, 381, 382, 383, 384, 403,
	404, 405, 408, 411, 412, 415, 417, 418, 421, 425,
	429, 430, 431, 433, 435, 437, 449, 454, 468, 469,
	470, 471, 472, 475, 476, 481, 482, 483, 484, 485,
	493, 494, 499, 569, 571, 584, 602, 608, 474, 298,
	299, 438, 439, 311, 312, 622, 623, 297, 579, 609,
	577, 621, 603, 432, 373, 0, 0, 376, 279, 302,
	317, 0, 594, 495, 225, 460, 288, 249, 0, 0,
	209, 244, 228, 257, 272, 275, 321, 386, 394, 423,
	428, 294, 269, 242, 453, 239, 478, 502, 503, 504,
	506, 390, 264, 427, 391, 0, 371, 559, 560, 313,
	511, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 410, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 361, 265, 0, 0,
	424, 0, 203, 0, 480, 250, 372, 369, 566, 280,
	271, 267, 248, 314, 380, 422, 501, 416, 0, 365,
	0, 0, 490, 395, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 320,
	246, 322, 202, 407, 491, 284, 0, 0, 0, 0,
	0, 696, 0, 0, 0, 0, 2763, 0, 0, 0,
	0, 236, 0, 0, 243, 2764, 0, 0, 346, 355,
	354, 335, 336, 338, 340, 345, 352, 358, 0, 0,
	0, 0, 0, 263, 318, 270, 262, 563, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 0, 396, 255, 0, 447, 0, 0,
	0, 605, 0, 0, 0, 0, 0, 0, 0, 360,
	0, 327, 197, 223, 0, 0, 406, 455, 467, 0,
	0, 0, 251, 0, 465, 420, 583, 231, 282, 452,
	426, 463, 434, 285, 0, 0, 464, 367, 568, 444,
	580, 606, 607, 261, 400, 592, 505, 600, 624, 224,
	258, 414, 498, 586, 487, 392, 564, 565, 326, 486,
	293, 201, 364, 612, 222, 473, 366, 240, 229, 570,
	589, 287, 450, 619, 211, 500, 578, 237, 477, 0,
	0, 627, 245, 497, 213, 575, 496, 388, 323, 324,
	212, 0, 451, 266, 291, 0, 0, 256, 409, 572,
	573, 254, 628, 226, 599, 218, 0, 598, 402, 567,
	576, 389, 378, 217, 574, 387, 377, 331, 350, 351,
	278, 304, 441, 370, 442, 303, 305, 398, 397, 399,
	205, 587, 0, 206, 0, 492, 588, 629, 446, 210,
	232, 233, 235, 0, 277, 281, 289, 292, 300, 301,
	310, 362, 413, 440, 436, 445, 0, 562, 581, 593,
	604, 610, 611, 613, 614, 615, 616, 617, 620, 618,
	401, 308, 488, 330, 368, 0, 0, 419, 466, 238,
	585, 489, 199, 0, 0, 0, 0, 252, 253, 0,
	558, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 625, 0,
	0, 0, 0, 0, 0, 0, 0, 648, 379, 479,
	582, 332, 344, 347, 337, 356, 0, 357, 333, 334,
	339, 341, 342, 343, 348, 349, 353, 359, 247, 208,
	385, 393, 561, 309, 214, 215, 216, 507, 508, 509,
	510, 596, 597, 601, 456, 457, 458, 459, 290, 591,
	306, 462, 461, 328, 329, 374, 443, 523, 525, 536,
	540, 542, 544, 550, 553, 524, 526, 537, 541, 543,
	545, 551, 554, 513, 515, 517, 519, 532, 531, 528,
	556, 557, 534, 539, 518, 530, 535, 548, 555, 552,
	512, 516, 520, 529, 547, 546, 527, 538, 549, 533,
	521, 514, 522, 0, 196, 219, 363, 0, 448, 286,
	626, 595, 590, 204, 221, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 207, 220, 230, 234, 241, 259, 274, 276, 283,
	296, 307, 315, 316, 319, 325, 375, 381, 382, 383,
	384, 403, 404, 405, 408, 411, 412, 415, 417, 418,
	421, 425, 429, 430, 431, 433, 435, 437, 449, 454,
	468, 469, 470, 471, 472, 475, 476, 481, 482, 483,
	484, 485, 493, 494, 499, 569, 571, 584, 602, 608,
	474, 298, 299, 438, 439, 311, 312, 622, 623, 297,
	579, 609, 577, 621, 603, 432, 373, 0, 0, 376,
	279, 302, 317, 0, 594, 495, 225, 460, 288, 249,
	0, 0, 209, 244, 228, 257, 272, 275, 321, 386,
	394, 423, 428, 294, 269, 242, 453, 239, 478, 502,
	503, 504, 506, 390, 264, 427, 391, 0, 371, 559,
	560, 313, 511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 410, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 1744, 0, 0, 0, 361, 265,
	0, 0, 424, 0, 203, 0, 480, 250, 372, 369,
	566, 280, 271, 267, 248, 314, 380, 422, 501, 416,
	0, 365, 0, 0, 490, 395, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 320, 246, 322, 202, 407, 491, 284, 0, 0,
	0, 0, 1743, 696, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 243, 0, 0, 0,
	346, 355, 354, 335, 336, 338, 340, 345, 352, 358,
	0, 0, 0, 0, 0, 263, 318, 270, 262, 563,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 0, 396, 255, 0, 447,
	0, 0, 0, 605, 0, 0, 0, 0, 0, 0,
	0, 360, 0, 327, 197, 223, 0, 0, 406, 455,
	467, 0, 0, 0, 251, 0, 465, 420, 583, 231,
	282, 452, 426, 463, 434, 285, 0, 0, 464, 367,
	568, 444, 580, 606, 607, 261, 400, 592, 505, 600,
	624, 224, 258, 414, 498, 586, 487, 392, 564, 565,
	326, 486, 293, 201, 364, 612, 222, 473, 366, 240,
	229, 570, 589, 287, 450, 619, 211, 500, 578, 237,
	477, 0, 0, 627, 245, 497, 213, 575, 496, 388,
	323, 324, 212, 0, 451, 266, 291, 0, 0, 256,
	409, 572, 573, 254, 628, 226, 599, 218, 0, 598,
	402, 567, 576, 389, 378, 217, 574, 387, 377, 331,
	350, 351, 278, 304, 441, 370, 442, 303, 305, 398,
	397, 399, 205, 587, 0, 206, 0, 492, 588, 629,
	446, 210, 232, 233, 235, 0, 277, 281, 289, 292,
	300, 301, 310, 362, 413, 440, 436, 445, 0, 562,
	581, 593, 604, 610, 611, 613, 614, 615, 616, 617,
	620, 618, 401, 308, 488, 330, 368, 0, 0, 419,
	466, 238, 585, 489, 199, 0, 0, 0, 0, 252,
	253, 0, 558, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	625, 0, 0, 0, 0, 0, 0, 0, 0, 648,
	379, 479, 582, 332, 344, 347, 337, 356, 0, 357,
	333, 334, 339, 341, 342, 343, 348, 349, 353, 359,
	247, 208, 385, 393, 561, 309, 214, 215, 216, 507,
	508, 509, 510, 596, 597, 601, 456, 457, 458, 459,
	290, 591, 306, 462, 461, 328, 329, 374, 443, 523,
	525, 536, 540, 542, 544, 550, 553, 524, 526, 537,
	541, 543, 545, 551, 554, 513, 515, 517, 519, 532,
	531, 528, 556, 557, 534, 539, 518, 530, 535, 548,
	555, 552, 512, 516, 520, 529, 547, 546, 527, 538,
	549, 533, 521, 514, 522, 0, 196, 219, 363, 0,
	448, 286, 626, 595, 590, 204, 221, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 207, 220, 230, 234, 241, 259, 274,
	276, 283, 296, 307, 315, 316, 319, 325, 375, 381,
	382, 383, 384, 403, 404, 405, 408, 411, 412, 415,
	417, 418, 421, 425, 429, 430, 431, 433, 435, 437,
	449, 454, 468, 469, 470, 471, 472, 475, 476, 481,
	482, 483, 484, 485, 493, 494, 499, 569, 571, 584,
	602, 608, 474, 298, 299, 438, 439, 311, 312, 622,
	623, 297, 579, 609, 577, 621, 603, 432, 373, 0,
	0, 376, 279, 302, 317, 0, 594, 495, 225, 460,
	288, 249, 0, 0, 209, 244, 228, 257, 272, 275,
	321, 386, 394, 423, 428, 294, 269, 242, 453, 239,
	478, 502, 503, 504, 506, 390, 264, 427, 391, 0,
	371, 559, 560, 313, 511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 410, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	361, 265, 0, 0, 424, 0, 203, 0, 480, 250,
	372, 369, 566, 280, 271, 267, 248, 314, 380, 422,
	501, 416, 0, 365, 0, 0, 490, 395, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 320, 246, 322, 202, 407, 491, 284,
	0, 0, 0, 0, 0, 698, 699, 700, 0, 0,
	0, 0, 0, 0, 0, 236, 0, 0, 243, 0,
	0, 0, 346, 355, 354, 335, 336, 338, 340, 345,
	352, 358, 0, 0, 0, 0, 0, 263, 318, 270,
	262, 563, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 0, 396, 255,
	0, 447, 0, 0, 0, 605, 0, 0, 0, 0,
	0, 0, 0, 360, 0, 327, 197, 223, 0, 0,
	406, 455, 467, 0, 0, 0, 251, 0, 465, 420,
	583, 231, 282, 452, 426, 463, 434, 285, 0, 0,
	464, 367, 568, 444, 580, 606, 607, 261, 400, 592,
	505, 600, 624, 224, 258, 414, 498, 586, 487, 392,
	564, 565, 326, 486, 293, 201, 364, 612, 222, 473,
	366, 240, 229, 570, 589, 287, 450, 619, 211, 500,
	578, 237, 477, 0, 0, 627, 245, 497, 213, 575,
	496, 388, 323, 324, 212, 0, 451, 266, 291, 0,
	0, 256, 409, 572, 573, 254, 628, 226, 599, 218,
	0, 598, 402, 567, 576, 389, 378, 217, 574, 387,
	377, 331, 350, 351, 278, 304, 441, 370, 442, 303,
	305, 398, 397, 399, 205, 587, 0, 206, 0, 492,
	588, 629, 446, 210, 232, 233, 235, 0, 277, 281,
	289, 292, 300, 301, 310, 362, 413, 440, 436, 445,
	0, 562, 581, 593, 604, 610, 611, 613, 614, 615,
	616, 617, 620, 618, 401, 308, 488, 330, 368, 0,
	0, 419, 466, 238, 585, 489, 199, 0, 0, 0,
	0, 252, 253, 0, 558, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 625, 0, 0, 0, 0, 0, 0, 0,
	0, 648, 379, 479, 582, 332, 344, 347, 337, 356,
	0, 357, 333, 334, 339, 341, 342, 343, 348, 349,
	353, 359, 247, 208, 385, 393, 561, 309, 214, 215,
	216, 507, 508, 509, 510, 596, 597, 601, 456, 457,
	458, 459, 290, 591, 306, 462, 461, 328, 329, 374,
	443, 523, 525, 536, 540, 542, 544, 550, 553, 524,
	526, 537, 541, 543, 545, 551, 554, 513, 515, 517,
	519, 532, 531, 528, 556, 557, 534, 539, 518, 530,
	535, 548, 555, 552, 512, 516, 520, 529, 547, 546,
	527, 538, 549, 533, 521, 514, 522, 0, 196, 219,
	363, 0, 448, 286, 626, 595, 590, 204, 221, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 207, 220, 230, 234, 241,
	259, 274, 276, 283, 296, 307, 315, 316, 319, 325,
	375, 381, 382, 383, 384, 403, 404, 405, 408, 411,
	412, 415, 417, 418, 421, 425, 429, 430, 431, 433,
	435, 437, 449, 454, 468, 469, 470, 471, 472, 475,
	476, 481, 482, 483, 484, 485, 493, 494, 499, 569,
	571, 584, 602, 608, 474, 298, 299, 438, 439, 311,
	312, 622, 623, 297, 579, 609, 577, 621, 603, 432,
	373, 0, 0, 376, 279, 302, 317, 0, 594, 495,
	225, 460, 288, 249, 0, 0, 209, 244, 228, 257,
	272, 275, 321, 386, 394, 423, 428, 294, 269, 242,
	453, 239, 478, 502, 503, 504, 506, 390, 264, 427,
	391, 0, 371, 559, 560, 313, 511, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 410, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 361, 265, 0, 0, 424, 0, 203, 0,
	480, 250, 372, 369, 566, 280, 271, 267, 248, 314,
	380, 422, 501, 416, 0, 365, 0, 0, 490, 395,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 246, 322, 202, 407,
	491, 284, 0, 0, 0, 0, 0, 696, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	243, 0, 0, 0, 346, 355, 354, 335, 336, 338,
	340, 345, 352, 358, 0, 0, 0, 0, 0, 263,
	318, 270, 262, 563, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 0,
	396, 255, 0, 447, 0, 0, 0, 605, 0, 0,
	0, 3998, 0, 0, 0, 360, 0, 327, 197, 223,
	0, 0, 406, 455, 467, 0, 0, 0, 251, 0,
	465, 420, 583, 231, 282, 452, 426, 463, 434, 285,
	0, 0, 464, 367, 568, 444, 580, 606, 607, 261,
	400, 592, 505, 600, 624, 224, 258, 414, 498, 586,
	487, 392, 564, 565, 326, 486, 293, 201, 364, 612,
	222, 473, 366, 240, 229, 570, 589, 287, 450, 619,
	211, 500, 578, 237, 477, 0, 0, 627, 245, 497,
	213, 575, 496, 388, 323, 324, 212, 0, 451, 266,
	291, 0, 0, 256, 409, 572, 573, 254, 628, 226,
	599, 218, 0, 598, 402, 567, 576, 389, 378, 217,
	574, 387, 377, 331, 350, 351, 278, 304, 441, 370,
	442, 303, 305, 398, 397, 399, 205, 587, 0, 206,
	0, 492, 588, 629, 446, 210, 232, 233, 235, 0,
	277, 281, 289, 292, 300, 301, 310, 362, 413, 440,
	436, 445, 0, 562, 581, 593, 604, 610, 611, 613,
	614, 615, 616, 617, 620, 618, 401, 308, 488, 330,
	368, 0, 0, 419, 466, 238, 585, 489, 199, 0,
	0, 0, 0, 252, 253, 0, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 625, 0, 0, 0, 0, 0,
	0, 0, 0, 648, 379, 479, 582, 332, 344, 347,
	337, 356, 0, 357, 333, 334, 339, 341, 342, 343,
	348, 349, 353, 359, 247, 208, 385, 393, 561, 309,
	214, 215, 216, 507, 508, 509, 510, 596, 597, 601,
	456, 457, 458, 459, 290, 591, 306, 462, 461, 328,
	329, 374, 443, 523, 525, 536, 540, 542, 544, 550,
	553, 524, 526, 537, 541, 543, 545, 551, 554, 513,
	515, 517, 519, 532, 531, 528, 556, 557, 534, 539,
	518, 530, 535, 548, 555, 552, 512, 516, 520, 529,
	547, 546, 527, 538, 549, 533, 521, 514, 522, 0,
	196, 219, 363, 0, 448, 286, 626, 595, 590, 204,
	221, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 207, 220, 230,
	234, 241, 259, 274, 276, 283, 296, 307, 315, 316,
	319, 325, 375, 381, 382, 383, 384, 403, 404, 405,
	408, 411, 412, 415, 417, 418, 421, 425, 429, 430,
	431, 433, 435, 437, 449, 454, 468, 469, 470, 471,
	472, 475, 476, 481, 482, 483, 484, 485, 493, 494,
	499, 569, 571, 584, 602, 608, 474, 298, 299, 438,
	439, 311, 312, 622, 623, 297, 579, 609, 577, 621,
	603, 432, 373, 0, 0, 376, 279, 302, 317, 0,
	594, 495, 225, 460, 288, 249, 0, 0, 209, 244,
	228, 257, 272, 275, 321, 386, 394, 423, 428, 294,
	269, 242, 453, 239, 478, 502, 503, 504, 506, 390,
	264, 427, 391, 0, 371, 559, 560, 313, 511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	410, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 0, 0, 361, 265, 0, 0, 424, 0,
	203, 0, 480, 250, 372, 369, 566, 280, 271, 267,
	248, 314, 380, 422, 501, 416, 0, 365, 0, 0,
	490, 395, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 320, 246, 322,
	202, 407, 491, 284, 0, 0, 0, 0, 1904, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 236,
	0, 0, 243, 0, 0, 0, 346, 355, 354, 335,
	336, 338, 340, 345, 352, 358, 0, 0, 0, 0,
	0, 263, 318, 270, 262, 563, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 0, 396, 255, 0, 447, 0, 0, 0, 605,
	0, 0, 0, 0, 0, 0, 0, 360, 0, 327,
	197, 223, 0, 0, 406, 455, 467, 0, 0, 0,
	251, 0, 465, 420, 583, 231, 282, 452, 426, 463,
	434, 285, 0, 0, 464, 367, 568, 444, 580, 606,
	607, 261, 400, 592, 505, 600, 624, 224, 258, 414,
	498, 586, 487, 392, 564, 565, 326, 486, 293, 201,
	364, 612, 222, 473, 366, 240, 229, 570, 589, 287,
	450, 619, 211, 500, 578, 237, 477, 0, 0, 627,
	245, 497, 213, 575, 496, 388, 323, 324, 212, 0,
	451, 266, 291, 0, 0, 256, 409, 572, 573, 254,
	628, 226, 599, 218, 0, 598, 402, 567, 576, 389,
	378, 217, 574, 387, 377, 331, 350, 351, 278, 304,
	441, 370, 442, 303, 305, 398, 397, 399, 205, 587,
	0, 206, 0, 492, 588, 629, 446, 210, 232, 233,
	235, 0, 277, 281, 289, 292, 300, 301, 310, 362,
	413, 440, 436, 445, 0, 562, 581, 593, 604, 610,
	611, 613, 614, 615, 616, 617, 620, 618, 401, 308,
	488, 330, 368, 0, 0, 419, 466, 238, 585, 489,
	199, 0, 0, 0, 0, 252, 253, 0, 558, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 625, 0, 0, 0,
	0, 0, 0, 0, 0, 648, 379, 479, 582, 332,
	344, 347, 337, 356, 0, 357, 333, 334, 339, 341,
	342, 343, 348, 349, 353, 359, 247, 208, 385, 393,
	561, 309, 214, 215, 216, 507, 508, 509, 510, 596,
	597, 601, 456, 457, 458, 459, 290, 591, 306, 462,
	461, 328, 329, 374, 443, 523, 525, 536, 540, 542,
	544, 550, 553, 524, 526, 537, 541, 543, 545, 551,
	554, 513, 515, 517, 519, 532, 531, 528, 556, 557,
	534, 539, 518, 530, 535, 548, 555, 552, 512, 516,
	520, 529, 547, 546, 527, 538, 549, 533, 521, 514,
	522, 0, 196, 219, 363, 0, 448, 286, 626, 595,
	590, 204, 221, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 207,
	220, 230, 234, 241, 259, 274, 276, 283, 296, 307,
	315, 316, 319, 325, 375, 381, 382, 383, 384, 403,
	404, 405, 408, 411, 412, 415, 417, 418, 421, 425,
	429, 430, 431, 433, 435, 437, 449, 454, 468, 469,
	470, 471, 472, 475, 476, 481, 482, 483, 484, 485,
	493, 494, 499, 569, 571, 584, 602, 608, 474, 298,
	299, 438, 439, 311, 312, 622, 623, 297, 579, 609,
	577, 621, 603, 432, 373, 0, 0, 376, 279, 302,
	317, 0, 594, 495, 225, 460, 288, 249, 0, 0,
	209, 244, 228, 257, 272, 275, 321, 386, 394, 423,
	428, 294, 269, 242, 453, 239, 478, 502, 503, 504,
	506, 390, 264, 427, 391, 0, 371, 559, 560, 313,
	511, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 410, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 361, 265, 0, 0,
	424, 0, 203, 0, 480, 250, 372, 369, 566, 280,
	271, 267, 248, 314, 380, 422, 501, 416, 0, 365,
	0, 0, 490, 395, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 320,
	246, 322, 202, 407, 491, 284, 0, 0, 0, 0,
	0, 696, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 243, 0, 0, 0, 346, 355,
	354, 335, 336, 338, 340, 345, 352, 358, 0, 0,
	0, 0, 0, 263, 318, 270, 262, 563, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 0, 396, 255, 0, 447, 0, 0,
	0, 605, 0, 0, 0, 3864, 0, 0, 0, 360,
	0, 327, 197, 223, 0, 0, 406, 455, 467, 0,
	0, 0, 251, 0, 465, 420, 583, 231, 282, 452,
	426, 463, 434, 285, 0, 0, 464, 367, 568, 444,
	580, 606, 607, 261, 400, 592, 505, 600, 624, 224,
	258, 414, 498, 586, 487, 392, 564, 565, 326, 486,
	293, 201, 364, 612, 222, 473, 366, 240, 229, 570,
	589, 287, 450, 619, 211, 500, 578, 237, 477, 0,
	0, 627, 245, 497, 213, 575, 496, 388, 323, 324,
	212, 0, 451, 266, 291, 0, 0, 256, 409, 572,
	573, 254, 628, 226, 599, 218, 0, 598, 402, 567,
	576, 389, 378, 217, 574, 387, 377, 331, 350, 351,
	278, 304, 441, 370, 442, 303, 305, 398, 397, 399,
	205, 587, 0, 206, 0, 492, 588, 629, 446, 210,
	232, 233, 235, 0, 277, 281, 289, 292, 300, 301,
	310, 362, 413, 440, 436, 445, 0, 562, 581, 593,
	604, 610, 611, 613, 614, 615, 616, 617, 620, 618,
	401, 308, 488, 330, 368, 0, 0, 419, 466, 238,
	585, 489, 199, 0, 0, 0, 0, 252, 253, 0,
	558, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 625, 0,
	0, 0, 0, 0, 0, 0, 0, 648, 379, 479,
	582, 332, 344, 347, 337, 356, 0, 357, 333, 334,
	339, 341, 342, 343, 348, 349, 353, 359, 247, 208,
	385, 393, 561, 309, 214, 215, 216, 507, 508, 509,
	510, 596, 597, 601, 456, 457, 458, 459, 290, 591,
	306, 462, 461, 328, 329, 374, 443, 523, 525, 536,
	540, 542, 544, 550, 553, 524, 526, 537, 541, 543,
	545, 551, 554, 513, 515, 517, 519, 532, 531, 528,
	556, 557, 534, 539, 518, 530, 535, 548, 555, 552,
	512, 516, 520, 529, 547, 546, 527, 538, 549, 533,
	521, 514, 522, 0, 196, 219, 363, 0, 448, 286,
	626, 595, 590, 204, 221, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 207, 220, 230, 234, 241, 259, 274, 276, 283,
	296, 307, 315, 316, 319, 325, 375, 381, 382, 383,
	384, 403, 404, 405, 408, 411, 412, 415, 417, 418,
	421, 425, 429, 430, 431, 433, 435, 437, 449, 454,
	468, 469, 470, 471, 472, 475, 476, 481, 482, 483,
	484, 485, 493, 494, 499, 569, 571, 584, 602, 608,
	474, 298, 299, 438, 439, 311, 312, 622, 623, 297,
	579, 609, 577, 621, 603, 432, 373, 0, 0, 376,
	279, 302, 317, 0, 594, 495, 225, 460, 288, 249,
	0, 0, 209, 244, 228, 257, 272, 275, 321, 386,
	394, 423, 428, 294, 269, 242, 453, 239, 478, 502,
	503, 504, 506, 390, 264, 427, 391, 0, 371, 559,
	560, 313, 511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 410, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 0, 0, 0, 361, 265,
	0, 0, 424, 0, 203, 0, 480, 250, 372, 369,
	566, 280, 271, 267, 248, 314, 380, 422, 501, 416,
	0, 365, 0, 0, 490, 395, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 320, 246, 322, 202, 407, 491, 284, 0, 94,
	0, 0, 0, 696, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 243, 0, 0, 0,
	346, 355, 354, 335, 336, 338, 340, 345, 352, 358,
	0, 0, 0, 0, 0, 263, 318, 270, 262, 563,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 0, 396, 255, 0, 447,
	0, 0, 0, 605, 0, 0, 0, 0, 0, 0,
	0, 360, 0, 327, 197, 223, 0, 0, 406, 455,
	467, 0, 0, 0, 251, 0, 465, 420, 583, 231,
	282, 452, 426, 463, 434, 285, 0, 0, 464, 367,
	568, 444, 580, 606, 607, 261, 400, 592, 505, 600,
	624, 224, 258, 414, 498, 586, 487, 392, 564, 565,
	326, 486, 293, 201, 364, 612, 222, 473, 366, 240,
	229, 570, 589, 287, 450, 619, 211, 500, 578, 237,
	477, 0, 0, 627, 245, 497, 213, 575, 496, 388,
	323, 324, 212, 0, 451, 266, 291, 0, 0, 256,
	409, 572, 573, 254, 628, 226, 599, 218, 0, 598,
	402, 567, 576, 389, 378, 217, 574, 387, 377, 331,
	350, 351, 278, 304, 441, 370, 442, 303, 305, 398,
	397, 399, 205, 587, 0, 206, 0, 492, 588, 629,
	446, 210, 232, 233, 235, 0, 277, 281, 289, 292,
	300, 301, 310, 362, 413, 440, 436, 445, 0, 562,
	581, 593, 604, 610, 611, 613, 614, 615, 616, 617,
	620, 618, 401, 308, 488, 330, 368, 0, 0, 419,
	466, 238, 585, 489, 199, 0, 0, 0, 0, 252,
	253, 0, 558, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	625, 0, 0, 0, 0, 0, 0, 0, 0, 648,
	379, 479, 582, 332, 344, 347, 337, 356, 0, 357,
	333, 334, 339, 341, 342, 343, 348, 349, 353, 359,
	247, 208, 385, 393, 561, 309, 214, 215, 216, 507,
	508, 509, 510, 596, 597, 601, 456, 457, 458, 459,
	290, 591, 306, 462, 461, 328, 329, 374, 443, 523,
	525, 536, 540, 542, 544, 550, 553, 524, 526, 537,
	541, 543, 545, 551, 554, 513, 515, 517, 519, 532,
	531, 528, 556, 557, 534, 539, 518, 530, 535, 548,
	555, 552, 512, 516, 520, 529, 547, 546, 527, 538,
	549, 533, 521, 514, 522, 0, 196, 219, 363, 0,
	448, 286, 626, 595, 590, 204, 221, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 207, 220, 230, 234, 241, 259, 274,
	276, 283, 296, 307, 315, 316, 319, 325, 375, 381,
	382, 383, 384, 403, 404, 405, 408, 411, 412, 415,
	417, 418, 421, 425, 429, 430, 431, 433, 435, 437,
	449, 454, 468, 469, 470, 471, 472, 475, 476, 481,
	482, 483, 484, 485, 493, 494, 499, 569, 571, 584,
	602, 608, 474, 298, 299, 438, 439, 311, 312, 622,
	623, 297, 579, 609, 577, 621, 603, 432, 373, 0,
	0, 376, 279, 302, 317, 0, 594, 495, 225, 460,
	288, 249, 0, 0, 209, 244, 228, 257, 272, 275,
	321, 386, 394, 423, 428, 294, 269, 242, 453, 239,
	478, 502, 503, 504, 506, 390, 264, 427, 391, 0,
	371, 559, 560, 313, 511, 0, 0, 0, 0, 2337,
	0, 0, 0, 0, 0, 0, 410, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	361, 265, 0, 0, 424, 0, 203, 0, 480, 250,
	372, 369, 566, 280, 271, 267, 248, 314, 380, 422,
	501, 416, 0, 365, 0, 0, 490, 395, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 320, 246, 322, 202, 407, 491, 284,
	0, 0, 0, 0, 0, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 236, 0, 0, 243, 0,
	0, 0, 346, 355, 354, 335, 336, 338, 340, 345,
	352, 358, 0, 0, 0, 0, 0, 263, 318, 270,
	262, 563, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 0, 396, 255,
	0, 447, 0, 0, 0, 605, 0, 0, 0, 0,
	0, 0, 0, 360, 0, 327, 197, 223, 0, 0,
	406, 455, 467, 0, 0, 0, 251, 0, 465, 420,
	583, 231, 282, 452, 426, 463, 434, 285, 0, 0,
	464, 367, 568, 444, 580, 606, 607, 261, 400, 592,
	505, 600, 624, 224, 258, 414, 498, 586, 487, 392,
	564, 565, 326, 486, 293, 201, 364, 612, 222, 473,
	366, 240, 229, 570, 589, 287, 450, 619, 211, 500,
	578, 237, 477, 0, 0, 627, 245, 497, 213, 575,
	496, 388, 323, 324, 212, 0, 451, 266, 291, 0,
	0, 256, 409, 572, 573, 254, 628, 226, 599, 218,
	0, 598, 402, 567, 576, 389, 378, 217, 574, 387,
	377, 331, 350, 351, 278, 304, 441, 370, 442, 303,
	305, 398, 397, 399, 205, 587, 0, 206, 0, 492,
	588, 629, 446, 210, 232, 233, 235, 0, 277, 281,
	289, 292, 300, 301, 310, 362, 413, 440, 436, 445,
	0, 562, 581, 593, 604, 610, 611, 613, 614, 615,
	616, 617, 620, 618, 401, 308, 488, 330, 368, 0,
	0, 419, 466, 238, 585, 489, 199, 0, 0, 0,
	0, 252, 253, 0, 558, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 625, 0, 0, 0, 0, 0, 0, 0,
	0, 648, 379, 479, 582, 332, 344, 347, 337, 356,
	0, 357, 333, 334, 339, 341, 342, 343, 348, 349,
	353, 359, 247, 208, 385, 393, 561, 309, 214, 215,
	216, 507, 508, 509, 510, 596, 597, 601, 456, 457,
	458, 459, 290, 591, 306, 462, 461, 328, 329, 374,
	443, 523, 525, 536, 540, 542, 544, 550, 553, 524,
	526, 537, 541, 543, 545, 551, 554, 513, 515, 517,
	519, 532, 531, 528, 556, 557, 534, 539, 518, 530,
	535, 548, 555, 552, 512, 516, 520, 529, 547, 546,
	527, 538, 549, 533, 521, 514, 522, 0, 196, 219,
	363, 0, 448, 286, 626, 595, 590, 204, 221, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 207, 220, 230, 234, 241,
	259, 274, 276, 283, 296, 307, 315, 316, 319, 325,
	375, 381, 382, 383, 384, 403, 404, 405, 408, 411,
	412, 415, 417, 418, 421, 425, 429, 430, 431, 433,
	435, 437, 449, 454, 468, 469, 470, 471, 472, 475,
	476, 481, 482, 483, 484, 485, 493, 494, 499, 569,
	571, 584, 602, 608, 474, 298, 299, 438, 439, 311,
	312, 622, 623, 297, 579, 609, 577, 621, 603, 432,
	373, 0, 0, 376, 279, 302, 317, 0, 594, 495,
	225, 460, 288, 249, 0, 0, 209, 244, 228, 257,
	272, 275, 321, 386, 394, 423, 428, 294, 269, 242,
	453, 239, 478, 502, 503, 504, 506, 390, 264, 427,
	391, 0, 371, 559, 560, 313, 511, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 410, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 361, 265, 0, 0, 424, 0, 203, 0,
	480, 250, 372, 369, 566, 280, 271, 267, 248, 314,
	380, 422, 501, 416, 0, 365, 0, 0, 490, 395,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 246, 322, 202, 407,
	491, 284, 0, 0, 0, 0, 1724, 696, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	243, 0, 0, 0, 346, 355, 354, 335, 336, 338,
	340, 345, 352, 358, 0, 0, 0, 0, 0, 263,
	318, 270, 262, 563, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 0,
	396, 255, 0, 447, 0, 0, 0, 605, 0, 0,
	0, 0, 0, 0, 0, 360, 0, 327, 197, 223,
	0, 0, 406, 455, 467, 0, 0, 0, 251, 0,
	465, 420, 583, 231, 282, 452, 426, 463, 434, 285,
	0, 0, 464, 367, 568, 444, 580, 606, 607, 261,
	400, 592, 505, 600, 624, 224, 258, 414, 498, 586,
	487, 392, 564, 565, 326, 486, 293, 201, 364, 612,
	222, 473, 366, 240, 229, 570, 589, 287, 450, 619,
	211, 500, 578, 237, 477, 0, 0, 627, 245, 497,
	213, 575, 496, 388, 323, 324, 212, 0, 451, 266,
	291, 0, 0, 256, 409, 572, 573, 254, 628, 226,
	599, 218, 0, 598, 402, 567, 576, 389, 378, 217,
	574, 387, 377, 331, 350, 351, 278, 304, 441, 370,
	442, 303, 305, 398, 397, 399, 205, 587, 0, 206,
	0, 492, 588, 629, 446, 210, 232, 233, 235, 0,
	277, 281, 289, 292, 300, 301, 310, 362, 413, 440,
	436, 445, 0, 562, 581, 593, 604, 610, 611, 613,
	614, 615, 616, 617, 620, 618, 401, 308, 488, 330,
	368, 0, 0, 419, 466, 238, 585, 489, 199, 0,
	0, 0, 0, 252, 253, 0, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 625, 0, 0, 0, 0, 0,
	0, 0, 0, 648, 379, 479, 582, 332, 344, 347,
	337, 356, 0, 357, 333, 334, 339, 341, 342, 343,
	348, 349, 353, 359, 247, 208, 385, 393, 561, 309,
	214, 215, 216, 507, 508, 509, 510, 596, 597, 601,
	456, 457, 458, 459, 290, 591, 306, 462, 461, 328,
	329, 374, 443, 523, 525, 536, 540, 542, 544, 550,
	553, 524, 526, 537, 541, 543, 545, 551, 554, 513,
	515, 517, 519, 532, 531, 528, 556, 557, 534, 539,
	518, 530, 535, 548, 555, 552, 512, 516, 520, 529,
	547, 546, 527, 538, 549, 533, 521, 514, 522, 0,
	196, 219, 363, 0, 448, 286, 626, 595, 590, 204,
	221, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 207, 220, 230,
	234, 241, 259, 274, 276, 283, 296, 307, 315, 316,
	319, 325, 375, 381, 382, 383, 384, 403, 404, 405,
	408, 411, 412, 415, 417, 418, 421, 425, 429, 430,
	431, 433, 435, 437, 449, 454, 468, 469, 470, 471,
	472, 475, 476, 481, 482, 483, 484, 485, 493, 494,
	499, 569, 571, 584, 602, 608, 474, 298, 299, 438,
	439, 311, 312, 622, 623, 297, 579, 609, 577, 621,
	603, 432, 373, 0, 0, 376, 279, 302, 317, 0,
	594, 495, 225, 460, 288, 249, 0, 0, 209, 244,
	228, 257, 272, 275, 321, 386, 394, 423, 428, 294,
	269, 242, 453, 239, 478, 502, 503, 504, 506, 390,
	264, 427, 391, 0, 371, 559, 560, 313, 511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	410, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 0, 0, 361, 265, 0, 0, 424, 0,
	203, 0, 480, 250, 372, 369, 566, 280, 271, 267,
	248, 314, 380, 422, 501, 416, 0, 365, 0, 0,
	490, 395, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 320, 246, 322,
	202, 407, 491, 284, 0, 0, 0, 0, 0, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 236,
	0, 0, 243, 0, 0, 0, 346, 355, 354, 335,
	336, 338, 340, 345, 352, 358, 0, 0, 0, 0,
	0, 263, 318, 270, 262, 563, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 0, 396, 255, 0, 447, 0, 0, 0, 605,
	0, 0, 0, 0, 0, 0, 0, 360, 0, 327,
	197, 223, 0, 0, 406, 455, 467, 0, 0, 0,
	251, 0, 465, 420, 583, 231, 282, 452, 426, 463,
	434, 285, 0, 0, 464, 367, 568, 444, 580, 606,
	607, 261, 400, 592, 505, 600, 624, 224, 258, 414,
	498, 586, 487, 392, 564, 565, 326, 486, 293, 201,
	364, 612, 222, 473, 366, 240, 229, 570, 589, 287,
	450, 619, 211, 500, 578, 237, 477, 0, 0, 627,
	245, 497, 213, 575, 496, 388, 323, 324, 212, 0,
	451, 266, 291, 0, 0, 256, 409, 572, 573, 254,
	628, 226, 599, 218, 0, 598, 402, 567, 576, 389,
	378, 217, 574, 387, 377, 331, 350, 351, 278, 304,
	441, 370, 442, 303, 305, 398, 397, 399, 205, 587,
	0, 206, 0, 492, 588, 629, 446, 210, 232, 233,
	235, 0, 277, 281, 289, 292, 300, 301, 310, 362,
	413, 440, 436, 445, 0, 562, 581, 593, 604, 610,
	611, 613, 614, 615, 616, 617, 620, 618, 401, 308,
	488, 330, 368, 0, 0, 419, 466, 238, 585, 489,
	199, 0, 0, 0, 0, 252, 253, 0, 558, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 625, 0, 0, 0,
	0, 0, 0, 0, 0, 648, 379, 479, 582, 332,
	344, 347, 337, 356, 0, 357, 333, 334, 339, 341,
	342, 343, 348, 349, 353, 359, 247, 208, 385, 393,
	561, 309, 214, 215, 216, 507, 508, 509, 510, 596,
	597, 601, 456, 457, 458, 459, 290, 591, 306, 462,
	461, 328, 329, 374, 443, 523, 525, 536, 540, 542,
	544, 550, 553, 524, 526, 537, 541, 543, 545, 551,
	554, 513, 515, 517, 519, 532, 531, 528, 556, 557,
	534, 539, 518, 530, 535, 548, 555, 552, 512, 516,
	520, 529, 547, 546, 527, 538, 549, 533, 521, 514,
	522, 0, 196, 219, 363, 2016, 448, 286, 626, 595,
	590, 204, 221, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 207,
	220, 230, 234, 241, 259, 274, 276, 283, 296, 307,
	315, 316, 319, 325, 375, 381, 382, 383, 384, 403,
	404, 405, 408, 411, 412, 415, 417, 418, 421, 425,
	429, 430, 431, 433, 435, 437, 449, 454, 468, 469,
	470, 471, 472, 475, 476, 481, 482, 483, 484, 485,
	493, 494, 499, 569, 571, 584, 602, 608, 474, 298,
	299, 438, 439, 311, 312, 622, 623, 297, 579, 609,
	577, 621, 603, 432, 373, 0, 0, 376, 279, 302,
	317, 0, 594, 495, 225, 460, 288, 249, 0, 0,
	209, 244, 228, 257, 272, 275, 321, 386, 394, 423,
	428, 294, 269, 242, 453, 239, 478, 502, 503, 504,
	506, 390, 264, 427, 391, 0, 371, 559, 560, 313,
	511, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 410, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 361, 265, 0, 0,
	424, 0, 203, 0, 480, 250, 372, 369, 566, 280,
	271, 267, 248, 314, 380, 422, 501, 416, 0, 365,
	0, 0, 490, 395, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 320,
	246, 322, 202, 407, 491, 284, 0, 0, 0, 0,
	2007, 696, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 243, 0, 0, 0, 346, 355,
	354, 335, 336, 338, 340, 345, 352, 358, 0, 0,
	0, 0, 0, 263, 318, 270, 262, 563, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 0, 396, 255, 0, 447, 0, 0,
	0, 605, 0, 0, 0, 0, 0, 0, 0, 360,
	0, 327, 197, 223, 0, 0, 406, 455, 467, 0,
	0, 0, 251, 0, 465, 420, 583, 231, 282, 452,
	426, 463, 434, 285, 0, 0, 464, 367, 568, 444,
	580, 606, 607, 261, 400, 592, 505, 600, 624, 224,
	258, 414, 498, 586, 487, 392, 564, 565, 326, 486,
	293, 201, 364, 612, 222, 473, 366, 240, 229, 570,
	589, 287, 450, 619, 211, 500, 578, 237, 477, 0,
	0, 627, 245, 497, 213, 575, 496, 388, 323, 324,
	212, 0, 451, 266, 291, 0, 0, 256, 409, 572,
	573, 254, 628, 226, 599, 218, 0, 598, 402, 567,
	576, 389, 378, 217, 574, 387, 377, 331, 350, 351,
	278, 304, 441, 370, 442, 303, 305, 398, 397, 399,
	205, 587, 0, 206, 0, 492, 588, 629, 446, 210,
	232, 233, 235, 0, 277, 281, 289, 292, 300, 301,
	310, 362, 413, 440, 436, 445, 0, 562, 581, 593,
	604, 610, 611, 613, 614, 615, 616, 617, 620, 618,
	401, 308, 488, 330, 368, 0, 0, 419, 466, 238,
	585, 489, 199, 0, 0, 0, 0, 252, 253, 0,
	558, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 625, 0,
	0, 0, 0, 0, 0, 0, 0, 648, 379, 479,
	582, 332, 344, 347, 337, 356, 0, 357, 333, 334,
	339, 341, 342, 343, 348, 349, 353, 359, 247, 208,
	385, 393, 561, 309, 214, 215, 216, 507, 508, 509,
	510, 596, 597, 601, 456, 457, 458, 459, 290, 591,
	306, 462, 461, 328, 329, 374, 443, 523, 525, 536,
	540, 542, 544, 550, 553, 524, 526, 537, 541, 543,
	545, 551, 554, 513, 515, 517, 519, 532, 531, 528,
	556, 557, 534, 539, 518, 530, 535, 548, 555, 552,
	512, 516, 520, 529, 547, 546, 527, 538, 549, 533,
	521, 514, 522, 0, 196, 219, 363, 0, 448, 286,
	626, 595, 590, 204, 221, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 207, 220, 230, 234, 241, 259, 274, 276, 283,
	296, 307, 315, 316, 319, 325, 375, 381, 382, 383,
	384, 403, 404, 405, 408, 411, 412, 415, 417, 418,
	421, 425, 429, 430, 431, 433, 435, 437, 449, 454,
	468, 469, 470, 471, 472, 475, 476, 481, 482, 483,
	484, 485, 493, 494, 499, 569, 571, 584, 602, 608,
	474, 298, 299, 438, 439, 311, 312, 622, 623, 297,
	579, 609, 577, 621, 603, 432, 373, 0, 0, 376,
	279, 302, 317, 0, 594, 495, 225, 460, 288, 249,
	0, 0, 209, 244, 228, 257, 272, 275, 321, 386,
	394, 423, 428, 294, 269, 242, 453, 239, 478, 502,
	503, 504, 506, 390, 264, 427, 391, 0, 371, 559,
	560, 313, 511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 410, 0, 1871, 0, 0, 0,
	0, 0, 0, 268, 0, 0, 0, 0, 361, 265,
	0, 0, 424, 0, 203, 0, 480, 250, 372, 369,
	566, 280, 271, 267, 248, 314, 380, 422, 501, 416,
	0, 365, 0, 0, 490, 395, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 320, 246, 322, 202, 407, 491, 284, 0, 0,
	0, 0, 0, 696, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 243, 0, 0, 0,
	346, 355, 354, 335, 336, 338, 340, 345, 352, 358,
	0, 0, 0, 0, 0, 263, 318, 270, 262, 563,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 0, 396, 255, 0, 447,
	0, 0, 0, 605, 0, 0, 0, 0, 0, 0,
	0, 360, 0, 327, 197, 223, 0, 0, 406, 455,
	467, 0, 0, 0, 251, 0, 465, 420, 583, 231,
	282, 452, 426, 463, 434, 285, 0, 0, 464, 367,
	568, 444, 580, 606, 607, 261, 400, 592, 505, 600,
	624, 224, 258, 414, 498, 586, 487, 392, 564, 565,
	326, 486, 293, 201, 364, 612, 222, 473, 366, 240,
	229, 570, 589, 287, 450, 619, 211, 500, 578, 237,
	477, 0, 0, 627, 245, 497, 213, 575, 496, 388,
	323, 324, 212, 0, 451, 266, 291, 0, 0, 256,
	409, 572, 573, 254, 628, 226, 599, 218, 0, 598,
	402, 567, 576, 389, 378, 217, 574, 387, 377, 331,
	350, 351, 278, 304, 441, 370, 442, 303, 305, 398,
	397, 399, 205, 587, 0, 206, 0, 492, 588, 629,
	446, 210, 232, 233, 235, 0, 277, 281, 289, 292,
	300, 301, 310, 362, 413, 440, 436, 445, 0, 562,
	581, 593, 604, 610, 611, 613, 614, 615, 616, 617,
	620, 618, 401, 308, 488, 330, 368, 0, 0, 419,
	466, 238, 585, 489, 199, 0, 0, 0, 0, 252,
	253, 0, 558, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	625, 0, 0, 0, 0, 0, 0, 0, 0, 648,
	379, 479, 582, 332, 344, 347, 337, 356, 0, 357,
	333, 334, 339, 341, 342, 343, 348, 349, 353, 359,
	247, 208, 385, 393, 561, 309, 214, 215, 216, 507,
	508, 509, 510, 596, 597, 601, 456, 457, 458, 459,
	290, 591, 306, 462, 461, 328, 329, 374, 443, 523,
	525, 536, 540, 542, 544, 550, 553, 524, 526, 537,
	541, 543, 545, 551, 554, 513, 515, 517, 519, 532,
	531, 528, 556, 557, 534, 539, 518, 530, 535, 548,
	555, 552, 512, 516, 520, 529, 547, 546, 527, 538,
	549, 533, 521, 514, 522, 0, 196, 219, 363, 0,
	448, 286, 626, 595, 590, 204, 221, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 207, 220, 230, 234, 241, 259, 274,
	276, 283, 296, 307, 315, 316, 319, 325, 375, 381,
	382, 383, 384, 403, 404, 405, 408, 411, 412, 415,
	417, 418, 421, 425, 429, 430, 431, 433, 435, 437,
	449, 454, 468, 469, 470, 471, 472, 475, 476, 481,
	482, 483, 484, 485, 493, 494, 499, 569, 571, 584,
	602, 608, 474, 298, 299, 438, 439, 311, 312, 622,
	623, 297, 579, 609, 577, 621, 603, 432, 373, 0,
	0, 376, 279, 302, 317, 0, 594, 495, 225, 460,
	288, 249, 0, 0, 209, 244, 228, 257, 272, 275,
	321, 386, 394, 423, 428, 294, 269, 242, 453, 239,
	478, 502, 503, 504, 506, 390, 264, 427, 391, 0,
	371, 559, 560, 313, 511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 410, 0, 1869, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	361, 265, 0, 0, 424, 0, 203, 0, 480, 250,
	372, 369, 566, 280, 271, 267, 248, 314, 380, 422,
	501, 416, 0, 365, 0, 0, 490, 395, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 320, 246, 322, 202, 407, 491, 284,
	0, 0, 0, 0, 0, 696, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 236, 0, 0, 243, 0,
	0, 0, 346, 355, 354, 335, 336, 338, 340, 345,
	352, 358, 0, 0, 0, 0, 0, 263, 318, 270,
	262, 563, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 0, 396, 255,
	0, 447, 0, 0, 0, 605, 0, 0, 0, 0,
	0, 0, 0, 360, 0, 327, 197, 223, 0, 0,
	406, 455, 467, 0, 0, 0, 251, 0, 465, 420,
	583, 231, 282, 452, 426, 463, 434, 285, 0, 0,
	464, 367, 568, 444, 580, 606, 607, 261, 400, 592,
	505, 600, 624, 224, 258, 414, 498, 586, 487, 392,
	564, 565, 326, 486, 293, 201, 364, 612, 222, 473,
	366, 240, 229, 570, 589, 287, 450, 619, 211, 500,
	578, 237, 477, 0, 0, 627, 245, 497, 213, 575,
	496, 388, 323, 324, 212, 0, 451, 266, 291, 0,
	0, 256, 409, 572, 573, 254, 628, 226, 599, 218,
	0, 598, 402, 567, 576, 389, 378, 217, 574, 387,
	377, 331, 350, 351, 278, 304, 441, 370, 442, 303,
	305, 398, 397, 399, 205, 587, 0, 206, 0, 492,
	588, 629, 446, 210, 232, 233, 235, 0, 277, 281,
	289, 292, 300, 301, 310, 362, 413, 440, 436, 445,
	0, 562, 581, 593, 604, 610, 611, 613, 614, 615,
	616, 617, 620, 618, 401, 308, 488, 330, 368, 0,
	0, 419, 466, 238, 585, 489, 199, 0, 0, 0,
	0, 252, 253, 0, 558, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 625, 0, 0, 0, 0, 0, 0, 0,
	0, 648, 379, 479, 582, 332, 344, 347, 337, 356,
	0, 357, 333, 334, 339, 341, 342, 343, 348, 349,
	353, 359, 247, 208, 385, 393, 561, 309, 214, 215,
	216, 507, 508, 509, 510, 596, 597, 601, 456, 457,
	458, 459, 290, 591, 306, 462, 461, 328, 329, 374,
	443, 523, 525, 536, 540, 542, 544, 550, 553, 524,
	526, 537, 541, 543, 545, 551, 554, 513, 515, 517,
	519, 532, 531, 528, 556, 557, 534, 539, 518, 530,
	535, 548, 555, 552, 512, 516, 520, 529, 547, 546,
	527, 538, 549, 533, 521, 514, 522, 0, 196, 219,
	363, 0, 448, 286, 626, 595, 590, 204, 221, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 207, 220, 230, 234, 241,
	259, 274, 276, 283, 296, 307, 315, 316, 319, 325,
	375, 381, 382, 383, 384, 403, 404, 405, 408, 411,
	412, 415, 417, 418, 421, 425, 429, 430, 431, 433,
	435, 437, 449, 454, 468, 469, 470, 471, 472, 475,
	476, 481, 482, 483, 484, 485, 493, 494, 499, 569,
	571, 584, 602, 608, 474, 298, 299, 438, 439, 311,
	312, 622, 623, 297, 579, 609, 577, 621, 603, 432,
	373, 0, 0, 376, 279, 302, 317, 0, 594, 495,
	225, 460, 288, 249, 0, 0, 209, 244, 228, 257,
	272, 275, 321, 386, 394, 423, 428, 294, 269, 242,
	453, 239, 478, 502, 503, 504, 506, 390, 264, 427,
	391, 0, 371, 559, 560, 313, 511, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 410, 0,
	1867, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 361, 265, 0, 0, 424, 0, 203, 0,
	480, 250, 372, 369, 566, 280, 271, 267, 248, 314,
	380, 422, 501, 416, 0, 365, 0, 0, 490, 395,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 246, 322, 202, 407,
	491, 284, 0, 0, 0, 0, 0, 696, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	243, 0, 0, 0, 346, 355, 354, 335, 336, 338,
	340, 345, 352, 358, 0, 0, 0, 0, 0, 263,
	318, 270, 262, 563, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 0,
	396, 255, 0, 447, 0, 0, 0, 605, 0, 0,
	0, 0, 0, 0, 0, 360, 0, 327, 197, 223,
	0, 0, 406, 455, 467, 0, 0, 0, 251, 0,
	465, 420, 583, 231, 282, 452, 426, 463, 434, 285,
	0, 0, 464, 367, 568, 444, 580, 606, 607, 261,
	400, 592, 505, 600, 624, 224, 258, 414, 498, 586,
	487, 392, 564, 565, 326, 486, 293, 201, 364, 612,
	222, 473, 366, 240, 229, 570, 589, 287, 450, 619,
	211, 500, 578, 237, 477, 0, 0, 627, 245, 497,
	213, 575, 496, 388, 323, 324, 212, 0, 451, 266,
	291, 0, 0, 256, 409, 572, 573, 254, 628, 226,
	599, 218, 0, 598, 402, 567, 576, 389, 378, 217,
	574, 387, 377, 331, 350, 351, 278, 304, 441, 370,
	442, 303, 305, 398, 397, 399, 205, 587, 0, 206,
	0, 492, 588, 629, 446, 210, 232, 233, 235, 0,
	277, 281, 289, 292, 300, 301, 310, 362, 413, 440,
	436, 445, 0, 562, 581, 593, 604, 610, 611, 613,
	614, 615, 616, 617, 620, 618, 401, 308, 488, 330,
	368, 0, 0, 419, 466, 238, 585, 489, 199, 0,
	0, 0, 0, 252, 253, 0, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 625, 0, 0, 0, 0, 0,
	0, 0, 0, 648, 379, 479, 582, 332, 344, 347,
	337, 356, 0, 357, 333, 334, 339, 341, 342, 343,
	348, 349, 353, 359, 247, 208, 385, 393, 561, 309,
	214, 215, 216, 507, 508, 509, 510, 596, 597, 601,
	456, 457, 458, 459, 290, 591, 306, 462, 461, 328,
	329, 374, 443, 523, 525, 536, 540, 542, 544, 550,
	553, 524, 526, 537, 541, 543, 545, 551, 554, 513,
	515, 517, 519, 532, 531, 528, 556, 557, 534, 539,
	518, 530, 535, 548, 555, 552, 512, 516, 520, 529,
	547, 546, 527, 538, 549, 533, 521, 514, 522, 0,
	196, 219, 363, 0, 448, 286, 626, 595, 590, 204,
	221, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 207, 220, 230,
	234, 241, 259, 274, 276, 283, 296, 307, 315, 316,
	319, 325, 375, 381, 382, 383, 384, 403, 404, 405,
	408, 411, 412, 415, 417, 418, 421, 425, 429, 430,
	431, 433, 435, 437, 449, 454, 468, 469, 470, 471,
	472, 475, 476, 481, 482, 483, 484, 485, 493, 494,
	499, 569, 571, 584, 602, 608, 474, 298, 299, 438,
	439, 311, 312, 622, 623, 297, 579, 609, 577, 621,
	603, 432, 373, 0, 0, 376, 279, 302, 317, 0,
	594, 495, 225, 460, 288, 249, 0, 0, 209, 244,
	228, 257, 272, 275, 321, 386, 394, 423, 428, 294,
	269, 242, 453, 239, 478, 502, 503, 504, 506, 390,
	264, 427, 391, 0, 371, 559, 560, 313, 511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	410, 0, 1865, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 0, 0, 361, 265, 0, 0, 424, 0,
	203, 0, 480, 250, 372, 369, 566, 280, 271, 267,
	248, 314, 380, 422, 501, 416, 0, 365, 0, 0,
	490, 395, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 320, 246, 322,
	202, 407, 491, 284, 0, 0, 0, 0, 0, 696,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 236,
	0, 0, 243, 0, 0, 0, 346, 355, 354, 335,
	336, 338, 340, 345, 352, 358, 0, 0, 0, 0,
	0, 263, 318, 270, 262, 563, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 0, 396, 255, 0, 447, 0, 0, 0, 605,
	0, 0, 0, 0, 0, 0, 0, 360, 0, 327,
	197, 223, 0, 0, 406, 455, 467, 0, 0, 0,
	251, 0, 465, 420, 583, 231, 282, 452, 426, 463,
	434, 285, 0, 0, 464, 367, 568, 444, 580, 606,
	607, 261, 400, 592, 505, 600, 624, 224, 258, 414,
	498, 586, 487, 392, 564, 565, 326, 486, 293, 201,
	364, 612, 222, 473, 366, 240, 229, 570, 589, 287,
	450, 619, 211, 500, 578, 237, 477, 0, 0, 627,
	245, 497, 213, 575, 496, 388, 323, 324, 212, 0,
	451, 266, 291, 0, 0, 256, 409, 572, 573, 254,
	628, 226, 599, 218, 0, 598, 402, 567, 576, 389,
	378, 217, 574, 387, 377, 331, 350, 351, 278, 304,
	441, 370, 442, 303, 305, 398, 397, 399, 205, 587,
	0, 206, 0, 492, 588, 629, 446, 210, 232, 233,
	235, 0, 277, 281, 289, 292, 300, 301, 310, 362,
	413, 440, 436, 445, 0, 562, 581, 593, 604, 610,
	611, 613, 614, 615, 616, 617, 620, 618, 401, 308,
	488, 330, 368, 0, 0, 419, 466, 238, 585, 489,
	199, 0, 0, 0, 0, 252, 253, 0, 558, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 625, 0, 0, 0,
	0, 0, 0, 0, 0, 648, 379, 479, 582, 332,
	344, 347, 337, 356, 0, 357, 333, 334, 339, 341,
	342, 343, 348, 349, 353, 359, 247, 208, 385, 393,
	561, 309, 214, 215, 216, 507, 508, 509, 510, 596,
	597, 601, 456, 457, 458, 459, 290, 591, 306, 462,
	461, 328, 329, 374, 443, 523, 525, 536, 540, 542,
	544, 550, 553, 524, 526, 537, 541, 543, 545, 551,
	554, 513, 515, 517, 519, 532, 531, 528, 556, 557,
	534, 539, 518, 530, 535, 548, 555, 552, 512, 516,
	520, 529, 547, 546, 527, 538, 549, 533, 521, 514,
	522, 0, 196, 219, 363, 0, 448, 286, 626, 595,
	590, 204, 221, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 207,
	220, 230, 234, 241, 259, 274, 276, 283, 296, 307,
	315, 316, 319, 325, 375, 381, 382, 383, 384, 403,
	404, 405, 408, 411, 412, 415, 417, 418, 421, 425,
	429, 430, 431, 433, 435, 437, 449, 454, 468, 469,
	470, 471, 472, 475, 476, 481, 482, 483, 484, 485,
	493, 494, 499, 569, 571, 584, 602, 608, 474, 298,
	299, 438, 439, 311, 312, 622, 623, 297, 579, 609,
	577, 621, 603, 432, 373, 0, 0, 376, 279, 302,
	317, 0, 594, 495, 225, 460, 288, 249, 0, 0,
	209, 244, 228, 257, 272, 275, 321, 386, 394, 423,
	428, 294, 269, 242, 453, 239, 478, 502, 503, 504,
	506, 390, 264, 427, 391, 0, 371, 559, 560, 313,
	511, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 410, 0, 1863, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 361, 265, 0, 0,
	424, 0, 203, 0, 480, 250, 372, 369, 566, 280,
	271, 267, 248, 314, 380, 422, 501, 416, 0, 365,
	0, 0, 490, 395, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 320,
	246, 322, 202, 407, 491, 284, 0, 0, 0, 0,
	0, 696, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 243, 0, 0, 0, 346, 355,
	354, 335, 336, 338, 340, 345, 352, 358, 0, 0,
	0, 0, 0, 263, 318, 270, 262, 563, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 0, 396, 255, 0, 447, 0, 0,
	0, 605, 0, 0, 0, 0, 0, 0, 0, 360,
	0, 327, 197, 223, 0, 0, 406, 455, 467, 0,
	0, 0, 251, 0, 465, 420, 583, 231, 282, 452,
	426, 463, 434, 285, 0, 0, 464, 367, 568, 444,
	580, 606, 607, 261, 400, 592, 505, 600, 624, 224,
	258, 414, 498, 586, 487, 392, 564, 565, 326, 486,
	293, 201, 364, 612, 222, 473, 366, 240, 229, 570,
	589, 287, 450, 619, 211, 500, 578, 237, 477, 0,
	0, 627, 245, 497, 213, 575, 496, 388, 323, 324,
	212, 0, 451, 266, 291, 0, 0, 256, 409, 572,
	573, 254, 628, 226, 599, 218, 0, 598, 402, 567,
	576, 389, 378, 217, 574, 387, 377, 331, 350, 351,
	278, 304, 441, 370, 442, 303, 305, 398, 397, 399,
	205, 587, 0, 206, 0, 492, 588, 629, 446, 210,
	232, 233, 235, 0, 277, 281, 289, 292, 300, 301,
	310, 362, 413, 440, 436, 445, 0, 562, 581, 593,
	604, 610, 611, 613, 614, 615, 616, 617, 620, 618,
	401, 308, 488, 330, 368, 0, 0, 419, 466, 238,
	585, 489, 199, 0, 0, 0, 0, 252, 253, 0,
	558, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 625, 0,
	0, 0, 0, 0, 0, 0, 0, 648, 379, 479,
	582, 332, 344, 347, 337, 356, 0, 357, 333, 334,
	339, 341, 342, 343, 348, 349, 353, 359, 247, 208,
	385, 393, 561, 309, 214, 215, 216, 507, 508, 509,
	510, 596, 597, 601, 456, 457, 458, 459, 290, 591,
	306, 462, 461, 328, 329, 374, 443, 523, 525, 536,
	540, 542, 544, 550, 553, 524, 526, 537, 541, 543,
	545, 551, 554, 513, 515, 517, 519, 532, 531, 528,
	556, 557, 534, 539, 518, 530, 535, 548, 555, 552,
	512, 516, 520, 529, 547, 546, 527, 538, 549, 533,
	521, 514, 522, 0, 196, 219, 363, 0, 448, 286,
	626, 595, 590, 204, 221, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 207, 220, 230, 234, 241, 259, 274, 276, 283,
	296, 307, 315, 316, 319, 325, 375, 381, 382, 383,
	384, 403, 404, 405, 408, 411, 412, 415, 417, 418,
	421, 425, 429, 430, 431, 433, 435, 437, 449, 454,
	468, 469, 470, 471, 472, 475, 476, 481, 482, 483,
	484, 485, 493, 494, 499, 569, 571, 584, 602, 608,
	474, 298, 299, 438, 439, 311, 312, 622, 623, 297,
	579, 609, 577, 621, 603, 432, 373, 0, 0, 376,
	279, 302, 317, 0, 594, 495, 225, 460, 288, 249,
	0, 0, 209, 244, 228, 257, 272, 275, 321, 386,
	394, 423, 428, 294, 269, 242, 453, 239, 478, 502,
	503, 504, 506, 390, 264, 427, 391, 0, 371, 559,
	560, 313, 511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 410, 0, 1859, 0, 0, 0,
	0, 0, 0, 268, 0, 0, 0, 0, 361, 265,
	0, 0, 424, 0, 203, 0, 480, 250, 372, 369,
	566, 280, 271, 267, 248, 314, 380, 422, 501, 416,
	0, 365, 0, 0, 490, 395, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 320, 246, 322, 202, 407, 491, 284, 0, 0,
	0, 0, 0, 696, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 243, 0, 0, 0,
	346, 355, 354, 335, 336, 338, 340, 345, 352, 358,
	0, 0, 0, 0, 0, 263, 318, 270, 262, 563,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 0, 396, 255, 0, 447,
	0, 0, 0, 605, 0, 0, 0, 0, 0, 0,
	0, 360, 0, 327, 197, 223, 0, 0, 406, 455,
	467, 0, 0, 0, 251, 0, 465, 420, 583, 231,
	282, 452, 426, 463, 434, 285, 0, 0, 464, 367,
	568, 444, 580, 606, 607, 261, 400, 592, 505, 600,
	624, 224, 258, 414, 498, 586, 487, 392, 564, 565,
	326, 486, 293, 201, 364, 612, 222, 473, 366, 240,
	229, 570, 589, 287, 450, 619, 211, 500, 578, 237,
	477, 0, 0, 627, 245, 497, 213, 575, 496, 388,
	323, 324, 212, 0, 451, 266, 291, 0, 0, 256,
	409, 572, 573, 254, 628, 226, 599, 218, 0, 598,
	402, 567, 576, 389, 378, 217, 574, 387, 377, 331,
	350, 351, 278, 304, 441, 370, 442, 303, 305, 398,
	397, 399, 205, 587, 0, 206, 0, 492, 588, 629,
	446, 210, 232, 233, 235, 0, 277, 281, 289, 292,
	300, 301, 310, 362, 413, 440, 436, 445, 0, 562,
	581, 593, 604, 610, 611, 613, 614, 615, 616, 617,
	620, 618, 401, 308, 488, 330, 368, 0, 0, 419,
	466, 238, 585, 489, 199, 0, 0, 0, 0, 252,
	253, 0, 558, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	625, 0, 0, 0, 0, 0, 0, 0, 0, 648,
	379, 479, 582, 332, 344, 347, 337, 356, 0, 357,
	333, 334, 339, 341, 342, 343, 348, 349, 353, 359,
	247, 208, 385, 393, 561, 309, 214, 215, 216, 507,
	508, 509, 510, 596, 597, 601, 456, 457, 458, 459,
	290, 591, 306, 462, 461, 328, 329, 374, 443, 523,
	525, 536, 540, 542, 544, 550, 553, 524, 526, 537,
	541, 543, 545, 551, 554, 513, 515, 517, 519, 532,
	531, 528, 556, 557, 534, 539, 518, 530, 535, 548,
	555, 552, 512, 516, 520, 529, 547, 546, 527, 538,
	549, 533, 521, 514, 522, 0, 196, 219, 363, 0,
	448, 286, 626, 595, 590, 204, 221, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 207, 220, 230, 234, 241, 259, 274,
	276, 283, 296, 307, 315, 316, 319, 325, 375, 381,
	382, 383, 384, 403, 404, 405, 408, 411, 412, 415,
	417, 418, 421, 425, 429, 430, 431, 433, 435, 437,
	449, 454, 468, 469, 470, 471, 472, 475, 476, 481,
	482, 483, 484, 485, 493, 494, 499, 569, 571, 584,
	602, 608, 474, 298, 299, 438, 439, 311, 312, 622,
	623, 297, 579, 609, 577, 621, 603, 432, 373, 0,
	0, 376, 279, 302, 317, 0, 594, 495, 225, 460,
	288, 249, 0, 0, 209, 244, 228, 257, 272, 275,
	321, 386, 394, 423, 428, 294, 269, 242, 453, 239,
	478, 502, 503, 504, 506, 390, 264, 427, 391, 0,
	371, 559, 560, 313, 511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 410, 0, 1857, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	361, 265, 0, 0, 424, 0, 203, 0, 480, 250,
	372, 369, 566, 280, 271, 267, 248, 314, 380, 422,
	501, 416, 0, 365, 0, 0, 490, 395, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 320, 246, 322, 202, 407, 491, 284,
	0, 0, 0, 0, 0, 696, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 236, 0, 0, 243, 0,
	0, 0, 346, 355, 354, 335, 336, 338, 340, 345,
	352, 358, 0, 0, 0, 0, 0, 263, 318, 270,
	262, 563, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 0, 396, 255,
	0, 447, 0, 0, 0, 605, 0, 0, 0, 0,
	0, 0, 0, 360, 0, 327, 197, 223, 0, 0,
	406, 455, 467, 0, 0, 0, 251, 0, 465, 420,
	583, 231, 282, 452, 426, 463, 434, 285, 0, 0,
	464, 367, 568, 444, 580, 606, 607, 261, 400, 592,
	505, 600, 624, 224, 258, 414, 498, 586, 487, 392,
	564, 565, 326, 486, 293, 201, 364, 612, 222, 473,
	366, 240, 229, 570, 589, 287, 450, 619, 211, 500,
	578, 237, 477, 0, 0, 627, 245, 497, 213, 575,
	496, 388, 323, 324, 212, 0, 451, 266, 291, 0,
	0, 256, 409, 572, 573, 254, 628, 226, 599, 218,
	0, 598, 402, 567, 576, 389, 378, 217, 574, 387,
	377, 331, 350, 351, 278, 304, 441, 370, 442, 303,
	305, 398, 397, 399, 205, 587, 0, 206, 0, 492,
	588, 629, 446, 210, 232, 233, 235, 0, 277, 281,
	289, 292, 300, 301, 310, 362, 413, 440, 436, 445,
	0, 562, 581, 593, 604, 610, 611, 613, 614, 615,
	616, 617, 620, 618, 401, 308, 488, 330, 368, 0,
	0, 419, 466, 238, 585, 489, 199, 0, 0, 0,
	0, 252, 253, 0, 558, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 625, 0, 0, 0, 0, 0, 0, 0,
	0, 648, 379, 479, 582, 332, 344, 347, 337, 356,
	0, 357, 333, 334, 339, 341, 342, 343, 348, 349,
	353, 359, 247, 208, 385, 393, 561, 309, 214, 215,
	216, 507, 508, 509, 510, 596, 597, 601, 456, 457,
	458, 459, 290, 591, 306, 462, 461, 328, 329, 374,
	443, 523, 525, 536, 540, 542, 544, 550, 553, 524,
	526, 537, 541, 543, 545, 551, 554, 513, 515, 517,
	519, 532, 531, 528, 556, 557, 534, 539, 518, 530,
	535, 548, 555, 552, 512, 516, 520, 529, 547, 546,
	527, 538, 549, 533, 521, 514, 522, 0, 196, 219,
	363, 0, 448, 286, 626, 595, 590, 204, 221, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 207, 220, 230, 234, 241,
	259, 274, 276, 283, 296, 307, 315, 316, 319, 325,
	375, 381, 382, 383, 384, 403, 404, 405, 408, 411,
	412, 415, 417, 418, 421, 425, 429, 430, 431, 433,
	435, 437, 449, 454, 468, 469, 470, 471, 472, 475,
	476, 481, 482, 483, 484, 485, 493, 494, 499, 569,
	571, 584, 602, 608, 474, 298, 299, 438, 439, 311,
	312, 622, 623, 297, 579, 609, 577, 621, 603, 432,
	373, 0, 0, 376, 279, 302, 317, 0, 594, 495,
	225, 460, 288, 249, 0, 0, 209, 244, 228, 257,
	272, 275, 321, 386, 394, 423, 428, 294, 269, 242,
	453, 239, 478, 502, 503, 504, 506, 390, 264, 427,
	391, 0, 371, 559, 560, 313, 511, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 410, 0,
	1855, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 361, 265, 0, 0, 424, 0, 203, 0,
	480, 250, 372, 369, 566, 280, 271, 267, 248, 314,
	380, 422, 501, 416, 0, 365, 0, 0, 490, 395,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 246, 322, 202, 407,
	491, 284, 0, 0, 0, 0, 0, 696, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	243, 0, 0, 0, 346, 355, 354, 335, 336, 338,
	340, 345, 352, 358, 0, 0, 0, 0, 0, 263,
	318, 270, 262, 563, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 0,
	396, 255, 0, 447, 0, 0, 0, 605, 0, 0,
	0, 0, 0, 0, 0, 360, 0, 327, 197, 223,
	0, 0, 406, 455, 467, 0, 0, 0, 251, 0,
	465, 420, 583, 231, 282, 452, 426, 463, 434, 285,
	0, 0, 464, 367, 568, 444, 580, 606, 607, 261,
	400, 592, 505, 600, 624, 224, 258, 414, 498, 586,
	487, 392, 564, 565, 326, 486, 293, 201, 364, 612,
	222, 473, 366, 240, 229, 570, 589, 287, 450, 619,
	211, 500, 578, 237, 477, 0, 0, 627, 245, 497,
	213, 575, 496, 388, 323, 324, 212, 0, 451, 266,
	291, 0, 0, 256, 409, 572, 573, 254, 628, 226,
	599, 218, 0, 598, 402, 567, 576, 389, 378, 217,
	574, 387, 377, 331, 350, 351, 278, 304, 441, 370,
	442, 303, 305, 398, 397, 399, 205, 587, 0, 206,
	0, 492, 588, 629, 446, 210, 232, 233, 235, 0,
	277, 281, 289, 292, 300, 301, 310, 362, 413, 440,
	436, 445, 0, 562, 581, 593, 604, 610, 611, 613,
	614, 615, 616, 617, 620, 618, 401, 308, 488, 330,
	368, 0, 0, 419, 466, 238, 585, 489, 199, 0,
	0, 0, 0, 252, 253, 0, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 625, 0, 0, 0, 0, 0,
	0, 0, 0, 648, 379, 479, 582, 332, 344, 347,
	337, 356, 0, 357, 333, 334, 339, 341, 342, 343,
	348, 349, 353, 359, 247, 208, 385, 393, 561, 309,
	214, 215, 216, 507, 508, 509, 510, 596, 597, 601,
	456, 457, 458, 459, 290, 591, 306, 462, 461, 328,
	329, 374, 443, 523, 525, 536, 540, 542, 544, 550,
	553, 524, 526, 537, 541, 543, 545, 551, 554, 513,
	515, 517, 519, 532, 531, 528, 556, 557, 534, 539,
	518, 530, 535, 548, 555, 552, 512, 516, 520, 529,
	547, 546, 527, 538, 549, 533, 521, 514, 522, 0,
	196, 219, 363, 0, 448, 286, 626, 595, 590, 204,
	221, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 207, 220, 230,
	234, 241, 259, 274, 276, 283, 296, 307, 315, 316,
	319, 325, 375, 381, 382, 383, 384, 403, 404, 405,
	408, 411, 412, 415, 417, 418, 421, 425, 429, 430,
	431, 433, 435, 437, 449, 454, 468, 469, 470, 471,
	472, 475, 476, 481, 482, 483, 484, 485, 493, 494,
	499, 569, 571, 584, 602, 608, 474, 298, 299, 438,
	439, 311, 312, 622, 623, 297, 579, 609, 577, 621,
	603, 432, 373, 0, 0, 376, 279, 302, 317, 0,
	594, 495, 225, 460, 288, 249, 0, 0, 209, 244,
	228, 257, 272, 275, 321, 386, 394, 423, 428, 294,
	269, 242, 453, 239, 478, 502, 503, 504, 506, 390,
	264, 427, 391, 0, 371, 559, 560, 313, 511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	410, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 0, 0, 361, 265, 0, 0, 424, 0,
	203, 0, 480, 250, 372, 369, 566, 280, 271, 267,
	248, 314, 380, 422, 501, 416, 0, 365, 0, 0,
	490, 395, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 320, 246, 322,
	202, 407, 491, 284, 0, 1830, 0, 0, 0, 696,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 236,
	0, 0, 243, 0, 0, 0, 346, 355, 354, 335,
	336, 338, 340, 345, 352, 358, 0, 0, 0, 0,
	0, 263, 318, 270, 262, 563, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 0, 396, 255, 0, 447, 0, 0, 0, 605,
	0, 0, 0, 0, 0, 0, 0, 360, 0, 327,
	197, 223, 0, 0, 406, 455, 467, 0, 0, 0,
	251, 0, 465, 420, 583, 231, 282, 452, 426, 463,
	434, 285, 0, 0, 464, 367, 568, 444, 580, 606,
	607, 261, 400, 592, 505, 600, 624, 224, 258, 414,
	498, 586, 487, 392, 564, 565, 326, 486, 293, 201,
	364, 612, 222, 473, 366, 240, 229, 570, 589, 287,
	450, 619, 211, 500, 578, 237, 477, 0, 0, 627,
	245, 497, 213, 575, 496, 388, 323, 324, 212, 0,
	451, 266, 291, 0, 0, 256, 409, 572, 573, 254,
	628, 226, 599, 218, 0, 598, 402, 567, 576, 389,
	378, 217, 574, 387, 377, 331, 350, 351, 278, 304,
	441, 370, 442, 303, 305, 398, 397, 399, 205, 587,
	0, 206, 0, 492, 588, 629, 446, 210, 232, 233,
	235, 0, 277, 281, 289, 292, 300, 301, 310, 362,
	413, 440, 436, 445, 0, 562, 581, 593, 604, 610,
	611, 613, 614, 615, 616, 617, 620, 618, 401, 308,
	488, 330, 368, 0, 0, 419, 466, 238, 585, 489,
	199, 0, 0, 0, 0, 252, 253, 0, 558, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 625, 0, 0, 0,
	0, 0, 0, 0, 0, 648, 379, 479, 582, 332,
	344, 347, 337, 356, 0, 357, 333, 334, 339, 341,
	342, 343, 348, 349, 353, 359, 247, 208, 385, 393,
	561, 309, 214, 215, 216, 507, 508, 509, 510, 596,
	597, 601, 456, 457, 458, 459, 290, 591, 306, 462,
	461, 328, 329, 374, 443, 523, 525, 536, 540, 542,
	544, 550, 553, 524, 526, 537, 541, 543, 545, 551,
	554, 513, 515, 517, 519, 532, 531, 528, 556, 557,
	534, 539, 518, 530, 535, 548, 555, 552, 512, 516,
	520, 529, 547, 546, 527, 538, 549, 533, 521, 514,
	522, 0, 196, 219, 363, 0, 448, 286, 626, 595,
	590, 204, 221, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 207,
	220, 230, 234, 241, 259, 274, 276, 283, 296, 307,
	315, 316, 319, 325, 375, 381, 382, 383, 384, 403,
	404, 405, 408, 411, 412, 415, 417, 418, 421, 425,
	429, 430, 431, 433, 435, 437, 449, 454, 468, 469,
	470, 471, 472, 475, 476, 481, 482, 483, 484, 485,
	493, 494, 499, 569, 571, 584, 602, 608, 474, 298,
	299, 438, 439, 311, 312, 622, 623, 297, 579, 609,
	577, 621, 603, 432, 373, 0, 0, 376, 279, 302,
	317, 0, 594, 495, 225, 460, 288, 249, 0, 0,
	209, 244, 228, 257, 272, 275, 321, 386, 394, 423,
	428, 294, 269, 242, 453, 239, 478, 502, 503, 504,
	506, 390, 264, 427, 391, 0, 371, 559, 560, 313,
	511, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 410, 0, 0, 0, 0, 0, 0, 0,
	1728, 268, 0, 0, 0, 0, 361, 265, 0, 0,
	424, 0, 203, 0, 480, 250, 372, 369, 566, 280,
	271, 267, 248, 314, 380, 422, 501, 416, 0, 365,
	0, 0, 490, 395, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 320,
	246, 322, 202, 407, 491, 284, 0, 0, 0, 0,
	0, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 243, 0, 0, 0, 346, 355,
	354, 335, 336, 338, 340, 345, 352, 358, 0, 0,
	0, 0, 0, 263, 318, 270, 262, 563, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 0, 396, 255, 0, 447, 0, 0,
	0, 605, 0, 0, 0, 0, 0, 0, 0, 360,
	0, 327, 197, 223, 0, 0, 406, 455, 467, 0,
	0, 0, 251, 0, 465, 420, 583, 231, 282, 452,
	426, 463, 434, 285, 0, 0, 464, 367, 568, 444,
	580, 606, 607, 261, 400, 592, 505, 600, 624, 224,
	258, 414, 498, 586, 487, 392, 564, 565, 326, 486,
	293, 201, 364, 612, 222, 473, 366, 240, 229, 570,
	589, 287, 450, 619, 211, 500, 578, 237, 477, 0,
	0, 627, 245, 497, 213, 575, 496, 388, 323, 324,
	212, 0, 451, 266, 291, 0, 0, 256, 409, 572,
	573, 254, 628, 226, 599, 218, 0, 598, 402, 567,
	576, 389, 378, 217, 574, 387, 377, 331, 350, 351,
	278, 304, 441, 370, 442, 303, 305, 398, 397, 399,
	205, 587, 0, 206, 0, 492, 588, 629, 446, 210,
	232, 233, 235, 0, 277, 281, 289, 292, 300, 301,
	310, 362, 413, 440, 436, 445, 0, 562, 581, 593,
	604, 610, 611, 613, 614, 615, 616, 617, 620, 618,
	401, 308, 488, 330, 368, 0, 0, 419, 466, 238,
	585, 489, 199, 0, 0, 0, 0, 252, 253, 0,
	558, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 625, 0,
	0, 0, 0, 0, 0, 0, 0, 648, 379, 479,
	582, 332, 344, 347, 337, 356, 0, 357, 333, 334,
	339, 341, 342, 343, 348, 349, 353, 359, 247, 208,
	385, 393, 561, 309, 214, 215, 216, 507, 508, 509,
	510, 596, 597, 601, 456, 457, 458, 459, 290, 591,
	306, 462, 461, 328, 329, 374, 443, 523, 525, 536,
	540, 542, 544, 550, 553, 524, 526, 537, 541, 543,
	545, 551, 554, 513, 515, 517, 519, 532, 531, 528,
	556, 557, 534, 539, 518, 530, 535, 548, 555, 552,
	512, 516, 520, 529, 547, 546, 527, 538, 549, 533,
	521, 514, 522, 0, 196, 219, 363, 0, 448, 286,
	626, 595, 590, 204, 221, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 207, 220, 230, 234, 241, 259, 274, 276, 283,
	296, 307, 315, 316, 319, 325, 375, 381, 382, 383,
	384, 403, 404, 405, 408, 411, 412, 415, 417, 418,
	421, 425, 429, 430, 431, 433, 435, 437, 449, 454,
	468, 469, 470, 471, 472, 475, 476, 481, 482, 483,
	484, 485, 493, 494, 499, 569, 571, 584, 602, 608,
	474, 298, 299, 438, 439, 311, 312, 622, 623, 297,
	579, 609, 577, 621, 603, 432, 373, 0, 0, 376,
	279, 302, 317, 0, 594, 495, 225, 460, 288, 249,
	0, 0, 209, 244, 228, 257, 272, 275, 321, 386,
	394, 423, 428, 294, 269, 242, 453, 239, 478, 502,
	503, 504, 506, 390, 264, 427, 391, 0, 371, 559,
	560, 313, 511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 410, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 0, 0, 0, 361, 265,
	0, 0, 424, 0, 203, 0, 480, 250, 372, 369,
	566, 280, 271, 267, 248, 314, 380, 422, 501, 416,
	0, 365, 0, 0, 490, 395, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 320, 246, 322, 202, 407, 491, 284, 0, 94,
	0, 0, 0, 929, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 243, 0, 0, 0,
	346, 355, 354, 335, 336, 338, 340, 345, 352, 358,
	0, 0, 0, 0, 0, 263, 318, 270, 262, 563,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 0, 396, 255, 0, 447,
	0, 0, 0, 605, 0, 0, 0, 0, 0, 0,
	0, 360, 0, 327, 197, 223, 0, 0, 406, 455,
	467, 0, 0, 0, 251, 0, 465, 420, 583, 231,
	282, 452, 426, 463, 434, 285, 0, 0, 464, 367,
	568, 444, 580, 606, 607, 261, 400, 592, 505, 600,
	624, 224, 258, 414, 498, 586, 487, 392, 564, 565,
	326, 486, 293, 201, 364, 612, 222, 473, 366, 240,
	229, 570, 589, 287, 450, 619, 211, 500, 578, 237,
	477, 0, 0, 627, 245, 497, 213, 575, 496, 388,
	323, 324, 212, 0, 451, 266, 291, 0, 0, 256,
	409, 572, 573, 254, 628, 226, 599, 218, 0, 598,
	402, 567, 576, 389, 378, 217, 574, 387, 377, 331,
	350, 351, 278, 304, 441, 370, 442, 303, 305, 398,
	397, 399, 205, 587, 0, 206, 0, 492, 588, 629,
	446, 210, 232, 233, 235, 0, 277, 281, 289, 292,
	300, 301, 310, 362, 413, 440, 436, 445, 0, 562,
	581, 593, 604, 610, 611, 613, 614, 615, 616, 617,
	620, 618, 401, 308, 488, 330, 368, 0, 0, 419,
	466, 238, 585, 489, 199, 0, 0, 0, 0, 252,
	253, 0, 558, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	625, 0, 0, 0, 0, 0, 0, 0, 0, 648,
	379, 479, 582, 332, 344, 347, 337, 356, 0, 357,
	333, 334, 339, 341, 342, 343, 348, 349, 353, 359,
	247, 208, 385, 393, 561, 309, 214, 215, 216, 507,
	508, 509, 510, 596, 597, 601, 456, 457, 458, 459,
	290, 591, 306, 462, 461, 328, 329, 374, 443, 523,
	525, 536, 540, 542, 544, 550, 553, 524, 526, 537,
	541, 543, 545, 551, 554, 513, 515, 517, 519, 532,
	531, 528, 556, 557, 534, 539, 518, 530, 535, 548,
	555, 552, 512, 516, 520, 529, 547, 546, 527, 538,
	549, 533, 521, 514, 522, 0, 196, 219, 363, 0,
	448, 286, 626, 595, 590, 204, 221, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 207, 220, 230, 234, 241, 259, 274,
	276, 283, 296, 307, 315, 316, 319, 325, 375, 381,
	382, 383, 384, 403, 404, 405, 408, 411, 412, 415,
	417, 418, 421, 425, 429, 430, 431, 433, 435, 437,
	449, 454, 468, 469, 470, 471, 472, 475, 476, 481,
	482, 483, 484, 485, 493, 494, 499, 569, 571, 584,
	602, 608, 474, 298, 299, 438, 439, 311, 312, 622,
	623, 297, 579, 609, 577, 621, 603, 432, 373, 0,
	0, 376, 279, 302, 317, 0, 594, 495, 225, 460,
	288, 249, 0, 0, 209, 244, 228, 257, 272, 275,
	321, 386, 394, 423, 428, 294, 269, 242, 453, 239,
	478, 502, 503, 504, 506, 390, 264, 427, 391, 0,
	371, 559, 560, 313, 511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 410, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	361, 265, 0, 0, 424, 0, 203, 0, 480, 250,
	372, 369, 566, 280, 271, 267, 248, 314, 380, 422,
	501, 416, 0, 365, 0, 0, 490, 395, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 320, 246, 322, 202, 407, 491, 284,
	0, 0, 0, 0, 0, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 236, 0, 0, 243, 0,
	0, 0, 346, 355, 354, 335, 336, 338, 340, 345,
	352, 358, 0, 0, 0, 0, 0, 263, 318, 270,
	262, 563, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1418, 0, 295, 0, 396, 255,
	0, 447, 0, 0, 0, 605, 0, 0, 0, 0,
	0, 0, 0, 360, 0, 327, 197, 223, 0, 0,
	406, 455, 467, 0, 0, 0, 251, 0, 465, 420,
	583, 231, 282, 452, 426, 463, 434, 285, 0, 0,
	464, 367, 568, 444, 580, 606, 607, 261, 400, 592,
	505, 600, 624, 224, 258, 414, 498, 586, 487, 392,
	564, 565, 326, 486, 293, 201, 364, 612, 222, 473,
	366, 240, 229, 570, 589, 287, 450, 619, 211, 500,
	578, 237, 477, 0, 0, 627, 245, 497, 213, 575,
	496, 388, 323, 324, 212, 0, 451, 266, 291, 0,
	0, 256, 409, 572, 573, 254, 628, 226, 599, 218,
	0, 598, 402, 567, 576, 389, 378, 217, 574, 387,
	377, 331, 350, 351, 278, 304, 441, 370, 442, 303,
	305, 398, 397, 399, 205, 587, 0, 206, 0, 492,
	588, 629, 446, 210, 232, 233, 235, 0, 277, 281,
	289, 292, 300, 301, 310, 362, 413, 440, 436, 445,
	0, 562, 581, 593, 604, 610, 611, 613, 614, 615,
	616, 617, 620, 618, 401, 308, 488, 330, 368, 0,
	0, 419, 466, 238, 585, 489, 199, 0, 0, 0,
	0, 252, 253, 0, 558, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 625, 0, 0, 0, 0, 0, 0, 0,
	0, 648, 379, 479, 582, 332, 344, 347, 337, 356,
	0, 357, 333, 334, 339, 341, 342, 343, 348, 349,
	353, 359, 247, 208, 385, 393, 561, 309, 214, 215,
	216, 507, 508, 509, 510, 596, 597, 601, 456, 457,
	458, 459, 290, 591, 306, 462, 461, 328, 329, 374,
	443, 523, 525, 536, 540, 542, 544, 550, 553, 524,
	526, 537, 541, 543, 545, 551, 554, 513, 515, 517,
	519, 532, 531, 528, 556, 557, 534, 539, 518, 530,
	535, 548, 555, 552, 512, 516, 520, 529, 547, 546,
	527, 538, 549, 533, 521, 514, 522, 0, 196, 219,
	363, 0, 448, 286, 626, 595, 590, 204, 221, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 207, 220, 230, 234, 241,
	259, 274, 276, 283, 296, 307, 315, 316, 319, 325,
	375, 381, 382, 383, 384, 403, 404, 405, 408, 411,
	412, 415, 417, 418, 421, 425, 429, 430, 431, 433,
	435, 437, 449, 454, 468, 469, 470, 471, 472, 475,
	476, 481, 482, 483, 484, 485, 493, 494, 499, 569,
	571, 584, 602, 608, 474, 298, 299, 438, 439, 311,
	312, 622, 623, 1417, 579, 609, 577, 621, 603, 432,
	373, 0, 0, 376, 279, 302, 317, 0, 594, 495,
	225, 460, 288, 249, 0, 0, 209, 244, 228, 257,
	272, 275, 321, 386, 394, 423, 428, 294, 269, 242,
	453, 239, 478, 502, 503, 504, 506, 390, 264, 427,
	391, 0, 371, 559, 560, 313, 511, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 410, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 361, 265, 0, 0, 424, 0, 203, 0,
	480, 250, 372, 369, 566, 280, 271, 267, 248, 314,
	380, 422, 501, 416, 0, 365, 0, 0, 490, 395,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 246, 322, 202, 407,
	491, 284, 0, 0, 0, 0, 0, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	243, 0, 0, 0, 346, 355, 354, 335, 336, 338,
	340, 345, 352, 358, 0, 0, 0, 0, 0, 263,
	318, 270, 262, 563, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 0,
	396, 255, 0, 447, 0, 0, 0, 605, 0, 0,
	0, 0, 0, 0, 0, 360, 0, 327, 197, 223,
	0, 0, 406, 455, 467, 0, 0, 0, 251, 0,
	465, 420, 583, 231, 282, 452, 426, 463, 434, 285,
	0, 0, 464, 367, 568, 444, 580, 606, 607, 261,
	400, 592, 505, 600, 624, 224, 258, 414, 498, 586,
	487, 392, 564, 565, 326, 486, 293, 201, 364, 612,
	222, 473, 366, 240, 229, 570, 589, 287, 450, 619,
	211, 500, 578, 237, 477, 0, 0, 627, 245, 497,
	213, 575, 496, 388, 323, 324, 212, 0, 451, 266,
	291, 0, 0, 256, 409, 572, 573, 254, 628, 226,
	599, 218, 0, 598, 402, 567, 576, 389, 378, 217,
	574, 387, 377, 331, 350, 351, 278, 304, 441, 370,
	442, 303, 305, 398, 397, 399, 205, 587, 0, 206,
	0, 492, 588, 629, 446, 210, 232, 233, 235, 0,
	277, 281, 289, 292, 300, 301, 310, 362, 413, 440,
	436, 445, 0, 562, 581, 593, 604, 610, 611, 613,
	614, 615, 616, 617, 620, 618, 401, 308, 488, 330,
	368, 0, 0, 419, 466, 238, 585, 489, 199, 0,
	0, 0, 0, 252, 253, 0, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 625, 0, 0, 0, 0, 0,
	0, 0, 0, 648, 379, 479, 582, 332, 344, 347,
	337, 356, 0, 357, 333, 334, 339, 341, 342, 343,
	348, 349, 353, 359, 247, 208, 385, 393, 561, 309,
	214, 215, 216, 507, 508, 509, 510, 596, 597, 601,
	456, 457, 458, 459, 290, 591, 306, 462, 461, 328,
	329, 374, 443, 523, 525, 536, 540, 542, 544, 550,
	553, 524, 526, 537, 541, 543, 545, 551, 554, 513,
	515, 517, 519, 532, 531, 528, 556, 557, 534, 539,
	518, 530, 535, 548, 555, 552, 512, 516, 520, 529,
	547, 546, 527, 538, 549, 533, 521, 514, 522, 0,
	196, 219, 363, 0, 448, 286, 626, 595, 590, 204,
	221, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1014, 0, 0, 0, 198, 200, 207, 220, 230,
	234, 241, 259, 274, 276, 283, 296, 307, 315, 316,
	319, 325, 375, 381, 382, 383, 384, 403, 404, 405,
	408, 411, 412, 415, 417, 418, 421, 425, 429, 430,
	431, 433, 435, 437, 449, 454, 468, 469, 470, 471,
	472, 475, 476, 481, 482, 483, 484, 485, 493, 494,
	499, 569, 571, 584, 602, 608, 474, 298, 299, 438,
	439, 311, 312, 622, 623, 297, 579, 609, 577, 621,
	603, 432, 373, 0, 0, 376, 279, 302, 317, 0,
	594, 495, 225, 460, 288, 249, 0, 0, 209, 244,
	228, 257, 272, 275, 321, 386, 394, 423, 428, 294,
	269, 242, 453, 239, 478, 502, 503, 504, 506, 390,
	264, 427, 391, 0, 371, 559, 560, 313, 511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	410, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 0, 0, 361, 265, 0, 0, 424, 0,
	203, 0, 480, 250, 372, 369, 566, 280, 271, 267,
	248, 314, 380, 422, 501, 416, 0, 365, 0, 0,
	490, 395, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 320, 246, 322,
	202, 407, 491, 284, 0, 0, 0, 0, 0, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 236,
	0, 0, 243, 0, 0, 0, 346, 355, 354, 335,
	336, 338, 340, 345, 352, 358, 0, 0, 0, 0,
	0, 263, 318, 270, 262, 563, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 0, 396, 255, 0, 447, 0, 651, 0, 605,
	0, 0, 0, 0, 0, 0, 0, 360, 0, 327,
	197, 223, 0, 0, 406, 455, 467, 0, 0, 0,
	251, 0, 465, 420, 583, 231, 282, 452, 426, 463,
	434, 285, 0, 0, 464, 367, 568, 444, 580, 606,
	607, 261, 400, 592, 505, 600, 624, 224, 258, 414,
	498, 586, 487, 392, 564, 565, 326, 486, 293, 201,
	364, 612, 222, 473, 366, 240, 229, 570, 589, 287,
	450, 619, 211, 500, 578, 237, 477, 0, 0, 627,
	245, 497, 213, 575, 496, 388, 323, 324, 212, 0,
	451, 266, 291, 0, 0, 256, 409, 572, 573, 254,
	628, 226, 599, 218, 0, 598, 402, 567, 576, 389,
	378, 217, 574, 387, 377, 331, 350, 351, 278, 304,
	441, 370, 442, 303, 305, 398, 397, 399, 205, 587,
	0, 206, 0, 492, 588, 629, 446, 210, 232, 233,
	235, 0, 277, 281, 289, 292, 300, 301, 310, 362,
	413, 440, 436, 445, 0, 562, 581, 593, 604, 610,
	611, 613, 614, 615, 616, 617, 620, 618, 401, 308,
	488, 330, 368, 0, 0, 419, 466, 238, 585, 489,
	199, 0, 0, 0, 0, 252, 253, 0, 558, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 625, 0, 0, 0,
	0, 0, 0, 0, 0, 648, 379, 479, 582, 332,
	344, 347, 337, 356, 0, 357, 333, 334, 339, 341,
	342, 343, 348, 349, 353, 359, 247, 208, 385, 393,
	561, 309, 214, 215, 216, 507, 508, 509, 510, 596,
	597, 601, 456, 457, 458, 459, 290, 591, 306, 462,
	461, 328, 329, 374, 443, 523, 525, 536, 540, 542,
	544, 550, 553, 524, 526, 537, 541, 543, 545, 551,
	554, 513, 515, 517, 519, 532, 531, 528, 556, 557,
	534, 539, 518, 530, 535, 548, 555, 552, 512, 516,
	520, 529, 547, 546, 527, 538, 549, 533, 521, 514,
	522, 0, 196, 219, 363, 0, 448, 286, 626, 595,
	590, 204, 221, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 207,
	220, 230, 234, 241, 259, 274, 276, 283, 296, 307,
	315, 316, 319, 325, 375, 381, 382, 383, 384, 403,
	404, 405, 408, 411, 412, 415, 417, 418, 421, 425,
	429, 430, 431, 433, 435, 437, 449, 454, 468, 469,
	470, 471, 472, 475, 476, 481, 482, 483, 484, 485,
	493, 494, 499, 569, 571, 584, 602, 608, 474, 298,
	299, 438, 439, 311, 312, 622, 623, 297, 579, 609,
	577, 621, 603, 432, 373, 0, 0, 376, 279, 302,
	317, 0, 594, 495, 225, 460, 288, 249, 0, 0,
	209, 244, 228, 257, 272, 275, 321, 386, 394, 423,
	428, 294, 269, 242, 453, 239, 478, 502, 503, 504,
	506, 390, 264, 427, 391, 0, 371, 559, 560, 313,
	511, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 410, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 361, 265, 0, 0,
	424, 0, 203, 0, 480, 250, 372, 369, 566, 280,
	271, 267, 248, 314, 380, 422, 501, 416, 0, 365,
	0, 0, 490, 395, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 320,
	246, 322, 202, 407, 491, 284, 0, 0, 0, 0,
	0, 696, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 243, 0, 0, 0, 346, 355,
	354, 335, 336, 338, 340, 345, 352, 358, 0, 0,
	0, 0, 0, 263, 318, 270, 262, 563, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 0, 396, 255, 0, 447, 0, 0,
	0, 605, 0, 0, 0, 0, 0, 0, 0, 360,
	0, 327, 197, 223, 0, 0, 406, 455, 467, 0,
	0, 0, 251, 0, 465, 420, 583, 231, 282, 452,
	426, 463, 434, 285, 0, 0, 464, 367, 568, 444,
	580, 606, 607, 261, 400, 592, 505, 600, 624, 224,
	258, 414, 498, 586, 487, 392, 564, 565, 326, 486,
	293, 201, 364, 612, 222, 473, 366, 240, 229, 570,
	589, 287, 450, 619, 211, 500, 578, 237, 477, 0,
	0, 627, 245, 497, 213, 575, 496, 388, 323, 324,
	212, 0, 451, 266, 291, 0, 0, 256, 409, 572,
	573, 254, 628, 226, 599, 218, 0, 598, 402, 567,
	576, 389, 378, 217, 574, 387, 377, 331, 350, 351,
	278, 304, 441, 370, 442, 303, 305, 398, 397, 399,
	205, 587, 0, 206, 0, 492, 588, 629, 446, 210,
	232, 233, 235, 0, 277, 281, 289, 292, 300, 301,
	310, 362, 413, 440, 436, 445, 0, 562, 581, 593,
	604, 610, 611, 613, 614, 615, 616, 617, 620, 618,
	401, 308, 488, 330, 368, 0, 0, 419, 466, 238,
	585, 489, 199, 0, 0, 0, 0, 252, 253, 0,
	558, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 625, 0,
	0, 0, 0, 0, 0, 0, 0, 648, 379, 479,
	582, 332, 344, 347, 337, 356, 0, 357, 333, 334,
	339, 341, 342, 343, 348, 349, 353, 359, 247, 208,
	385, 393, 561, 309, 214, 215, 216, 507, 508, 509,
	510, 596, 597, 601, 456, 457, 458, 459, 290, 591,
	306, 462, 461, 328, 329, 374, 443, 523, 525, 536,
	540, 542, 544, 550, 553, 524, 526, 537, 541, 543,
	545, 551, 554, 513, 515, 517, 519, 532, 531, 528,
	556, 557, 534, 539, 518, 530, 535, 548, 555, 552,
	512, 516, 520, 529, 547, 546, 527, 538, 549, 533,
	521, 514, 522, 0, 196, 219, 363, 0, 448, 286,
	626, 595, 590, 204, 221, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 207, 220, 230, 234, 241, 259, 274, 276, 283,
	296, 307, 315, 316, 319, 325, 375, 381, 382, 383,
	384, 4014, 404, 405, 408, 411, 412, 415, 417, 418,
	421, 425, 429, 430, 431, 433, 435, 437, 449, 454,
	468, 469, 470, 471, 472, 475, 476, 481, 482, 483,
	484, 485, 493, 494, 499, 569, 571, 584, 602, 608,
	474, 298, 299, 438, 439, 311, 312, 622, 623, 297,
	579, 609, 577, 621, 603, 432, 373, 0, 0, 376,
	279, 302, 317, 0, 594, 495, 225, 460, 288, 249,
	0, 0, 209, 244, 228, 257, 272, 275, 321, 386,
	394, 423, 428, 294, 269, 242, 453, 239, 478, 502,
	503, 504, 506, 390, 264, 427, 391, 0, 371, 559,
	560, 313, 511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 410, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 0, 0, 0, 361, 265,
	0, 0, 424, 0, 203, 0, 480, 250, 372, 369,
	566, 280, 271, 267, 248, 314, 380, 422, 501, 416,
	0, 365, 0, 0, 490, 395, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 320, 246, 322, 202, 407, 491, 284, 0, 0,
	0, 0, 0, 696, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 243, 0, 0, 0,
	346, 355, 354, 335, 336, 338, 340, 345, 352, 358,
	0, 0, 0, 0, 0, 263, 318, 270, 262, 563,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 0, 396, 255, 0, 447,
	0, 0, 0, 605, 0, 0, 0, 0, 0, 0,
	0, 360, 0, 327, 197, 223, 0, 0, 406, 455,
	467, 0, 0, 0, 251, 0, 465, 420, 583, 231,
	282, 452, 426, 463, 434, 285, 0, 0, 464, 367,
	568, 444, 580, 606, 607, 261, 400, 592, 505, 600,
	624, 224, 258, 414, 498, 586, 487, 392, 564, 565,
	326, 486, 293, 201, 364, 612, 222, 473, 366, 240,
	229, 570, 589, 287, 450, 619, 211, 500, 578, 237,
	477, 0, 0, 627, 245, 497, 213, 575, 496, 388,
	323, 324, 212, 0, 451, 266, 291, 0, 0, 256,
	409, 572, 573, 254, 628, 226, 599, 218, 0, 598,
	402, 567, 576, 389, 378, 217, 574, 387, 377, 331,
	350, 351, 278, 304, 441, 370, 442, 303, 305, 398,
	397, 399, 205, 587, 0, 206, 0, 492, 588, 629,
	446, 210, 232, 233, 235, 0, 277, 281, 289, 292,
	300, 301, 310, 362, 413, 440, 436, 445, 0, 562,
	581, 593, 604, 610, 611, 613, 614, 615, 616, 617,
	620, 618, 401, 308, 488, 330, 368, 0, 0, 419,
	466, 238, 585, 489, 199, 0, 0, 0, 0, 252,
	253, 0, 558, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	625, 0, 0, 0, 0, 0, 0, 0, 0, 648,
	379, 479, 582, 332, 344, 347, 337, 356, 0, 357,
	333, 334, 339, 341, 342, 343, 348, 349, 353, 359,
	247, 208, 385, 393, 561, 309, 214, 215, 216, 507,
	508, 509, 510, 596, 597, 601, 456, 457, 458, 459,
	290, 591, 306, 462, 461, 328, 329, 374, 443, 523,
	525, 536, 540, 542, 544, 550, 553, 524, 526, 537,
	541, 543, 545, 551, 554, 513, 515, 517, 519, 532,
	531, 528, 556, 557, 534, 539, 518, 530, 535, 548,
	555, 552, 512, 516, 520, 529, 547, 546, 527, 538,
	549, 533, 521, 514, 522, 0, 196, 219, 363, 0,
	448, 286, 626, 595, 590, 204, 221, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 207, 220, 230, 234, 241, 259, 274,
	276, 283, 296, 307, 315, 316, 319, 325, 375, 381,
	382, 383, 384, 403, 404, 405, 408, 411, 412, 415,
	417, 418, 421, 425, 429, 430, 431, 433, 435, 437,
	449, 454, 468, 469, 470, 471, 472, 475, 476, 481,
	482, 483, 484, 485, 493, 494, 499, 569, 571, 584,
	602, 608, 474, 298, 299, 438, 439, 311, 312, 622,
	623, 297, 579, 609, 577, 621, 603, 432, 373, 0,
	0, 376, 279, 302, 317, 0, 594, 495, 225, 460,
	288, 249, 0, 0, 209, 244, 228, 257, 272, 275,
	321, 386, 394, 423, 428, 294, 269, 242, 453, 239,
	478, 502, 503, 504, 506, 390, 264, 427, 391, 0,
	371, 559, 560, 313, 511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 410, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	361, 265, 0, 0, 424, 0, 203, 0, 480, 250,
	372, 369, 566, 280, 271, 267, 248, 314, 380, 422,
	501, 416, 0, 365, 0, 0, 490, 395, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 320, 246, 322, 202, 407, 491, 284,
	0, 0, 0, 0, 0, 929, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 236, 0, 0, 243, 0,
	0, 0, 346, 355, 354, 335, 336, 338, 340, 345,
	352, 358, 0, 0, 0, 0, 0, 263, 318, 270,
	262, 563, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 0, 396, 255,
	0, 447, 0, 0, 0, 605, 0, 0, 0, 0,
	0, 0, 0, 360, 0, 327, 197, 223, 0, 0,
	406, 455, 467, 0, 0, 0, 251, 0, 465, 420,
	583, 231, 282, 452, 426, 463, 434, 285, 0, 0,
	464, 367, 568, 444, 580, 606, 607, 261, 400, 592,
	505, 600, 624, 224, 258, 414, 498, 586, 487, 392,
	564, 565, 326, 486, 293, 201, 364, 612, 222, 473,
	366, 240, 229, 570, 589, 287, 450, 619, 211, 500,
	578, 237, 477, 0, 0, 627, 245, 497, 213, 575,
	496, 388, 323, 324, 212, 0, 451, 266, 291, 0,
	0, 256, 409, 572, 573, 254, 628, 226, 599, 218,
	0, 598, 402, 567, 576, 389, 378, 217, 574, 387,
	377, 331, 350, 351, 278, 304, 441, 370, 442, 303,
	305, 398, 397, 399, 205, 587, 0, 206, 0, 492,
	588, 629, 446, 210, 232, 233, 235, 0, 277, 281,
	289, 292, 300, 301, 310, 362, 413, 440, 436, 445,
	0, 562, 581, 593, 604, 610, 611, 613, 614, 615,
	616, 617, 620, 618, 401, 308, 488, 330, 368, 0,
	0, 419, 466, 238, 585, 489, 199, 0, 0, 0,
	0, 252, 253, 0, 558, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 625, 0, 0, 0, 0, 0, 0, 0,
	0, 648, 379, 479, 582, 332, 344, 347, 337, 356,
	0, 357, 333, 334, 339, 341, 342, 343, 348, 349,
	353, 359, 247, 208, 385, 393, 561, 309, 214, 215,
	216, 507, 508, 509, 510, 596, 597, 601, 456, 457,
	458, 459, 290, 591, 306, 462, 461, 328, 329, 374,
	443, 523, 525, 536, 540, 542, 544, 550, 553, 524,
	526, 537, 541, 543, 545, 551, 554, 513, 515, 517,
	519, 532, 531, 528, 556, 557, 534, 539, 518, 530,
	535, 548, 555, 552, 512, 516, 520, 529, 547, 546,
	527, 538, 549, 533, 521, 514, 522, 0, 196, 219,
	363, 0, 448, 286, 626, 595, 590, 204, 221, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 207, 220, 230, 234, 241,
	259, 274, 276, 283, 296, 307, 315, 316, 319, 325,
	375, 381, 382, 383, 384, 403, 404, 405, 408, 411,
	412, 415, 417, 418, 421, 425, 429, 430, 431, 433,
	435, 437, 449, 454, 468, 469, 470, 471, 472, 475,
	476, 481, 482, 483, 484, 485, 493, 494, 499, 569,
	571, 584, 602, 608, 474, 298, 299, 438, 439, 311,
	312, 622, 623, 297, 579, 609, 577, 621, 603, 432,
	373, 0, 0, 376, 279, 302, 317, 0, 594, 495,
	225, 460, 288, 249, 0, 0, 209, 244, 228, 257,
	272, 275, 321, 386, 394, 423, 428, 294, 269, 242,
	453, 239, 478, 502, 503, 504, 506, 390, 264, 427,
	391, 0, 371, 559, 560, 313, 511, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 410, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 361, 265, 0, 0, 424, 0, 203, 0,
	480, 250, 372, 369, 566, 280, 271, 267, 248, 314,
	380, 422, 501, 416, 0, 365, 0, 0, 490, 395,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 246, 322, 202, 407,
	491, 284, 0, 0, 0, 0, 0, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	243, 0, 0, 0, 346, 355, 354, 335, 336, 338,
	340, 345, 352, 358, 0, 0, 0, 0, 0, 263,
	318, 270, 262, 563, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 0,
	396, 255, 0, 447, 0, 0, 0, 605, 0, 0,
	0, 0, 0, 0, 0, 360, 0, 327, 197, 223,
	0, 0, 406, 455, 467, 0, 0, 0, 251, 0,
	465, 420, 583, 231, 282, 452, 426, 463, 434, 285,
	0, 0, 464, 367, 568, 444, 580, 606, 607, 261,
	400, 592, 505, 600, 624, 224, 258, 414, 498, 586,
	487, 392, 564, 565, 326, 486, 293, 201, 364, 612,
	222, 473, 366, 240, 229, 570, 589, 287, 450, 619,
	211, 500, 578, 237, 477, 0, 0, 627, 245, 497,
	213, 575, 496, 388, 323, 324, 212, 0, 451, 266,
	291, 0, 0, 256, 409, 572, 573, 254, 628, 226,
	599, 218, 0, 598, 402, 567, 576, 389, 378, 217,
	574, 387, 377, 331, 350, 351, 278, 304, 441, 370,
	442, 303, 305, 398, 397, 399, 205, 587, 0, 206,
	0, 492, 588, 629, 446, 210, 232, 233, 235, 0,
	277, 281, 289, 292, 300, 301, 310, 362, 413, 440,
	436, 445, 0, 562, 581, 593, 604, 610, 611, 613,
	614, 615, 616, 617, 620, 618, 401, 308, 488, 330,
	368, 0, 0, 419, 466, 238, 585, 489, 199, 0,
	0, 0, 0, 252, 253, 0, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 625, 0, 0, 0, 0, 0,
	0, 0, 0, 648, 379, 479, 582, 332, 344, 347,
	337, 356, 0, 357, 333, 334, 339, 341, 342, 343,
	348, 349, 353, 359, 247, 208, 385, 393, 561, 309,
	214, 215, 216, 507, 508, 509, 510, 596, 597, 601,
	456, 457, 458, 459, 290, 591, 306, 462, 461, 328,
	329, 374, 443, 523, 525, 536, 540, 542, 544, 550,
	553, 524, 526, 537, 541, 543, 545, 551, 554, 513,
	515, 517, 519, 532, 531, 528, 556, 557, 534, 539,
	518, 530, 535, 548, 555, 552, 512, 516, 520, 529,
	547, 546, 527, 538, 549, 533, 521, 514, 522, 0,
	196, 219, 363, 0, 448, 286, 626, 595, 590, 204,
	221, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 207, 220, 230,
	234, 241, 259, 274, 276, 283, 296, 307, 315, 316,
	319, 325, 375, 381, 382, 383, 384, 403, 404, 405,
	408, 411, 412, 415, 417, 418, 421, 425, 429, 430,
	431, 433, 435, 437, 449, 454, 468, 469, 470, 471,
	472, 475, 476, 481, 482, 483, 484, 485, 493, 494,
	499, 569, 571, 584, 602, 608, 474, 298, 299, 438,
	439, 311, 312, 622, 623, 297, 579, 609, 577, 621,
	603, 432, 373, 0, 0, 376, 279, 302, 317, 0,
	594, 495, 225, 460, 288, 249, 0, 0, 209, 244,
	228, 257, 272, 275, 321, 386, 394, 423, 428, 294,
	269, 242, 453, 239, 478, 502, 503, 504, 506, 390,
	264, 427, 0, 0, 371, 559, 560, 313,
}

var yyPact = [...]int{
	-1000, -1000, 4496, -1000, -518, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2261, 2738, -1000, -1000, -1000, -1000, 2109, 2462, -1000,
	864, 1865, -1000, 2203, 294, -1000, 54176, 611, -1000, 51328,
	603, 715, 303, 35664, -1000, 262, -1000, 254, 52752, 258,
	-1000, -1000, -1000, -1000, -379, 21422, 88, 87, 54176, -1000,
	-1000, -1000, -1000, 2386, 1833, -1000, 446, -1000, -1000, -1000,
	-1000, -1000, -1000, 50616, -1000, 1001, -1000, -1000, 2217, 2191,
	2442, 756, 2101, -1000, 2299, 1833, -1000, 21422, 2377, 2276,
	20710, 20710, 563, -360, -1000, -1000, 141, -1000, -1000, 30680,
	54176, 38512, 524, -1000, 2203, -1000, -1000, -1000, 140, -1000,
	445, 1759, -1000, 1756, -1000, 841, 780, 473, 609, 608,
	472, 471, 470, 468, 466, 464, 459, 458, 480, -1000,
	775, 775, -168, -183, 1322, 538, 550, 550, 931, 579,
	2170, 2169, -1000, -1000, 775, 775, 775, 433, 775, 775,
	775, 775, 420, 417, 775, 775, 775, 775, 775, 775,
	775, 775, 775, 775, 775, 775, 775, 775, 775, 775,
	775, 362, 2203, 366, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 54176,
	316, 54176, -1000, 657, 54176, -383, 918, 918, 150, 918,
	918, 918, 918, 278, 797, 80, -1000, 245, 375, 213,
	371, 909, 439, -1000, -1000, 360, 909, 1664, -1000, 763,
	367, 193, -1000, 918, 918, -1000, 14277, 186, 14277, 14277,
	-1000, 2190, -1000, -1000, -1000, -1000, -1000, 1092, -1000, -1000,
	-1000, -1000, -2, 577, -1000, -1000, -1000, -1000, 52752, 49904,
	301, -1000, -1000, 45, -1000, -1000, 1582, 1080, 21422, 1287,
	748, -1000, -1000, 1128, 724, -1000, -1000, -1000, -1000, -1000,
	623, -1000, 23558, 23558, 23558, 23558, -1000, -1000, 1769, 49192,
	1769, 1769, 23558, 1769, 23558, 1769, 1769, 1769, 21422, 1769,
	1769, 1769, 1769, -1000, 1769, 1769, 1769, 1769, 1769, 1769,
	1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769,
	1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769,
	1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769,
	1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769,
	1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769,
	1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769,
	1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769,
	1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769,
	1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769,
	1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769,
	1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769,
	1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769,
	-1000, -1000, -1000, -1000, 1769, 656, 1769, 1769, 1769, 1769,
	1769, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1769, 1769,
	1769, 1769, 1769, 1769, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1769, 1769, 1769, 1769, 1769, 1769, 1769,
	1769, 1769, 1769, 1769, 1769, 1769, 1769, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 26406, 1433,
	1429, 1418, -1000, 18574, 1769, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 54176, -1000, 1769, 282, 52752, 52752,
	449, 2299, 1833, -1000, 2386, 2313, 446, -1000, 2417, 1513,
	1425, 1235, 1833, 1725, 54176, -1000, 1784, -1000, -1000, -1000,
	-1000, 2010, 1281, 1654, -1000, -1000, -1000, -1000, 1965, 21422,
	-1000, -1000, 2421, -1000, 27831, 655, 2420, 48480, -1000, -1000,
	-206, -1000, 563, 563, 1740, 482, 41, -1000, -1000, -1000,
	-1000, 810, 34952, -1000, -1000, -1000, -1000, -1000, 1661, 54176,
	-1000, -1000, 4563, 1138, -1000, 1862, -1000, 1638, -1000, 1804,
	21422, 1884, 602, 1138, 592, 591, 578, -1000, -24, -1000,
	-1000, -1000, -1000, -1000, -1000, 775, 775, 775, -1000, 479,
	2371, 294, 4756, -1000, -1000, -1000, 47768, 1857, 1138, -1000,
	1856, -1000, 896, 664, 685, 685, 1138, -1000, -1000, 53464,
	1138, 895, 894, 1138, 1138, 52752, 52752, -1000, 47056, -1000,
	46344, 45632, 1209, 52752, 44920, 44208, 43496, 42784, 42072, -1000,
	2038, -1000, 1794, -1000, -1000, -1000, 53464, 1138, 1138, 53464,
	52752, 53464, 54176, 1138, -1000, -1000, 415, -1000, -1000, 1208,
	1207, 1182, 775, 775, 1171, 1634, 1631, 1623, 775, 775,
	1169, 1618, 37088, 1613, 348, 1168, 1154, 1141, 1276, 1612,
	209, 1601, 1274, 1143, 1139, 52752, 1850, 54176, -1000, 334,
	852, 712, 808, 2203, 2103, 1737, 573, 601, 1138, 555,
	555, 52752, -1000, 14995, -1000, 276, -1000, 1599, 21422, -1000,
	937, 909, 909, -1000, -1000, -1000, -1000, -1000, -1000, 918,
	54176, 937, -1000, -1000, -1000, 909, 918, 54176, 918, 918,
	918, 918, 909, 909, 909, 918, 54176, 54176, 54176, 54176,
	54176, 54176, 54176, 54176, 54176, 14277, 763, 918, -384, -1000,
	1595, -1000, -1000, 1983, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 14277, 14277, -1000, -1000, -1000, -1000, -1000, 1736,
	-1000, 252, 46, 257, -1000, 41360, 393, 807, -1000, 393,
	-1000, -1000, -1000, 1729, 40648, -1000, -389, -390, -394, -398,
	-1000, -1000, -1000, -399, -406, -1000, -1000, -1000, 21422, 21422,
	21422, 21422, -211, -1000, 1015, 23558, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 21422, 180, 969, 23558, 23558, 23558, 23558,
	23558, 23558, 23558, 24982, 24270, 23558, 23558, 23558, 23558, 23558,
	23558, -1000, -1000, 32816, 5646, 5646, 724, 724, 724, 724,
	-1000, -133, 1727, 53464, -1000, -1000, -1000, 654, 21422, 21422,
	724, -1000, 1138, 2961, 18574, 20710, 20710, 21422, 816, 1080,
	53464, 21422, -1000, 1235, -1000, -1000, -1000, -1000, 1028, -1000,
	-1000, 1031, 2185, 2185, 2185, 2185, 21422, 21422, 21422, 21422,
	21422, 21422, 21422, 21422, 21422, 21422, 2185, 52752, 52752, 188,
	21422, 21422, 21422, 21422, 21422, 21422, 17149, 21422, 21422, 23558,
	21422, 21422, 21422, 1235, 21422, 21422, 21422, 21422, 21422, 21422,
	21422, 21422, 21422, 21422, 21422, 21422, 21422, 21422, 21422, 21422,
	21422, 21422, 21422, 21422, 21422, 21422, 21422, 21422, 21422, 21422,
	21422, 21422, 21422, 21422, 21422, 21422, 21422, 21422, 21422, 21422,
	21422, 21422, 21422, 21422, 21422, 21422, 21422, 21422, 21422, 21422,
	21422, 21422, 21422, 21422, 21422, 21422, 21422, 21422, 21422, 21422,
	21422, 21422, 21422, 21422, 21422, 21422, 21422, 21422, 21422, 21422,
	21422, 21422, 21422, 21422, 21422, 21422, 21422, 21422, 21422, 21422,
	21422, 21422, 21422, 1235, 21422, 1096, 21422, 21422, 21422, 21422,
	21422, 21422, 20710, 16431, 20710, 20710, 20710, 20710, 20710, -1000,
	-1000, -1000, -1000, -1000, -1000, 21422, 21422, 21422, 21422, 21422,
	21422, 21422, 21422, 1235, 21422, 21422, 21422, 21422, 21422, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1499,
	1427, 1392, 21422, 1726, -1000, -122, 29968, 21422, 1594, 2415,
	1911, 52752, -1000, -1000, -1000, 2299, -1000, 2299, 1499, 2197,
	2015, 20710, -1000, -1000, 2197, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1487, -1000, 54176, 1725, 2263, 52752, 2002,
	1592, 406, -1000, 21422, 21422, 1720, -1000, 1724, 54176, -1000,
	-211, -1000, 39936, -1000, -1000, 13559, 54176, 447, 54176, -1000,
	1588, 29256, 39224, 271, -1000, 41, 1704, -1000, 59, 33,
	17861, 723, -1000, -1000, -1000, 1322, 25694, 1576, 723, 160,
	-1000, -1000, -1000, 1804, -1000, 1804, 1804, 1804, 1804, 406,
	406, 406, 406, -1000, -1000, -1000, -1000, -1000, 1849, 1848,
	-1000, 1804, 1804, 1804, 1804, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1845, 1845, 1845, 1841, 1841, 1820, 1820, 533,
	-1000, 21422, 322, 38512, 2215, 1135, 1247, 334, 561, 1910,
	1138, 1138, 1138, 561, -1000, 1334, 1307, 1305, -1000, -509,
	1716, -1000, -1000, 2367, -1000, -1000, 872, 952, 925, 796,
	52752, 289, 413, -1000, 513, -1000, 38512, 1138, 880, 685,
	1138, -1000, 1138, -1000, -1000, -1000, -1000, -1000, 1138, -1000,
	-1000, 1714, -1000, 1745, 1005, 917, 984, 911, 1714, -1000,
	-1000, -140, 1714, -1000, 1714, -1000, 1714, -1000, 1714, -1000,
	1714, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	826, 216, -278, 52752, 289, 572, -1000, 569, 32816, -1000,
	-1000, -1000, 32816, 32816, -1000, -1000, -1000, -1000, 1570, 1561,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -495,
	54176, -1000, 330, 795, 432, 463, 372, 54176, 364, 2291,
	2290, 2279, 2272, 2240, 359, 410, 54176, 54176, 555, 1962,
	54176, 2226, 54176, -1000, -1000, -1000, -1000, 1556, 1535, -1000,
	1080, 54176, -1000, -1000, 918, 918, -1000, -1000, 54176, 918,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 918, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 54176, -1000, -1000, -1000, -1000, -2,
	243, -1000, -1000, 52752, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -52, -1000, 110, 56, 405, -1000, -1000,
	-1000, -1000, -1000, 2296, -1000, 1080, 865, 838, -1000, 1769,
	-1000, -1000, 1059, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 180, 23558, 23558, 23558, 1173, 576, 1211, 1263, 1190,
	1234, 1234, 996, 23558, 996, 23558, 729, 729, 729, 729,
	729, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1525,
	-1000, 1769, 53464, 1580, 16431, 1944, 1511, 1235, 740, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 4463,
	1575, -1000, 1575, 1896, 820, -1000, 21422, 1235, 4453, -1000,
	-1000, 1235, 1235, 21422, -1000, -1000, 21422, 21422, 21422, 21422,
	1247, 1247, 1247, 1247, 1247, 1247, 1247, 1247, 1247, 1247,
	21422, 1711, 1707, 2412, 1170, 1247, 1247, 1247, 1247, 1247,
	21422, 1498, -1000, -1000, -1000, 1422, 4447, 981, 4425, 1247,
	1247, -1000, 1247, 4421, 4407, 1235, 1582, 3518, 3491, 1247,
	1247, 1247, 1247, 1247, 3346, 3332, 1247, 1247, 3308, 1247,
	4381, 1247, 3300, 3245, 3241, 3203, 3180, 3172, 3168, 3159,
	3154, 3140, 3136, 3132, 3112, 3098, 3057, 2968, 2743, 2723,
	1247, 1247, 1247, 4376, 1247, 4357, 1247, 4350, 1247, 1247,
	4342, 2453, 2422, 1235, 1706, -1000, 4331, 1247, 4321, 4317,
	4311, 2414, 4307, 3955, 3946, 1247, 1247, 1247, 2381, 3898,
	3891, 3882, 3875, 3866, 3835, 3810, 3785, 3773, 1247, 1392,
	1392, 1392, 1392, 1392, 3767, -217, 1247, 1235, -1000, -1000,
	-1000, -1000, -1000, 3758, 2356, 3743, 3739, 3735, 3725, 1235,
	1705, 1769, 653, -1000, -1000, 1575, 1235, 1235, 1575, 1575,
	3717, 3709, 3702, 3661, 3637, 3616, 1247, 1247, -1000, 1247,
	3541, 3534, 2345, 2325, 1235, -1000, 1392, 54176, -1000, -372,
	-1000, 48, 734, 1769, -1000, 37088, 1235, -1000, 5289, -1000,
	1021, -1000, -1000, -1000, -1000, -1000, 34240, 1617, 2197, -1000,
	-1000, 1769, 1555, -1000, -1000, 406, 116, 33528, 707, 707,
	169, 1080, 1080, 21422, -1000, -1000, -1000, -1000, -1000, -1000,
	651, 2384, 407, 1769, -1000, 2210, 1722, 2681, -1000, -1000,
	-1000, 2257, 27119, -1000, -1000, 1769, 1769, 54176, 1679, 1605,
	-1000, 645, -1000, 1175, 1704, 41, 30, -1000, -1000, -1000,
	-1000, 1080, -1000, 1303, 448, 1037, -1000, 515, -1000, -1000,
	-1000, -1000, 2157, 120, -1000, -1000, -1000, 256, 406, -1000,
	-1000, -1000, -1000, -1000, -1000, 1514, 1514, -1000, -1000, -1000,
	-1000, -1000, 1127, -1000, -1000, -1000, -1000, 1122, -1000, -1000,
	1120, -1000, -1000, 2766, 1904, 322, -1000, -1000, 775, 1502,
	-1000, -1000, 2161, 775, 775, 52752, -1000, -1000, 1547, 2215,
	330, 54176, 825, 1959, -1000, 1910, 1910, 1910, 54176, -1000,
	-1000, -1000, -1000, -1000, -1000, -497, 66, 419, -1000, -1000,
	-1000, 365, 52752, 1553, -1000, 285, -1000, 1478, -1000, 52752,
	-1000, 1546, 1840, 1138, 1138, -1000, -1000, -1000, 52752, 1769,
	-1000, -1000, -1000, -1000, 596, 2194, 290, -1000, -1000, -235,
	-1000, -1000, 289, 285, 53464, 1138, 723, -1000, -1000, -1000,
	-1000, -1000, -498, 1540, 585, 310, 368, 54176, 54176, 54176,
	54176, 54176, 626, -1000, -1000, 69, -1000, -1000, 272, -1000,
	-1000, -1000, -1000, 272, -1000, -1000, -1000, -1000, 380, 566,
	-1000, 54176, 54176, 692, -1000, -1000, -1000, -1000, -1000, 909,
	-1000, -1000, 909, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2181, 54176, 53, -460, -1000,
	-456, 21422, -1000, -1000, -1000, -1000, 1088, 574, 1211, 23558,
	23558, 2961, 2961, 23558, -1000, -1000, -1000, 512, 512, 32816,
	-1000, 23558, 21422, 20710, -1000, -1000, 21422, 21422, 812, -1000,
	21422, 1133, -1000, 21422, -1000, -1000, 1392, 1247, 1247, 1247,
	1247, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1542, 21422, 21422, 21422, 1235, 394, -1000, -1000, -1000,
	-1000, -1000, 2410, -1000, 21422, -1000, 32816, 21422, 21422, 21422,
	-1000, -1000, -1000, 21422, 21422, -1000, -1000, 21422, -1000, 21422,
	-1000, -1000, -1000, -1000, -1000, -1000, 21422, -1000, 21422, -1000,
	-1000, -1000, 21422, -1000, 21422, -1000, -1000, 21422, -1000, 21422,
	-1000, 21422, -1000, 21422, -1000, 21422, -1000, 21422, -1000, 21422,
	-1000, 21422, -1000, 21422, -1000, 21422, -1000, 21422, -1000, 21422,
	-1000, 21422, -1000, 21422, -1000, 21422, -1000, 21422, -1000, 21422,
	-1000, 21422, -1000, -1000, -1000, 21422, -1000, 21422, -1000, 21422,
	-1000, -1000, 21422, -1000, 21422, -1000, 21422, -1000, 21422, 21422,
	-1000, 21422, 21422, 21422, -1000, 21422, 21422, 21422, 21422, -1000,
	-1000, -1000, -1000, 21422, 21422, 21422, 21422, 21422, 21422, 21422,
	21422, 21422, 21422, -1000, -1000, -1000, -1000, -1000, -1000, 21422,
	-1000, 38512, 89, -217, 1096, 89, 1096, 22846, 665, 659,
	22134, -1000, 20710, 15713, -1000, -1000, -1000, -1000, -1000, 21422,
	21422, 21422, 21422, 21422, 21422, -1000, -1000, -1000, 21422, 21422,
	-1000, 21422, -1000, 21422, -1000, -1000, -1000, -1000, -1000, 734,
	-1000, 685, 685, 685, 52752, -1000, -1000, -1000, -1000, 1703,
	-1000, 2275, -1000, 2040, 2035, 2407, 2384, -1000, 29256, 2197,
	-1000, -1000, 52752, -351, -1000, 2102, 2039, 707, 707, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 12841, 2299, 21422, 1957,
	53464, 139, -1000, 28544, 52752, 595, 53464, 29256, 29256, 29256,
	29256, 29256, -1000, 1981, 1977, -1000, 1992, 1984, 1999, 54176,
	-1000, 1499, 1530, -1000, 21422, 31392, 1685, 29256, -1000, -1000,
	29256, 54176, 12123, -1000, -1000, 31, 17, -1000, -1000, -1000,
	-1000, 1322, -1000, -1000, 1684, 2250, 2154, -1000, -1000, -1000,
	-1000, -1000, 1524, -1000, 1521, 1702, 1519, 1506, 216, -1000,
	1883, 2179, 775, 775, -1000, 1117, -1000, 1138, 1500, 1493,
	-1000, -1000, -1000, 575, -1000, 2222, 54176, 1952, 1933, 1931,
	-1000, -506, 1108, 1831, 1871, 21422, 1829, 2362, 1692, 52752,
	-1000, -1000, 53464, -1000, 242, -1000, 322, 52752, -1000, -1000,
	-1000, 413, 54176, -1000, 9013, -1000, -1000, -1000, 285, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 54176, 317, -1000, 1823,
	1084, -1000, -1000, 1894, -1000, -1000, -1000, -1000, 286, 395,
	1491, 268, 1480, 268, -1000, 54176, 678, 1904, 54176, -1000,
	-1000, -1000, 918, 918, -1000, -1000, 2177, -1000, 1138, 1247,
	23558, 23558, -1000, 724, -1000, -1000, 343, -190, 1804, 1804,
	-1000, 1804, 1820, -1000, 1804, 220, 1804, 191, 1804, -1000,
	-1000, 1235, 1235, -1000, 1392, -1000, 2319, 1187, -1000, 1080,
	21422, 3522, -1000, -1000, -1000, -1000, -1000, -31, 3350, 3184,
	1247, -1000, 1801, 1799, 21422, 1247, 1235, 2307, 1247, 1247,
	1247, 1247, 1247, 1247, 1247, 1247, 1247, 1247, 1247, 1247,
	2278, 2262, 2251, 2247, 2242, 2238, 2216, 2205, 2139, 1958,
	1953, 1913, 1886, 1858, 1851, 1792, 1247, 1247, 1780, 1247,
	1677, 1670, -1000, 1080, 1392, 2979, 1392, 1247, 1247, 2448,
	337, 1247, 1490, 1490, 1490, 1490, 1490, 1392, 1392, 1392,
	1392, 1247, 52752, -1000, -217, -1000, -1000, -271, -272, -1000,
	1235, -217, 1701, 23558, 1247, 23558, 23558, 23558, 1247, 1235,
	-1000, 1578, 1573, 2374, 1568, 1247, 2282, 1247, 1247, 1247,
	1538, -1000, 2295, 2295, 2295, 1486, 1021, 54176, -1000, -1000,
	-1000, -1000, 2384, 2382, 1700, -1000, -1000, 116, 494, -1000,
	2054, 2039, -1000, 2354, 2082, 2352, -1000, -1000, -1000, -1000,
	-1000, 1080, -1000, 2208, 1699, -1000, 793, 1672, -1000, -1000,
	19998, 1389, 2023, 644, 1486, 54176, 1758, 2681, 1890, 1930,
	2239, -1000, -1000, -1000, -1000, 1973, -1000, 1942, -1000, -1000,
	1784, -1000, 1938, 447, 29256, 1735, 1735, -1000, 640, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 973, 6029, 2440, -1000,
	1479, -1000, 1258, 187, 1103, -1000, -1000, 775, 775, -1000,
	873, 871, -1000, 54176, 1798, -1000, 406, 1437, 406, 1093,
	-1000, -1000, 1085, -1000, -1000, -1000, -1000, 1790, 1932, -1000,
	-1000, -1000, -1000, 54176, -1000, -1000, 54176, 54176, 54176, 1797,
	2348, -1000, 21422, 1795, 777, 2350, 52752, 52752, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 536,
	775, -476, 396, 392, 775, 775, 775, -508, -1000, -1000,
	1477, 1471, -1000, -166, -1000, 21422, -1000, -1000, -1000, 1089,
	1089, 1433, 1429, 1418, -1000, 1784, -1000, -1000, -1000, 1462,
	-1000, -1000, -153, 52752, 52752, 52752, 52752, -1000, -1000, 1097,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 724, 1235, 356, -156, 1235, -1000, -1000, 406,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	21422, -1000, 21422, -1000, 1080, 21422, 2299, 1411, 21422, 21422,
	-1000, 1076, 1067, 1247, -1000, -1000, -1000, 21422, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 21422, -1000, 21422, -1000, 21422, -1000, 21422, -1000, 21422,
	-1000, 21422, -1000, 21422, -1000, 21422, -1000, 21422, -1000, 21422,
	-1000, 21422, -1000, 21422, -1000, 21422, -1000, 21422, -1000, 21422,
	-1000, 21422, -1000, -1000, 21422, -1000, -1000, -1000, 21422, -1000,
	21422, -1000, 21422, -1000, -1000, -1000, 21422, 247, 512, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1235, 442, -1000, -1000, -1000, -1000, 2395, -1000, 1235, 21422,
	2961, -1000, 2961, 2961, 2961, -1000, -1000, -1000, 21422, -1000,
	21422, 21422, -1000, 21422, -1000, 21422, -1000, -1000, -1000, -1000,
	21422, 1769, 2235, 1769, 1769, 31392, -1000, -1000, 2382, 2380,
	2344, 2055, 2061, 2061, 2054, -1000, 2339, 2336, -1000, 1396,
	2333, 1376, 845, -1000, 53464, 21422, 139, -1000, 461, 52752,
	139, 52752, -1000, 114, 2346, -1000, -1000, 21422, 1789, -1000,
	21422, -1000, -1000, -1000, -1000, 5646, 2384, 1735, -1000, -1000,
	735, -1000, 21422, -1000, -1000, -1000, 4754, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1368, 1366, -1000, -1000, 1785,
	21422, -1000, -1000, -1000, 1423, 1393, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1784, -1000, -1000, -1000, -1000, 413,
	-502, 1837, 52752, 1066, -1000, 1469, 1692, 399, 139, 1361,
	775, 775, 775, 1061, 1060, 37088, 1466, -1000, 52752, 499,
	-1000, 413, -1000, -184, -186, 1247, -1000, -1000, 2246, -1000,
	-1000, 15713, -1000, -1000, 1783, 1895, -1000, -1000, -1000, -1000,
	1998, -137, -161, -1000, -1000, 1247, 1247, 1718, 1235, -1000,
	1247, 1247, 1365, 1277, -1000, 1247, 1247, 1247, 1247, 1247,
	1247, 1247, 1247, 1247, 1247, 1247, 1247, 1247, 1247, 1247,
	1247, 1247, 1247, 1247, 1247, 1392, 1534, -1000, 247, 1235,
	1929, -1000, -1000, 5646, -1000, -1000, 2346, 2332, 89, -1000,
	-1000, 295, 89, 1080, 831, 1235, 1235, 831, 1475, 1247,
	1464, 1459, 1247, 1247, 32104, -1000, 2322, 2321, 37800, 37800,
	734, 2380, -233, 21422, 21422, 2056, 1020, -1000, -1000, -1000,
	-1000, 1329, 1324, -1000, 1319, -1000, 2438, -1000, 1080, -1000,
	139, -1000, 636, 1672, -1000, 2100, 2087, -1000, -1000, 2299,
	1080, 52752, 1080, 113, 2346, -1000, 1247, -1000, 1769, 1769,
	1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769,
	1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769,
	1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769,
	1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769,
	1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769,
	1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769,
	1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769,
	1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769,
	1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769,
	1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769,
	1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769,
	1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769,
	1769, 1769, 1769, 1769, -1000, -1000, 52752, 1697, -1000, -1000,
	2245, 1461, 64, -1000, 1264, 1692, -1000, -1000, 137, -1000,
	21422, -1000, 37088, 1300, 1260, -1000, -1000, -1000, -1000, -508,
	-1000, -1000, -1000, -1000, -1000, -1000, 446, 1690, -1000, 772,
	52752, 54176, -1000, 1995, -1000, -1000, -1000, 21422, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 21422, -1000, 1235, 1928, -1000,
	-309, -1000, -481, 21422, -217, -1000, -1000, -217, -1000, -1000,
	-1000, -1000, -1000, 21422, -1000, -1000, 21422, -1000, 21422, -1000,
	-1000, 1457, -1000, -1000, -1000, -1000, -1000, 1457, 1457, -1000,
	-233, -1000, 1689, -1000, 52752, 1080, 1582, -1000, 1017, -1000,
	-1000, -1000, -1000, -1000, 53464, 1672, 52752, 1769, 2049, 2065,
	2317, -1000, 1452, 1235, 1769, 2299, -1000, 1448, -1000, 446,
	-1000, 1777, 1871, -1000, -1000, -1000, 19286, -1000, -1000, -1000,
	-1000, -1000, 182, -152, 15713, 11405, 1442, -1000, -143, 1247,
	1392, -1000, -410, -1000, -1000, -1000, -1000, 281, -1000, -1000,
	1582, -1000, -1000, 1387, 1383, 1364, 36376, -1000, -1000, -1000,
	-1000, -233, -1000, -1000, 2243, -1000, -1000, 1492, -1000, -1000,
	52752, 2086, 2308, 2084, 2305, 1244, -1000, 31392, 52040, -1000,
	-131, 324, -152, 21422, 1771, 1235, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 9, -1000, -1000, 634, -1000, -1000,
	-1000, 1894, -159, -1000, -1000, -1000, 251, -468, -242, -243,
	23558, -1000, 21422, -1000, 21422, -1000, 21422, -1000, -1000, -1000,
	52752, 1769, 1389, -1000, 2304, 1232, -1000, 2302, 1230, -1000,
	-1000, 1385, -1000, 4290, -294, 1926, -1000, -44, -1000, -1000,
	-1000, 971, 1220, -1000, -1000, -1000, -1000, -1000, -1000, 1629,
	52752, -1000, 517, -1000, -1000, 14995, -153, -162, 833, -1000,
	-1000, -1000, -1000, -1000, 2961, 1328, 1323, 1247, -1000, 52752,
	-1000, 1193, -1000, 1134, -1000, -1000, 52040, -277, 723, 5646,
	-1000, 1918, 1914, 2402, -1000, -1000, -1000, -1000, -1000, -1000,
	-515, 1358, 332, -1000, -1000, -1000, 251, -249, -1000, 21422,
	-1000, 21422, -1000, 1235, -1000, -1000, -1000, -1000, 2221, 113,
	-1000, 2430, -1000, 2418, 771, 771, -1000, 1048, -515, -1000,
	-1000, -1000, -1000, 1247, 1247, -1000, -297, -1000, -1000, -1000,
	-1000, -1000, 523, 1083, -1000, -1000, -1000, -1000, -1000, 5646,
	-1000, -1000, -1000, 239, 239, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3141, 3139, 27, 1, 35, 34, 3138, 40, 96,
	193, 38, 202, 108, 3124, 177, 3123, 3122, 3119, 3117,
	3114, 3113, 2504, 2496, 2490, 3108, 3104, 3103, 3100, 3098,
	3096, 3093, 3091, 3088, 3083, 176, 161, 196, 3081, 3080,
	3079, 114, 192, 85, 87, 188, 3078, 3077, 95, 3075,
	3074, 3073, 190, 189, 185, 892, 3072, 181, 111, 49,
	3064, 3058, 3054, 3053, 3052, 3050, 3049, 3048, 3047, 3046,
	3045, 3044, 2985, 2984, 2980, 2979, 2978, 2977, 274, 2976,
	2975, 19, 2974, 99, 2970, 2966, 2964, 2959, 2958, 5,
	2957, 2956, 12, 42, 2954, 2953, 48, 2952, 2951, 2950,
	2949, 2948, 17, 2947, 25, 2946, 36, 2945, 2944, 124,
	2943, 2942, 2941, 39, 2939, 2936, 2930, 9, 2929, 2928,
	139, 2925, 2924, 2922, 184, 198, 2921, 2920, 162, 106,
	154, 2919, 2912, 103, 191, 2911, 118, 2895, 2893, 2892,
	150, 2891, 1086, 2889, 75, 66, 2887, 28, 2886, 2883,
	163, 65, 4, 212, 220, 2879, 2878, 68, 165, 2877,
	107, 2876, 2875, 105, 76, 2872, 98, 101, 2868, 2867,
	13, 3, 2866, 131, 134, 132, 71, 2860, 2859, 112,
	2857, 2856, 2853, 89, 2852, 2851, 3792, 2850, 88, 128,
	104, 81, 2848, 45, 54, 2847, 2846, 2844, 2835, 2833,
	51, 2830, 2828, 2826, 152, 231, 170, 2823, 47, 78,
	57, 129, 2820, 72, 83, 194, 171, 2819, 2818, 136,
	138, 2817, 2816, 61, 46, 44, 2815, 94, 126, 120,
	37, 92, 130, 2814, 2810, 67, 79, 2803, 2802, 2799,
	2798, 175, 2796, 2793, 70, 2792, 60, 2791, 172, 24,
	21, 50, 2790, 55, 2788, 167, 2787, 80, 2786, 2785,
	74, 119, 77, 52, 2782, 157, 169, 122, 174, 2779,
	2777, 58, 2776, 2775, 2774, 199, 340, 2773, 2772, 97,
	178, 142, 149, 86, 2771, 350, 2769, 2767, 14, 4877,
	7247, 2766, 56, 160, 2765, 2763, 7458, 15, 62, 20,
	2762, 197, 2761, 2760, 2758, 2740, 1217, 182, 156, 168,
	64, 2731, 2730, 2729, 11, 2728, 2726, 2720, 2712, 2634,
	2630, 140, 33, 32, 31, 206, 69, 7, 102, 166,
	153, 90, 2624, 2616, 2602, 117, 93, 2601, 159, 158,
	148, 164, 2600, 180, 143, 113, 2599, 73, 30, 2598,
	2597, 2596, 2593, 91, 2591, 2585, 2579, 2578, 151, 144,
	116, 84, 2577, 82, 115, 147, 145, 53, 2573, 59,
	2566, 2565, 29, 187, 26, 2562, 16, 110, 109, 2560,
	6723, 186, 2559, 18, 334, 155, 2554, 2550, 2, 6,
	10, 2549, 2548, 2545, 2544, 133, 2543, 2539, 2538, 2535,
	23, 63, 22, 8, 121, 100, 2534, 2524, 141, 2521,
	2519, 2518, 2517, 2514, 2508, 2505, 2500, 2488, 2473, 2471,
	3374, 0, 123, 2465, 200, 2459,
}

//line sql.y:8586
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) itemUnion() interface{} {
	v, _ := st.union.(interface{})
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 418, 419, 419, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 257, 380, 381, 381, 255, 255, 33, 73, 35,
	35, 34, 34, 37, 37, 36, 8, 8, 8, 9,
	9, 9, 9, 9, 9, 9, 9, 10, 10, 10,
	10, 10, 11, 11, 11, 11, 13, 13, 13, 13,
	13, 20, 21, 12, 12, 22, 22, 107, 107, 23,
	24, 24, 24, 24, 422, 422, 181, 181, 179, 179,
	180, 180, 260, 260, 25, 264, 264, 266, 266, 266,
	266, 256, 256, 256, 26, 26, 265, 265, 267, 267,
	267, 270, 270, 270, 270, 309, 309, 309, 27, 27,
	27, 27, 27, 126, 126, 383, 383, 382, 376, 376,
	375, 375, 374, 379, 379, 378, 378, 377, 39, 40,
	49, 49, 49, 49, 50, 51, 384, 384, 349, 56,
	56, 55, 55, 55, 55, 55, 55, 57, 57, 53,
	53, 52, 52, 54, 54, 351, 351, 337, 337, 350,
	350, 350, 350, 350, 350, 350, 336, 336, 137, 137,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 399, 399, 399,
	398, 398, 234, 234, 234, 234, 234, 234, 234, 234,
	146, 146, 157, 157, 157, 157, 157, 157, 144, 144,
	145, 143, 143, 143, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 403, 403, 403, 403, 403, 403, 403, 403, 403,
	403, 403, 403, 403, 403, 403, 403, 403, 403, 403,
	403, 403, 403, 403, 403, 403, 403, 403, 403, 403,
	403, 403, 403, 403, 403, 403, 403, 403, 403, 403,
	403, 403, 403, 156, 156, 152, 152, 152, 153, 153,
	153, 154, 154, 400, 400, 400, 400, 314, 314, 314,
	314, 317, 317, 315, 315, 315, 315, 315, 315, 315,
	315, 315, 316, 316, 316, 316, 316, 316, 316, 318,
	318, 318, 318, 318, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	320, 320, 320, 320, 320, 320, 320, 320, 335, 335,
	321, 321, 329, 329, 330, 330, 331, 331, 331, 332,
	332, 332, 333, 333, 326, 326, 326, 326, 326, 326,
	326, 326, 326, 328, 328, 327, 327, 327, 338, 363,
	363, 362, 362, 360, 360, 360, 360, 360, 360, 360,
	360, 347, 347, 357, 357, 357, 357, 357, 346, 346,
	342, 342, 342, 343, 343, 344, 344, 341, 341, 345,
	345, 359, 359, 358, 358, 339, 339, 340, 340, 365,
	401, 401, 401, 401, 401, 402, 402, 366, 391, 393,
	393, 393, 392, 392, 389, 390, 388, 388, 388, 388,
	388, 83, 83, 83, 283, 283, 284, 284, 355, 355,
	354, 354, 354, 356, 356, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 278, 278, 278, 387,
	387, 387, 387, 387, 387, 386, 386, 386, 352, 352,
	352, 352, 385, 385, 58, 58, 214, 214, 404, 404,
	405, 405, 405, 46, 46, 46, 46, 46, 46, 45,
	45, 45, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 47, 47, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 109, 109, 110, 110, 110, 110, 112,
	112, 112, 368, 368, 59, 59, 3, 3, 169, 171,
	172, 172, 170, 170, 170, 170, 170, 170, 61, 61,
	60, 60, 174, 173, 175, 175, 175, 1, 1, 2,
	2, 4, 4, 373, 373, 373, 373, 373, 373, 373,
	373, 373, 373, 373, 373, 373, 373, 373, 373, 373,
	373, 373, 373, 373, 373, 334, 334, 334, 367, 367,
	369, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 115, 114, 114, 113, 116, 116, 116, 116, 116,
	116, 116, 116, 371, 371, 371, 62, 62, 372, 322,
	323, 324, 5, 6, 348, 370, 122, 122, 29, 38,
	38, 30, 30, 30, 30, 31, 31, 63, 66, 66,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 277, 277, 286, 286, 276, 276, 301, 301,
	301, 279, 279, 279, 280, 280, 397, 397, 397, 273,
	273, 65, 65, 65, 302, 302, 302, 302, 68, 68,
	406, 406, 407, 407, 408, 408, 408, 69, 70, 70,
	304, 304, 305, 305, 71, 72, 84, 84, 84, 84,
	84, 84, 84, 85, 85, 85, 85, 108, 108, 108,
	15, 15, 15, 15, 80, 80, 80, 14, 14, 17,
	67, 67, 74, 394, 394, 395, 396, 396, 396, 396,
	75, 77, 32, 32, 32, 32, 32, 32, 132, 132,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 127, 127, 127, 121, 121, 423, 78, 79,
	79, 125, 125, 125, 118, 118, 118, 124, 124, 124,
	16, 16, 18, 259, 259, 19, 19, 129, 129, 131,
	131, 131, 131, 131, 133, 133, 133, 133, 133, 133,
	133, 128, 128, 130, 130, 130, 130, 294, 294, 294,
	293, 293, 163, 163, 165, 164, 164, 166, 166, 167,
	167, 167, 167, 212, 212, 189, 189, 251, 251, 252,
	252, 250, 250, 258, 258, 253, 253, 253, 253, 261,
	261, 168, 168, 168, 168, 176, 176, 177, 177, 178,
	178, 303, 303, 299, 299, 299, 298, 298, 182, 182,
	182, 184, 183, 183, 183, 183, 185, 185, 187, 187,
	186, 186, 188, 193, 193, 192, 192, 190, 190, 190,
	190, 191, 191, 191, 191, 194, 194, 142, 142, 142,
	142, 142, 142, 142, 142, 155, 155, 155, 155, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	241, 241, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 217, 217, 216, 216, 86, 86, 86, 87,
	87, 88, 88, 88, 88, 88, 89, 89, 89, 89,
	89, 89, 89, 91, 91, 90, 90, 207, 207, 291,
	291, 92, 93, 93, 96, 96, 95, 94, 94, 100,
	100, 97, 97, 99, 99, 98, 101, 101, 102, 103,
	103, 274, 274, 195, 195, 203, 203, 203, 203, 196,
	196, 196, 196, 196, 196, 196, 204, 204, 204, 211,
	205, 205, 201, 201, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 160, 160, 160, 160, 222, 222,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 149, 149, 161, 161, 161,
	161, 162, 162, 162, 162, 162, 162, 162, 311, 311,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	424, 424, 325, 325, 325, 202, 202, 202, 202, 202,
	123, 123, 123, 123, 123, 308, 308, 308, 312, 312,
	312, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 313, 313, 220, 220,
	119, 119, 218, 218, 219, 221, 221, 213, 213, 213,
	213, 215, 215, 198, 198, 198, 223, 223, 224, 224,
	104, 105, 105, 106, 106, 225, 225, 227, 226, 226,
	228, 229, 229, 229, 230, 230, 231, 231, 231, 48,
	48, 48, 48, 48, 43, 43, 43, 43, 44, 44,
	44, 44, 134, 134, 134, 134, 136, 136, 135, 135,
	81, 81, 82, 82, 82, 140, 140, 141, 141, 141,
	138, 138, 139, 139, 248, 248, 232, 232, 232, 239,
	239, 239, 235, 235, 237, 237, 237, 238, 238, 238,
	236, 245, 245, 247, 247, 246, 246, 242, 242, 243,
	243, 244, 244, 244, 240, 240, 197, 197, 197, 197,
	197, 249, 249, 249, 249, 262, 262, 208, 208, 210,
	210, 209, 209, 159, 263, 263, 271, 268, 268, 269,
	269, 295, 295, 295, 272, 272, 285, 285, 281, 281,
	282, 282, 275, 275, 287, 287, 287, 76, 206, 206,
	364, 364, 361, 290, 290, 292, 292, 296, 296, 300,
	300, 297, 297, 416, 416, 254, 254, 410, 410, 409,
	409, 413, 413, 412, 412, 411, 411, 414, 414, 415,
	415, 425, 425, 417, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 420, 421,
	306, 307, 307, 307,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 0, 1, 1, 1, 2, 3, 2,
	3, 0, 1, 3, 1, 4, 3, 3, 4, 3,
	2, 3, 4, 3, 4, 2, 7, 1, 3, 3,
	3, 3, 1, 2, 1, 1, 3, 2, 3, 3,
	2, 5, 7, 10, 9, 7, 8, 1, 1, 10,
	11, 9, 8, 8, 1, 1, 1, 3, 1, 3,
	1, 3, 0, 4, 3, 1, 3, 3, 3, 3,
	3, 1, 1, 2, 5, 4, 1, 3, 3, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 2, 2,
	6, 12, 2, 0, 2, 0, 2, 1, 0, 2,
	1, 3, 3, 0, 1, 1, 3, 3, 6, 4,
	7, 8, 8, 8, 6, 3, 1, 1, 5, 0,
	1, 1, 1, 1, 2, 2, 2, 0, 1, 4,
	4, 4, 4, 4, 4, 2, 4, 1, 3, 1,
	1, 3, 4, 3, 3, 3, 5, 10, 0, 2,
	0, 2, 3, 5, 3, 4, 2, 3, 2, 3,
	3, 3, 3, 2, 2, 4, 4, 1, 1, 1,
	1, 1, 0, 2, 2, 3, 3, 2, 2, 2,
	1, 1, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 5, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 5, 1, 3, 0, 3, 5, 0,
	1, 1, 0, 1, 0, 3, 3, 2, 2, 2,
	1, 2, 2, 0, 1, 0, 2, 2, 5, 0,
	1, 1, 2, 1, 3, 2, 1, 1, 3, 3,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 4, 3, 1, 3, 1, 7,
	6, 7, 7, 8, 8, 0, 1, 5, 2, 1,
	1, 1, 0, 1, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 1, 1, 2, 0, 1, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	1, 1, 0, 1, 0, 1, 0, 2, 0, 2,
	0, 2, 2, 0, 1, 5, 1, 3, 7, 1,
	3, 3, 1, 2, 2, 2, 5, 5, 5, 6,
	8, 5, 5, 4, 4, 4, 6, 5, 5, 5,
	2, 2, 2, 2, 3, 3, 3, 4, 3, 3,
	1, 3, 5, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 3, 4, 4, 2, 11,
	3, 6, 8, 6, 6, 6, 13, 8, 6, 10,
	5, 5, 5, 7, 5, 5, 5, 5, 5, 7,
	7, 5, 5, 0, 6, 5, 6, 4, 5, 0,
	8, 9, 0, 3, 0, 1, 0, 3, 8, 4,
	1, 3, 3, 6, 7, 7, 8, 4, 0, 1,
	0, 1, 3, 3, 1, 1, 2, 1, 1, 0,
	2, 0, 2, 5, 3, 7, 4, 4, 4, 4,
	3, 3, 3, 7, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 0, 2, 2, 1, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 3, 1, 3, 3, 0, 2, 2, 2, 2,
	2, 2, 2, 4, 4, 3, 0, 1, 4, 3,
	4, 4, 3, 3, 3, 2, 1, 3, 3, 3,
	5, 7, 7, 6, 5, 3, 2, 3, 5, 5,
	3, 3, 7, 3, 3, 3, 3, 4, 7, 5,
	2, 4, 4, 4, 4, 4, 5, 5, 4, 4,
	4, 4, 4, 4, 4, 4, 2, 2, 4, 4,
	4, 4, 4, 2, 3, 3, 3, 3, 5, 2,
	3, 3, 2, 3, 4, 4, 4, 3, 4, 4,
	5, 3, 0, 1, 0, 1, 1, 1, 0, 2,
	2, 0, 2, 2, 0, 2, 0, 1, 1, 1,
	1, 2, 1, 3, 1, 1, 1, 1, 1, 3,
	0, 1, 1, 3, 3, 2, 2, 1, 1, 5,
	0, 1, 0, 1, 2, 3, 0, 3, 3, 3,
	3, 3, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 4, 4, 4,
	2, 2, 3, 1, 3, 2, 1, 2, 1, 2,
	2, 4, 3, 3, 6, 4, 7, 6, 1, 3,
	2, 2, 2, 2, 1, 1, 1, 3, 2, 1,
	1, 1, 0, 1, 1, 0, 3, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 1, 0, 1, 1,
	5, 5, 4, 0, 2, 4, 4, 0, 1, 0,
	1, 2, 3, 4, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 1, 0, 1, 2, 1, 3, 1, 1, 1,
	4, 3, 1, 1, 2, 3, 7, 0, 3, 0,
	1, 1, 3, 1, 3, 1, 1, 3, 3, 1,
	3, 4, 4, 4, 3, 2, 4, 0, 1, 0,
	2, 0, 1, 0, 1, 2, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 2, 2, 2, 1,
	1, 3, 3, 0, 1, 1, 2, 6, 5, 6,
	6, 0, 2, 3, 3, 0, 2, 3, 3, 3,
	2, 3, 1, 3, 6, 3, 4, 3, 1, 3,
	4, 5, 6, 3, 4, 5, 6, 3, 4, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 5, 5,
	3, 3, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 3, 1, 1, 1, 2, 2, 2, 2, 1,
	1, 2, 7, 7, 6, 6, 2, 2, 5, 6,
	3, 3, 1, 3, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	4, 2, 4, 0, 1, 2, 5, 0, 3, 0,
	1, 4, 4, 2, 0, 1, 1, 2, 2, 1,
	1, 2, 2, 0, 1, 1, 1, 1, 5, 1,
	3, 0, 3, 1, 1, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 6, 4, 4, 8, 6, 8, 6,
	5, 4, 10, 2, 2, 1, 2, 2, 2, 2,
	2, 4, 5, 5, 5, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 8, 8, 8,
	6, 5, 4, 4, 4, 4, 4, 7, 4, 4,
	6, 6, 6, 8, 6, 6, 4, 4, 3, 4,
	6, 6, 4, 4, 6, 4, 6, 4, 4, 4,
	4, 4, 4, 6, 4, 6, 4, 4, 4, 6,
	4, 6, 4, 4, 6, 4, 6, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 4, 4, 6, 4,
	6, 4, 8, 6, 4, 4, 6, 4, 6, 8,
	4, 6, 8, 4, 4, 6, 8, 6, 4, 6,
	6, 8, 10, 7, 8, 8, 9, 4, 4, 4,
	4, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 4, 4, 4, 4, 4, 4, 6, 4, 6,
	5, 9, 6, 9, 8, 6, 8, 8, 8, 6,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	6, 8, 10, 12, 14, 6, 8, 8, 10, 12,
	14, 6, 8, 10, 12, 6, 8, 4, 4, 3,
	4, 6, 6, 4, 6, 4, 6, 8, 0, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 0, 2, 3, 4, 4, 4, 4, 4,
	0, 3, 4, 7, 3, 1, 1, 1, 0, 5,
	5, 2, 3, 1, 2, 2, 1, 2, 1, 2,
	2, 1, 2, 2, 1, 1, 0, 1, 0, 1,
	0, 2, 1, 2, 4, 0, 2, 1, 1, 3,
	5, 1, 1, 1, 2, 2, 0, 3, 0, 2,
	2, 1, 3, 0, 1, 0, 1, 3, 1, 3,
	2, 0, 1, 1, 0, 1, 2, 4, 4, 0,
	2, 2, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 0, 3, 3, 3, 0, 3, 1, 1,
	0, 4, 0, 1, 1, 0, 3, 1, 3, 2,
	1, 1, 0, 1, 2, 4, 9, 3, 5, 0,
	3, 3, 0, 1, 0, 2, 2, 0, 2, 2,
	2, 0, 2, 1, 2, 3, 3, 0, 2, 1,
	2, 3, 4, 3, 0, 1, 2, 1, 5, 4,
	4, 1, 3, 3, 5, 0, 5, 1, 3, 1,
	2, 3, 4, 1, 1, 3, 3, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	0, 3, 0, 1, 0, 1, 1, 5, 0, 1,
	0, 1, 2, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 0, 3, 0, 4, 0,
	3, 0, 3, 0, 3, 0, 3, 0, 3, 0,
	3, 1, 1, 11, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -418, -78, -423, -7, -11, -20, -21, -22, -417,
	-23, -24, -25, -26, -27, -28, -29, -30, -31, -63,
	-66, -64, -65, -68, -69, -70, -71, -72, -14, -17,
	-67, -32, -33, -73, -74, -75, -76, -77, -16, -18,
	-19, -9, -8, -13, 10, 11, -107, 46, -34, 33,
	-39, -49, 226, -50, -40, 227, -51, 229, 228, 266,
	230, 378, 259, 75, 314, 315, 317, 318, 319, 320,
	-108, 674, 264, 265, 232, 37, 34, 35, 38, 236,
	272, 273, 235, -10, -35, 9, -420, 12, 459, 261,
	260, 29, -12, 567, 87, -79, -419, 722, -248, -232,
	23, 34, 30, -231, -227, -125, -232, 21, 19, 8,
	-78, -78, -78, 45, 13, 14, -78, -349, -351, 87,
	159, 87, -78, -56, -55, -53, -52, -54, -57, 32,
	-46, -47, -373, -45, -42, 231, 228, 276, 123, 124,
	266, 267, 268, 230, 250, 265, 269, 264, 285, -41,
	82, 34, 567, 570, -356, 227, 233, 234, 229, 460,
	126, 125, 76, -353, 373, 601, 692, -57, 694, 101,
	104, 693, 45, 240, 695, 696, 697, 608, 698, 249,
	699, 700, 701, 702, 708, 649, 709, 710, 711, 127,
	8, -78, -300, -296, 91, -289, 564, 252, 599, 422,
	600, 301, 82, 42, 573, 370, 373, 601, 489, 692,
	379, 314, 330, 324, 494, 495, 496, 353, 345, 565,
	602, 574, 304, 253, 289, 686, 343, 135, 694, 308,
	603, 267, 380, 381, 604, 382, 101, 317, 419, 707,
	307, 605, 705, 104, 693, 322, 80, 488, 52, 689,
	45, 262, 427, 428, 341, 235, 337, 695, 290, 606,
	576, 283, 126, 123, 714, 37, 333, 51, 31, 704,
	125, 50, 696, 150, 607, 697, 608, 384, 360, 680,
	49, 385, 268, 609, 85, 273, 569, 311, 688, 386,
	508, 334, 387, 300, 703, 232, 610, 669, 661, 662,
	388, 389, 681, 365, 361, 366, 510, 611, 411, 493,
	390, 665, 666, 721, 53, 612, 613, 682, 124, 614,
	79, 698, 81, 328, 329, 615, 298, 251, 513, 514,
	413, 357, 471, 478, 479, 111, 112, 474, 113, 480,
	114, 481, 482, 483, 472, 115, 108, 473, 484, 485,
	358, 359, 116, 486, 110, 109, 475, 477, 117, 487,
	249, 36, 391, 566, 302, 59, 306, 277, 414, 47,
	363, 718, 46, 676, 515, 616, 679, 356, 352, 468,
	54, 617, 618, 619, 620, 490, 699, 355, 327, 351,
	713, 4, 295, 491, 700, 63, 234, 368, 367, 369,
	284, 410, 348, 621, 622, 623, 256, 83, 624, 338,
	22, 625, 626, 392, 291, 627, 57, 628, 629, 417,
	265, 630, 55, 701, 40, 631, 270, 715, 702, 632,
	633, 634, 675, 635, 272, 636, 394, 637, 663, 664,
	393, 362, 364, 516, 279, 395, 378, 237, 568, 638,
	312, 332, 269, 706, 639, 257, 504, 505, 506, 507,
	687, 512, 511, 271, 276, 264, 418, 258, 640, 641,
	642, 643, 644, 305, 660, 645, 646, 318, 708, 469,
	44, 647, 648, 649, 650, 651, 299, 294, 412, 421,
	62, 84, 375, 652, 653, 685, 326, 323, 292, 654,
	315, 56, 709, 710, 711, 286, 712, 497, 498, 499,
	500, 10, 550, 533, 561, 534, 551, 535, 544, 536,
	552, 560, 562, 517, 525, 518, 526, 556, 539, 553,
	545, 538, 537, 559, 542, 546, 519, 527, 557, 543,
	520, 528, 521, 529, 522, 530, 555, 554, 547, 558,
	523, 531, 549, 524, 532, 548, 540, 541, 430, 719,
	720, 492, 397, 127, 296, 297, 48, 349, 278, 655,
	309, 656, 339, 340, 354, 325, 350, 672, 316, 670,
	280, 398, 470, 266, 657, 420, 293, 371, 376, 310,
	572, 509, 285, 399, 684, 571, 501, 502, 347, 344,
	287, 503, 658, 674, 400, 241, 281, 282, 659, 671,
	401, 402, 303, 403, 404, 405, 406, 407, 409, 313,
	408, 673, 667, 668, 288, 458, 570, 321, 342, 377,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 467, 239,
	-78, 239, -186, -296, 239, 178, -268, 381, -286, 383,
	396, 391, 401, 389, -277, 392, 394, 279, -397, 411,
	239, 398, 226, 384, 393, 402, 403, 303, 409, 404,
	313, 408, 288, 405, 406, 407, -380, 178, 697, 712,
	135, 346, 388, 386, 412, 676, 91, -302, 91, 92,
	93, -289, 316, -304, 321, -290, -380, -289, 319, -78,
	-78, -306, -306, -127, 676, 678, -205, -142, 143, -155,
	-257, -158, 92, -147, -150, -199, -200, -201, -202, -156,
	-215, -255, 167, 168, 175, 144, -211, -159, 27, 563,
	461, 460, 178, 32, 221, 69, 70, 463, 146, 58,
	12, 435, 436, -157, 425, 426, 437, 431, 432, 488,
	490, 491, 492, 489, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 493, 465, 466, 118, 467, 108,
	110, 109, 468, 469, 470, 343, 515, 516, 510, 513,
	514, 512, 511, 358, 359, 471, 533, 534, 538, 537,
	535, 536, 539, 542, 543, 544, 545, 546, 547, 549,
	548, 540, 541, 518, 517, 519, 520, 521, 522, 523,
	524, 526, 525, 527, 528, 529, 530, 531, 532, 550,
	551, 552, 553, 554, 556, 555, 560, 559, 557, 558,
	562, 561, 472, 473, 111, 112, 113, 114, 115, 116,
	117, 474, 477, 475, 476, 478, 479, 480, 485, 486,
	481, 482, 483, 484, 487, 369, 367, 368, 364, 363,
	362, -88, -100, 590, 589, -101, 422, 427, 428, 430,
	-148, -149, -161, -162, -290, -296, 244, 424, 238, 173,
	459, -151, -145, -213, 107, 93, -8, -209, 423, 433,
	434, 438, 429, 439, 575, 577, 593, 594, 596, 580,
	585, 584, 587, 504, 505, 506, 507, 508, 509, 661,
	662, 663, 664, 665, 666, 667, 668, -380, -289, 91,
	-153, -152, -195, 94, 99, 102, 103, 105, -403, 262,
	339, 340, 119, -420, 690, 90, 95, 96, 97, 98,
	120, 121, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 397, 397, -186, -78, -78, -78,
	-78, -225, -125, -227, -10, -8, -420, 9, -78, -8,
	-9, -13, -35, -37, 595, -36, -296, 100, -232, -248,
	13, 162, 43, 51, -230, -231, -12, -8, -142, 20,
	24, 25, -130, 169, -142, -296, -130, -275, 243, -306,
	-416, 676, -78, -78, -264, -309, 316, -266, 412, 676,
	411, -256, -269, 91, -255, -268, 410, 92, -350, 159,
	-336, -340, -290, 254, -366, 250, -186, -359, -358, -290,
	-420, -126, -285, 240, 248, 247, 136, -384, 139, 296,
	424, 238, -52, -53, -54, -268, 177, 696, -109, 271,
	275, 88, 88, -340, -339, -338, -385, 275, 254, -365,
	-357, 246, 255, -346, 247, 248, -341, 240, 137, -385,
	-341, 245, 255, 250, 254, 275, 275, 127, 275, 127,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 270,
	-347, 151, -347, 571, 571, -353, -385, 250, 240, -385,
	-385, 246, -287, -341, 242, 26, 242, 36, 36, -347,
	-347, -347, -268, 177, -347, -347, -347, -347, 283, 283,
	-347, -347, -347, -347, -347, -347, -347, -347, -347, -347,
	-347, -347, -347, -347, -347, -347, -347, 239, -384, -134,
	408, 303, 82, -55, 285, -38, -186, -285, 240, 241,
	-384, 272, -186, 222, -186, 679, -279, 159, 16, -279,
	-276, 397, 395, 382, 387, -279, -279, -279, -279, 286,
	380, -342, 240, 36, 251, 397, 286, 380, 286, 287,
	286, 287, 390, 400, 286, -301, 15, 162, 424, 385,
	389, 279, 239, 280, 241, 399, 287, -301, 90, -280,
	159, 286, 397, 282, -279, -279, -307, -420, -292, -290,
	-288, 231, 24, 142, 26, 28, 145, 178, 130, 20,
	146, 38, 233, 346, 250, 177, 246, 460, 226, 73,
	575, 425, 432, 423, 431, 435, 462, 463, 424, 383,
	32, 14, 577, 29, 260, 25, 39, 171, 228, 149,
	578, 263, 27, 261, 118, 121, 580, 23, 76, 255,
	15, 248, 41, 17, 581, 582, 18, 244, 243, 162,
	240, 71, 12, 221, 30, 158, 67, 583, 137, 584,
	585, 586, 587, 131, 69, 159, 21, 716, 433, 434,
	34, 677, 563, 274, 173, 74, 60, 678, 143, 429,
	589, 590, 119, 591, 122, 77, 683, 139, 19, 72,
	43, 592, 275, 593, 245, 717, 594, 415, 595, 160,
	229, 459, 70, 161, 690, 596, 691, 238, 396, 9,
	464, 33, 259, 247, 129, 68, 439, 597, 239, 148,
	465, 466, 242, 132, 120, 8, 136, 35, 13, 75,
	78, 436, 437, 438, 58, 128, 567, 147, 16, 598,
	416, 141, -380, 679, -307, -307, 33, 92, -406, -407,
	-408, 567, 415, 242, -290, -186, -84, 669, 230, -85,
	675, 24, 237, -132, 397, -120, 178, 697, 680, 681,
	682, 679, 394, 687, 685, 683, 286, 684, 88, 139,
	141, 142, 4, -142, 158, -196, 151, 152, 153, 154,
	155, 156, 157, 163, 162, 143, 145, 159, -241, 140,
	164, 165, 166, 167, 168, 169, 170, 172, 171, 173,
	174, 160, 161, 177, 224, 225, -150, -150, -150, -150,
	-211, -217, -216, -420, -213, -380, -289, -296, -420, -420,
	-150, -274, -420, -147, -420, -420, -420, -420, -220, -142,
	-420, -420, -424, -420, -424, -424, -424, -325, -420, -325,
	-325, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, 222, -420, -420, -420, -420, -420, -325,
	-325, -325, -325, -325, -325, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, 103,
	99, 102, 94, -215, 105, 90, 90, 90, 90, -8,
	-9, -205, -420, -394, -395, -189, -186, -420, 303, -290,
	-290, 272, -230, -12, -8, -225, -231, -227, -8, -78,
	-118, -131, 64, 65, -133, 25, 39, 68, 66, 24,
	-421, 89, -421, -248, -421, 88, -37, -251, 87, 62,
	44, 90, 90, 88, 22, -226, -228, -142, 15, -294,
	4, -293, 26, -290, 90, 222, 15, -187, 30, -186,
	588, -275, -275, 88, 91, 316, -265, -267, 413, 415,
	151, -295, -290, 90, 32, 89, 88, -186, -314, -317,
	-319, -318, -320, -315, -316, 343, 344, 178, 347, 349,
	350, 351, 352, 353, 354, 355, 356, 357, 360, 33,
	262, 339, 340, 341, 342, 361, 362, 363, 364, 366,
	367, 368, 369, 324, 345, 565, 325, 326, 327, 328,
	329, 330, 332, 333, 336, 334, 335, 337, 338, -381,
	-380, 87, 89, 88, -321, 87, -142, -134, 239, -380,
	240, 240, 240, -78, 459, -347, -347, -347, 270, 20,
	-45, -42, -373, 19, -41, -42, 231, 123, 124, 228,
	87, -336, 87, -345, -381, -380, 87, 137, 245, 136,
	-344, -341, -344, -345, -380, -213, -380, 137, 137, -380,
	-380, -261, -290, -261, -261, 24, -261, 24, -261, 24,
	96, -290, -261, 24, -261, 24, -261, 24, -261, 24,
	-261, 24, 32, 79, 80, 81, 32, 83, 84, 85,
	-213, -380, -380, -213, -336, -213, -186, -380, -268, 96,
	96, 96, -347, -347, 96, 90, 90, 90, -347, -347,
	96, 90, -298, -296, 90, 90, -386, 256, 300, 302,
	96, 96, 96, 96, 32, 90, -387, 32, 704, 703,
	705, 706, 707, 90, 96, 32, 96, 32, 96, -290,
	87, -186, -140, 290, 226, 228, 231, 77, 90, 306,
	307, 304, 309, 310, 151, 45, 88, 242, 239, -380,
	-281, 244, -281, -290, -297, -296, -288, 242, 379, 90,
	-142, -343, 15, 162, -301, -301, -279, -186, -343, -301,
	-279, -186, -279, -279, -279, -279, -301, -301, -301, -279,
	-296, -296, -186, -186, -186, -186, -186, -186, -186, -307,
	-280, -279, 679, 90, -273, 15, 77, -307, -307, 88,
	322, 416, 417, -305, 319, -80, -290, 90, -15, -11,
	-23, -22, -24, 151, -15, 88, 567, -179, -186, 679,
	679, 679, 679, 679, 679, -142, -142, -142, -142, 591,
	-203, 119, 143, 120, 121, -158, -142, -204, -209, -211,
	106, 162, 145, 159, -241, -147, -150, -147, -147, -147,
	-147, -147, -147, 221, -147, 221, -147, -147, -147, -147,
	-147, -147, -308, -290, 90, 178, -154, -153, 105, -403,
	-154, 564, 88, -216, 222, -142, -142, -380, -117, 441,
	442, 443, 444, 446, 447, 448, 451, 452, 456, 457,
	440, 458, 445, 450, 453, 454, 455, 449, 342, -142,
	-128, -130, -128, -142, -218, -219, 147, -213, -142, -421,
	-421, 96, 169, -124, 25, 39, -124, -124, -124, -124,
	-142, -142, -142, -142, -142, -142, -142, -142, -142, -142,
	-124, -290, -290, -117, -142, -142, -142, -142, -142, -142,
	-86, -142, 130, 131, 132, -205, -142, -147, -142, -142,
	-142, -421, -142, -142, -142, -206, -205, -142, -142, -142,
	-142, -142, -142, -142, -142, -142, -142, -142, -142, -142,
	-142, -142, -142, -142, -142, -142, -142, -142, -142, -142,
	-142, -142, -142, -142, -142, -142, -142, -142, -142, -142,
	-142, -142, -142, -142, -142, -142, -142, -142, -142, -142,
	-142, -142, -142, -379, -378, -377, -142, -142, -142, -142,
	-142, -142, -142, -142, -142, -142, -142, -142, -142, -142,
	-142, -142, -142, -142, -142, -142, -142, -142, -142, -205,
	-205, -205, -205, -205, -142, -421, -142, -160, -145, 96,
	-257, 105, 92, -142, -142, -142, -142, -142, -142, -129,
	-128, -292, -297, -288, -289, -128, -129, -129, -128, -128,
	-142, -142, -142, -142, -142, -142, -142, -142, -421, -142,
	-142, -142, -142, -142, -248, -421, -205, 88, -396, 415,
	416, 677, -299, 275, -298, 26, -206, 90, 15, -259,
	78, -290, -230, -230, 64, 65, 60, -128, -133, -421,
	-36, 26, -250, -290, 63, 90, -326, -268, 370, 371,
	178, -142, -142, 88, -229, 28, 29, -186, -293, 169,
	-297, -186, -260, 275, -186, 90, -164, -166, -167, -168,
	-189, -212, -420, -169, -8, 586, 583, 15, -179, -180,
	-188, -296, -266, -309, -265, 88, 414, 416, 417, 77,
	122, -142, -327, 177, -355, -354, -353, -336, -338, -339,
	-340, 89, -327, -332, 376, 375, -321, -321, -321, -321,
	-321, -326, -326, -326, -326, 87, 87, -321, -321, -321,
	-321, -329, 87, -329, -329, -330, -329, 87, -330, -331,
	87, -331, -366, -142, -363, -362, -360, -361, 249, 101,
	659, 615, 567, 608, 649, 78, -358, -229, 96, -421,
	-140, -282, 244, -364, -361, -380, -380, -380, -282, 91,
	90, 91, 90, 91, 90, -110, -59, -1, 716, 717,
	718, 88, 20, -337, -336, -58, 300, -369, -370, 275,
	-365, -359, -345, 137, -344, -345, -345, -380, 88, 30,
	127, 127, 127, 127, 567, 228, 33, -283, 607, 143,
	659, 615, -336, -58, 242, 242, -308, -308, -308, 90,
	90, -278, 712, -179, -136, 292, 151, 281, 281, 239,
	239, 294, -186, 305, 308, 306, 307, 304, 309, 310,
	24, 24, 24, 24, 24, 293, 295, 297, 283, -186,
	-186, -281, 77, -181, -186, 27, -296, 90, 90, -186,
	-279, -279, -186, -279, -279, -186, -408, 323, -290, 357,
	670, 671, 673, 672, -120, 415, 88, 567, 23, -121,
	23, -420, 119, 120, 121, -204, -147, -150, -147, 142,
	263, -147, -147, -420, -213, -421, -292, 26, 88, 78,
	-421, 167, 88, 88, -421, -421, 88, 15, -221, -219,
	149, -142, -421, 88, -421, -421, -205, -142, -142, -142,
	-142, -421, -421, -421, -421, -421, -421, -421, -421, -421,
	-421, -205, 88, 88, 15, -312, 26, -421, -421, -421,
	-421, -421, -220, -421, 15, -421, 78, 88, 162, 88,
	-421, -421, -421, 88, 88, -421, -421, 88, -421, 88,
	-421, -421, -421, -421, -421, -421, 88, -421, 88, -421,
	-421, -421, 88, -421, 88, -421, -421, 88, -421, 88,
	-421, 88, -421, 88, -421, 88, -421, 88, -421, 88,
	-421, 88, -421, 88, -421, 88, -421, 88, -421, 88,
	-421, 88, -421, 88, -421, 88, -421, 88, -421, 88,
	-421, 88, -421, -421, -421, 88, -421, 88, -421, 88,
	-421, -421, 88, -421, 88, -421, 88, -421, 88, 88,
	-421, 88, 88, 88, -421, 88, 88, 88, 88, -421,
	-421, -421, -421, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, -421, -421, -421, -421, -421, -421, 88,
	-93, 592, -421, -421, 88, -421, 88, 88, 88, 88,
	88, -421, -420, 222, -421, -421, -421, -421, -421, 88,
	88, 88, 88, 88, 88, -421, -421, -421, 88, 88,
	-421, 88, -421, 88, -421, -395, 676, 416, -193, -192,
	-190, 75, 243, 76, -420, -298, -421, -154, -257, -258,
	-257, -198, -290, 96, 105, -232, -163, -165, 15, -133,
	-211, 89, 88, -326, -236, -242, -276, -290, 90, 178,
	-328, 178, -328, 370, 371, -228, 222, -194, 16, -197,
	33, 58, -11, -420, -420, 30, 33, 88, -182, -184,
	-183, -185, 67, 71, 73, 68, 69, 70, 74, -303,
	26, -8, -164, -8, -420, -186, -179, -422, 15, 78,
	-422, 88, 222, -267, -270, 418, 415, 421, -380, 90,
	-109, 88, -353, -340, -233, -137, 41, -333, 377, -326,
	574, -326, -335, 90, -335, 96, 96, 96, 89, -48,
	-43, -44, 34, 82, -360, -347, 90, 40, -347, -347,
	-290, 89, -229, -136, -186, 143, 77, -364, -364, -364,
	-296, -2, 715, 721, 137, 87, 382, 19, -250, 88,
	89, -214, 301, 89, -111, -290, 89, 87, -345, -345,
	-290, -420, 239, 32, 32, 659, 615, 607, -58, -214,
	-213, -380, -327, 714, 713, 89, 241, 299, -141, 435,
	-138, 90, 91, -186, -186, -186, -186, -186, 231, 228,
	405, -404, 311, -404, 284, 242, -179, -186, 88, -83,
	258, 253, -301, -301, 34, -186, 415, 688, 686, -142,
	142, 263, -158, -150, -117, -117, -147, -310, 178, 343,
	262, 341, 337, 357, 348, 375, 339, 376, 334, 333,
	332, -310, -308, -147, -205, -130, -142, -142, 150, -142,
	148, -142, -421, -421, -421, -421, -421, -225, -142, -142,
	-142, -421, 178, 343, 15, -142, -308, -142, -142, -142,
	-142, -142, -142, -142, -142, -142, -142, -142, -142, -142,
	-142, -142, -142, -142, -142, -142, -142, -142, -142, -142,
	-142, -142, -142, -142, -142, -142, -142, -142, -142, -142,
	-142, -142, -377, -142, -205, -142, -205, -142, -142, -142,
	-142, -142, -378, -378, -378, -378, -378, -205, -205, -205,
	-205, -142, -420, -290, -96, -95, -94, 642, 243, -93,
	-160, -96, -160, 221, -142, 221, 221, 221, -142, -129,
	-292, -142, -142, -142, -142, -142, -142, -142, -142, -142,
	-142, -190, -341, -341, -341, -261, 88, -272, 23, 15,
	58, 58, -163, -194, -164, -133, -290, -239, 669, -245,
	47, -243, -244, 48, -240, 49, 57, -328, -328, 169,
	-230, -142, -262, 77, -263, -271, -213, -208, -210, -209,
	-420, -249, -421, -290, -261, 239, -263, -166, -167, -167,
	-166, -167, 67, 67, 67, 72, 67, 72, 67, -183,
	-296, -421, -142, -299, 78, -164, -164, -188, -296, 169,
	415, 419, 420, -353, -402, 119, 143, 32, 77, 373,
	101, -400, 177, 604, 654, 659, 615, 608, 649, -401,
	245, 136, 137, 257, 26, 42, 89, 88, 89, 88,
	89, 89, 88, -284, -283, -44, -43, -347, -347, 96,
	-380, 90, 90, 241, 27, -186, 77, 77, 77, -112,
	719, 96, 87, -3, 82, -142, 87, 20, -336, -213,
	-371, -322, -372, -323, -324, -5, -6, -348, -115, 58,
	101, -62, 45, 240, 699, 700, 127, -420, 712, -363,
	-250, -367, -369, -186, -144, -420, -143, -145, -151, 167,
	168, 262, 339, 340, -214, -186, -135, 290, 298, 87,
	-139, 92, -383, 78, 281, 373, 281, 90, -405, 312,
	90, -405, -186, -83, -48, -186, -279, -279, 34, -380,
	-421, -158, -150, -123, 162, 567, -313, 573, -321, -321,
	-321, -331, -321, 329, -321, 329, -321, -421, -421, -421,
	88, -421, 23, -421, -142, 88, -119, 464, 88, 88,
	-421, 87, 87, -142, -421, -421, -421, 88, -421, -421,
	-421, -421, -421, -421, -421, -421, -421, -421, -421, -421,
	-421, 88, -421, 88, -421, 88, -421, 88, -421, 88,
	-421, 88, -421, 88, -421, 88, -421, 88, -421, 88,
	-421, 88, -421, 88, -421, 88, -421, 88, -421, 88,
	-421, 88, -421, -421, 88, -421, -421, -421, 88, -421,
	88, -421, 88, -421, -421, -421, 88, -311, 660, -421,
	-421, -421, -421, -421, -421, -421, -421, -421, -421, -421,
	-92, -291, -290, -93, 624, 624, -421, -93, -222, 88,
	-147, -421, -147, -147, -147, -421, -421, -421, 88, -421,
	88, 88, -421, 88, -421, 88, -421, -421, -421, -421,
	88, -191, 23, -191, -191, -421, -257, -186, -194, -223,
	17, -236, 52, 349, -247, -246, 56, 48, -244, 20,
	50, 20, 31, -262, 88, 151, 88, -421, -421, 88,
	58, 222, -421, -186, -194, -177, -176, 77, 78, -178,
	77, -176, 67, 67, -251, 88, -260, -164, -194, -194,
	222, 119, -420, -146, -157, -144, 13, 90, 90, -380,
	-399, 703, 704, 32, 96, -347, -347, 137, 137, -186,
	87, -326, 90, -326, 96, 96, 32, 83, 84, 85,
	32, 79, 80, 81, -186, -186, -186, -186, -368, 87,
	20, -142, 87, 151, 89, -250, -250, 277, 162, -347,
	697, 283, 283, -347, -347, -347, -114, -113, 719, 89,
	-421, 88, -334, 567, 570, -142, -152, -152, -251, 89,
	-376, 567, -382, -290, -290, -290, -290, 96, 98, -421,
	565, 74, 568, -421, -326, -142, -142, -142, -230, 90,
	-142, -142, 96, 96, -421, -142, -142, -142, -142, -142,
	-142, -142, -142, -142, -142, -142, -142, -142, -142, -142,
	-142, -142, -142, -142, -142, -205, -142, -421, -174, -173,
	-175, 680, 119, 32, -310, -421, -207, 275, -99, -98,
	-97, 15, -421, -142, -117, -117, -117, -117, -142, -142,
	-142, -142, -142, -142, -420, 67, 19, 17, -420, -420,
	-299, -223, -224, 18, 20, -237, 54, -235, 53, -235,
	-246, 20, 20, 90, 20, 90, 137, -271, -142, -210,
	58, -11, -290, -208, -290, -410, -425, 387, 382, -225,
	-142, 87, -142, -154, -194, -194, -142, -200, 488, 490,
	491, 492, 489, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 493, 467, 108, 110, 109, 468, 469,
	470, 343, 515, 516, 510, 513, 514, 512, 511, 358,
	359, 471, 533, 534, 538, 537, 535, 536, 539, 542,
	543, 544, 545, 546, 547, 549, 548, 540, 541, 518,
	517, 519, 520, 521, 522, 523, 524, 526, 525, 527,
	528, 529, 530, 531, 532, 550, 551, 552, 553, 554,
	556, 555, 560, 559, 557, 558, 562, 561, 472, 473,
	111, 112, 113, 114, 115, 116, 117, 474, 477, 475,
	478, 479, 480, 485, 486, 481, 482, 483, 484, 487,
	369, 367, 368, 364, 363, 362, 422, 427, 428, 430,
	504, 505, 506, 507, 508, 509, 661, 662, 663, 664,
	665, 666, 667, 668, 90, 90, 87, -142, 89, 89,
	-251, -367, -59, 89, -252, -250, 96, 89, 278, -209,
	-420, 90, -347, -347, -347, 96, 96, -298, -421, 88,
	-290, -401, -369, 571, 571, -421, 26, -375, -374, -292,
	87, 78, 63, 566, 569, -421, -421, 88, -421, -421,
	-421, 89, 89, -421, -421, -421, -421, -421, -421, -421,
	-421, -421, -421, -421, -421, -421, -421, -421, -421, -421,
	-421, -421, -421, -421, -421, 88, -421, -173, -175, -421,
	77, -154, -225, 20, -96, 300, 302, -96, -421, -421,
	-421, -421, -421, 88, -421, -421, 88, -421, 88, -421,
	-421, -253, -421, -290, 245, 20, 20, -253, -253, -193,
	-224, -106, -105, -104, 598, -142, -205, -238, 55, 77,
	122, 90, 90, 90, 13, -208, 222, -409, 47, -413,
	48, -230, -250, -171, 382, -225, -421, -250, 89, 26,
	89, 721, 137, 89, -209, -122, -420, 274, -298, 90,
	90, -113, -116, -11, 88, 151, -250, -186, 63, -142,
	-205, -421, 77, 578, 680, -91, -90, -87, 691, 717,
	-205, -93, -93, -142, -142, -142, 88, -421, -421, -421,
	-106, 88, -103, -102, -290, 77, 122, -263, -290, -254,
	-420, -414, 56, -412, 50, 20, 89, -421, -420, -230,
	89, -234, -11, 87, -3, 274, -322, -372, -323, -324,
	-5, -6, -348, -81, 567, -374, -352, -296, -292, 90,
	96, 89, 567, -421, -421, -89, 145, 689, 657, -152,
	221, -421, 88, -421, 88, -421, 88, -290, 245, -104,
	88, 26, -249, -415, 48, 20, -411, 49, 20, 90,
	-299, -172, -170, -290, 621, -392, -391, 563, -402, -398,
	119, 143, 101, -400, 659, 615, 128, 129, -81, -142,
	87, -421, -82, 289, 676, 222, -383, 568, -89, 690,
	635, 610, 635, 610, -147, -142, -142, -142, -102, -420,
	-421, 20, 90, 20, 90, -421, 88, 23, -314, -61,
	632, -389, -390, 77, -393, 388, 631, 652, 119, 90,
	89, -250, 250, -297, -376, 569, 142, -117, -421, 88,
	-421, 88, -421, -92, 90, 90, -170, 628, -327, -154,
	-390, 77, -389, 77, 14, 13, -4, 720, 89, 291,
	-89, 635, 610, -142, -142, -421, -60, 27, -171, -388,
	258, 253, 256, 33, -388, 96, -4, -421, -421, 632,
	252, 32, 119, -154, -174, -173, -173,
}

var yyDef = [...]int{
	877, -2, -2, 879, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	39, 72, 74, 75, 877, 877, 877, 0, 0, 877,
	0, 0, 877, -2, -2, 877, 1589, 0, 877, 0,
	0, 0, -2, 792, 798, 0, 807, -2, 0, 0,
	877, 877, 2220, 2220, 872, 0, 0, 0, 0, 877,
	877, 877, 877, 1455, 52, 877, 0, 87, 88, 827,
	828, 829, 67, 0, 2218, 878, 1, 3, 73, 77,
	0, 0, 0, 60, 1464, 0, 80, 0, 0, 881,
	0, 0, 1572, -2, 877, 877, 0, 128, 129, 0,
	0, 0, -2, 132, -2, 161, 162, 163, 0, 168,
	603, 526, 578, 524, 563, -2, 512, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 529,
	401, 401, 0, 0, -2, 512, 512, 512, 1574, 0,
	0, 0, 560, 463, 401, 401, 401, 0, 401, 401,
	401, 401, 0, 0, 401, 401, 401, 401, 401, 401,
	401, 401, 401, 401, 401, 401, 401, 401, 401, 401,
	401, 1482, 167, 1590, 1587, 1588, 1765, 1766, 1767, 1768,
	1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778,
	1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788,
	1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798,
	1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808,
	1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818,
	1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828,
	1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838,
	1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848,
	1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858,
	1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868,
	1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878,
	1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888,
	1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898,
	1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908,
	1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918,
	1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928,
	1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938,
	1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948,
	1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958,
	1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968,
	1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978,
	1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988,
	1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998,
	1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008,
	2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018,
	2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028,
	2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038,
	2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048,
	2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058,
	2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068,
	2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078,
	2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088,
	2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098,
	2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108,
	2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118,
	2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128,
	2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138,
	2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148,
	2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158,
	2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168,
	2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178,
	2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188,
	2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198,
	2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208,
	2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 0,
	1566, 0, 716, 980, 0, 0, 781, 781, 0, 781,
	781, 781, 781, 0, 0, 0, 730, 0, 0, 0,
	0, 778, 0, 746, 747, 0, 778, 0, 753, 784,
	0, 0, 759, 781, 781, 762, 2221, 0, 2221, 2221,
	1557, 0, 775, 773, 787, 788, 42, 791, 794, 795,
	796, 797, 800, 0, 811, 814, 1583, 1584, 0, 816,
	823, 840, 841, 0, 873, 874, 47, 1130, 0, 1002,
	0, 1008, -2, 1019, 1036, 1037, 1038, 1039, 1040, 1042,
	1043, 1044, 0, 0, 0, 0, 1049, 1050, 0, 0,
	0, 0, 0, 1111, 0, 0, 0, 0, 1428, 0,
	0, 1390, 1390, 1145, 1390, 1390, 1392, 1392, 1392, 1816,
	1954, 1962, 2130, 1777, 1783, 1784, 1785, 2076, 2077, 2078,
	2079, 2165, 2166, 2170, 1878, 0, 0, 0, 2217, 1915,
	1923, 1924, 1948, 2048, 2151, 1795, 1943, 2012, 1875, 1897,
	1898, 2030, 2031, 1919, 1920, 1901, 2082, 2084, 2100, 2101,
	2086, 2088, 2097, 2103, 2108, 2087, 2099, 2104, 2117, 2121,
	2124, 2125, 2126, 2094, 2092, 2105, 2109, 2111, 2113, 2119,
	2122, 2095, 2093, 2106, 2110, 2112, 2114, 2120, 2123, 2081,
	2085, 2089, 2098, 2116, 2096, 2115, 2090, 2102, 2107, 2118,
	2091, 2083, 1913, 1916, 1904, 1905, 1907, 1909, 1914, 1921,
	1927, 1906, 1926, 1925, 0, 1902, 1903, 1908, 1918, 1922,
	1910, 1911, 1912, 1917, 1928, 1968, 1967, 1966, 2011, 1939,
	2010, 0, 0, 0, 0, 0, 1768, 1821, 1822, 2127,
	1330, 1331, 1332, 1333, 0, 0, 0, 0, 0, 0,
	0, 293, 294, 1441, 1442, 46, 1129, 1553, 1392, 1392,
	1392, 1392, 1392, 1392, 1071, 1072, 1073, 1074, 1075, 1099,
	1100, 1106, 1107, 2025, 2026, 2027, 2028, 1859, 2160, 1867,
	1868, 2007, 2008, 1880, 1881, 2191, 2192, -2, -2, -2,
	234, 235, 236, 237, 238, 239, 240, 241, 0, 1820,
	2141, 2142, 230, 0, 0, 298, 299, 295, 296, 297,
	1113, 1114, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274, 275, 276, 277, 278,
	279, 280, 281, 282, 283, 284, 285, 286, 287, 288,
	289, 290, 291, 292, 0, 850, 0, 0, 0, 0,
	0, 1464, 0, 1456, 1455, 65, 0, 877, -2, 0,
	0, 0, 0, 49, 0, 54, 937, 880, 79, 78,
	1504, 0, 0, 0, 61, 1465, 69, 71, 1466, 0,
	882, 883, 0, 913, 917, 0, 0, 0, 1573, 48,
	0, 1594, 1572, 1572, 104, 0, 0, 105, 125, 126,
	127, 0, 0, 111, 112, 1559, 1560, 45, 0, 0,
	179, 180, 0, 43, 428, 0, 175, 0, 421, 360,
	0, 1482, 0, 0, 0, 0, 0, 877, 0, 1567,
	156, 157, 164, 165, 166, 401, 401, 401, 575, 0,
	0, 167, 167, 533, 534, 535, 0, 0, -2, 426,
	0, 513, 0, 0, 415, 415, 419, 417, 418, 0,
	0, 0, 0, 0, 0, 0, 0, 552, 0, 553,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 664,
	0, 402, 0, 573, 574, 464, 0, 0, 0, 0,
	0, 0, 0, 0, 1575, 1576, 0, 550, 551, 0,
	0, 0, 401, 401, 0, 0, 0, 0, 401, 401,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 155, 1495,
	0, 0, 0, -2, 0, 708, 0, 0, 0, 1568,
	1568, 0, 715, 0, 717, 0, 720, 0, 0, 721,
	0, 778, 778, 776, 777, 723, 724, 725, 726, 781,
	0, 0, 410, 411, 412, 778, 781, 0, 781, 781,
	781, 781, 778, 778, 778, 781, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2221, 784, 781, 0, 754,
	0, 755, 756, 757, 760, 761, 763, 2222, 2223, 1585,
	1586, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622,
	1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632,
	1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642,
	1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652,
	1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662,
	1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672,
	1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682,
	1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692,
	1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702,
	1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712,
	1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722,
	1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732,
	1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742,
	1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752,
	1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762,
	1763, 1764, 2221, 2221, 767, 771, 1558, 793, 799, 801,
	802, 0, 0, 812, 815, 834, 51, 1866, 822, 51,
	824, 825, 826, 852, 853, 858, 0, 0, 0, 0,
	864, 865, 866, 0, 0, 869, 870, 871, 0, 0,
	0, 0, 0, 1000, 0, 0, 1119, 1120, 1121, 1122,
	1123, 1124, 1125, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1020, 1021, 0, 0, 0, 1045, 1046, 1047, 1048,
	1051, 0, 1062, 0, 1064, 1437, -2, 0, 0, 0,
	1056, 1057, 0, 0, 0, 0, 0, 0, 0, 1429,
	0, 0, 1143, 0, 1144, 1146, 1147, 1148, 0, 1149,
	1150, 887, 887, 887, 887, 887, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 887, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1578, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 143, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 897, 0, 0, 897, 897, 0, 0, 222,
	223, 224, 225, 226, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	243, 244, 245, 246, 247, 300, 248, 249, 250, 1129,
	0, 0, 0, 842, 843, 0, 963, 1578, 0, 0,
	893, 0, 59, 68, 70, 1464, 63, 1464, 0, 899,
	0, 0, -2, -2, 900, 906, 907, 908, 909, 910,
	56, 2219, 57, 0, 76, 0, 50, 0, 0, 0,
	0, 374, 1507, 0, 0, 1457, 1458, 1461, 0, 914,
	1960, 918, 0, 920, 921, 0, 0, 102, 0, 979,
	0, 0, 0, 0, 113, 0, 115, 116, 0, 0,
	0, 385, 1561, 1562, 1563, -2, 408, 0, 385, 369,
	308, 309, 310, 360, 312, 360, 360, 360, 360, 374,
	374, 374, 374, 343, 344, 345, 346, 347, 0, 0,
	329, 360, 360, 360, 360, 350, 351, 352, 353, 354,
	355, 356, 357, 313, 314, 315, 316, 317, 318, 319,
	320, 321, 362, 362, 362, 362, 362, 366, 366, 0,
	44, 0, 389, 0, 1461, 0, 0, 1495, 1570, 1580,
	0, 0, 0, 1570, 134, 0, 0, 0, 576, 614,
	527, 564, 577, 0, 530, 531, -2, 0, 0, 512,
	0, 514, 0, 409, 0, -2, 0, 419, 0, 415,
	419, 416, 419, 407, 420, 554, 555, 556, 0, 558,
	559, 644, 949, 0, 0, 0, 0, 0, 650, 651,
	652, 0, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 565, 566, 567, 568, 569, 570, 571, 572,
	0, 0, 0, 0, 514, 0, 561, 0, 0, 465,
	466, 467, 0, 0, 470, 471, 472, 473, 0, 0,
	476, 477, 478, 966, 967, 479, 480, 505, 506, 507,
	481, 482, 483, 484, 485, 486, 487, 499, 500, 501,
	502, 503, 504, 488, 489, 490, 491, 492, 493, 496,
	0, 149, 1486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1568, 0,
	0, 0, 0, 896, 981, 1591, 1592, 0, 0, 782,
	783, 0, 413, 414, 781, 781, 727, 768, 0, 781,
	731, 769, 732, 734, 733, 735, 748, 749, 781, 738,
	779, 780, 739, 740, 741, 742, 743, 744, 745, 764,
	750, 751, 752, 785, 0, 789, 790, 765, 766, 0,
	0, 805, 806, 0, 813, 837, 835, 836, 838, 830,
	831, 832, 833, 0, 839, 0, 0, 855, 98, 860,
	861, 862, 863, 875, 868, 1131, 997, 998, 999, 0,
	1001, 1005, 0, 1115, 1117, 1007, 1003, 1009, 1126, 1127,
	1128, 0, 0, 0, 0, 0, 1013, 1017, 1022, 1023,
	1024, 1025, 1026, 0, 1027, 0, 1030, 1031, 1032, 1033,
	1034, 1035, 1041, 1405, 1406, 1407, 1060, 301, 302, 0,
	1061, 0, 0, 0, 0, 0, 0, 0, 0, 1370,
	1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380,
	1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1130,
	0, 911, 0, 0, 1435, 1432, 0, 0, 0, 1391,
	1393, 0, 0, 0, 888, 889, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1408, 0, 0, 0, 0, 0,
	1428, 0, 1066, 1067, 1068, 0, 0, 0, 0, 0,
	0, 1188, 0, 0, 0, 0, 1579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 144, 145, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1334, 1335,
	1336, 1337, 41, 0, 0, 0, 0, 0, 0, 0,
	898, 1439, 0, -2, -2, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1359, 0,
	0, 0, 0, 0, 0, 1551, 0, 0, 845, 846,
	848, 0, 983, 0, 964, 0, 0, 851, 0, 892,
	0, 895, 62, 64, 904, 905, 0, 922, 901, 58,
	53, 0, 0, 941, 1505, 374, 1527, 0, 383, 383,
	380, 1467, 1468, 0, 1460, 1462, 1463, 81, 919, 915,
	0, 995, 0, 0, 978, 0, 0, 925, 927, 928,
	929, 961, 0, 932, 933, 0, 0, 0, 0, 0,
	100, 980, 106, 0, 114, 0, 0, 119, 120, 107,
	108, 109, 110, 0, 603, -2, 460, 181, 183, 184,
	185, 176, -2, 372, 370, 371, 311, 374, 374, 337,
	338, 339, 340, 341, 342, 0, 0, 330, 331, 332,
	333, 322, 0, 323, 324, 325, 364, 0, 326, 327,
	0, 328, 427, 0, 1469, 390, 391, 393, 401, 0,
	396, 397, 0, 401, 401, 0, 422, 423, 0, 1461,
	1486, 0, 0, 0, 1581, 1580, 1580, 1580, 0, 169,
	170, 171, 172, 173, 174, 639, 0, 0, 615, 637,
	638, 167, 0, 0, 177, 516, 515, 0, 671, 0,
	425, 0, 0, 419, 419, 404, 405, 557, 0, 0,
	646, 647, 648, 649, 0, 0, 0, 543, 454, 0,
	544, 545, 514, 516, 0, 0, 385, 468, 469, 474,
	475, 494, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 590, 591, 592, 595, 597, 518, 601,
	594, 596, 598, 518, 602, 1483, 1484, 1485, 0, 0,
	709, 0, 0, 451, 96, 1569, 714, 718, 719, 778,
	737, 770, 778, 729, 736, 758, 803, 804, 809, 817,
	818, 819, 820, 821, 859, 0, 0, 0, 0, 867,
	0, 0, 1006, 1116, 1118, 1010, 0, 1014, 1018, 0,
	0, 0, 0, 0, 1065, 1063, 1439, 0, 0, 0,
	1112, 0, 0, 0, 1134, 1135, 0, 0, 0, 1433,
	0, 0, 1141, 0, 1394, 1151, 0, 0, 0, 0,
	0, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165,
	1166, 1455, 0, 0, 0, 0, 0, 1172, 1173, 1174,
	1175, 1176, 0, 1178, 0, 1179, 0, 0, 0, 0,
	1186, 1187, 1189, 0, 0, 1192, 1193, 0, 1195, 0,
	1197, 1198, 1199, 1200, 1201, 1202, 0, 1204, 0, 1206,
	1207, 1208, 0, 1210, 0, 1212, 1213, 0, 1215, 0,
	1217, 0, 1220, 0, 1223, 0, 1226, 0, 1229, 0,
	1232, 0, 1235, 0, 1238, 0, 1241, 0, 1244, 0,
	1247, 0, 1250, 0, 1253, 0, 1256, 0, 1259, 0,
	1262, 0, 1265, 1266, 1267, 0, 1269, 0, 1271, 0,
	1274, 1275, 0, 1277, 0, 1280, 0, 1283, 0, 0,
	1284, 0, 0, 0, 1288, 0, 0, 0, 0, 1297,
	1298, 1299, 1300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1311, 1312, 1313, 1314, 1315, 1316, 0,
	1318, 0, 1094, 0, 0, 1094, 0, 0, 0, 0,
	0, 1132, 897, 0, 1395, 1396, 1397, 1398, 1399, 0,
	0, 0, 0, 0, 0, 1357, 1358, 1360, 0, 0,
	1363, 0, 1365, 0, 1552, 844, 847, 849, 935, 984,
	985, 0, 0, 0, 0, 965, 1577, 890, 891, 894,
	943, 0, 1443, 0, 0, 922, 995, 923, 0, 902,
	55, 938, 0, 1509, 1508, 1521, 1534, 383, 383, 377,
	378, 384, 379, 381, 382, 1459, 0, 1464, 0, 1545,
	0, 0, 1537, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 968, 0, 0, 971, 0, 0, 0, 0,
	962, 933, 0, 934, 0, -2, 0, 0, 94, 95,
	0, 0, 0, 117, 118, 0, 0, 124, 386, 387,
	158, 167, 462, 182, 435, 0, 0, 307, 373, 334,
	335, 336, 0, 358, 0, 0, 0, 0, 456, 130,
	1473, 1472, 401, 401, 392, 0, 395, 0, 0, 0,
	1582, 361, 424, 0, 148, 0, 0, 0, 0, 0,
	154, 609, 0, 0, 616, 0, 0, 0, 525, 0,
	536, 537, 0, 643, -2, 705, 389, 0, 403, 406,
	950, 0, 0, 538, 0, 541, 542, 455, 516, 547,
	548, 562, 549, 497, 498, 495, 0, 0, 1496, 1497,
	1502, 1500, 1501, 135, 583, 585, 584, 588, 0, 0,
	0, 520, 0, 520, 581, 0, 451, 1469, 0, 713,
	452, 453, 781, 781, 854, 99, 0, 857, 0, 0,
	0, 0, 1011, 1015, 1028, 1029, 1400, 1426, 360, 360,
	1413, 360, 366, 1416, 360, 1418, 360, 1421, 360, 1424,
	1425, 0, 0, 1058, 0, 912, 0, 0, 1140, 1436,
	0, 0, 1152, 1153, 1154, 1155, 1156, 1430, 0, 0,
	0, 1171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 146, 147, 0, 0, 0, 0, 0, 0,
	1368, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1089, 1093, 0, 1095, 1096, 0, 0, 1320,
	0, 0, 1338, 0, 0, 0, 0, 0, 0, 0,
	1440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 986, 991, 991, 991, 0, 0, 0, 1564, 1565,
	1444, 1445, 995, 1446, 924, 903, 942, 1527, 0, 1520,
	0, -2, 1529, 0, 0, 0, 1535, 375, 376, 916,
	82, 996, 85, 0, 1545, 1554, 0, 1536, 1547, 1549,
	0, 0, 0, 1541, 0, 0, 995, 926, 957, 959,
	0, 954, 969, 970, 972, 0, 974, 0, 976, 977,
	937, 931, 0, 102, 0, 995, 995, 101, 0, 982,
	121, 122, 123, 461, 186, 191, 0, 0, 0, 196,
	0, 198, 0, 0, 0, 203, 204, 401, 401, 436,
	0, 304, 306, 0, 0, 189, 374, 0, 374, 0,
	365, 367, 0, 437, 457, 1470, 1471, 0, 0, 394,
	398, 399, 400, 0, 1571, 150, 0, 0, 0, 612,
	0, 640, 0, 0, 0, 0, 0, 0, 178, 517,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 0,
	401, 0, 0, 0, 401, 401, 401, 0, 697, 388,
	0, 0, 668, 665, 539, 0, 228, 229, 231, 0,
	0, 0, 0, 0, 546, 937, 1487, 1488, 1489, 0,
	1499, 1503, 138, 0, 0, 0, 0, 593, 599, 0,
	519, 600, 710, 711, 712, 97, 722, 728, 856, 876,
	1004, 1012, 1016, 0, 0, 0, 0, 1427, 1411, 374,
	1414, 1415, 1417, 1419, 1420, 1422, 1423, 1054, 1055, 1059,
	0, 1137, 0, 1139, 1434, 0, 1464, 0, 0, 0,
	1170, 0, 0, 0, 1181, 1180, 1182, 0, 1184, 1185,
	1190, 1191, 1194, 1196, 1203, 1205, 1209, 1211, 1214, 1216,
	1218, 0, 1221, 0, 1224, 0, 1227, 0, 1230, 0,
	1233, 0, 1236, 0, 1239, 0, 1242, 0, 1245, 0,
	1248, 0, 1251, 0, 1254, 0, 1257, 0, 1260, 0,
	1263, 0, 1268, 1270, 0, 1273, 1276, 1278, 0, 1281,
	0, 1285, 0, 1287, 1289, 1290, 0, 0, 0, 1301,
	1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1317,
	0, 1087, 1090, 1319, 1097, 1098, 1103, 1322, 0, 0,
	0, 1325, 0, 0, 0, 1329, 1133, 1340, 0, 1345,
	0, 0, 1351, 0, 1355, 0, 1361, 1362, 1364, 1366,
	0, 0, 0, 0, 0, 963, 944, 66, 1446, 1448,
	0, 1514, 1512, 1512, 1522, 1523, 0, 0, 1530, 0,
	0, 0, 0, 86, 0, 0, 0, 1550, 0, 0,
	0, 0, 103, 1597, 1455, 951, 958, 0, 0, 952,
	0, 953, 973, 975, 930, 0, 995, 995, 92, 93,
	0, 192, 0, 194, 220, 221, 0, 197, 199, 200,
	201, 207, 208, 209, 202, 0, 0, 303, 305, 0,
	0, 348, 359, 349, 0, 0, 1474, 1475, 1476, 1477,
	1478, 1479, 1480, 1481, 937, 151, 152, 153, 604, 0,
	614, 0, 939, 0, 607, 0, 528, 0, 0, 0,
	401, 401, 401, 0, 0, 0, 0, 682, 0, 0,
	645, 0, 653, 0, 0, 0, 232, 233, 0, 1498,
	582, 0, 136, 137, 0, 0, 587, 521, 522, 1052,
	0, 0, 0, 1053, 1412, 0, 0, 0, 0, 1431,
	0, 0, 0, 0, 1177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1293, 0, 0,
	0, 634, 635, 0, 1369, 1092, 1455, 0, 1094, 1104,
	1105, 0, 1094, 1339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 992, 0, 0, 0, 0,
	983, 1448, 1453, 0, 0, 1517, 0, 1510, 1513, 1511,
	1524, 0, 0, 1531, 0, 1533, 0, 1555, 1556, 1548,
	0, 1540, 1543, 1539, 1542, 1599, 1601, 1611, 1612, 1464,
	955, 0, 960, 0, 1455, 91, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 205, 206, 0, 0, 363, 368,
	0, 0, 0, 605, 0, 940, 617, 608, 0, 695,
	0, 699, 0, 0, 0, 702, 703, 704, 681, 0,
	685, 429, 669, 666, 667, 540, 0, 139, 140, 0,
	0, 0, 1401, 0, 1404, 1136, 1138, 0, 1167, 1168,
	1169, 1409, 1410, 1183, 1219, 1222, 1225, 1228, 1231, 1234,
	1237, 1240, 1243, 1246, 1249, 1252, 1255, 1258, 1261, 1264,
	1272, 1279, 1282, 1286, 1291, 0, 1294, 0, 0, 1295,
	0, 636, 1083, 0, 0, 1101, 1102, 0, 1324, 1326,
	1327, 1328, 1341, 0, 1346, 1347, 0, 1352, 0, 1356,
	1367, 0, 988, 945, 946, 993, 994, 0, 0, 936,
	1453, 84, 1454, 1451, 0, 1449, 1447, 1506, 0, 1515,
	1516, 1525, 1526, 1532, 0, 1538, 0, 1595, 1607, 1603,
	0, 89, 0, 0, 0, 1464, 193, 0, 212, 0,
	613, 0, 616, 606, 693, 694, 0, 706, 698, 700,
	701, 683, -2, 1490, 0, 0, 0, 589, 1402, 0,
	0, 1296, 0, 632, 633, 1091, 1084, 0, 1069, 1070,
	1088, 1321, 1323, 0, 0, 0, 0, 987, 989, 990,
	83, 0, 1450, 1109, 0, 1518, 1519, 1546, 1544, 1613,
	0, 1609, 0, 1605, 0, 0, 956, 963, 0, 90,
	442, 435, 1490, 0, 0, 0, 686, 687, 688, 689,
	690, 691, 692, 579, 1492, 141, 142, 0, 509, 510,
	511, 135, 0, 1142, 1292, 1085, 0, 0, 0, 0,
	0, 1342, 0, 1348, 0, 1353, 0, 947, 948, 1452,
	0, 0, 0, 1600, 0, 0, 1598, 0, 0, 1602,
	618, 0, 620, 0, -2, 430, 443, 0, 187, 213,
	214, 0, 0, 217, 218, 219, 210, 211, 131, 0,
	0, 707, 0, 1493, 1494, 0, 138, 0, 0, 1076,
	1077, 1078, 1079, 1081, 0, 0, 0, 0, 1110, 1089,
	1596, 0, 1608, 0, 1604, 619, 0, 0, 385, 0,
	629, 431, 432, 0, 438, 439, 440, 441, 215, 216,
	641, 0, 0, 508, 586, 1403, 0, 0, 1343, 0,
	1349, 0, 1354, 0, 1610, 1606, 621, 622, 630, 0,
	433, 0, 434, 0, 0, 0, 610, 0, 641, 1491,
	1086, 1080, 1082, 0, 0, 1108, 0, 631, 627, 444,
	446, 447, 0, 0, 445, 642, 611, 1344, 1350, 0,
	448, 449, 450, 623, 624, 625, 626,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 144, 3, 3, 3, 172, 164, 3,
	87, 89, 169, 167, 88, 168, 222, 170, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 722,
	152, 151, 153, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 174, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 175,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 141, 142, 143, 145, 146,
	147, 148, 149, 150, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 165, 166, 171, 173, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 58022, 697, 58023, 698, 58024, 699,
	58025, 700, 58026, 701, 58027, 702, 58028, 703, 58029, 704,
	58030, 705, 58031, 706, 58032, 707, 58033, 708, 58034, 709,
	58035, 710, 58036, 711, 58037, 712, 58038, 713, 58039, 714,
	58040, 715, 58041, 716, 58042, 717, 58043, 718, 58044, 719,
	58045, 720, 58046, 721, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:604
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:617
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:618
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:622
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:661
		{
			setParseTree(yylex, nil)
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:667
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:673
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 43:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:678
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:682
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:688
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:692
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:698
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:704
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:710
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:714
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:719
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:723
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:729
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:733
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:739
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:745
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:749
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:753
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:776
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:782
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:787
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:793
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:800
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:806
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:813
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 66:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:817
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:823
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:827
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:831
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:835
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:839
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:845
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:849
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:854
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:858
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:864
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:868
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:873
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:879
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:885
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:892
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:898
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:906
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:910
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:916
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = getAliasedTableExprFromTableName(yyDollar[4].tableName)
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:928
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: getAliasedTableExprFromTableName(yyDollar[4].tableName), Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:940
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:944
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:950
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:956
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:960
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:964
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:968
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:973
		{
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:974
		{
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:978
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:982
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:988
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:992
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:998
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1002
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1007
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1011
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1017
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1023
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1027
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1033
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1037
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1041
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1045
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1051
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1055
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1059
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1065
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1069
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1075
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1079
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1085
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1089
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1093
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1099
		{
			yyVAL.str = RepeatableReadStr
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1103
		{
			yyVAL.str = ReadCommittedStr
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1107
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1111
		{
			yyVAL.str = SerializableStr
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1117
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1121
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1125
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1131
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1137
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1144
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1153
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1157
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1164
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1168
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1173
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1177
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1183
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1188
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1193
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1199
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1204
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1210
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 143:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1215
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1219
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1225
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1229
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1235
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 148:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1241
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1248
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1255
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1260
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1265
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1270
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1277
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1284
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1295
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1302
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1306
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1312
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1316
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1320
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1324
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1328
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1332
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 167:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1338
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1342
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1348
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1352
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1358
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1362
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1368
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1372
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1378
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1382
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1388
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1392
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1398
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1403
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1408
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 182:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1412
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1417
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1421
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1425
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 186:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1436
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1445
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1454
		{
			yyVAL.str = ""
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1458
		{
			yyVAL.str = ""
		}
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1467
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1471
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1477
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1483
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1488
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1493
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1498
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1503
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1508
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1513
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1517
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1522
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1526
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1531
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1537
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1543
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 206:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1547
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1553
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1557
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1561
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1567
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1571
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1576
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1580
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1585
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1591
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1597
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1602
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1607
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1613
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1621
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1628
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1632
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1636
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1640
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1644
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1648
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("sysdate"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1658
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1665
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1669
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1675
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1679
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1683
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1687
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1691
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1695
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1699
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1703
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1707
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1711
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1715
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1719
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1723
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1727
		{
			arg := parseBindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: arg}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1732
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1736
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1740
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1746
		{
			yyVAL.str = Armscii8Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1750
		{
			yyVAL.str = ASCIIStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1754
		{
			yyVAL.str = Big5Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1758
		{
			yyVAL.str = UBinaryStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1762
		{
			yyVAL.str = Cp1250Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1766
		{
			yyVAL.str = Cp1251Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1770
		{
			yyVAL.str = Cp1256Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1774
		{
			yyVAL.str = Cp1257Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1778
		{
			yyVAL.str = Cp850Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1782
		{
			yyVAL.str = Cp852Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1786
		{
			yyVAL.str = Cp866Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1790
		{
			yyVAL.str = Cp932Str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1794
		{
			yyVAL.str = Dec8Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1798
		{
			yyVAL.str = EucjpmsStr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1802
		{
			yyVAL.str = EuckrStr
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1806
		{
			yyVAL.str = Gb18030Str
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1810
		{
			yyVAL.str = Gb2312Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1814
		{
			yyVAL.str = GbkStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1818
		{
			yyVAL.str = Geostd8Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1822
		{
			yyVAL.str = GreekStr
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1826
		{
			yyVAL.str = HebrewStr
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1830
		{
			yyVAL.str = Hp8Str
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1834
		{
			yyVAL.str = Keybcs2Str
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1838
		{
			yyVAL.str = Koi8rStr
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1842
		{
			yyVAL.str = Koi8uStr
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1846
		{
			yyVAL.str = Latin1Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1850
		{
			yyVAL.str = Latin2Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1854
		{
			yyVAL.str = Latin5Str
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1858
		{
			yyVAL.str = Latin7Str
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1862
		{
			yyVAL.str = MacceStr
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1866
		{
			yyVAL.str = MacromanStr
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1870
		{
			yyVAL.str = SjisStr
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1874
		{
			yyVAL.str = Swe7Str
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1878
		{
			yyVAL.str = Tis620Str
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1882
		{
			yyVAL.str = Ucs2Str
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1886
		{
			yyVAL.str = UjisStr
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1890
		{
			yyVAL.str = Utf16Str
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1894
		{
			yyVAL.str = Utf16leStr
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1898
		{
			yyVAL.str = Utf32Str
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1902
		{
			yyVAL.str = Utf8Str
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1906
		{
			yyVAL.str = Utf8mb4Str
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1910
		{
			yyVAL.str = Utf8Str
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1920
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1924
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1928
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1934
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1938
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1942
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1948
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1952
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1958
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1962
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1966
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1970
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1976
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1987
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1992
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1998
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2002
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2006
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2010
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2014
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2018
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2022
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2026
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2030
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2036
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2042
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2048
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2054
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2060
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2066
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2072
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2080
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2084
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2088
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2092
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2096
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2102
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2106
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2112
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2116
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2120
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2124
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2128
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2132
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2136
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2140
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2144
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2148
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2152
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2156
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2160
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 349:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2165
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2171
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2175
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2179
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2183
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2187
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2191
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2195
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2199
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2205
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2210
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2215
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2219
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2224
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 363:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2228
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2237
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2241
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2248
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2252
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2258
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2266
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2270
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2274
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2279
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2283
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2288
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2292
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2296
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2300
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2304
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2309
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2314
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2319
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2324
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2330
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2334
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2339
		{
			yyVAL.str = ""
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2343
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2347
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 388:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2353
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2358
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2362
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2368
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2372
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2378
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2382
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2387
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2391
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2395
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2399
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2403
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2407
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2413
		{
			yyVAL.str = ""
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2417
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 403:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2423
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2427
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2431
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2435
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2439
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2444
		{
			yyVAL.str = ""
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2448
		{
			yyVAL.str = yyDollar[2].str
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2454
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2458
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2462
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2468
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2472
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 415:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2477
		{
			yyVAL.str = "key"
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2481
		{
			yyVAL.str = yyDollar[1].str
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2487
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2491
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2496
		{
			yyVAL.str = ""
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2500
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2506
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2510
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2516
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2520
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2526
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2530
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2536
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2540
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2546
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2552
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2556
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2560
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2564
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2568
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2573
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2577
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2583
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2589
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2595
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2599
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2603
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2608
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2612
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2618
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2624
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2630
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2634
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2638
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2642
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2646
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2651
		{
			yyVAL.str = ""
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2655
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2659
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2665
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2669
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2674
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2678
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2683
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2687
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2693
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2697
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2701
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2707
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2711
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2717
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2721
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2725
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2729
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2733
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2737
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2741
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2745
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2749
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2753
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2757
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2761
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2765
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2769
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2773
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2777
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2781
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2785
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2789
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2793
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2797
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2801
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2805
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2809
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2813
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2817
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2821
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2825
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2829
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2833
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2837
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2842
		{
			yyVAL.str = ""
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2846
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2850
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2869
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2873
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2877
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2881
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2886
		{
			yyVAL.str = ""
		}
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2892
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2896
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2901
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2905
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2910
		{
			yyVAL.str = ""
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2914
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2919
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2923
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2927
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2932
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2936
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2940
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2944
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2948
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 528:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2952
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2958
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2962
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2966
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2972
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2976
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2980
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2984
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2988
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2992
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2996
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3000
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3004
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3008
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3013
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3018
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3022
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3026
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3030
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3034
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3038
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3042
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3046
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3050
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3054
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3058
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3062
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3066
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3070
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3074
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3078
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3082
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3086
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3090
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3094
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3100
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3104
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3110
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3114
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3118
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3122
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3126
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3130
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3134
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3138
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3142
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3146
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3152
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3159
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3166
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3173
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3179
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3189
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3196
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3203
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3215
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3225
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3229
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3233
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3246
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3256
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3260
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3271
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3278
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3285
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3292
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3300
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3306
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3313
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3319
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3326
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3332
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3341
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3349
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3356
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3363
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3367
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3376
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3384
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3393
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3400
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3408
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3412
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3421
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3432
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3436
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3441
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3445
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3450
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3454
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3460
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3466
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3472
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3476
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3482
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3486
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3492
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3498
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3504
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3510
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3516
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3520
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3524
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3528
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3534
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3540
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3546
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3550
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3554
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3560
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3564
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3569
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3573
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3578
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3582
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3588
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3592
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3596
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3600
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3604
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3608
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3612
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3616
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3620
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3624
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3628
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3632
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3636
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3640
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3644
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3648
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3652
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3656
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3660
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3664
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3668
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3672
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3677
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3681
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3685
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3691
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3695
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3701
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3706
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3710
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3715
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3720
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3725
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3730
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3735
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3741
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3747
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3752
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3758
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3764
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3768
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3774
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3779
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3783
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3788
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3793
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3798
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3803
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3809
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3815
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3822
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3829
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3836
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3844
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3848
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3854
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3860
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3866
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3872
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3878
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3884
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3890
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3896
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3902
		{
			yyVAL.str = ""
		}
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3906
		{
			yyVAL.str = ""
		}
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3912
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3918
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3922
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 711:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3928
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3932
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3941
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3945
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3951
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3955
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3961
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3967
		{
			yyLOCAL = &PurgeBinaryLogs{To: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3971
		{
			yyLOCAL = &PurgeBinaryLogs{Before: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3977
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3981
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3985
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3989
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3993
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3997
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4001
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4005
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4009
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4013
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4017
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4021
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4025
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4029
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4033
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4037
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4041
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4045
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4049
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4053
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4057
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4061
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4065
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4069
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4073
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4077
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4081
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4085
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4089
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4093
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4097
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4101
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4105
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4109
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4113
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4117
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4121
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4125
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4129
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4133
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4137
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4141
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4145
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4152
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4156
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4160
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4164
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4168
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4172
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4176
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4180
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4184
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4190
		{
			yyVAL.str = ""
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4194
		{
			yyVAL.str = "extended "
		}
	case 774:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4200
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4204
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4210
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4214
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4220
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4224
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4228
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4234
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4238
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4242
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4248
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4252
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4258
		{
			yyVAL.empty = struct{}{}
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4262
		{
			yyVAL.empty = struct{}{}
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4266
		{
			yyVAL.empty = struct{}{}
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4272
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4276
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4282
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4286
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4290
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4297
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4301
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4305
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4309
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4316
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4320
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4325
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4329
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4335
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4339
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4345
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4349
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4353
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4360
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4366
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4370
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4375
		{
			yyVAL.empty = struct{}{}
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4377
		{
			yyVAL.empty = struct{}{}
		}
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4380
		{
			yyVAL.empty = struct{}{}
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4382
		{
			yyVAL.empty = struct{}{}
		}
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4386
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4392
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4397
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4401
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4405
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4409
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4413
		{
			yyLOCAL = VTExplainType
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4417
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4421
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4426
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4430
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4434
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4438
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4444
		{
			yyVAL.str = yyDollar[1].str
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4448
		{
			yyVAL.str = yyDollar[1].str
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4452
		{
			yyVAL.str = yyDollar[1].str
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4458
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4462
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4466
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4470
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4475
		{
			yyVAL.str = ""
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4479
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4483
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 837:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4489
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4493
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4499
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4505
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4509
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4515
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4521
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4525
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4531
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4537
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4541
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4545
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4549
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4555
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4561
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4567
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4571
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4575
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4579
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4583
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4587
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4593
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4597
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4603
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4607
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4611
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4615
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4619
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4623
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4627
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4631
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4635
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4639
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4643
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4647
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4652
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4656
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4660
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4665
		{
			yyVAL.str = ""
		}
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4669
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4674
		{
			setAllowComments(yylex, true)
		}
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4678
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4684
		{
			yyVAL.strs = nil
		}
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4688
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4694
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4698
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4702
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4707
		{
			yyVAL.str = ""
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4711
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4715
		{
			yyVAL.str = SQLCacheStr
		}
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4720
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4724
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4728
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4734
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4738
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4748
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4753
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4757
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4763
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4767
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4772
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4776
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4781
		{
			yyVAL.strs = nil
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4785
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4789
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4793
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 903:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4797
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4803
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4807
		{
			yyVAL.str = SQLCacheStr
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4811
		{
			yyVAL.str = DistinctStr
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4815
		{
			yyVAL.str = DistinctStr
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4819
		{
			yyVAL.str = StraightJoinHint
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4823
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4827
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4833
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4837
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4843
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4847
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4851
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4855
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4860
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4864
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4868
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4875
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4880
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4884
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4890
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4896
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4900
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4910
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4914
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4918
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4922
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4928
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4932
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4938
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4942
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4947
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4951
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4956
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4960
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4966
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4970
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4976
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4980
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4986
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4990
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4994
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4998
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5004
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5008
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5021
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5025
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5029
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5033
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5039
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5041
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 957:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5045
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5047
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 959:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5051
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5053
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 961:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5056
		{
			yyVAL.empty = struct{}{}
		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5058
		{
			yyVAL.empty = struct{}{}
		}
	case 963:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5061
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5065
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5069
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5076
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5082
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5086
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5090
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5096
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5102
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5106
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5110
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5114
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5120
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5124
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5134
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5138
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5144
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5148
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5154
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 983:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5159
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5163
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5169
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5173
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 987:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5179
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5183
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5187
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5191
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5196
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5200
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5204
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5208
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5214
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5218
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5225
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5229
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5233
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5237
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5241
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5245
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5249
		{
			yyLOCAL = &AssignmentExpr{Left: yyDollar[1].variableUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5253
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5259
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5263
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5267
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5271
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5277
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5281
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5285
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5289
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5293
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5297
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5301
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5305
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5309
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5313
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5317
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5323
		{
		}
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5326
		{
		}
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5332
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5336
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5340
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5344
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5348
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5352
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5356
		{
			yyLOCAL = &DateAddExpr{Type: PlusIntervalRightType, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Expr: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5360
		{
			yyLOCAL = &DateSubExpr{Type: MinusIntervalRightType, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Expr: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5364
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5368
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5372
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5376
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5380
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5384
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5388
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5394
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5398
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5402
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5406
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5410
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5414
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5418
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5422
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5426
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5430
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5434
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5438
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5442
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5446
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5450
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5454
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5458
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5462
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5466
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5470
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5478
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5482
		{
			yyLOCAL = &DateAddExpr{Type: PlusIntervalLeftType, Date: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5486
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5490
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5494
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5500
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5504
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5510
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5514
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5520
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5524
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5528
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5534
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5538
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5545
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5549
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5553
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5557
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5561
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5567
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5571
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5575
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5579
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5583
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5587
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5591
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5596
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5600
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5606
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5610
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5615
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5619
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5624
		{
		}
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5627
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1091:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5633
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5639
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5643
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5648
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5655
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5661
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5665
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5671
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5675
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5681
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5685
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5690
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5697
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5703
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5707
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5713
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5719
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5723
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5729
		{
			yyVAL.str = ""
		}
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5733
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5739
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5743
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5750
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5754
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5758
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5762
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5768
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5772
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5776
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5780
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5784
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5788
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5792
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5798
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5802
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5806
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			markBindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5813
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5819
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5823
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1132:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5833
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5837
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5847
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5851
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5855
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5859
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5863
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5867
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5871
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5875
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5879
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5883
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5894
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5898
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5904
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5908
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("curdate")}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5912
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5917
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("curtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5922
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5926
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5930
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5934
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5938
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5942
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5946
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5950
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5954
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5958
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5962
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5966
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5970
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5974
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5978
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5982
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5986
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5990
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5994
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5998
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6002
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6006
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6010
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6014
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6018
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6022
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, Type: LeadingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6026
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, Type: TrailingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6030
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6034
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6038
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6042
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6046
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6050
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6054
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6058
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6062
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6066
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6070
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6074
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6078
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6082
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6086
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6090
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6094
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6098
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6102
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6106
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6110
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsEmpty, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6114
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsSimple, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6118
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Dimension, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6122
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Envelope, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6126
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: GeometryType, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6130
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6134
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6138
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6142
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6146
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: EndPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6150
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: IsClosed, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6154
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6158
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6162
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: NumPoints, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6166
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: PointN, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6170
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: StartPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6174
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6178
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6182
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6186
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6190
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6194
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6198
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6202
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6206
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6210
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6214
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6218
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6222
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6226
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6230
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6234
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6238
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6242
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6246
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6250
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6254
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6258
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6262
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6266
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6270
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6274
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6278
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6282
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6286
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6290
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6294
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6298
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6302
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6306
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6310
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6314
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6318
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6322
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6326
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6330
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6334
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6338
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6342
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6346
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6350
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6354
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6358
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6362
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6366
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6370
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6374
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6378
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6382
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Area, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6386
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Centroid, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6390
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: ExteriorRing, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6394
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: InteriorRingN, Polygon: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6398
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: NumInteriorRings, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6402
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: GeometryN, GeomColl: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6406
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: NumGeometries, GeomColl: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6410
		{
			yyLOCAL = &GeoHashFromLatLongExpr{Longitude: yyDollar[3].exprUnion(), Latitude: yyDollar[5].exprUnion(), MaxLength: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6414
		{
			yyLOCAL = &GeoHashFromPointExpr{Point: yyDollar[3].exprUnion(), MaxLength: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6418
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LatitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6422
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LongitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6426
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: PointFromHash, GeoHash: yyDollar[3].exprUnion(), SridOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6430
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6434
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6438
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion(), Srid: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6442
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6446
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6450
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion(), Bitmask: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6454
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6458
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6462
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6466
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6470
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6474
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6478
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6482
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6486
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6490
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6494
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6498
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6502
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6506
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6510
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6514
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6518
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6522
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6526
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6530
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6534
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6538
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6542
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6546
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6550
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6554
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6558
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6562
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6566
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6570
		{
			yyLOCAL = &MultiPolygonExpr{PolygonParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6574
		{
			yyLOCAL = &MultiPointExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6578
		{
			yyLOCAL = &MultiLinestringExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6582
		{
			yyLOCAL = &PolygonExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6586
		{
			yyLOCAL = &LineStringExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6590
		{
			yyLOCAL = &PointExpr{XCordinate: yyDollar[3].exprUnion(), YCordinate: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6594
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6598
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6602
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6606
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6610
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6614
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6618
		{
			yyLOCAL = &DateAddExpr{Type: AdddateType, Date: yyDollar[3].exprUnion(), Expr: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6622
		{
			yyLOCAL = &DateAddExpr{Type: AdddateType, Date: yyDollar[3].exprUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6626
		{
			yyLOCAL = &DateAddExpr{Type: DateAddType, Date: yyDollar[3].exprUnion(), Expr: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6630
		{
			yyLOCAL = &DateSubExpr{Type: DateSubType, Date: yyDollar[3].exprUnion(), Expr: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6634
		{
			yyLOCAL = &DateSubExpr{Type: SubdateType, Date: yyDollar[3].exprUnion(), Expr: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6638
		{
			yyLOCAL = &DateSubExpr{Type: SubdateType, Date: yyDollar[3].exprUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6648
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6652
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6656
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6660
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6665
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6669
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6675
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6679
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6683
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6687
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6691
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6696
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6700
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6704
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6708
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6712
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6716
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6721
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6725
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6729
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6733
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6740
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6744
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6750
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6754
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6758
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6762
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6768
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6772
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6776
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6780
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6784
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6788
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6792
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6797
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6801
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6807
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6811
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6815
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6819
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6823
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6827
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6831
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6835
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6839
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6843
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6847
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6851
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6855
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6859
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6863
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6867
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6871
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6875
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6879
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6883
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:6893
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:6897
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:6901
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6911
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6915
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6919
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6923
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6927
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6933
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6937
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6941
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6945
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6949
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6955
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6959
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6963
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1408:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6969
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6973
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6977
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6983
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6987
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6991
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6995
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6999
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7005
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7009
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7013
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7017
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7021
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7025
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7029
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7033
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7037
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7041
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7047
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7051
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7056
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7060
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7065
		{
			yyVAL.str = string("")
		}
	case 1431:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7069
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7075
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7079
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1434:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7085
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7090
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7094
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7100
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7104
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7108
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7112
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7118
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7122
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7128
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7137
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7141
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7146
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7150
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7155
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7159
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7165
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7171
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7175
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1453:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7180
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7184
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7189
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7193
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7199
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7205
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7209
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1460:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7215
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7220
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7224
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7228
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7233
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7237
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7243
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7247
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7251
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7256
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7260
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7264
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7268
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7272
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7279
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7283
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7287
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7291
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7297
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7301
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7305
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7309
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7314
		{
			yyVAL.str = ""
		}
	case 1483:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7318
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1484:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7322
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1485:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7326
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1486:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7331
		{
			yyVAL.str = ""
		}
	case 1487:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7335
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7341
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7345
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1490:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7350
		{
			yyVAL.str = ""
		}
	case 1491:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7354
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1492:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7359
		{
			yyVAL.str = "cascaded"
		}
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7363
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7367
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1495:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7372
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7376
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7382
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7388
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7394
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7403
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7407
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1502:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7412
		{
			yyVAL.str = ""
		}
	case 1503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7416
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7422
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7426
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7432
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7436
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7440
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7445
		{
			yyVAL.str = ""
		}
	case 1510:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7449
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1511:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7453
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1512:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7458
		{
			yyVAL.str = ""
		}
	case 1513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7462
		{
			yyVAL.str = " header"
		}
	case 1514:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7467
		{
			yyVAL.str = ""
		}
	case 1515:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7471
		{
			yyVAL.str = " manifest on"
		}
	case 1516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7475
		{
			yyVAL.str = " manifest off"
		}
	case 1517:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7480
		{
			yyVAL.str = ""
		}
	case 1518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7484
		{
			yyVAL.str = " overwrite on"
		}
	case 1519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7488
		{
			yyVAL.str = " overwrite off"
		}
	case 1520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7494
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1521:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7499
		{
			yyVAL.str = ""
		}
	case 1522:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7503
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7509
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7513
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1525:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7519
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1526:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7523
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1527:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7528
		{
			yyVAL.str = ""
		}
	case 1528:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7532
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7538
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1530:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7542
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7548
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1532:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7552
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1533:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7556
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1534:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7561
		{
			yyVAL.str = ""
		}
	case 1535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7565
		{
			yyVAL.str = " optionally"
		}
	case 1536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7578
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7582
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7586
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7590
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7594
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7600
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7604
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7608
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1544:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7612
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1545:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7617
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7621
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7627
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7631
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7637
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7641
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7647
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7651
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7656
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7666
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7670
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7676
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7683
		{
			yyVAL.str = "charset"
		}
	case 1561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7693
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7697
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7701
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7710
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7712
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7715
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7717
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7720
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7722
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7725
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7727
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7730
		{
			yyVAL.empty = struct{}{}
		}
	case 1575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7732
		{
			yyVAL.empty = struct{}{}
		}
	case 1576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7734
		{
			yyVAL.empty = struct{}{}
		}
	case 1577:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7738
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7743
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7747
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7752
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7754
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7758
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7764
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7768
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7775
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7781
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7785
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1589:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7791
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7795
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7802
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1593:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7807
		{
			yyVAL.str = ""
		}
	case 1594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7811
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1595:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7816
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7820
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL interface{}
//line sql.y:7825
		{
			escape := "\\"
			yyLOCAL = &FieldsClause{
				Terminated: "\t",
				Escaped:    escape[0],
			}
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL interface{}
//line sql.y:7833
		{
			escape := yyDollar[4].itemUnion().(string)
			if escape != "\\" && len(escape) > 1 {
				yylex.Error("Incorrect arguments  to ESCAPE")
				return 1
			}
			var enclosed byte
			str := yyDollar[3].itemUnion().(string)
			if len(str) > 1 {
				yylex.Error("Incorrect arguments  to ENCLOSED")
				return 1
			} else if len(str) != 0 {
				enclosed = str[0]
			}
			yyLOCAL = &FieldsClause{
				Terminated: yyDollar[2].itemUnion().(string),
				Enclosed:   enclosed,
				Escaped:    escape[0],
			}
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL interface{}
//line sql.y:7855
		{
			yyLOCAL = &LinesClause{Terminated: "\n"}
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL interface{}
//line sql.y:7859
		{
			yyLOCAL = &LinesClause{Starting: yyDollar[2].itemUnion().(string), Terminated: yyDollar[3].itemUnion().(string)}
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL interface{}
//line sql.y:7864
		{
			yyLOCAL = "\t"
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL interface{}
//line sql.y:7868
		{
			yyLOCAL = string(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL interface{}
//line sql.y:7873
		{
			yyLOCAL = ""
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL interface{}
//line sql.y:7877
		{
			yyLOCAL = string(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL interface{}
//line sql.y:7882
		{
			yyLOCAL = "\\"
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL interface{}
//line sql.y:7886
		{
			yyLOCAL = string(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL interface{}
//line sql.y:7891
		{
			yyLOCAL = ""
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL interface{}
//line sql.y:7895
		{
			yyLOCAL = string(yyDollar[3].str)

		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL interface{}
//line sql.y:7901
		{
			yyLOCAL = "\n"
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL interface{}
//line sql.y:7905
		{
			yyLOCAL = string(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7914
		{
			x := &LoadDataStmt{
				Action:  string(yyDollar[1].str),
				Path:    string(yyDollar[5].str),
				Table:   yyDollar[8].tableName,
				Columns: yyDollar[11].columnsUnion(),
			}
			if yyDollar[3].str != "" {
				x.IsLocal = true
			}
			if yyDollar[9].itemUnion() != nil {
				x.FieldsInfo = yyDollar[9].itemUnion().(*FieldsClause)
			}
			if yyDollar[10].itemUnion() != nil {
				x.LinesInfo = yyDollar[10].itemUnion().(*LinesClause)
			}
			yyLOCAL = x
		}
		yyVAL.union = yyLOCAL
	case 2218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8561
		{
		}
	case 2219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8566
		{
		}
	case 2220:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8570
		{
			skipToEnd(yylex)
		}
	case 2221:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8575
		{
			skipToEnd(yylex)
		}
	case 2222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8579
		{
			skipToEnd(yylex)
		}
	case 2223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8583
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
