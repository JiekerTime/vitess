// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func markBindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const SELECT = 57351
const STREAM = 57352
const VSTREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const DEFAULT = 57374
const SET = 57375
const LOCK = 57376
const UNLOCK = 57377
const KEYS = 57378
const DO = 57379
const CALL = 57380
const DISTINCTROW = 57381
const PARSER = 57382
const GENERATED = 57383
const ALWAYS = 57384
const OUTFILE = 57385
const S3 = 57386
const DATA = 57387
const LOAD = 57388
const LINES = 57389
const TERMINATED = 57390
const ESCAPED = 57391
const ENCLOSED = 57392
const DUMPFILE = 57393
const CSV = 57394
const HEADER = 57395
const MANIFEST = 57396
const OVERWRITE = 57397
const STARTING = 57398
const OPTIONALLY = 57399
const VALUES = 57400
const LAST_INSERT_ID = 57401
const NEXT = 57402
const VALUE = 57403
const SHARE = 57404
const MODE = 57405
const SQL_NO_CACHE = 57406
const SQL_CACHE = 57407
const SQL_CALC_FOUND_ROWS = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const ON = 57419
const USING = 57420
const INPLACE = 57421
const COPY = 57422
const INSTANT = 57423
const ALGORITHM = 57424
const NONE = 57425
const SHARED = 57426
const EXCLUSIVE = 57427
const SUBQUERY_AS_EXPR = 57428
const STRING = 57429
const ID = 57430
const AT_ID = 57431
const AT_AT_ID = 57432
const HEX = 57433
const NCHAR_STRING = 57434
const INTEGRAL = 57435
const FLOAT = 57436
const DECIMAL = 57437
const HEXNUM = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BITNUM = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const VALUE_ARG = 57444
const LIST_ARG = 57445
const OFFSET_ARG = 57446
const JSON_PRETTY = 57447
const JSON_STORAGE_SIZE = 57448
const JSON_STORAGE_FREE = 57449
const JSON_CONTAINS = 57450
const JSON_CONTAINS_PATH = 57451
const JSON_EXTRACT = 57452
const JSON_KEYS = 57453
const JSON_OVERLAPS = 57454
const JSON_SEARCH = 57455
const JSON_VALUE = 57456
const EXTRACT = 57457
const NULL = 57458
const TRUE = 57459
const FALSE = 57460
const OFF = 57461
const DISCARD = 57462
const IMPORT = 57463
const ENABLE = 57464
const DISABLE = 57465
const TABLESPACE = 57466
const VIRTUAL = 57467
const STORED = 57468
const BOTH = 57469
const LEADING = 57470
const TRAILING = 57471
const KILL = 57472
const EMPTY_FROM_CLAUSE = 57473
const LOWER_THAN_CHARSET = 57474
const CHARSET = 57475
const UNIQUE = 57476
const KEY = 57477
const EXPRESSION_PREC_SETTER = 57478
const OR = 57479
const XOR = 57480
const AND = 57481
const NOT = 57482
const BETWEEN = 57483
const CASE = 57484
const WHEN = 57485
const THEN = 57486
const ELSE = 57487
const END = 57488
const LE = 57489
const GE = 57490
const NE = 57491
const NULL_SAFE_EQUAL = 57492
const IS = 57493
const LIKE = 57494
const REGEXP = 57495
const RLIKE = 57496
const IN = 57497
const ASSIGNMENT_OPT = 57498
const SHIFT_LEFT = 57499
const SHIFT_RIGHT = 57500
const DIV = 57501
const MOD = 57502
const UNARY = 57503
const COLLATE = 57504
const DBPARTITION = 57505
const TBPARTITION = 57506
const BINARY = 57507
const UNDERSCORE_ARMSCII8 = 57508
const UNDERSCORE_ASCII = 57509
const UNDERSCORE_BIG5 = 57510
const UNDERSCORE_BINARY = 57511
const UNDERSCORE_CP1250 = 57512
const UNDERSCORE_CP1251 = 57513
const UNDERSCORE_CP1256 = 57514
const UNDERSCORE_CP1257 = 57515
const UNDERSCORE_CP850 = 57516
const UNDERSCORE_CP852 = 57517
const UNDERSCORE_CP866 = 57518
const UNDERSCORE_CP932 = 57519
const UNDERSCORE_DEC8 = 57520
const UNDERSCORE_EUCJPMS = 57521
const UNDERSCORE_EUCKR = 57522
const UNDERSCORE_GB18030 = 57523
const UNDERSCORE_GB2312 = 57524
const UNDERSCORE_GBK = 57525
const UNDERSCORE_GEOSTD8 = 57526
const UNDERSCORE_GREEK = 57527
const UNDERSCORE_HEBREW = 57528
const UNDERSCORE_HP8 = 57529
const UNDERSCORE_KEYBCS2 = 57530
const UNDERSCORE_KOI8R = 57531
const UNDERSCORE_KOI8U = 57532
const UNDERSCORE_LATIN1 = 57533
const UNDERSCORE_LATIN2 = 57534
const UNDERSCORE_LATIN5 = 57535
const UNDERSCORE_LATIN7 = 57536
const UNDERSCORE_MACCE = 57537
const UNDERSCORE_MACROMAN = 57538
const UNDERSCORE_SJIS = 57539
const UNDERSCORE_SWE7 = 57540
const UNDERSCORE_TIS620 = 57541
const UNDERSCORE_UCS2 = 57542
const UNDERSCORE_UJIS = 57543
const UNDERSCORE_UTF16 = 57544
const UNDERSCORE_UTF16LE = 57545
const UNDERSCORE_UTF32 = 57546
const UNDERSCORE_UTF8 = 57547
const UNDERSCORE_UTF8MB4 = 57548
const UNDERSCORE_UTF8MB3 = 57549
const INTERVAL = 57550
const WINDOW_EXPR = 57551
const JSON_EXTRACT_OP = 57552
const JSON_UNQUOTE_EXTRACT_OP = 57553
const CREATE = 57554
const ALTER = 57555
const DROP = 57556
const RENAME = 57557
const ANALYZE = 57558
const ADD = 57559
const FLUSH = 57560
const CHANGE = 57561
const MODIFY = 57562
const DEALLOCATE = 57563
const REVERT = 57564
const QUERIES = 57565
const SCHEMA = 57566
const TABLE = 57567
const INDEX = 57568
const VIEW = 57569
const TO = 57570
const IGNORE = 57571
const IF = 57572
const PRIMARY = 57573
const COLUMN = 57574
const SPATIAL = 57575
const FULLTEXT = 57576
const KEY_BLOCK_SIZE = 57577
const CHECK = 57578
const INDEXES = 57579
const DISTRIBUTION = 57580
const BROADCAST = 57581
const SINGLE = 57582
const ACTION = 57583
const CASCADE = 57584
const CONSTRAINT = 57585
const FOREIGN = 57586
const NO = 57587
const REFERENCES = 57588
const RESTRICT = 57589
const WITHSCHEMA = 57590
const SHOW = 57591
const DESCRIBE = 57592
const EXPLAIN = 57593
const DATE = 57594
const ESCAPE = 57595
const REPAIR = 57596
const OPTIMIZE = 57597
const TRUNCATE = 57598
const COALESCE = 57599
const EXCHANGE = 57600
const REBUILD = 57601
const PARTITIONING = 57602
const REMOVE = 57603
const PREPARE = 57604
const EXECUTE = 57605
const MAXVALUE = 57606
const PARTITION = 57607
const REORGANIZE = 57608
const LESS = 57609
const THAN = 57610
const PROCEDURE = 57611
const TRIGGER = 57612
const VINDEX = 57613
const VINDEXES = 57614
const DIRECTORY = 57615
const NAME = 57616
const UPGRADE = 57617
const TINDEX = 57618
const STATUS = 57619
const VARIABLES = 57620
const WARNINGS = 57621
const CASCADED = 57622
const DEFINER = 57623
const OPTION = 57624
const SQL = 57625
const UNDEFINED = 57626
const SEQUENCE = 57627
const MERGE = 57628
const TEMPORARY = 57629
const TEMPTABLE = 57630
const INVOKER = 57631
const SECURITY = 57632
const FIRST = 57633
const AFTER = 57634
const LAST = 57635
const TableCount = 57636
const VITESS_MIGRATION = 57637
const CANCEL = 57638
const RETRY = 57639
const LAUNCH = 57640
const COMPLETE = 57641
const CLEANUP = 57642
const THROTTLE = 57643
const UNTHROTTLE = 57644
const EXPIRE = 57645
const RATIO = 57646
const VITESS_THROTTLER = 57647
const BEGIN = 57648
const START = 57649
const TRANSACTION = 57650
const COMMIT = 57651
const ROLLBACK = 57652
const SAVEPOINT = 57653
const RELEASE = 57654
const WORK = 57655
const CONSISTENT = 57656
const SNAPSHOT = 57657
const BIT = 57658
const TINYINT = 57659
const SMALLINT = 57660
const MEDIUMINT = 57661
const INT = 57662
const INTEGER = 57663
const BIGINT = 57664
const INTNUM = 57665
const REAL = 57666
const DOUBLE = 57667
const FLOAT_TYPE = 57668
const FLOAT4_TYPE = 57669
const FLOAT8_TYPE = 57670
const DECIMAL_TYPE = 57671
const NUMERIC = 57672
const TIME = 57673
const TIMESTAMP = 57674
const DATETIME = 57675
const YEAR = 57676
const CHAR = 57677
const VARCHAR = 57678
const BOOL = 57679
const CHARACTER = 57680
const VARBINARY = 57681
const NCHAR = 57682
const TEXT = 57683
const TINYTEXT = 57684
const MEDIUMTEXT = 57685
const LONGTEXT = 57686
const BLOB = 57687
const TINYBLOB = 57688
const MEDIUMBLOB = 57689
const LONGBLOB = 57690
const JSON = 57691
const JSON_SCHEMA_VALID = 57692
const JSON_SCHEMA_VALIDATION_REPORT = 57693
const ENUM = 57694
const GEOMETRY = 57695
const POINT = 57696
const LINESTRING = 57697
const POLYGON = 57698
const GEOMCOLLECTION = 57699
const GEOMETRYCOLLECTION = 57700
const MULTIPOINT = 57701
const MULTILINESTRING = 57702
const MULTIPOLYGON = 57703
const ASCII = 57704
const UNICODE = 57705
const NULLX = 57706
const AUTO_INCREMENT = 57707
const APPROXNUM = 57708
const SIGNED = 57709
const UNSIGNED = 57710
const ZEROFILL = 57711
const PURGE = 57712
const BEFORE = 57713
const CODE = 57714
const COLLATION = 57715
const COLUMNS = 57716
const DATABASES = 57717
const ENGINES = 57718
const EVENT = 57719
const EXTENDED = 57720
const FIELDS = 57721
const FULL = 57722
const FUNCTION = 57723
const GTID_EXECUTED = 57724
const KEYSPACES = 57725
const OPEN = 57726
const PLUGINS = 57727
const PRIVILEGES = 57728
const PROCESSLIST = 57729
const SCHEMAS = 57730
const TABLES = 57731
const TRIGGERS = 57732
const USER = 57733
const VGTID_EXECUTED = 57734
const VITESS_KEYSPACES = 57735
const VITESS_METADATA = 57736
const VITESS_MIGRATIONS = 57737
const VITESS_REPLICATION_STATUS = 57738
const VITESS_SHARDS = 57739
const VITESS_TABLETS = 57740
const VITESS_TARGET = 57741
const VSCHEMA = 57742
const VITESS_THROTTLED_APPS = 57743
const NAMES = 57744
const GLOBAL = 57745
const SESSION = 57746
const ISOLATION = 57747
const LEVEL = 57748
const READ = 57749
const WRITE = 57750
const ONLY = 57751
const REPEATABLE = 57752
const COMMITTED = 57753
const UNCOMMITTED = 57754
const SERIALIZABLE = 57755
const ADDDATE = 57756
const CURRENT_TIMESTAMP = 57757
const DATABASE = 57758
const CURRENT_DATE = 57759
const CURDATE = 57760
const DATE_ADD = 57761
const DATE_SUB = 57762
const NOW = 57763
const SUBDATE = 57764
const CURTIME = 57765
const CURRENT_TIME = 57766
const LOCALTIME = 57767
const LOCALTIMESTAMP = 57768
const CURRENT_USER = 57769
const UTC_DATE = 57770
const UTC_TIME = 57771
const UTC_TIMESTAMP = 57772
const SYSDATE = 57773
const DAY = 57774
const DAY_HOUR = 57775
const DAY_MICROSECOND = 57776
const DAY_MINUTE = 57777
const DAY_SECOND = 57778
const HOUR = 57779
const HOUR_MICROSECOND = 57780
const HOUR_MINUTE = 57781
const HOUR_SECOND = 57782
const MICROSECOND = 57783
const MINUTE = 57784
const MINUTE_MICROSECOND = 57785
const MINUTE_SECOND = 57786
const MONTH = 57787
const QUARTER = 57788
const SECOND = 57789
const SECOND_MICROSECOND = 57790
const YEAR_MONTH = 57791
const WEEK = 57792
const SQL_TSI_DAY = 57793
const SQL_TSI_WEEK = 57794
const SQL_TSI_HOUR = 57795
const SQL_TSI_MINUTE = 57796
const SQL_TSI_MONTH = 57797
const SQL_TSI_QUARTER = 57798
const SQL_TSI_SECOND = 57799
const SQL_TSI_MICROSECOND = 57800
const SQL_TSI_YEAR = 57801
const REPLACE = 57802
const CONVERT = 57803
const CAST = 57804
const SUBSTR = 57805
const SUBSTRING = 57806
const SEPARATOR = 57807
const TIMESTAMPADD = 57808
const TIMESTAMPDIFF = 57809
const WEIGHT_STRING = 57810
const LTRIM = 57811
const RTRIM = 57812
const TRIM = 57813
const JSON_ARRAY = 57814
const JSON_OBJECT = 57815
const JSON_QUOTE = 57816
const JSON_DEPTH = 57817
const JSON_TYPE = 57818
const JSON_LENGTH = 57819
const JSON_VALID = 57820
const JSON_ARRAY_APPEND = 57821
const JSON_ARRAY_INSERT = 57822
const JSON_INSERT = 57823
const JSON_MERGE = 57824
const JSON_MERGE_PATCH = 57825
const JSON_MERGE_PRESERVE = 57826
const JSON_REMOVE = 57827
const JSON_REPLACE = 57828
const JSON_SET = 57829
const JSON_UNQUOTE = 57830
const COUNT = 57831
const AVG = 57832
const MAX = 57833
const MIN = 57834
const SUM = 57835
const GROUP_CONCAT = 57836
const BIT_AND = 57837
const BIT_OR = 57838
const BIT_XOR = 57839
const STD = 57840
const STDDEV = 57841
const STDDEV_POP = 57842
const STDDEV_SAMP = 57843
const VAR_POP = 57844
const VAR_SAMP = 57845
const VARIANCE = 57846
const ANY_VALUE = 57847
const REGEXP_INSTR = 57848
const REGEXP_LIKE = 57849
const REGEXP_REPLACE = 57850
const REGEXP_SUBSTR = 57851
const ExtractValue = 57852
const UpdateXML = 57853
const GET_LOCK = 57854
const RELEASE_LOCK = 57855
const RELEASE_ALL_LOCKS = 57856
const IS_FREE_LOCK = 57857
const IS_USED_LOCK = 57858
const LOCATE = 57859
const POSITION = 57860
const ST_GeometryCollectionFromText = 57861
const ST_GeometryFromText = 57862
const ST_LineStringFromText = 57863
const ST_MultiLineStringFromText = 57864
const ST_MultiPointFromText = 57865
const ST_MultiPolygonFromText = 57866
const ST_PointFromText = 57867
const ST_PolygonFromText = 57868
const ST_GeometryCollectionFromWKB = 57869
const ST_GeometryFromWKB = 57870
const ST_LineStringFromWKB = 57871
const ST_MultiLineStringFromWKB = 57872
const ST_MultiPointFromWKB = 57873
const ST_MultiPolygonFromWKB = 57874
const ST_PointFromWKB = 57875
const ST_PolygonFromWKB = 57876
const ST_AsBinary = 57877
const ST_AsText = 57878
const ST_Dimension = 57879
const ST_Envelope = 57880
const ST_IsSimple = 57881
const ST_IsEmpty = 57882
const ST_GeometryType = 57883
const ST_X = 57884
const ST_Y = 57885
const ST_Latitude = 57886
const ST_Longitude = 57887
const ST_EndPoint = 57888
const ST_IsClosed = 57889
const ST_Length = 57890
const ST_NumPoints = 57891
const ST_StartPoint = 57892
const ST_PointN = 57893
const ST_Area = 57894
const ST_Centroid = 57895
const ST_ExteriorRing = 57896
const ST_InteriorRingN = 57897
const ST_NumInteriorRings = 57898
const ST_NumGeometries = 57899
const ST_GeometryN = 57900
const ST_LongFromGeoHash = 57901
const ST_PointFromGeoHash = 57902
const ST_LatFromGeoHash = 57903
const ST_GeoHash = 57904
const ST_AsGeoJSON = 57905
const ST_GeomFromGeoJSON = 57906
const MATCH = 57907
const AGAINST = 57908
const BOOLEAN = 57909
const LANGUAGE = 57910
const WITH = 57911
const QUERY = 57912
const EXPANSION = 57913
const WITHOUT = 57914
const VALIDATION = 57915
const UNUSED = 57916
const ARRAY = 57917
const BYTE = 57918
const CUME_DIST = 57919
const DESCRIPTION = 57920
const DENSE_RANK = 57921
const EMPTY = 57922
const EXCEPT = 57923
const FIRST_VALUE = 57924
const GROUPING = 57925
const GROUPS = 57926
const JSON_TABLE = 57927
const LAG = 57928
const LAST_VALUE = 57929
const LATERAL = 57930
const LEAD = 57931
const INFILE = 57932
const NTH_VALUE = 57933
const NTILE = 57934
const OF = 57935
const OVER = 57936
const PERCENT_RANK = 57937
const RANK = 57938
const RECURSIVE = 57939
const ROW_NUMBER = 57940
const SYSTEM = 57941
const WINDOW = 57942
const ACTIVE = 57943
const ADMIN = 57944
const AUTOEXTEND_SIZE = 57945
const BUCKETS = 57946
const CLONE = 57947
const COLUMN_FORMAT = 57948
const COMPONENT = 57949
const DEFINITION = 57950
const ENFORCED = 57951
const ENGINE_ATTRIBUTE = 57952
const EXCLUDE = 57953
const FOLLOWING = 57954
const GET_MASTER_PUBLIC_KEY = 57955
const HISTOGRAM = 57956
const HISTORY = 57957
const INACTIVE = 57958
const INVISIBLE = 57959
const LOCKED = 57960
const MASTER_COMPRESSION_ALGORITHMS = 57961
const MASTER_PUBLIC_KEY_PATH = 57962
const MASTER_TLS_CIPHERSUITES = 57963
const MASTER_ZSTD_COMPRESSION_LEVEL = 57964
const NESTED = 57965
const NETWORK_NAMESPACE = 57966
const NOWAIT = 57967
const NULLS = 57968
const OJ = 57969
const OLD = 57970
const OPTIONAL = 57971
const ORDINALITY = 57972
const ORGANIZATION = 57973
const OTHERS = 57974
const PARTIAL = 57975
const PATH = 57976
const PERSIST = 57977
const PERSIST_ONLY = 57978
const PRECEDING = 57979
const PRIVILEGE_CHECKS_USER = 57980
const PROCESS = 57981
const RANDOM = 57982
const REFERENCE = 57983
const REQUIRE_ROW_FORMAT = 57984
const RESOURCE = 57985
const RESPECT = 57986
const RESTART = 57987
const RETAIN = 57988
const REUSE = 57989
const ROLE = 57990
const SECONDARY = 57991
const SECONDARY_ENGINE = 57992
const SECONDARY_ENGINE_ATTRIBUTE = 57993
const SECONDARY_LOAD = 57994
const SECONDARY_UNLOAD = 57995
const SIMPLE = 57996
const SKIP = 57997
const SRID = 57998
const THREAD_PRIORITY = 57999
const TIES = 58000
const UNBOUNDED = 58001
const VCPU = 58002
const VISIBLE = 58003
const RETURNING = 58004
const FORMAT_BYTES = 58005
const FORMAT_PICO_TIME = 58006
const PS_CURRENT_THREAD_ID = 58007
const PS_THREAD_ID = 58008
const GTID_SUBSET = 58009
const GTID_SUBTRACT = 58010
const WAIT_FOR_EXECUTED_GTID_SET = 58011
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 58012
const FORMAT = 58013
const TREE = 58014
const VITESS = 58015
const TRADITIONAL = 58016
const VTEXPLAIN = 58017
const VEXPLAIN = 58018
const PLAN = 58019
const LOCAL = 58020
const LOW_PRIORITY = 58021
const NO_WRITE_TO_BINLOG = 58022
const LOGS = 58023
const ERROR = 58024
const GENERAL = 58025
const HOSTS = 58026
const OPTIMIZER_COSTS = 58027
const USER_RESOURCES = 58028
const SLOW = 58029
const CHANNEL = 58030
const RELAY = 58031
const EXPORT = 58032
const CURRENT = 58033
const ROW = 58034
const ROWS = 58035
const AVG_ROW_LENGTH = 58036
const CONNECTION = 58037
const CHECKSUM = 58038
const DELAY_KEY_WRITE = 58039
const ENCRYPTION = 58040
const ENGINE = 58041
const INSERT_METHOD = 58042
const MAX_ROWS = 58043
const MIN_ROWS = 58044
const PACK_KEYS = 58045
const PASSWORD = 58046
const FIXED = 58047
const DYNAMIC = 58048
const COMPRESSED = 58049
const REDUNDANT = 58050
const COMPACT = 58051
const ROW_FORMAT = 58052
const STATS_AUTO_RECALC = 58053
const STATS_PERSISTENT = 58054
const STATS_SAMPLE_PAGES = 58055
const STORAGE = 58056
const MEMORY = 58057
const DISK = 58058
const PARTITIONS = 58059
const LINEAR = 58060
const RANGE = 58061
const LIST = 58062
const SUBPARTITION = 58063
const SUBPARTITIONS = 58064
const HASH = 58065

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"KILL",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"ASSIGNMENT_OPT",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"DBPARTITION",
	"TBPARTITION",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"DISTRIBUTION",
	"BROADCAST",
	"SINGLE",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"WITHSCHEMA",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"TINDEX",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"TableCount",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"PURGE",
	"BEFORE",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ADDDATE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURDATE",
	"DATE_ADD",
	"DATE_SUB",
	"NOW",
	"SUBDATE",
	"CURTIME",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"SYSDATE",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_HOUR",
	"SQL_TSI_MINUTE",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_SECOND",
	"SQL_TSI_MICROSECOND",
	"SQL_TSI_YEAR",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"ANY_VALUE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"ST_GeometryCollectionFromText",
	"ST_GeometryFromText",
	"ST_LineStringFromText",
	"ST_MultiLineStringFromText",
	"ST_MultiPointFromText",
	"ST_MultiPolygonFromText",
	"ST_PointFromText",
	"ST_PolygonFromText",
	"ST_GeometryCollectionFromWKB",
	"ST_GeometryFromWKB",
	"ST_LineStringFromWKB",
	"ST_MultiLineStringFromWKB",
	"ST_MultiPointFromWKB",
	"ST_MultiPolygonFromWKB",
	"ST_PointFromWKB",
	"ST_PolygonFromWKB",
	"ST_AsBinary",
	"ST_AsText",
	"ST_Dimension",
	"ST_Envelope",
	"ST_IsSimple",
	"ST_IsEmpty",
	"ST_GeometryType",
	"ST_X",
	"ST_Y",
	"ST_Latitude",
	"ST_Longitude",
	"ST_EndPoint",
	"ST_IsClosed",
	"ST_Length",
	"ST_NumPoints",
	"ST_StartPoint",
	"ST_PointN",
	"ST_Area",
	"ST_Centroid",
	"ST_ExteriorRing",
	"ST_InteriorRingN",
	"ST_NumInteriorRings",
	"ST_NumGeometries",
	"ST_GeometryN",
	"ST_LongFromGeoHash",
	"ST_PointFromGeoHash",
	"ST_LatFromGeoHash",
	"ST_GeoHash",
	"ST_AsGeoJSON",
	"ST_GeomFromGeoJSON",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"INFILE",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	13, 52,
	14, 52,
	-2, 41,
	-1, 54,
	1, 161,
	741, 161,
	-2, 169,
	-1, 55,
	136, 169,
	178, 169,
	355, 169,
	-2, 532,
	-1, 63,
	36, 793,
	243, 793,
	254, 793,
	294, 807,
	295, 807,
	-2, 795,
	-1, 68,
	245, 831,
	-2, 829,
	-1, 115,
	607, 1633,
	-2, 2279,
	-1, 124,
	242, 1606,
	-2, 134,
	-1, 126,
	1, 162,
	741, 162,
	-2, 169,
	-1, 137,
	137, 410,
	248, 410,
	-2, 521,
	-1, 156,
	136, 169,
	178, 169,
	355, 169,
	-2, 541,
	-1, 743,
	164, 42,
	-2, 46,
	-1, 949,
	87, 1623,
	-2, 1477,
	-1, 950,
	87, 1624,
	225, 1628,
	-2, 1478,
	-1, 951,
	225, 1627,
	-2, 43,
	-1, 1033,
	60, 905,
	-2, 920,
	-1, 1123,
	253, 44,
	261, 44,
	-2, 421,
	-1, 1212,
	1, 589,
	741, 589,
	-2, 169,
	-1, 1516,
	225, 1628,
	-2, 1478,
	-1, 1724,
	60, 906,
	-2, 925,
	-1, 1725,
	60, 907,
	-2, 926,
	-1, 1777,
	136, 169,
	178, 169,
	355, 169,
	-2, 462,
	-1, 1858,
	137, 410,
	248, 410,
	-2, 521,
	-1, 1867,
	253, 45,
	261, 45,
	-2, 422,
	-1, 2310,
	225, 1632,
	-2, 1626,
	-1, 2311,
	225, 1628,
	-2, 1624,
	-1, 2412,
	136, 169,
	178, 169,
	355, 169,
	-2, 463,
	-1, 2419,
	26, 190,
	-2, 192,
	-1, 2880,
	78, 99,
	88, 99,
	-2, 984,
	-1, 2949,
	716, 717,
	-2, 691,
	-1, 3162,
	50, 1574,
	-2, 1568,
	-1, 4006,
	716, 717,
	-2, 705,
	-1, 4110,
	90, 649,
	95, 649,
	105, 649,
	182, 649,
	183, 649,
	184, 649,
	185, 649,
	186, 649,
	187, 649,
	188, 649,
	189, 649,
	190, 649,
	191, 649,
	192, 649,
	193, 649,
	194, 649,
	195, 649,
	196, 649,
	197, 649,
	198, 649,
	199, 649,
	200, 649,
	201, 649,
	202, 649,
	203, 649,
	204, 649,
	205, 649,
	206, 649,
	207, 649,
	208, 649,
	209, 649,
	210, 649,
	211, 649,
	212, 649,
	213, 649,
	214, 649,
	215, 649,
	216, 649,
	217, 649,
	218, 649,
	219, 649,
	220, 649,
	221, 649,
	222, 649,
	223, 649,
	-2, 2018,
}

const yyPrivate = 57344

const yyLast = 56215

var yyAct = [...]int{
	1732, 960, 3659, 3660, 952, 2104, 3658, 4208, 4194, 906,
	3987, 953, 4081, 4158, 2409, 4159, 1780, 4108, 3453, 1279,
	4038, 3603, 2116, 4068, 3317, 1991, 2359, 3215, 3222, 2339,
	3182, 3967, 3273, 918, 3891, 3278, 43, 3275, 3274, 3272,
	3277, 3276, 3175, 3264, 2047, 3965, 3588, 5, 2341, 3178,
	2483, 3692, 2775, 3115, 3292, 3955, 2813, 1739, 915, 3179,
	747, 1277, 3176, 2852, 3498, 3492, 2363, 3230, 3697, 774,
	913, 3293, 914, 3295, 1049, 2383, 3519, 2379, 3173, 728,
	3163, 2839, 741, 3484, 2946, 2451, 2915, 2514, 2916, 2471,
	2446, 165, 2865, 2397, 2384, 2914, 42, 1026, 2831, 3000,
	3331, 2845, 1085, 1883, 2385, 2306, 44, 919, 2294, 2815,
	1050, 2261, 2262, 1726, 1865, 151, 1225, 1028, 2492, 2470,
	1030, 1131, 1034, 2535, 2453, 2907, 2139, 1113, 1118, 3018,
	2371, 1087, 1769, 1094, 2882, 2100, 1748, 742, 1705, 1528,
	2387, 1052, 2143, 101, 1455, 1440, 1092, 1872, 2075, 1987,
	1089, 2468, 1121, 1124, 105, 1969, 1093, 2442, 1119, 1120,
	752, 106, 2364, 1768, 1753, 1040, 1070, 1072, 2212, 1512,
	2151, 1836, 100, 757, 2443, 2170, 1488, 1037, 2307, 2055,
	86, 2046, 1275, 1268, 1702, 1035, 1999, 108, 169, 2992,
	129, 127, 128, 1963, 1831, 1036, 1857, 134, 135, 1208,
	1038, 1062, 107, 85, 751, 3996, 94, 1532, 2939, 99,
	4195, 1537, 3589, 1254, 3283, 2485, 2486, 2487, 745, 3261,
	2485, 4023, 2969, 2968, 2529, 2937, 679, 3280, 1456, 713,
	3581, 3544, 4136, 96, 96, 3008, 1949, 1456, 1025, 1057,
	1061, 3009, 4018, 130, 1043, 4019, 3283, 4024, 1160, 96,
	1086, 719, 136, 969, 970, 971, 96, 969, 970, 971,
	1135, 737, 2062, 2061, 3663, 2336, 2337, 3663, 2078, 2060,
	3281, 1111, 2059, 2058, 1044, 2057, 2, 2030, 1224, 1079,
	4129, 1080, 1168, 676, 2583, 677, 2811, 1066, 1027, 3159,
	1029, 1134, 3119, 1110, 1472, 2841, 3287, 1451, 1078, 1082,
	917, 2959, 3281, 4082, 4162, 192, 4219, 1102, 2518, 744,
	1161, 1164, 1165, 4157, 1051, 130, 1097, 1109, 1108, 1107,
	4201, 1733, 112, 113, 114, 4185, 3458, 118, 3287, 131,
	124, 153, 1177, 198, 2516, 3457, 671, 1078, 1082, 917,
	4140, 1466, 174, 713, 4019, 4200, 4138, 2962, 732, 733,
	1466, 3662, 2517, 3968, 3662, 2776, 2067, 1019, 1020, 1021,
	1022, 1762, 3350, 1024, 1033, 4139, 3887, 3886, 1159, 713,
	1158, 4137, 3594, 164, 4134, 3595, 4173, 3898, 3622, 152,
	1442, 4086, 713, 3604, 4069, 4086, 4078, 2511, 130, 87,
	3897, 87, 2109, 1067, 1068, 3621, 4113, 3370, 171, 1846,
	2812, 172, 2891, 87, 1770, 2890, 1771, 2592, 2892, 3211,
	2979, 2980, 3284, 2855, 2367, 3212, 3213, 1211, 2404, 2405,
	140, 141, 163, 162, 191, 87, 3007, 4001, 89, 2462,
	1469, 2589, 1470, 1471, 2039, 2040, 2403, 2991, 2856, 1272,
	3710, 1244, 1017, 4118, 3284, 1016, 1249, 1250, 714, 3988,
	1462, 3718, 2456, 1454, 3218, 1232, 3717, 2940, 2903, 1462,
	1233, 4116, 1106, 1489, 1217, 1218, 1261, 96, 1263, 96,
	4122, 4123, 2590, 1995, 2422, 2421, 193, 194, 3495, 3232,
	3233, 96, 2848, 2849, 713, 3347, 4117, 1490, 1491, 1492,
	1493, 1494, 1495, 1496, 1498, 1497, 1499, 1500, 713, 3219,
	1220, 3358, 1232, 96, 1245, 3053, 1207, 1233, 3356, 1238,
	1260, 1262, 2581, 1452, 2038, 1231, 727, 1230, 725, 2042,
	731, 3332, 2993, 3221, 1709, 1104, 1178, 157, 138, 160,
	145, 137, 1071, 158, 159, 1101, 1766, 2338, 1103, 1939,
	175, 3216, 1441, 2536, 3939, 4198, 3940, 3329, 3328, 181,
	146, 1251, 195, 196, 197, 2532, 1271, 4163, 2947, 3232,
	3233, 1252, 714, 2493, 2975, 2544, 3217, 4197, 149, 147,
	142, 143, 144, 148, 3324, 3323, 1106, 1206, 4164, 3325,
	139, 1970, 1247, 1248, 3326, 1940, 713, 1941, 714, 150,
	3231, 2551, 2547, 2549, 2550, 2548, 2552, 2553, 1265, 1246,
	3223, 714, 1270, 2455, 1239, 3234, 3320, 2584, 2585, 2587,
	2586, 3321, 2365, 2366, 1144, 3312, 1996, 2542, 1258, 192,
	1253, 1213, 1259, 3313, 2538, 2545, 1081, 1075, 1073, 2539,
	2942, 2367, 1264, 2559, 2995, 2560, 3583, 2561, 3871, 1106,
	3582, 1098, 2562, 131, 1184, 153, 1183, 1210, 1100, 1099,
	1975, 1142, 3579, 2496, 1105, 1114, 174, 1257, 3667, 1115,
	2380, 1115, 1712, 2540, 4220, 1081, 1075, 1073, 2541, 1153,
	3231, 1133, 1152, 3327, 1151, 1150, 3054, 2543, 4130, 166,
	1850, 1149, 1148, 1147, 1146, 3234, 1141, 164, 1154, 3618,
	3234, 1503, 1090, 152, 1242, 1503, 1090, 4169, 1871, 1088,
	3322, 2590, 1104, 714, 1127, 1090, 1126, 3118, 1163, 2999,
	2816, 2818, 171, 1988, 1126, 172, 1204, 714, 1162, 1278,
	2469, 1278, 1278, 1063, 2996, 2522, 2521, 1984, 1443, 1133,
	1171, 1133, 3254, 1844, 1859, 1860, 163, 162, 191, 2974,
	1843, 1444, 1842, 3186, 2957, 1461, 1458, 1459, 1460, 1465,
	1467, 1464, 1209, 1463, 1461, 1458, 1459, 1460, 1465, 1467,
	1464, 2941, 1463, 1457, 2977, 1985, 4131, 1840, 1105, 1145,
	1767, 1155, 1457, 3578, 4212, 161, 1132, 1223, 670, 1504,
	1505, 1136, 1126, 3012, 3496, 2990, 1138, 2604, 2989, 3980,
	193, 194, 3533, 1139, 1137, 3514, 2513, 1228, 2887, 1234,
	1235, 1236, 1237, 2851, 3220, 714, 1143, 3995, 1112, 1870,
	2938, 2788, 2112, 1757, 1664, 1140, 2515, 1222, 3127, 1514,
	3126, 126, 2846, 1273, 1274, 2410, 2905, 678, 1503, 2365,
	2366, 1105, 1500, 4084, 1132, 1974, 1132, 4084, 3210, 1136,
	1126, 157, 1861, 160, 1138, 1858, 2615, 158, 159, 1255,
	2000, 1139, 1137, 1483, 175, 966, 966, 1733, 1433, 1170,
	1046, 1269, 1227, 181, 4009, 4083, 195, 196, 197, 4083,
	1156, 966, 3002, 1978, 3574, 1976, 1977, 3001, 1979, 1980,
	3002, 2817, 2080, 154, 3508, 3001, 155, 3285, 3286, 2537,
	2152, 2051, 1981, 90, 1434, 1435, 2081, 1501, 1502, 2079,
	3289, 1241, 1074, 2961, 2153, 3620, 1772, 3039, 3348, 2144,
	2144, 2624, 1243, 1266, 2930, 1472, 4174, 167, 1471, 3285,
	3286, 3542, 3543, 121, 179, 1157, 1951, 1950, 1952, 1953,
	1954, 3661, 3289, 1510, 3661, 1133, 2615, 2459, 1174, 1175,
	1176, 1074, 1179, 1180, 1181, 1182, 3706, 2960, 1185, 1186,
	1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196,
	1197, 1198, 1199, 1200, 1201, 187, 95, 1450, 95, 3441,
	2591, 1133, 1506, 1507, 1508, 1509, 4121, 1229, 2460, 1219,
	95, 1534, 1520, 1535, 1536, 2458, 3549, 1971, 1216, 1972,
	1539, 1540, 1973, 166, 2512, 2179, 122, 1256, 2001, 1700,
	4210, 3548, 95, 4211, 1472, 4209, 1226, 2500, 168, 173,
	170, 176, 177, 178, 180, 182, 183, 184, 185, 2461,
	4120, 1212, 1746, 1967, 186, 188, 189, 190, 4165, 2457,
	1710, 1711, 1470, 1471, 1880, 2150, 1734, 1736, 1879, 1869,
	1132, 1472, 2069, 2071, 2072, 3224, 1126, 1129, 1130, 3228,
	1090, 1469, 2505, 1470, 1471, 2505, 3227, 1123, 1127, 1133,
	3041, 1716, 1701, 2651, 2510, 1720, 2508, 2070, 1144, 1755,
	1142, 1030, 2596, 2597, 2598, 1523, 1132, 3534, 1169, 1122,
	1042, 4216, 1166, 1472, 4040, 3973, 4221, 1774, 1745, 161,
	3229, 2509, 738, 2171, 2507, 3225, 2299, 3615, 2173, 3616,
	3226, 1714, 2178, 2174, 3316, 1959, 2175, 2176, 2177, 4214,
	3879, 2172, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187,
	2188, 1495, 1496, 1498, 1497, 1499, 1500, 1717, 1701, 4041,
	3974, 1087, 1670, 1671, 1672, 1673, 1674, 1675, 3878, 1733,
	1469, 1718, 1470, 1471, 3869, 105, 2149, 1957, 1719, 3633,
	1884, 1884, 106, 1884, 1946, 1884, 1884, 1706, 1893, 1884,
	1884, 1884, 1884, 1884, 1132, 1694, 3632, 4179, 1733, 1958,
	1126, 1129, 1130, 4222, 1090, 1087, 3556, 1469, 108, 1470,
	1471, 1123, 1127, 3019, 1493, 1494, 1495, 1496, 1498, 1497,
	1499, 1500, 3555, 1877, 969, 970, 971, 154, 3545, 3262,
	155, 734, 1053, 3250, 2972, 1059, 1059, 2912, 1735, 2911,
	1961, 1956, 1965, 1965, 2910, 2465, 1437, 1960, 1945, 1469,
	1912, 1470, 1471, 1915, 1863, 1917, 1944, 1943, 719, 1942,
	1990, 167, 1027, 1856, 1715, 1932, 1934, 1472, 179, 1926,
	1738, 1029, 1993, 1923, 1922, 1885, 1875, 1886, 2621, 1888,
	1890, 1873, 1873, 1894, 1896, 1898, 1900, 1902, 1921, 1892,
	1472, 1489, 1713, 1766, 1485, 4183, 1486, 4182, 1916, 1763,
	1764, 3021, 4166, 1489, 1278, 3011, 735, 4151, 1874, 187,
	1487, 1501, 1502, 1484, 4149, 1490, 1491, 1492, 1493, 1494,
	1495, 1496, 1498, 1497, 1499, 1500, 1839, 1490, 1491, 1492,
	1493, 1494, 1495, 1496, 1498, 1497, 1499, 1500, 2136, 1721,
	3539, 719, 1472, 1853, 1854, 1852, 4105, 1064, 1866, 2894,
	719, 2620, 168, 173, 170, 176, 177, 178, 180, 182,
	183, 184, 185, 4004, 1920, 4003, 2372, 2373, 186, 188,
	189, 190, 3977, 3031, 3030, 3029, 1733, 2299, 3023, 3976,
	3027, 2296, 3022, 3997, 3020, 2004, 2481, 2480, 3975, 3025,
	2298, 3874, 2008, 3858, 2010, 2011, 2012, 2013, 3024, 1989,
	3857, 2017, 3705, 1469, 964, 1470, 1471, 2479, 2478, 1845,
	2477, 2476, 3703, 2029, 2837, 4196, 3026, 3028, 1476, 1477,
	1478, 1479, 1480, 1481, 1482, 1474, 1469, 1966, 1470, 1471,
	3629, 130, 3614, 1109, 1108, 1107, 2128, 2117, 2118, 2119,
	2120, 2130, 2121, 2122, 2123, 2135, 2131, 2124, 2125, 2132,
	2133, 2134, 2126, 2127, 2129, 4153, 1733, 2006, 1490, 1491,
	1492, 1493, 1494, 1495, 1496, 1498, 1497, 1499, 1500, 3611,
	1472, 3906, 1278, 1278, 2002, 2003, 1472, 2027, 1469, 2028,
	1470, 1471, 1472, 3512, 1733, 2044, 1468, 1733, 2007, 1699,
	1489, 1698, 2611, 102, 1697, 2014, 2015, 2016, 1472, 1742,
	104, 1489, 1472, 2603, 103, 2837, 4077, 2837, 4076, 3905,
	43, 1472, 2663, 43, 1490, 1491, 1492, 1493, 1494, 1495,
	1496, 1498, 1497, 1499, 1500, 1490, 1491, 1492, 1493, 1494,
	1495, 1496, 1498, 1497, 1499, 1500, 2107, 2107, 3553, 2105,
	2105, 2108, 1472, 2101, 3538, 1743, 1489, 1491, 1492, 1493,
	1494, 1495, 1496, 1498, 1497, 1499, 1500, 102, 3333, 1733,
	4177, 1733, 2883, 1472, 2147, 3330, 4092, 1733, 103, 2148,
	1490, 1491, 1492, 1493, 1494, 1495, 1496, 1498, 1497, 1499,
	1500, 111, 4090, 1733, 3862, 1472, 4088, 1733, 1700, 1472,
	2661, 3253, 110, 3252, 109, 3952, 1733, 2837, 4055, 3861,
	1468, 1733, 1514, 104, 2921, 2208, 1469, 2908, 1470, 1471,
	1696, 1472, 1469, 2190, 1470, 1471, 2572, 111, 1469, 2145,
	1470, 1471, 2076, 1733, 1472, 2884, 3950, 1733, 110, 2571,
	109, 2527, 1472, 2526, 1469, 2886, 1470, 1471, 1469, 2382,
	1470, 1471, 2362, 2073, 104, 2035, 2036, 1469, 1733, 1470,
	1471, 1701, 2344, 1472, 86, 2837, 4051, 86, 4031, 1733,
	3602, 2052, 1733, 3592, 3994, 3882, 1733, 2837, 3870, 3947,
	1733, 2837, 3600, 3929, 1733, 2948, 1472, 2031, 1469, 1997,
	1470, 1471, 3592, 1733, 2926, 2292, 1955, 2659, 2077, 2837,
	3590, 2418, 2082, 2505, 1733, 3483, 1733, 2506, 1733, 1469,
	1947, 1470, 1471, 1733, 1278, 2743, 1733, 3174, 3476, 1733,
	2837, 3308, 3507, 2111, 2310, 2325, 3473, 1733, 3507, 1472,
	2309, 1469, 2883, 1470, 1471, 1469, 1937, 1470, 1471, 3243,
	3242, 1468, 1734, 2332, 2138, 2140, 2084, 3471, 1733, 3240,
	3241, 3238, 3239, 2154, 2155, 2156, 2157, 1469, 1933, 1470,
	1471, 1929, 2348, 3238, 3237, 2505, 2308, 2168, 1472, 2295,
	1469, 1733, 1470, 1471, 1928, 2189, 2356, 1472, 1469, 2297,
	1470, 1471, 2862, 1733, 2590, 2970, 1835, 2951, 2944, 2945,
	2360, 2837, 2836, 2202, 1927, 2884, 2833, 1744, 1472, 1469,
	1267, 1470, 1471, 2213, 1755, 2590, 1205, 1278, 2617, 1733,
	1472, 104, 2313, 2314, 4167, 2110, 1733, 2310, 1835, 1834,
	1778, 1777, 1469, 2377, 1470, 1471, 2861, 110, 1087, 3509,
	4036, 2853, 2349, 2853, 2350, 2419, 2083, 2391, 2085, 2086,
	2087, 2088, 2089, 2090, 2092, 2094, 2095, 2096, 2097, 2098,
	2099, 105, 3433, 1733, 3205, 1472, 4008, 2837, 106, 2308,
	2862, 3431, 1733, 3462, 2590, 1469, 3240, 1470, 1471, 2617,
	1472, 105, 1473, 2286, 2287, 2288, 2289, 2290, 106, 2466,
	2355, 2862, 3427, 1733, 2312, 1094, 3147, 2315, 2316, 2402,
	2617, 2743, 2648, 2647, 3424, 1733, 1468, 2505, 2428, 2429,
	2430, 2431, 1529, 2862, 1469, 3507, 1470, 1471, 2488, 2413,
	2370, 1737, 1087, 1469, 2331, 1470, 1471, 2343, 1094, 1043,
	2204, 2414, 1847, 1848, 1849, 2334, 1472, 2110, 2333, 2053,
	2037, 1983, 1765, 2213, 1469, 1472, 1470, 1471, 1117, 3422,
	1733, 1116, 2354, 2357, 96, 4126, 1469, 2417, 1470, 1471,
	1032, 4058, 3894, 3526, 3420, 1733, 3893, 1740, 3859, 2375,
	3721, 2448, 3573, 3570, 2454, 1087, 1079, 1472, 1080, 3551,
	2101, 2401, 2400, 2399, 2101, 2101, 2494, 2416, 2415, 3375,
	3374, 1837, 1472, 2447, 2395, 3314, 3267, 3263, 1472, 1924,
	1925, 1469, 1472, 1470, 1471, 1930, 1931, 2423, 1472, 2424,
	2425, 2426, 2427, 1472, 2973, 2491, 1469, 2464, 1470, 1471,
	3418, 1733, 1472, 2952, 2531, 2434, 2435, 2436, 2437, 3416,
	1733, 2444, 2449, 1135, 2499, 2439, 2445, 2502, 96, 2503,
	1472, 3365, 2463, 1873, 2433, 2467, 2432, 2475, 1472, 2438,
	2440, 2441, 3557, 1962, 1868, 1864, 1833, 123, 3265, 2918,
	2917, 3414, 1733, 1211, 1134, 2498, 1472, 2449, 2519, 2501,
	2497, 3561, 1469, 3318, 1470, 1471, 3412, 1733, 3520, 3521,
	3895, 1469, 3901, 1470, 1471, 2520, 3410, 1733, 2462, 1472,
	2347, 4191, 3408, 1733, 2033, 675, 1472, 3406, 1733, 4189,
	4160, 2582, 1908, 3558, 3559, 3560, 2523, 1733, 2918, 4017,
	2524, 2525, 3934, 1469, 3523, 1470, 1471, 3259, 3562, 3563,
	3564, 3525, 3258, 1472, 3404, 1733, 3257, 3174, 1469, 2931,
	1470, 1471, 3402, 1733, 1469, 2566, 1470, 1471, 1469, 3194,
	1470, 1471, 3193, 3197, 1469, 4013, 1470, 1471, 3198, 1469,
	3528, 1470, 1471, 1909, 1910, 1911, 2034, 3896, 1469, 2361,
	1470, 1471, 2609, 2613, 1741, 3199, 2614, 2871, 2872, 2574,
	2575, 736, 1278, 2612, 2577, 2353, 1469, 4047, 1470, 1471,
	3400, 1733, 2310, 2578, 1469, 2565, 1470, 1471, 2309, 2618,
	3195, 2619, 2530, 1904, 3513, 3196, 2626, 1749, 3152, 3151,
	2628, 2629, 1469, 3972, 1470, 1471, 3696, 3398, 1733, 2635,
	2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2608,
	2646, 3164, 3166, 3500, 2610, 1469, 4103, 1470, 1471, 3698,
	3167, 3499, 1469, 2580, 1470, 1471, 4049, 2076, 1838, 3503,
	1905, 1906, 1907, 2652, 2653, 2654, 2655, 2656, 2588, 2658,
	4100, 3984, 3982, 2660, 3161, 1982, 1047, 2665, 2666, 1469,
	2667, 1470, 1471, 2670, 1048, 2671, 2673, 2675, 2676, 2677,
	2678, 2679, 2680, 2682, 2684, 2685, 2686, 2688, 2599, 2690,
	2691, 2693, 2695, 2697, 2699, 2701, 2703, 2705, 2707, 2709,
	2711, 2713, 2715, 2717, 2719, 2721, 2723, 2725, 2727, 2728,
	2729, 115, 2731, 2077, 2733, 3236, 2735, 2736, 1472, 2738,
	2740, 2742, 3687, 2901, 3686, 2745, 2922, 2152, 1173, 2749,
	1472, 1172, 102, 2754, 2755, 2756, 2757, 3341, 2917, 104,
	1472, 2153, 102, 103, 3005, 2623, 2768, 2769, 2770, 2771,
	2772, 2773, 2958, 103, 2777, 2778, 1472, 1436, 2860, 131,
	2601, 1472, 2780, 3505, 104, 2372, 2373, 2786, 1472, 4206,
	3255, 2569, 3685, 2789, 2790, 2791, 2792, 2793, 1731, 1727,
	1998, 4097, 3993, 1472, 2800, 2801, 3889, 2802, 3235, 2875,
	2805, 2807, 2356, 1728, 2809, 2358, 2630, 2657, 1055, 1056,
	1472, 2558, 3396, 1733, 2821, 2557, 2556, 2107, 2555, 1472,
	2105, 2822, 2554, 2645, 3394, 1733, 111, 1472, 2351, 2352,
	1730, 3485, 1729, 2827, 3380, 1733, 2594, 110, 109, 109,
	4150, 3150, 1472, 110, 2842, 4148, 3693, 4104, 104, 3149,
	3363, 1733, 1472, 4101, 4050, 2808, 1733, 1472, 3493, 111,
	2600, 2820, 2602, 3992, 1469, 3960, 1470, 1471, 1472, 3959,
	110, 2605, 109, 2606, 3937, 3704, 1469, 3478, 1470, 1471,
	3702, 3701, 3694, 43, 2853, 3571, 1469, 1472, 1470, 1471,
	3504, 3502, 3268, 2876, 2857, 3866, 2878, 2489, 2823, 2838,
	2825, 1851, 1469, 3474, 1470, 1471, 1203, 1469, 111, 1470,
	1471, 2806, 1733, 1472, 1469, 1202, 1470, 1471, 1472, 110,
	3671, 1054, 2833, 4193, 4192, 4192, 2781, 1733, 3055, 1469,
	1472, 1470, 1471, 2649, 1472, 2877, 2758, 1733, 2847, 2834,
	1472, 3439, 2925, 2810, 2345, 1706, 1469, 1758, 1470, 1471,
	1750, 4193, 2750, 1733, 3978, 1469, 1701, 1470, 1471, 116,
	117, 2904, 2906, 1469, 3537, 1470, 1471, 1045, 2830, 2360,
	2050, 2741, 1733, 11, 2897, 3716, 2950, 2850, 1469, 2048,
	1470, 1471, 10, 3, 2049, 2955, 2943, 8, 1469, 98,
	1470, 1471, 1, 1469, 1023, 1470, 1471, 2739, 1733, 9,
	1065, 2885, 2835, 3575, 1469, 2888, 1470, 1471, 2967, 2895,
	4099, 2360, 2454, 2898, 2726, 1733, 4046, 3983, 2724, 1733,
	4048, 4102, 3715, 1469, 3435, 1470, 1471, 3981, 2971, 2909,
	1439, 2063, 2064, 2065, 2066, 2867, 2870, 2871, 2872, 2868,
	1438, 2869, 2873, 3541, 2881, 4115, 2074, 2919, 691, 1469,
	2965, 1470, 1471, 2335, 1469, 1704, 1470, 1471, 4161, 4111,
	4112, 2928, 2932, 2933, 2934, 1948, 1469, 2927, 1470, 1471,
	1469, 1938, 1470, 1471, 1856, 2964, 1469, 1964, 1470, 1471,
	3605, 2113, 2114, 2260, 3890, 2953, 2954, 2137, 1059, 1059,
	2141, 3271, 2495, 2101, 2146, 3569, 2452, 1125, 3015, 3016,
	156, 3043, 3044, 3045, 3046, 3047, 2411, 2412, 2963, 2158,
	2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 4071,
	2169, 3052, 120, 1083, 2191, 2192, 2193, 2194, 2195, 2196,
	2198, 119, 2203, 1128, 2205, 2206, 2207, 1240, 2209, 2210,
	2211, 2101, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221,
	2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231,
	2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241,
	2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251,
	2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2263, 2264,
	2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274,
	2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284,
	2285, 3013, 3032, 3048, 3036, 2997, 2291, 2994, 2293, 3033,
	2300, 2301, 2302, 2303, 2304, 2305, 1059, 2490, 1059, 1059,
	1059, 1059, 1059, 3593, 2902, 2420, 1784, 1782, 1783, 2317,
	2318, 2319, 2320, 2321, 2322, 2323, 2324, 1781, 2326, 2327,
	2328, 2329, 2330, 1786, 1731, 1727, 3114, 3003, 1785, 3349,
	3004, 2650, 3440, 2041, 726, 2874, 1472, 3057, 1278, 1728,
	720, 3035, 2867, 2870, 2871, 2872, 2868, 199, 2869, 2873,
	1773, 1751, 3520, 3521, 3454, 1167, 1059, 681, 3244, 2528,
	687, 1521, 2032, 3014, 1724, 1725, 1730, 3148, 1729, 1884,
	2889, 3120, 1077, 1069, 3122, 2346, 2824, 1472, 2368, 2369,
	1076, 4044, 3867, 3497, 3160, 3162, 1472, 3157, 2840, 3165,
	3131, 3158, 2295, 3971, 2295, 3695, 3093, 1472, 4056, 3183,
	2899, 1278, 2297, 1747, 2297, 2408, 3461, 2391, 3184, 1884,
	2622, 3103, 3104, 3105, 3106, 3107, 2142, 1511, 3202, 2388,
	2722, 1733, 3666, 1472, 2068, 749, 748, 1472, 3121, 746,
	3123, 2826, 1034, 3130, 2854, 3154, 2391, 2391, 2391, 2391,
	2391, 1475, 954, 2814, 3187, 1759, 1472, 1993, 2866, 3155,
	3204, 2864, 2863, 3131, 3177, 1472, 2391, 3017, 2567, 2391,
	3177, 2720, 1733, 3146, 3142, 3034, 2450, 3171, 2396, 3153,
	3372, 3095, 1469, 3097, 1470, 1471, 3522, 3518, 3143, 3144,
	3145, 2718, 1733, 4107, 3168, 3169, 2390, 2386, 3156, 3108,
	3109, 3110, 3111, 2832, 1087, 1035, 905, 3188, 3206, 904,
	3191, 3207, 2360, 3185, 3180, 1036, 3200, 3371, 3189, 3190,
	758, 3192, 2913, 1469, 750, 1470, 1471, 740, 903, 3291,
	3208, 902, 1469, 2360, 1470, 1471, 3298, 105, 3214, 3299,
	2716, 1733, 2976, 1469, 106, 1470, 1471, 3315, 2978, 3368,
	3309, 3245, 2900, 3247, 3246, 3311, 3270, 3319, 1453, 1723,
	3617, 3343, 1096, 3346, 3999, 2593, 3369, 1472, 1722, 1469,
	4006, 1470, 1471, 1469, 3279, 1470, 1471, 3587, 3260, 3297,
	3301, 1472, 3300, 3360, 3361, 2949, 3362, 3290, 3364, 3366,
	1472, 2454, 1469, 2533, 1470, 1471, 2482, 3269, 3307, 71,
	47, 1469, 3373, 1470, 1471, 3966, 4037, 3377, 3378, 3379,
	3381, 3382, 3383, 3384, 3385, 3386, 3387, 3388, 3389, 3390,
	3391, 3392, 3393, 3395, 3397, 3399, 3401, 3403, 3405, 3407,
	3409, 3411, 3413, 3415, 3417, 3419, 3421, 3423, 3425, 3426,
	3428, 3429, 3430, 3432, 3337, 3334, 3434, 3336, 3436, 3437,
	3438, 2714, 1733, 3442, 3443, 3444, 3445, 3446, 3447, 3448,
	3449, 3450, 3451, 3452, 3354, 2712, 1733, 897, 894, 1472,
	3339, 3340, 3459, 3455, 2710, 1733, 3464, 1472, 3668, 3669,
	3468, 3469, 3670, 3470, 3472, 3116, 3475, 3477, 3117, 3479,
	3480, 3481, 3482, 4020, 4021, 893, 4022, 3488, 2197, 3344,
	1449, 1446, 4128, 1469, 2043, 1470, 1471, 97, 37, 36,
	1472, 35, 34, 33, 27, 26, 25, 1469, 3456, 1470,
	1471, 24, 23, 30, 20, 3460, 1469, 22, 1470, 1471,
	21, 19, 3510, 3511, 3282, 4156, 3515, 4205, 1472, 125,
	57, 3351, 3352, 54, 3353, 52, 133, 3355, 132, 3357,
	55, 3359, 51, 2708, 1733, 1214, 49, 32, 31, 18,
	17, 2706, 1733, 16, 15, 14, 1472, 3491, 13, 12,
	7, 6, 40, 1472, 39, 38, 29, 2920, 3486, 3487,
	3489, 3345, 2923, 2924, 1472, 28, 41, 2625, 4, 2391,
	3494, 2936, 2484, 3501, 2704, 1733, 0, 2631, 2632, 2633,
	2634, 3517, 0, 1472, 3506, 1469, 0, 1470, 1471, 3527,
	1472, 0, 0, 1469, 1472, 1470, 1471, 0, 3524, 0,
	3531, 3532, 2702, 1733, 0, 0, 0, 2360, 2360, 1472,
	0, 3530, 3529, 0, 0, 1472, 0, 0, 3297, 3301,
	1529, 3300, 3536, 3591, 3576, 3577, 1469, 0, 1470, 1471,
	2700, 1733, 0, 0, 3552, 0, 3554, 2698, 1733, 1472,
	0, 0, 0, 1472, 3597, 3598, 0, 0, 2696, 1733,
	1472, 0, 0, 0, 1469, 0, 1470, 1471, 3606, 1472,
	3608, 3609, 3610, 3599, 0, 3612, 3613, 2694, 1733, 0,
	0, 3607, 1472, 0, 2692, 1733, 1472, 3619, 2687, 1733,
	3623, 0, 1469, 0, 1470, 1471, 1472, 0, 0, 1469,
	0, 1470, 1471, 2683, 1733, 0, 1472, 0, 3601, 2804,
	1469, 1472, 1470, 1471, 0, 0, 1472, 3634, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1472, 0, 1469,
	0, 1470, 1471, 2681, 1733, 0, 1469, 2803, 1470, 1471,
	1469, 0, 1470, 1471, 2674, 1733, 0, 0, 0, 0,
	0, 0, 1472, 2672, 1733, 1469, 1472, 1470, 1471, 3624,
	0, 1469, 1472, 1470, 1471, 0, 2799, 0, 0, 0,
	2798, 0, 0, 0, 3463, 0, 3465, 3466, 3467, 0,
	2797, 3657, 0, 1472, 3628, 1469, 0, 1470, 1471, 1469,
	2796, 1470, 1471, 1472, 3665, 2795, 1469, 0, 1470, 1471,
	2794, 0, 3672, 1749, 0, 1469, 0, 1470, 1471, 1472,
	0, 2785, 0, 0, 0, 0, 0, 0, 1469, 0,
	1470, 1471, 1469, 0, 1470, 1471, 3674, 0, 3675, 3676,
	3677, 0, 1469, 0, 1470, 1471, 2784, 0, 0, 0,
	2783, 0, 1469, 0, 1470, 1471, 2782, 1469, 0, 1470,
	1471, 0, 1469, 0, 1470, 1471, 0, 0, 3690, 0,
	0, 0, 3712, 1469, 3714, 1470, 1471, 2779, 0, 0,
	2107, 0, 0, 2105, 3723, 1472, 0, 2774, 0, 0,
	0, 0, 0, 0, 0, 43, 0, 0, 1469, 0,
	1470, 1471, 1469, 2767, 1470, 1471, 3711, 3691, 1469, 0,
	1470, 1471, 3700, 3713, 0, 3699, 3177, 0, 0, 3709,
	3707, 3664, 0, 0, 0, 0, 0, 0, 0, 1469,
	0, 1470, 1471, 2360, 0, 0, 0, 0, 3881, 1469,
	0, 1470, 1471, 3724, 3725, 0, 0, 3888, 3727, 3883,
	3868, 0, 0, 0, 0, 1469, 0, 1470, 1471, 0,
	0, 0, 0, 0, 1278, 3719, 0, 3180, 0, 2766,
	3655, 3180, 3865, 3863, 0, 3864, 3899, 3900, 0, 3902,
	0, 3903, 3904, 0, 1472, 3880, 3907, 3908, 3909, 3910,
	3911, 3912, 3913, 3914, 3915, 3916, 3917, 3918, 3919, 3920,
	3921, 3922, 3923, 3924, 3925, 3926, 3927, 3928, 3884, 3930,
	3933, 3931, 3932, 0, 3885, 2107, 3892, 0, 2105, 3935,
	0, 1469, 0, 1470, 1471, 3942, 3943, 3944, 3945, 3946,
	3948, 3949, 3951, 3953, 3954, 3956, 0, 3872, 3010, 3248,
	3249, 0, 0, 0, 3957, 0, 0, 0, 3957, 3957,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1059, 0, 0, 3037, 3038, 0, 0, 3040, 2765, 0,
	3042, 0, 3938, 0, 1472, 0, 3941, 3990, 0, 0,
	0, 2360, 1472, 0, 0, 0, 0, 0, 0, 0,
	3049, 3050, 3051, 3964, 3961, 3962, 0, 3963, 3986, 0,
	0, 0, 3056, 0, 0, 3058, 3059, 3060, 0, 0,
	3979, 3061, 3062, 0, 3936, 3063, 0, 3064, 0, 0,
	1469, 0, 1470, 1471, 3065, 1472, 3066, 0, 0, 0,
	3067, 0, 3068, 0, 0, 3069, 0, 3070, 0, 3071,
	0, 3072, 1472, 3073, 3985, 3074, 0, 3075, 0, 3076,
	1472, 3077, 0, 3078, 0, 3079, 0, 3080, 2764, 3081,
	0, 3082, 0, 3083, 1472, 3084, 2763, 3085, 3180, 3086,
	0, 1472, 3989, 3087, 0, 3088, 0, 3089, 1472, 0,
	3090, 0, 3091, 0, 3092, 1472, 2263, 3094, 0, 0,
	3096, 0, 0, 3098, 3099, 3100, 3101, 0, 0, 0,
	0, 3102, 2263, 2263, 2263, 2263, 2263, 1472, 0, 2762,
	1469, 0, 1470, 1471, 0, 0, 0, 3112, 1469, 2360,
	1470, 1471, 0, 0, 0, 3125, 2761, 0, 3129, 3970,
	1059, 0, 0, 0, 2760, 0, 3991, 3132, 3133, 3134,
	3135, 3136, 3137, 0, 0, 0, 3138, 3139, 2759, 3140,
	0, 3141, 0, 2360, 2360, 2753, 0, 0, 0, 0,
	0, 1469, 2752, 1470, 1471, 0, 0, 0, 0, 2751,
	4010, 4011, 0, 43, 4002, 0, 0, 0, 1469, 4005,
	1470, 1471, 4016, 0, 4007, 0, 1469, 0, 1470, 1471,
	0, 2748, 0, 0, 0, 0, 3172, 0, 0, 0,
	1469, 1472, 1470, 1471, 0, 0, 4032, 1469, 0, 1470,
	1471, 0, 4033, 4034, 1469, 0, 1470, 1471, 0, 0,
	0, 1469, 3203, 1470, 1471, 0, 0, 0, 4039, 3998,
	0, 0, 1472, 0, 0, 0, 0, 0, 4052, 1472,
	4043, 4026, 0, 1469, 4027, 1470, 1471, 0, 0, 0,
	3546, 3547, 0, 0, 0, 0, 0, 0, 0, 0,
	4035, 0, 0, 0, 0, 4079, 4080, 0, 1278, 1278,
	0, 4042, 965, 0, 0, 88, 0, 43, 0, 4087,
	4089, 4091, 0, 3266, 4085, 2747, 0, 3177, 4057, 4062,
	4059, 4093, 4067, 4070, 4064, 4063, 4061, 4066, 4065, 0,
	0, 0, 0, 3580, 0, 3184, 1472, 3584, 3585, 3586,
	0, 4127, 0, 4109, 4054, 0, 2746, 0, 4095, 0,
	3892, 4073, 0, 2744, 0, 1472, 4098, 0, 0, 0,
	0, 4124, 4106, 0, 4114, 4119, 0, 1469, 0, 1470,
	1471, 0, 0, 719, 4085, 4135, 1472, 0, 0, 4147,
	1472, 4132, 4133, 0, 1472, 0, 4039, 0, 4152, 1031,
	0, 88, 1472, 0, 4015, 0, 1472, 4145, 1469, 0,
	1470, 1471, 4025, 1472, 0, 1469, 4155, 1470, 1471, 0,
	1031, 1472, 0, 0, 3367, 1472, 2360, 0, 713, 1472,
	2737, 0, 0, 4176, 4178, 4180, 1095, 0, 3376, 0,
	0, 1993, 0, 4168, 4171, 4172, 3455, 4170, 2107, 2734,
	0, 2105, 4187, 4109, 4175, 4181, 0, 0, 0, 0,
	4186, 4184, 0, 4190, 4188, 0, 0, 0, 0, 0,
	2732, 0, 4204, 710, 2730, 0, 4085, 4199, 2689, 0,
	0, 0, 1469, 0, 1470, 1471, 2669, 0, 4207, 0,
	2668, 4213, 0, 4217, 4218, 4215, 0, 2664, 0, 0,
	0, 1469, 0, 1470, 1471, 2662, 0, 0, 0, 2627,
	0, 2107, 0, 2616, 2105, 4223, 4225, 4226, 3932, 0,
	4224, 695, 1469, 0, 1470, 1471, 1469, 0, 1470, 1471,
	1469, 0, 1470, 1471, 693, 0, 0, 0, 1469, 0,
	1470, 1471, 1469, 0, 1470, 1471, 0, 0, 0, 1469,
	0, 1470, 1471, 0, 0, 0, 0, 1469, 0, 1470,
	1471, 1469, 0, 1470, 1471, 1469, 0, 1470, 1471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 690, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 705, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 700, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 703, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1489, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3875, 3876, 3877, 3572, 714, 0, 0,
	0, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1498, 1497,
	1499, 1500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3596,
	0, 0, 680, 0, 682, 696, 4141, 716, 0, 715,
	686, 0, 684, 688, 697, 689, 0, 683, 0, 694,
	0, 0, 685, 698, 699, 702, 706, 707, 708, 704,
	701, 0, 692, 717, 0, 0, 4154, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1801, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3625, 0, 3626, 0,
	0, 3627, 0, 0, 3630, 3631, 0, 0, 0, 0,
	0, 0, 0, 3635, 0, 0, 0, 907, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3636, 0, 3637,
	0, 3638, 0, 3639, 0, 3640, 0, 3641, 0, 3642,
	0, 3643, 0, 3644, 0, 3645, 0, 3646, 0, 3647,
	0, 3648, 0, 3649, 0, 3650, 0, 3651, 0, 0,
	3652, 0, 0, 0, 3653, 0, 3654, 0, 0, 0,
	0, 0, 3656, 0, 0, 200, 0, 0, 674, 0,
	0, 0, 0, 0, 0, 0, 0, 2136, 0, 0,
	0, 0, 0, 0, 0, 3673, 0, 674, 0, 0,
	0, 0, 0, 0, 3678, 0, 3679, 3680, 0, 3681,
	0, 3682, 0, 1041, 0, 0, 3683, 0, 0, 0,
	0, 0, 0, 0, 1789, 0, 0, 0, 0, 0,
	1060, 1060, 0, 0, 0, 0, 0, 0, 0, 0,
	674, 3708, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3720, 0, 0, 3722, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3726, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3860, 2128, 2117, 2118, 2119, 2120,
	2130, 2121, 2122, 2123, 2135, 2131, 2124, 2125, 2132, 2133,
	2134, 2126, 2127, 2129, 0, 0, 0, 0, 0, 0,
	0, 0, 1802, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 718, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 711, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1276, 712, 1276, 1276, 1815, 1818, 1819, 1820,
	1821, 1822, 1823, 0, 1824, 1825, 1827, 1828, 1826, 1829,
	1830, 1803, 1804, 1805, 1806, 1787, 1788, 1816, 0, 1790,
	0, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799,
	0, 0, 1800, 1807, 1808, 1809, 1810, 0, 1811, 1812,
	1813, 1814, 1031, 1513, 1518, 1519, 3969, 1522, 1524, 1525,
	1526, 1527, 0, 1530, 1531, 1533, 1533, 0, 1533, 1533,
	1538, 1538, 1538, 1541, 1542, 1543, 1544, 1545, 1546, 1547,
	1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557,
	1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567,
	1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577,
	1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587,
	1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597,
	1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607,
	1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617,
	1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627,
	1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637,
	1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647,
	1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657,
	1658, 1659, 1660, 1661, 1662, 0, 0, 0, 0, 1663,
	0, 1665, 1666, 1667, 1668, 1669, 0, 0, 0, 0,
	0, 0, 0, 1538, 1538, 1538, 1538, 1538, 1538, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1676, 1677,
	1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687,
	1688, 1689, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1817, 0, 1703,
	0, 0, 0, 0, 4014, 0, 0, 0, 0, 0,
	0, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1855, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 131, 0, 153, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 174, 0,
	4028, 1708, 0, 4029, 0, 4030, 0, 0, 0, 0,
	1031, 0, 0, 0, 1031, 0, 0, 0, 0, 0,
	1031, 0, 0, 0, 0, 0, 0, 0, 0, 164,
	0, 0, 0, 0, 0, 152, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 172, 0, 0,
	0, 0, 0, 0, 1801, 0, 0, 0, 131, 0,
	0, 0, 0, 0, 0, 0, 1859, 1860, 163, 162,
	191, 174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 0, 0, 0, 0, 0, 674, 0,
	674, 4125, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2896, 131, 0, 0, 0, 0,
	0, 0, 193, 194, 0, 0, 0, 171, 174, 0,
	172, 4142, 0, 4143, 0, 4144, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 0, 0, 0, 0, 0, 0,
	674, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 1861, 160, 0, 1858, 0, 158,
	159, 0, 0, 0, 171, 0, 175, 172, 1517, 0,
	0, 0, 0, 0, 0, 181, 0, 0, 195, 196,
	197, 0, 1789, 0, 0, 193, 194, 0, 0, 0,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4202, 0, 4203, 0, 0, 0, 0, 0, 0, 87,
	45, 46, 89, 0, 0, 0, 0, 1276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 93,
	0, 0, 0, 50, 77, 78, 0, 76, 79, 0,
	0, 0, 193, 194, 0, 0, 48, 0, 0, 175,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 0,
	0, 195, 196, 197, 0, 0, 0, 0, 0, 0,
	1802, 0, 0, 0, 0, 64, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 96, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 166, 175, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 0, 0, 195, 196,
	197, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 84, 1815, 1818, 1819, 1820, 1821, 1822,
	1823, 0, 1824, 1825, 1827, 1828, 1826, 1829, 1830, 1803,
	1804, 1805, 1806, 1787, 1788, 1816, 0, 1790, 0, 1791,
	1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1517, 0,
	1800, 1807, 1808, 1809, 1810, 0, 1811, 1812, 1813, 1814,
	0, 0, 0, 0, 0, 1276, 1276, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 88,
	0, 161, 88, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 674, 0, 0, 0, 0, 53,
	56, 59, 58, 61, 0, 75, 0, 0, 83, 80,
	0, 0, 0, 0, 0, 166, 0, 1041, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 63, 92, 91, 0,
	674, 73, 74, 60, 0, 950, 0, 0, 0, 81,
	82, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 674, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	0, 0, 155, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 65, 66, 0, 67, 68, 69, 70,
	0, 0, 0, 202, 0, 0, 202, 0, 0, 0,
	724, 0, 1517, 167, 0, 730, 0, 0, 0, 0,
	179, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1517,
	0, 202, 1517, 0, 1517, 674, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1817, 0, 62, 0, 0,
	0, 187, 0, 0, 0, 1935, 0, 730, 202, 730,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 674, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 167, 0, 0, 0,
	1992, 674, 0, 179, 168, 173, 170, 176, 177, 178,
	180, 182, 183, 184, 185, 0, 0, 674, 0, 0,
	186, 188, 189, 190, 674, 0, 0, 0, 0, 0,
	0, 0, 0, 2018, 2019, 674, 674, 674, 674, 674,
	674, 674, 0, 0, 187, 0, 0, 90, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2389, 168, 173, 170,
	176, 177, 178, 180, 182, 183, 184, 185, 0, 0,
	0, 187, 0, 186, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 168, 173, 170, 176, 177, 178,
	180, 182, 183, 184, 185, 0, 95, 0, 1095, 0,
	186, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1095, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 96, 0, 0, 967, 0,
	0, 0, 955, 968, 969, 970, 971, 956, 0, 0,
	957, 958, 674, 959, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 964, 972, 973,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 72, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1517, 0, 0, 0, 0, 3302, 3303, 0, 0,
	0, 0, 0, 1060, 1060, 0, 0, 0, 1517, 0,
	974, 975, 976, 977, 978, 979, 980, 981, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2595, 0, 0, 0, 0, 0, 0, 3304, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1524, 0, 1524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2607, 0, 0, 0, 0, 0, 0, 0,
	0, 1060, 1992, 1060, 1060, 1060, 1060, 1060, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3305, 3306, 0, 0,
	0, 0, 0, 0, 0, 1935, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1060, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1041, 202, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 674, 1707,
	0, 0, 0, 0, 0, 1992, 674, 0, 674, 0,
	0, 674, 2398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 730, 0, 730, 730, 0,
	920, 0, 0, 0, 0, 0, 924, 0, 0, 0,
	921, 922, 0, 0, 0, 923, 925, 730, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	673, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1516, 0, 0, 1018,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2787, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1091, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1031, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2858, 2859, 0, 0, 0, 0, 0, 0,
	0, 0, 2389, 0, 0, 1031, 2879, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	674, 0, 0, 0, 0, 674, 0, 0, 0, 0,
	0, 0, 674, 0, 0, 0, 0, 0, 0, 0,
	0, 674, 674, 0, 0, 674, 0, 2570, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 674, 0, 0,
	0, 0, 0, 0, 674, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1516, 0, 0, 0,
	674, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2956,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 202, 0, 0, 0, 730, 730, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 202, 0, 0, 1517, 0,
	1992, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 730, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 730, 0, 0, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 730, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1516, 0, 0, 0, 0, 0, 730, 730, 0, 730,
	0, 730, 730, 0, 730, 730, 730, 730, 730, 730,
	0, 0, 0, 0, 0, 0, 0, 1516, 0, 0,
	1516, 730, 1516, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 730, 0, 730, 730,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 730, 0, 202, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 3113,
	0, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	730, 0, 674, 0, 0, 0, 0, 0, 0, 0,
	1935, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2389, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 674, 0, 0,
	0, 0, 674, 0, 0, 0, 0, 0, 0, 3181,
	0, 88, 0, 0, 0, 2389, 2389, 2389, 2389, 2389,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1215, 0, 1221, 0, 0, 2389, 0, 0, 2389, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 674, 0, 0, 0,
	0, 0, 0, 2935, 0, 0, 0, 0, 0, 0,
	0, 0, 1445, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3288, 0, 0, 0, 0, 0, 730, 730,
	0, 0, 3296, 0, 0, 0, 0, 0, 0, 0,
	0, 730, 0, 0, 0, 0, 0, 0, 0, 1517,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 967,
	0, 2299, 0, 0, 968, 0, 674, 674, 674, 674,
	674, 674, 674, 674, 2106, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 674, 674, 0, 0, 0, 0, 730,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1516,
	967, 0, 0, 0, 0, 968, 0, 0, 674, 0,
	0, 0, 0, 0, 0, 2106, 1516, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1060, 0, 0, 0, 0,
	0, 974, 975, 976, 977, 978, 979, 980, 981, 982,
	983, 984, 985, 986, 987, 988, 989, 990, 991, 992,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012,
	1013, 1014, 1015, 0, 0, 0, 0, 1524, 0, 0,
	0, 1524, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2389, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3535, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 730, 0,
	0, 0, 0, 0, 0, 1060, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 202, 0, 0, 730, 0, 0, 0,
	0, 0, 1761, 0, 0, 0, 202, 0, 0, 0,
	730, 0, 0, 2311, 202, 0, 202, 0, 0, 202,
	202, 674, 0, 0, 1779, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 730, 0, 0, 0, 0, 0,
	0, 0, 0, 1517, 0, 0, 0, 0, 0, 1517,
	674, 674, 674, 674, 674, 0, 0, 0, 0, 0,
	0, 0, 3201, 0, 0, 0, 0, 0, 1935, 0,
	674, 0, 0, 674, 3209, 1992, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 730, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1918, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 730, 674,
	0, 0, 0, 0, 730, 0, 949, 0, 0, 0,
	0, 0, 0, 0, 0, 1517, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 674, 1968, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 674, 1994, 0, 0, 0, 0, 0, 0,
	0, 730, 0, 0, 0, 0, 730, 0, 0, 2005,
	730, 730, 0, 0, 674, 0, 2009, 674, 0, 0,
	709, 0, 0, 0, 0, 0, 729, 2020, 2021, 2022,
	2023, 2024, 2025, 2026, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3684, 202, 3688,
	3689, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 202,
	202, 0, 3181, 202, 88, 202, 3181, 0, 729, 0,
	729, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 730, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3873, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 674, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1516, 0, 2311, 0,
	0, 0, 0, 0, 674, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 674, 2056, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 674, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 674, 3181, 0, 674, 674, 674, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549,
	1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559,
	1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570,
	1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580,
	1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590,
	1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600,
	1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610,
	1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620,
	1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630,
	1631, 1632, 1633, 1634, 1635, 1636, 1638, 1639, 1640, 1641,
	1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651,
	1652, 1653, 1659, 1660, 1661, 1662, 1676, 1677, 1678, 1679,
	1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689,
	202, 0, 0, 0, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 4000, 0, 0, 0, 0, 730,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	730, 0, 88, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1935, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2374, 0, 0, 0, 0, 1517, 0, 0, 2378, 0,
	2381, 0, 0, 0, 2056, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4045, 0, 0, 0, 730, 0,
	0, 4053, 0, 0, 202, 0, 88, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 730, 0, 0, 0, 0,
	0, 0, 730, 0, 0, 0, 0, 0, 0, 0,
	0, 730, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1935, 0, 0, 1516, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 730, 0, 0,
	0, 0, 0, 0, 202, 202, 202, 202, 202, 202,
	202, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 202, 202, 0, 0, 0, 0, 0, 0, 0,
	4146, 0, 0, 0, 0, 0, 729, 1432, 729, 729,
	0, 0, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 729, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 730,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1515, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2056, 0, 0, 0, 0, 2534, 0, 0,
	0, 0, 0, 0, 2546, 0, 0, 730, 0, 0,
	0, 0, 0, 2563, 2564, 0, 0, 2568, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2573,
	0, 0, 0, 0, 0, 0, 2576, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2579, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 730, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 730, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1935, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 730, 0, 0, 0, 0,
	0, 0, 0, 674, 0, 0, 0, 1515, 0, 202,
	0, 0, 0, 730, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 730, 0, 0,
	0, 1516, 0, 0, 730, 730, 0, 1516, 202, 202,
	202, 202, 202, 0, 0, 0, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 202, 0, 202, 0,
	0, 202, 202, 202, 0, 0, 0, 729, 729, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1517, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 729, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4072, 0, 0,
	730, 0, 0, 1516, 729, 0, 0, 0, 730, 0,
	0, 0, 0, 202, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1841, 0, 0, 0, 730,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1935, 0, 0, 0, 0, 0, 0, 0, 729, 0,
	1867, 0, 202, 0, 0, 202, 0, 0, 1876, 0,
	0, 1515, 1878, 0, 0, 1881, 1882, 729, 729, 0,
	729, 0, 729, 729, 0, 729, 729, 729, 729, 729,
	729, 0, 0, 0, 0, 0, 0, 0, 1515, 1913,
	1914, 1515, 729, 1515, 0, 1919, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1992,
	0, 0, 0, 0, 0, 0, 0, 729, 0, 729,
	729, 0, 0, 0, 2880, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1986, 0, 0, 729, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 730,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 729, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 0, 0, 2929, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2981, 2982,
	2983, 2984, 2985, 2986, 2987, 2988, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2056, 2998, 0, 0, 0,
	202, 0, 0, 202, 202, 202, 0, 0, 0, 0,
	0, 0, 0, 730, 730, 0, 0, 0, 0, 0,
	3006, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 729,
	729, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 729, 0, 730, 0, 730, 730, 730, 0,
	0, 730, 730, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	729, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1515, 0, 0, 0, 0, 0, 0, 0, 0, 2115,
	0, 0, 0, 0, 0, 0, 0, 1515, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1516, 0, 0, 0, 0, 730, 0,
	730, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 729, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 730,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 729,
	0, 0, 202, 0, 0, 730, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	730, 0, 0, 0, 0, 0, 0, 729, 0, 0,
	0, 3256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 729, 0, 0, 729, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3294, 0, 0,
	0, 0, 0, 0, 0, 729, 0, 0, 0, 0,
	0, 0, 0, 0, 3310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3335, 0, 0, 3338,
	730, 0, 0, 0, 730, 730, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 729, 0, 0, 0, 0, 0, 0, 2472,
	2473, 2474, 0, 0, 0, 0, 0, 730, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 729,
	0, 0, 0, 0, 0, 729, 1876, 0, 0, 1876,
	0, 1876, 0, 0, 0, 0, 0, 2504, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 729, 0, 0, 0, 0, 729, 0, 0,
	0, 729, 729, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3490, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 730, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3516, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 730,
	730, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 729, 0,
	0, 0, 0, 0, 3550, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3565, 0, 0, 3566, 3567, 3568,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 730, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1516, 0, 730, 1515, 0, 729,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 730, 2311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 730, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 730, 0, 0, 0, 0, 0, 0, 202, 730,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 730, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 730, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 730, 0, 0, 0, 0, 0, 0, 730,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	729, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 729, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2893, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 729,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 729, 0, 0, 0,
	0, 0, 0, 729, 0, 0, 0, 1876, 1876, 0,
	0, 0, 729, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1515, 2966,
	0, 0, 0, 0, 0, 0, 0, 0, 729, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	729, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3748, 3750, 3749, 3813, 3814, 3815,
	3816, 3817, 3818, 3819, 799, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 729, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4012, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 729, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 729, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 729, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 729, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 729, 0,
	0, 0, 1515, 0, 0, 729, 729, 0, 1515, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3754, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3762, 3763, 0, 0, 3838, 3837, 3836,
	0, 0, 3834, 3835, 3833, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 729, 0, 0, 1515, 0, 0, 0, 0, 729,
	0, 0, 0, 0, 0, 0, 0, 3839, 920, 0,
	775, 776, 3840, 3841, 924, 3842, 778, 779, 921, 922,
	729, 773, 777, 923, 925, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3342, 0, 0, 3745,
	3746, 3747, 3751, 3752, 3753, 3764, 3811, 3812, 3820, 3822,
	876, 3821, 3823, 3824, 3825, 3828, 3829, 3830, 3831, 3826,
	3827, 3832, 3728, 3732, 3729, 3730, 3731, 3743, 3733, 3734,
	3735, 3736, 3737, 3738, 3739, 3740, 3741, 3742, 3744, 3843,
	3844, 3845, 3846, 3847, 3848, 3757, 3761, 3760, 3758, 3759,
	3755, 3756, 3783, 3782, 3784, 3785, 3786, 3787, 3788, 3789,
	3791, 3790, 3792, 3793, 3794, 3795, 3796, 3797, 3765, 3766,
	3769, 3770, 3768, 3767, 3771, 3780, 3781, 3772, 3773, 3774,
	3775, 3776, 3777, 3779, 3778, 3798, 3799, 3800, 3801, 3802,
	3804, 3803, 3807, 3808, 3806, 3805, 3810, 3809, 0, 0,
	729, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	926, 0, 927, 0, 0, 931, 0, 0, 0, 933,
	932, 0, 934, 0, 896, 895, 0, 0, 928, 929,
	0, 930, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3849, 3850, 3851, 3852,
	3853, 3854, 3855, 3856, 0, 0, 0, 0, 0, 0,
	3540, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 729, 729, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 729, 0, 729, 729, 729,
	0, 0, 729, 729, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1515, 0, 0, 0, 0, 729,
	0, 729, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	729, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 729, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 729, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 729, 0, 0, 0, 729, 729, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 729, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 729, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	729, 729, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 729, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1515, 0, 729, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 729, 729, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 729, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 729, 0, 0, 0, 0, 0, 0, 0,
	729, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 729, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 729, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 729, 0, 0, 0, 399, 0, 0,
	729, 1415, 1400, 527, 0, 1342, 1418, 1310, 1330, 1428,
	1333, 1336, 1379, 1288, 1357, 418, 1327, 1281, 1314, 1283,
	1322, 1284, 1312, 1344, 276, 1309, 1402, 1361, 1417, 369,
	273, 1290, 1315, 432, 1332, 210, 1381, 488, 258, 380,
	377, 583, 288, 279, 275, 256, 322, 388, 430, 517,
	424, 1424, 373, 1367, 0, 498, 403, 0, 0, 0,
	1346, 1406, 1355, 1393, 1341, 1380, 1298, 1366, 1419, 1328,
	1376, 1420, 328, 254, 330, 209, 415, 499, 292, 0,
	0, 0, 0, 4074, 951, 0, 0, 0, 0, 4075,
	0, 0, 0, 0, 244, 0, 0, 251, 0, 0,
	0, 354, 363, 362, 343, 344, 346, 348, 353, 360,
	366, 1324, 1373, 1414, 1325, 1375, 271, 326, 278, 270,
	580, 1425, 1405, 1287, 1354, 1413, 1349, 0, 0, 235,
	1416, 1348, 0, 1378, 0, 1431, 1282, 1369, 0, 1285,
	1289, 1427, 1411, 1319, 281, 0, 0, 0, 0, 0,
	0, 0, 1345, 1356, 1390, 1394, 1339, 0, 0, 0,
	0, 0, 0, 0, 0, 1317, 0, 1365, 0, 0,
	0, 1294, 1316, 1410, 1286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1343, 0, 0,
	0, 0, 1297, 0, 1318, 1391, 0, 1280, 303, 1291,
	404, 263, 0, 455, 1398, 1409, 1340, 625, 1412, 1338,
	1337, 1385, 1295, 1404, 1331, 368, 1293, 335, 0, 0,
	0, 204, 231, 0, 1329, 414, 463, 475, 647, 1403,
	1313, 1323, 259, 1321, 473, 428, 603, 239, 290, 460,
	434, 471, 442, 293, 1364, 1383, 472, 375, 585, 452,
	600, 626, 627, 269, 408, 612, 593, 521, 620, 644,
	232, 266, 422, 506, 606, 495, 400, 581, 582, 334,
	494, 301, 208, 372, 578, 632, 230, 481, 374, 248,
	237, 587, 609, 295, 458, 639, 219, 516, 598, 245,
	485, 0, 0, 648, 253, 505, 221, 595, 504, 396,
	331, 332, 220, 0, 459, 274, 299, 0, 0, 264,
	417, 589, 590, 262, 649, 234, 619, 226, 1292, 618,
	410, 584, 596, 397, 386, 225, 594, 395, 385, 339,
	358, 359, 286, 312, 449, 378, 450, 311, 313, 406,
	405, 407, 213, 607, 0, 214, 0, 500, 608, 650,
	454, 218, 240, 241, 243, 1308, 285, 289, 297, 300,
	308, 309, 318, 370, 421, 448, 444, 453, 1399, 579,
	601, 613, 624, 630, 631, 633, 634, 635, 636, 637,
	640, 638, 409, 316, 496, 338, 376, 1388, 1430, 427,
	474, 246, 605, 497, 206, 1302, 1307, 1300, 0, 260,
	261, 1370, 574, 1303, 1301, 1359, 1360, 1304, 1421, 1422,
	1423, 1407, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	645, 507, 513, 508, 509, 510, 511, 512, 0, 514,
	1392, 1296, 0, 1305, 1306, 1401, 591, 592, 669, 387,
	487, 602, 340, 352, 355, 345, 364, 0, 365, 341,
	342, 347, 349, 350, 351, 356, 357, 361, 367, 255,
	216, 393, 401, 577, 317, 222, 223, 224, 523, 524,
	525, 526, 616, 617, 621, 211, 464, 465, 466, 467,
	298, 611, 314, 470, 469, 336, 337, 382, 451, 539,
	541, 552, 556, 558, 560, 566, 569, 540, 542, 553,
	557, 559, 561, 567, 570, 529, 531, 533, 535, 548,
	547, 544, 572, 573, 550, 555, 534, 546, 551, 564,
	571, 568, 528, 532, 536, 545, 563, 562, 543, 554,
	565, 549, 537, 530, 538, 1363, 203, 227, 371, 1426,
	456, 294, 646, 615, 610, 212, 229, 1299, 268, 1311,
	1320, 0, 1326, 1334, 1335, 1347, 1350, 1351, 1352, 1353,
	0, 1371, 1372, 1374, 1382, 1384, 1387, 1389, 1396, 1408,
	1429, 205, 207, 215, 228, 238, 242, 249, 267, 282,
	284, 291, 304, 315, 323, 324, 327, 333, 383, 389,
	390, 391, 392, 411, 412, 413, 416, 419, 420, 423,
	425, 426, 429, 433, 437, 438, 439, 441, 443, 445,
	457, 462, 476, 477, 478, 479, 480, 483, 484, 489,
	490, 491, 492, 493, 501, 502, 515, 586, 588, 604,
	622, 628, 482, 306, 307, 446, 447, 319, 320, 642,
	643, 305, 599, 629, 597, 641, 623, 440, 381, 1362,
	1368, 384, 287, 310, 325, 1377, 614, 503, 233, 468,
	296, 257, 1395, 1397, 217, 252, 236, 265, 280, 283,
	329, 394, 402, 431, 436, 302, 277, 250, 461, 247,
	486, 518, 519, 520, 522, 398, 272, 435, 1358, 1386,
	379, 575, 576, 321, 399, 0, 0, 0, 1415, 1400,
	527, 0, 1342, 1418, 1310, 1330, 1428, 1333, 1336, 1379,
	1288, 1357, 418, 1327, 1281, 1314, 1283, 1322, 1284, 1312,
	1344, 276, 1309, 1402, 1361, 1417, 369, 273, 1290, 1315,
	432, 1332, 210, 1381, 488, 258, 380, 377, 583, 288,
	279, 275, 256, 322, 388, 430, 517, 424, 1424, 373,
	1367, 0, 498, 403, 0, 0, 0, 1346, 1406, 1355,
	1393, 1341, 1380, 1298, 1366, 1419, 1328, 1376, 1420, 328,
	254, 330, 209, 415, 499, 292, 0, 0, 0, 0,
	0, 201, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 354, 363,
	362, 343, 344, 346, 348, 353, 360, 366, 1324, 1373,
	1414, 1325, 1375, 271, 326, 278, 270, 580, 1425, 1405,
	1287, 1354, 1413, 1349, 0, 0, 235, 1416, 1348, 0,
	1378, 0, 1431, 1282, 1369, 0, 1285, 1289, 1427, 1411,
	1319, 281, 0, 0, 0, 0, 0, 0, 0, 1345,
	1356, 1390, 1394, 1339, 0, 0, 0, 0, 0, 0,
	3210, 0, 1317, 0, 1365, 0, 0, 0, 1294, 1316,
	1410, 1286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1343, 0, 0, 0, 0, 1297,
	0, 1318, 1391, 0, 1280, 303, 1291, 404, 263, 0,
	455, 1398, 1409, 1340, 625, 1412, 1338, 1337, 1385, 1295,
	1404, 1331, 368, 1293, 335, 0, 0, 0, 204, 231,
	0, 1329, 414, 463, 475, 647, 1403, 1313, 1323, 259,
	1321, 473, 428, 603, 239, 290, 460, 434, 471, 442,
	293, 1364, 1383, 472, 375, 585, 452, 600, 626, 627,
	269, 408, 612, 593, 521, 620, 644, 232, 266, 422,
	506, 606, 495, 400, 581, 582, 334, 494, 301, 208,
	372, 578, 632, 230, 481, 374, 248, 237, 587, 609,
	295, 458, 639, 219, 516, 598, 245, 485, 0, 0,
	648, 253, 505, 221, 595, 504, 396, 331, 332, 220,
	0, 459, 274, 299, 0, 0, 264, 417, 589, 590,
	262, 649, 234, 619, 226, 1292, 618, 410, 584, 596,
	397, 386, 225, 594, 395, 385, 339, 358, 359, 286,
	312, 449, 378, 450, 311, 313, 406, 405, 407, 213,
	607, 0, 214, 0, 500, 608, 650, 454, 218, 240,
	241, 243, 1308, 285, 289, 297, 300, 308, 309, 318,
	370, 421, 448, 444, 453, 1399, 579, 601, 613, 624,
	630, 631, 633, 634, 635, 636, 637, 640, 638, 409,
	316, 496, 338, 376, 1388, 1430, 427, 474, 246, 605,
	497, 206, 1302, 1307, 1300, 0, 260, 261, 1370, 574,
	1303, 1301, 1359, 1360, 1304, 1421, 1422, 1423, 1407, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 645, 507, 513,
	508, 509, 510, 511, 512, 0, 514, 1392, 1296, 0,
	1305, 1306, 1401, 591, 592, 669, 387, 487, 602, 340,
	352, 355, 345, 364, 0, 365, 341, 342, 347, 349,
	350, 351, 356, 357, 361, 367, 255, 216, 393, 401,
	577, 317, 222, 223, 224, 523, 524, 525, 526, 616,
	617, 621, 211, 464, 465, 466, 467, 298, 611, 314,
	470, 469, 336, 337, 382, 451, 539, 541, 552, 556,
	558, 560, 566, 569, 540, 542, 553, 557, 559, 561,
	567, 570, 529, 531, 533, 535, 548, 547, 544, 572,
	573, 550, 555, 534, 546, 551, 564, 571, 568, 528,
	532, 536, 545, 563, 562, 543, 554, 565, 549, 537,
	530, 538, 1363, 203, 227, 371, 1426, 456, 294, 646,
	615, 610, 212, 229, 1299, 268, 1311, 1320, 0, 1326,
	1334, 1335, 1347, 1350, 1351, 1352, 1353, 0, 1371, 1372,
	1374, 1382, 1384, 1387, 1389, 1396, 1408, 1429, 205, 207,
	215, 228, 238, 242, 249, 267, 282, 284, 291, 304,
	315, 323, 324, 327, 333, 383, 389, 390, 391, 392,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 489, 490, 491, 492,
	493, 501, 502, 515, 586, 588, 604, 622, 628, 482,
	306, 307, 446, 447, 319, 320, 642, 643, 305, 599,
	629, 597, 641, 623, 440, 381, 1362, 1368, 384, 287,
	310, 325, 1377, 614, 503, 233, 468, 296, 257, 1395,
	1397, 217, 252, 236, 265, 280, 283, 329, 394, 402,
	431, 436, 302, 277, 250, 461, 247, 486, 518, 519,
	520, 522, 398, 272, 435, 1358, 1386, 379, 575, 576,
	321, 399, 0, 0, 0, 1415, 1400, 527, 0, 1342,
	1418, 1310, 1330, 1428, 1333, 1336, 1379, 1288, 1357, 418,
	1327, 1281, 1314, 1283, 1322, 1284, 1312, 1344, 276, 1309,
	1402, 1361, 1417, 369, 273, 1290, 1315, 432, 1332, 210,
	1381, 488, 258, 380, 377, 583, 288, 279, 275, 256,
	322, 388, 430, 517, 424, 1424, 373, 1367, 0, 498,
	403, 0, 0, 0, 1346, 1406, 1355, 1393, 1341, 1380,
	1298, 1366, 1419, 1328, 1376, 1420, 328, 254, 330, 209,
	415, 499, 292, 0, 0, 0, 0, 0, 719, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 251, 0, 0, 0, 354, 363, 362, 343, 344,
	346, 348, 353, 360, 366, 1324, 1373, 1414, 1325, 1375,
	271, 326, 278, 270, 580, 1425, 1405, 1287, 1354, 1413,
	1349, 0, 0, 235, 1416, 1348, 0, 1378, 0, 1431,
	1282, 1369, 0, 1285, 1289, 1427, 1411, 1319, 281, 0,
	0, 0, 0, 0, 0, 0, 1345, 1356, 1390, 1394,
	1339, 0, 0, 0, 0, 0, 0, 3170, 0, 1317,
	0, 1365, 0, 0, 0, 1294, 1316, 1410, 1286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1343, 0, 0, 0, 0, 1297, 0, 1318, 1391,
	0, 1280, 303, 1291, 404, 263, 0, 455, 1398, 1409,
	1340, 625, 1412, 1338, 1337, 1385, 1295, 1404, 1331, 368,
	1293, 335, 0, 0, 0, 204, 231, 0, 1329, 414,
	463, 475, 647, 1403, 1313, 1323, 259, 1321, 473, 428,
	603, 239, 290, 460, 434, 471, 442, 293, 1364, 1383,
	472, 375, 585, 452, 600, 626, 627, 269, 408, 612,
	593, 521, 620, 644, 232, 266, 422, 506, 606, 495,
	400, 581, 582, 334, 494, 301, 208, 372, 578, 632,
	230, 481, 374, 248, 237, 587, 609, 295, 458, 639,
	219, 516, 598, 245, 485, 0, 0, 648, 253, 505,
	221, 595, 504, 396, 331, 332, 220, 0, 459, 274,
	299, 0, 0, 264, 417, 589, 590, 262, 649, 234,
	619, 226, 1292, 618, 410, 584, 596, 397, 386, 225,
	594, 395, 385, 339, 358, 359, 286, 312, 449, 378,
	450, 311, 313, 406, 405, 407, 213, 607, 0, 214,
	0, 500, 608, 650, 454, 218, 240, 241, 243, 1308,
	285, 289, 297, 300, 308, 309, 318, 370, 421, 448,
	444, 453, 1399, 579, 601, 613, 624, 630, 631, 633,
	634, 635, 636, 637, 640, 638, 409, 316, 496, 338,
	376, 1388, 1430, 427, 474, 246, 605, 497, 206, 1302,
	1307, 1300, 0, 260, 261, 1370, 574, 1303, 1301, 1359,
	1360, 1304, 1421, 1422, 1423, 1407, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 645, 507, 513, 508, 509, 510,
	511, 512, 0, 514, 1392, 1296, 0, 1305, 1306, 1401,
	591, 592, 669, 387, 487, 602, 340, 352, 355, 345,
	364, 0, 365, 341, 342, 347, 349, 350, 351, 356,
	357, 361, 367, 255, 216, 393, 401, 577, 317, 222,
	223, 224, 523, 524, 525, 526, 616, 617, 621, 211,
	464, 465, 466, 467, 298, 611, 314, 470, 469, 336,
	337, 382, 451, 539, 541, 552, 556, 558, 560, 566,
	569, 540, 542, 553, 557, 559, 561, 567, 570, 529,
	531, 533, 535, 548, 547, 544, 572, 573, 550, 555,
	534, 546, 551, 564, 571, 568, 528, 532, 536, 545,
	563, 562, 543, 554, 565, 549, 537, 530, 538, 1363,
	203, 227, 371, 1426, 456, 294, 646, 615, 610, 212,
	229, 1299, 268, 1311, 1320, 0, 1326, 1334, 1335, 1347,
	1350, 1351, 1352, 1353, 0, 1371, 1372, 1374, 1382, 1384,
	1387, 1389, 1396, 1408, 1429, 205, 207, 215, 228, 238,
	242, 249, 267, 282, 284, 291, 304, 315, 323, 324,
	327, 333, 383, 389, 390, 391, 392, 411, 412, 413,
	416, 419, 420, 423, 425, 426, 429, 433, 437, 438,
	439, 441, 443, 445, 457, 462, 476, 477, 478, 479,
	480, 483, 484, 489, 490, 491, 492, 493, 501, 502,
	515, 586, 588, 604, 622, 628, 482, 306, 307, 446,
	447, 319, 320, 642, 643, 305, 599, 629, 597, 641,
	623, 440, 381, 1362, 1368, 384, 287, 310, 325, 1377,
	614, 503, 233, 468, 296, 257, 1395, 1397, 217, 252,
	236, 265, 280, 283, 329, 394, 402, 431, 436, 302,
	277, 250, 461, 247, 486, 518, 519, 520, 522, 398,
	272, 435, 1358, 1386, 379, 575, 576, 321, 399, 0,
	0, 0, 1415, 1400, 527, 0, 1342, 1418, 1310, 1330,
	1428, 1333, 1336, 1379, 1288, 1357, 418, 1327, 1281, 1314,
	1283, 1322, 1284, 1312, 1344, 276, 1309, 1402, 1361, 1417,
	369, 273, 1290, 1315, 432, 1332, 210, 1381, 488, 258,
	380, 377, 583, 288, 279, 275, 256, 322, 388, 430,
	517, 424, 1424, 373, 1367, 0, 498, 403, 0, 0,
	0, 1346, 1406, 1355, 1393, 1341, 1380, 1298, 1366, 1419,
	1328, 1376, 1420, 328, 254, 330, 209, 415, 499, 292,
	0, 0, 0, 0, 0, 951, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 251, 0,
	0, 0, 354, 363, 362, 343, 344, 346, 348, 353,
	360, 366, 1324, 1373, 1414, 1325, 1375, 271, 326, 278,
	270, 580, 1425, 1405, 1287, 1354, 1413, 1349, 0, 0,
	235, 1416, 1348, 0, 1378, 0, 1431, 1282, 1369, 0,
	1285, 1289, 1427, 1411, 1319, 281, 0, 0, 0, 0,
	0, 0, 0, 1345, 1356, 1390, 1394, 1339, 0, 0,
	0, 0, 0, 0, 2376, 0, 1317, 0, 1365, 0,
	0, 0, 1294, 1316, 1410, 1286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1343, 0,
	0, 0, 0, 1297, 0, 1318, 1391, 0, 1280, 303,
	1291, 404, 263, 0, 455, 1398, 1409, 1340, 625, 1412,
	1338, 1337, 1385, 1295, 1404, 1331, 368, 1293, 335, 0,
	0, 0, 204, 231, 0, 1329, 414, 463, 475, 647,
	1403, 1313, 1323, 259, 1321, 473, 428, 603, 239, 290,
	460, 434, 471, 442, 293, 1364, 1383, 472, 375, 585,
	452, 600, 626, 627, 269, 408, 612, 593, 521, 620,
	644, 232, 266, 422, 506, 606, 495, 400, 581, 582,
	334, 494, 301, 208, 372, 578, 632, 230, 481, 374,
	248, 237, 587, 609, 295, 458, 639, 219, 516, 598,
	245, 485, 0, 0, 648, 253, 505, 221, 595, 504,
	396, 331, 332, 220, 0, 459, 274, 299, 0, 0,
	264, 417, 589, 590, 262, 649, 234, 619, 226, 1292,
	618, 410, 584, 596, 397, 386, 225, 594, 395, 385,
	339, 358, 359, 286, 312, 449, 378, 450, 311, 313,
	406, 405, 407, 213, 607, 0, 214, 0, 500, 608,
	650, 454, 218, 240, 241, 243, 1308, 285, 289, 297,
	300, 308, 309, 318, 370, 421, 448, 444, 453, 1399,
	579, 601, 613, 624, 630, 631, 633, 634, 635, 636,
	637, 640, 638, 409, 316, 496, 338, 376, 1388, 1430,
	427, 474, 246, 605, 497, 206, 1302, 1307, 1300, 0,
	260, 261, 1370, 574, 1303, 1301, 1359, 1360, 1304, 1421,
	1422, 1423, 1407, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 645, 507, 513, 508, 509, 510, 511, 512, 0,
	514, 1392, 1296, 0, 1305, 1306, 1401, 591, 592, 669,
	387, 487, 602, 340, 352, 355, 345, 364, 0, 365,
	341, 342, 347, 349, 350, 351, 356, 357, 361, 367,
	255, 216, 393, 401, 577, 317, 222, 223, 224, 523,
	524, 525, 526, 616, 617, 621, 211, 464, 465, 466,
	467, 298, 611, 314, 470, 469, 336, 337, 382, 451,
	539, 541, 552, 556, 558, 560, 566, 569, 540, 542,
	553, 557, 559, 561, 567, 570, 529, 531, 533, 535,
	548, 547, 544, 572, 573, 550, 555, 534, 546, 551,
	564, 571, 568, 528, 532, 536, 545, 563, 562, 543,
	554, 565, 549, 537, 530, 538, 1363, 203, 227, 371,
	1426, 456, 294, 646, 615, 610, 212, 229, 1299, 268,
	1311, 1320, 0, 1326, 1334, 1335, 1347, 1350, 1351, 1352,
	1353, 0, 1371, 1372, 1374, 1382, 1384, 1387, 1389, 1396,
	1408, 1429, 205, 207, 215, 228, 238, 242, 249, 267,
	282, 284, 291, 304, 315, 323, 324, 327, 333, 383,
	389, 390, 391, 392, 411, 412, 413, 416, 419, 420,
	423, 425, 426, 429, 433, 437, 438, 439, 441, 443,
	445, 457, 462, 476, 477, 478, 479, 480, 483, 484,
	489, 490, 491, 492, 493, 501, 502, 515, 586, 588,
	604, 622, 628, 482, 306, 307, 446, 447, 319, 320,
	642, 643, 305, 599, 629, 597, 641, 623, 440, 381,
	1362, 1368, 384, 287, 310, 325, 1377, 614, 503, 233,
	468, 296, 257, 1395, 1397, 217, 252, 236, 265, 280,
	283, 329, 394, 402, 431, 436, 302, 277, 250, 461,
	247, 486, 518, 519, 520, 522, 398, 272, 435, 1358,
	1386, 379, 575, 576, 321, 399, 0, 0, 0, 1415,
	1400, 527, 0, 1342, 1418, 1310, 1330, 1428, 1333, 1336,
	1379, 1288, 1357, 418, 1327, 1281, 1314, 1283, 1322, 1284,
	1312, 1344, 276, 1309, 1402, 1361, 1417, 369, 273, 1290,
	1315, 432, 1332, 210, 1381, 488, 258, 380, 377, 583,
	288, 279, 275, 256, 322, 388, 430, 517, 424, 1424,
	373, 1367, 0, 498, 403, 0, 0, 0, 1346, 1406,
	1355, 1393, 1341, 1380, 1298, 1366, 1419, 1328, 1376, 1420,
	328, 254, 330, 209, 415, 499, 292, 0, 96, 0,
	0, 0, 719, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 251, 0, 0, 0, 354,
	363, 362, 343, 344, 346, 348, 353, 360, 366, 1324,
	1373, 1414, 1325, 1375, 271, 326, 278, 270, 580, 1425,
	1405, 1287, 1354, 1413, 1349, 0, 0, 235, 1416, 1348,
	0, 1378, 0, 1431, 1282, 1369, 0, 1285, 1289, 1427,
	1411, 1319, 281, 0, 0, 0, 0, 0, 0, 0,
	1345, 1356, 1390, 1394, 1339, 0, 0, 0, 0, 0,
	0, 0, 0, 1317, 0, 1365, 0, 0, 0, 1294,
	1316, 1410, 1286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1343, 0, 0, 0, 0,
	1297, 0, 1318, 1391, 0, 1280, 303, 1291, 404, 263,
	0, 455, 1398, 1409, 1340, 625, 1412, 1338, 1337, 1385,
	1295, 1404, 1331, 368, 1293, 335, 0, 0, 0, 204,
	231, 0, 1329, 414, 463, 475, 647, 1403, 1313, 1323,
	259, 1321, 473, 428, 603, 239, 290, 460, 434, 471,
	442, 293, 1364, 1383, 472, 375, 585, 452, 600, 626,
	627, 269, 408, 612, 593, 521, 620, 644, 232, 266,
	422, 506, 606, 495, 400, 581, 582, 334, 494, 301,
	208, 372, 578, 632, 230, 481, 374, 248, 237, 587,
	609, 295, 458, 639, 219, 516, 598, 245, 485, 0,
	0, 648, 253, 505, 221, 595, 504, 396, 331, 332,
	220, 0, 459, 274, 299, 0, 0, 264, 417, 589,
	590, 262, 649, 234, 619, 226, 1292, 618, 410, 584,
	596, 397, 386, 225, 594, 395, 385, 339, 358, 359,
	286, 312, 449, 378, 450, 311, 313, 406, 405, 407,
	213, 607, 0, 214, 0, 500, 608, 650, 454, 218,
	240, 241, 243, 1308, 285, 289, 297, 300, 308, 309,
	318, 370, 421, 448, 444, 453, 1399, 579, 601, 613,
	624, 630, 631, 633, 634, 635, 636, 637, 640, 638,
	409, 316, 496, 338, 376, 1388, 1430, 427, 474, 246,
	605, 497, 206, 1302, 1307, 1300, 0, 260, 261, 1370,
	574, 1303, 1301, 1359, 1360, 1304, 1421, 1422, 1423, 1407,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 645, 507,
	513, 508, 509, 510, 511, 512, 0, 514, 1392, 1296,
	0, 1305, 1306, 1401, 591, 592, 669, 387, 487, 602,
	340, 352, 355, 345, 364, 0, 365, 341, 342, 347,
	349, 350, 351, 356, 357, 361, 367, 255, 216, 393,
	401, 577, 317, 222, 223, 224, 523, 524, 525, 526,
	616, 617, 621, 211, 464, 465, 466, 467, 298, 611,
	314, 470, 469, 336, 337, 382, 451, 539, 541, 552,
	556, 558, 560, 566, 569, 540, 542, 553, 557, 559,
	561, 567, 570, 529, 531, 533, 535, 548, 547, 544,
	572, 573, 550, 555, 534, 546, 551, 564, 571, 568,
	528, 532, 536, 545, 563, 562, 543, 554, 565, 549,
	537, 530, 538, 1363, 203, 227, 371, 1426, 456, 294,
	646, 615, 610, 212, 229, 1299, 268, 1311, 1320, 0,
	1326, 1334, 1335, 1347, 1350, 1351, 1352, 1353, 0, 1371,
	1372, 1374, 1382, 1384, 1387, 1389, 1396, 1408, 1429, 205,
	207, 215, 228, 238, 242, 249, 267, 282, 284, 291,
	304, 315, 323, 324, 327, 333, 383, 389, 390, 391,
	392, 411, 412, 413, 416, 419, 420, 423, 425, 426,
	429, 433, 437, 438, 439, 441, 443, 445, 457, 462,
	476, 477, 478, 479, 480, 483, 484, 489, 490, 491,
	492, 493, 501, 502, 515, 586, 588, 604, 622, 628,
	482, 306, 307, 446, 447, 319, 320, 642, 643, 305,
	599, 629, 597, 641, 623, 440, 381, 1362, 1368, 384,
	287, 310, 325, 1377, 614, 503, 233, 468, 296, 257,
	1395, 1397, 217, 252, 236, 265, 280, 283, 329, 394,
	402, 431, 436, 302, 277, 250, 461, 247, 486, 518,
	519, 520, 522, 398, 272, 435, 1358, 1386, 379, 575,
	576, 321, 399, 0, 0, 0, 1415, 1400, 527, 0,
	1342, 1418, 1310, 1330, 1428, 1333, 1336, 1379, 1288, 1357,
	418, 1327, 1281, 1314, 1283, 1322, 1284, 1312, 1344, 276,
	1309, 1402, 1361, 1417, 369, 273, 1290, 1315, 432, 1332,
	210, 1381, 488, 258, 380, 377, 583, 288, 279, 275,
	256, 322, 388, 430, 517, 424, 1424, 373, 1367, 0,
	498, 403, 0, 0, 0, 1346, 1406, 1355, 1393, 1341,
	1380, 1298, 1366, 1419, 1328, 1376, 1420, 328, 254, 330,
	209, 415, 499, 292, 0, 0, 0, 0, 0, 201,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 251, 0, 0, 0, 354, 363, 362, 343,
	344, 346, 348, 353, 360, 366, 1324, 1373, 1414, 1325,
	1375, 271, 326, 278, 270, 580, 1425, 1405, 1287, 1354,
	1413, 1349, 0, 0, 235, 1416, 1348, 0, 1378, 0,
	1431, 1282, 1369, 0, 1285, 1289, 1427, 1411, 1319, 281,
	0, 0, 0, 0, 0, 0, 0, 1345, 1356, 1390,
	1394, 1339, 0, 0, 0, 0, 0, 0, 0, 0,
	1317, 0, 1365, 0, 0, 0, 1294, 1316, 1410, 1286,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1343, 0, 0, 0, 0, 1297, 0, 1318,
	1391, 0, 1280, 303, 1291, 404, 263, 0, 455, 1398,
	1409, 1340, 625, 1412, 1338, 1337, 1385, 1295, 1404, 1331,
	368, 1293, 335, 0, 0, 0, 204, 231, 0, 1329,
	414, 463, 475, 647, 1403, 1313, 1323, 259, 1321, 473,
	428, 603, 239, 290, 460, 434, 471, 442, 293, 1364,
	1383, 472, 375, 585, 452, 600, 626, 627, 269, 408,
	612, 593, 521, 620, 644, 232, 266, 422, 506, 606,
	495, 400, 581, 582, 334, 494, 301, 208, 372, 578,
	632, 230, 481, 374, 248, 237, 587, 609, 295, 458,
	639, 219, 516, 598, 245, 485, 0, 0, 648, 253,
	505, 221, 595, 504, 396, 331, 332, 220, 0, 459,
	274, 299, 0, 0, 264, 417, 589, 590, 262, 649,
	234, 619, 226, 1292, 618, 410, 584, 596, 397, 386,
	225, 594, 395, 385, 339, 358, 359, 286, 312, 449,
	378, 450, 311, 313, 406, 405, 407, 213, 607, 0,
	214, 0, 500, 608, 650, 454, 218, 240, 241, 243,
	1308, 285, 289, 297, 300, 308, 309, 318, 370, 421,
	448, 444, 453, 1399, 579, 601, 613, 624, 630, 631,
	633, 634, 635, 636, 637, 640, 638, 409, 316, 496,
	338, 376, 1388, 1430, 427, 474, 246, 605, 497, 206,
	1302, 1307, 1300, 0, 260, 261, 1370, 574, 1303, 1301,
	1359, 1360, 1304, 1421, 1422, 1423, 1407, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 645, 507, 513, 508, 509,
	510, 511, 512, 0, 514, 1392, 1296, 0, 1305, 1306,
	1401, 591, 592, 669, 387, 487, 602, 340, 352, 355,
	345, 364, 0, 365, 341, 342, 347, 349, 350, 351,
	356, 357, 361, 367, 255, 216, 393, 401, 577, 317,
	222, 223, 224, 523, 524, 525, 526, 616, 617, 621,
	211, 464, 465, 466, 467, 298, 611, 314, 470, 469,
	336, 337, 382, 451, 539, 541, 552, 556, 558, 560,
	566, 569, 540, 542, 553, 557, 559, 561, 567, 570,
	529, 531, 533, 535, 548, 547, 544, 572, 573, 550,
	555, 534, 546, 551, 564, 571, 568, 528, 532, 536,
	545, 563, 562, 543, 554, 565, 549, 537, 530, 538,
	1363, 203, 227, 371, 1426, 456, 294, 646, 615, 610,
	212, 229, 1299, 268, 1311, 1320, 0, 1326, 1334, 1335,
	1347, 1350, 1351, 1352, 1353, 0, 1371, 1372, 1374, 1382,
	1384, 1387, 1389, 1396, 1408, 1429, 205, 207, 215, 228,
	238, 242, 249, 267, 282, 284, 291, 304, 315, 323,
	324, 327, 333, 383, 389, 390, 391, 392, 411, 412,
	413, 416, 419, 420, 423, 425, 426, 429, 433, 437,
	438, 439, 441, 443, 445, 457, 462, 476, 477, 478,
	479, 480, 483, 484, 489, 490, 491, 492, 493, 501,
	502, 515, 586, 588, 604, 622, 628, 482, 306, 307,
	446, 447, 319, 320, 642, 643, 305, 599, 629, 597,
	641, 623, 440, 381, 1362, 1368, 384, 287, 310, 325,
	1377, 614, 503, 233, 468, 296, 257, 1395, 1397, 217,
	252, 236, 265, 280, 283, 329, 394, 402, 431, 436,
	302, 277, 250, 461, 247, 486, 518, 519, 520, 522,
	398, 272, 435, 1358, 1386, 379, 575, 576, 321, 399,
	0, 0, 0, 1415, 1400, 527, 0, 1342, 1418, 1310,
	1330, 1428, 1333, 1336, 1379, 1288, 1357, 418, 1327, 1281,
	1314, 1283, 1322, 1284, 1312, 1344, 276, 1309, 1402, 1361,
	1417, 369, 273, 1290, 1315, 432, 1332, 210, 1381, 488,
	258, 380, 377, 583, 288, 279, 275, 256, 322, 388,
	430, 517, 424, 1424, 373, 1367, 0, 498, 403, 0,
	0, 0, 1346, 1406, 1355, 1393, 1341, 1380, 1298, 1366,
	1419, 1328, 1376, 1420, 328, 254, 330, 209, 415, 499,
	292, 0, 0, 0, 0, 0, 719, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 251,
	0, 0, 0, 354, 363, 362, 343, 344, 346, 348,
	353, 360, 366, 1324, 1373, 1414, 1325, 1375, 271, 326,
	278, 270, 580, 1425, 1405, 1287, 1354, 1413, 1349, 0,
	0, 235, 1416, 1348, 0, 1378, 0, 1431, 1282, 1369,
	0, 1285, 1289, 1427, 1411, 1319, 281, 0, 0, 0,
	0, 0, 0, 0, 1345, 1356, 1390, 1394, 1339, 0,
	0, 0, 0, 0, 0, 0, 0, 1317, 0, 1365,
	0, 0, 0, 1294, 1316, 1410, 1286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1343,
	0, 0, 0, 0, 1297, 0, 1318, 1391, 0, 1280,
	303, 1291, 404, 263, 0, 455, 1398, 1409, 1340, 625,
	1412, 1338, 1337, 1385, 1295, 1404, 1331, 368, 1293, 335,
	0, 0, 0, 204, 231, 0, 1329, 414, 463, 475,
	647, 1403, 1313, 1323, 259, 1321, 473, 428, 603, 239,
	290, 460, 434, 471, 442, 293, 1364, 1383, 472, 375,
	585, 452, 600, 626, 627, 269, 408, 612, 593, 521,
	620, 644, 232, 266, 422, 506, 606, 495, 400, 581,
	582, 334, 494, 301, 208, 372, 578, 632, 230, 481,
	374, 248, 237, 587, 609, 295, 458, 639, 219, 516,
	598, 245, 485, 0, 0, 648, 253, 505, 221, 595,
	504, 396, 331, 332, 220, 0, 459, 274, 299, 0,
	0, 264, 417, 589, 590, 262, 649, 234, 619, 226,
	1292, 618, 410, 584, 596, 397, 386, 225, 594, 395,
	385, 339, 358, 359, 286, 312, 449, 378, 450, 311,
	313, 406, 405, 407, 213, 607, 0, 214, 0, 500,
	608, 650, 454, 218, 240, 241, 243, 1308, 285, 289,
	297, 300, 308, 309, 318, 370, 421, 448, 444, 453,
	1399, 579, 601, 613, 624, 630, 631, 633, 634, 635,
	636, 637, 640, 638, 409, 316, 496, 338, 376, 1388,
	1430, 427, 474, 246, 605, 497, 206, 1302, 1307, 1300,
	0, 260, 261, 1370, 574, 1303, 1301, 1359, 1360, 1304,
	1421, 1422, 1423, 1407, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 645, 507, 513, 508, 509, 510, 511, 512,
	0, 514, 1392, 1296, 0, 1305, 1306, 1401, 591, 592,
	669, 387, 487, 602, 340, 352, 355, 345, 364, 0,
	365, 341, 342, 347, 349, 350, 351, 356, 357, 361,
	367, 255, 216, 393, 401, 577, 317, 222, 223, 224,
	523, 524, 525, 526, 616, 617, 621, 211, 464, 465,
	466, 467, 298, 611, 314, 470, 469, 336, 337, 382,
	451, 539, 541, 552, 556, 558, 560, 566, 569, 540,
	542, 553, 557, 559, 561, 567, 570, 529, 531, 533,
	535, 548, 547, 544, 572, 573, 550, 555, 534, 546,
	551, 564, 571, 568, 528, 532, 536, 545, 563, 562,
	543, 554, 565, 549, 537, 530, 538, 1363, 203, 227,
	371, 1426, 456, 294, 646, 615, 610, 212, 229, 1299,
	268, 1311, 1320, 0, 1326, 1334, 1335, 1347, 1350, 1351,
	1352, 1353, 0, 1371, 1372, 1374, 1382, 1384, 1387, 1389,
	1396, 1408, 1429, 205, 207, 215, 228, 238, 242, 249,
	267, 282, 284, 291, 304, 315, 323, 324, 327, 333,
	383, 389, 390, 391, 392, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 489, 490, 491, 492, 493, 501, 502, 515, 586,
	588, 604, 622, 628, 482, 306, 307, 446, 447, 319,
	320, 642, 643, 305, 599, 629, 597, 641, 623, 440,
	381, 1362, 1368, 384, 287, 310, 325, 1377, 614, 503,
	233, 468, 296, 257, 1395, 1397, 217, 252, 236, 265,
	280, 283, 329, 394, 402, 431, 436, 302, 277, 250,
	461, 247, 486, 518, 519, 520, 522, 398, 272, 435,
	1358, 1386, 379, 575, 576, 321, 399, 0, 0, 0,
	1415, 1400, 527, 0, 1342, 1418, 1310, 1330, 1428, 1333,
	1336, 1379, 1288, 1357, 418, 1327, 1281, 1314, 1283, 1322,
	1284, 1312, 1344, 276, 1309, 1402, 1361, 1417, 369, 273,
	1290, 1315, 432, 1332, 210, 1381, 488, 258, 380, 377,
	583, 288, 279, 275, 256, 322, 388, 430, 517, 424,
	1424, 373, 1367, 0, 498, 403, 0, 0, 0, 1346,
	1406, 1355, 1393, 1341, 1380, 1298, 1366, 1419, 1328, 1376,
	1420, 328, 254, 330, 209, 415, 499, 292, 0, 0,
	0, 0, 0, 951, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 251, 0, 0, 0,
	354, 363, 362, 343, 344, 346, 348, 353, 360, 366,
	1324, 1373, 1414, 1325, 1375, 271, 326, 278, 270, 580,
	1425, 1405, 1287, 1354, 1413, 1349, 0, 0, 235, 1416,
	1348, 0, 1378, 0, 1431, 1282, 1369, 0, 1285, 1289,
	1427, 1411, 1319, 281, 0, 0, 0, 0, 0, 0,
	0, 1345, 1356, 1390, 1394, 1339, 0, 0, 0, 0,
	0, 0, 0, 0, 1317, 0, 1365, 0, 0, 0,
	1294, 1316, 1410, 1286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1343, 0, 0, 0,
	0, 1297, 0, 1318, 1391, 0, 1280, 303, 1291, 404,
	263, 0, 455, 1398, 1409, 1340, 625, 1412, 1338, 1337,
	1385, 1295, 1404, 1331, 368, 1293, 335, 0, 0, 0,
	204, 231, 0, 1329, 414, 463, 475, 647, 1403, 1313,
	1323, 259, 1321, 473, 428, 603, 239, 290, 460, 434,
	471, 442, 293, 1364, 1383, 472, 375, 585, 452, 600,
	626, 627, 269, 408, 612, 593, 521, 620, 644, 232,
	266, 422, 506, 606, 495, 400, 581, 582, 334, 494,
	301, 208, 372, 578, 632, 230, 481, 374, 248, 237,
	587, 609, 295, 458, 639, 219, 516, 598, 245, 485,
	0, 0, 648, 253, 505, 221, 595, 504, 396, 331,
	332, 220, 0, 459, 274, 299, 0, 0, 264, 417,
	589, 590, 262, 649, 234, 619, 226, 1292, 618, 410,
	584, 596, 397, 386, 225, 594, 395, 385, 339, 358,
	359, 286, 312, 449, 378, 450, 311, 313, 406, 405,
	407, 213, 607, 0, 214, 0, 500, 608, 650, 454,
	218, 240, 241, 243, 1308, 285, 289, 297, 300, 308,
	309, 318, 370, 421, 448, 444, 453, 1399, 579, 601,
	613, 624, 630, 631, 633, 634, 635, 636, 637, 640,
	638, 409, 316, 496, 338, 376, 1388, 1430, 427, 474,
	246, 605, 497, 206, 1302, 1307, 1300, 0, 260, 261,
	1370, 574, 1303, 1301, 1359, 1360, 1304, 1421, 1422, 1423,
	1407, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 645,
	507, 513, 508, 509, 510, 511, 512, 0, 514, 1392,
	1296, 0, 1305, 1306, 1401, 591, 592, 669, 387, 487,
	602, 340, 352, 355, 345, 364, 0, 365, 341, 342,
	347, 349, 350, 351, 356, 357, 361, 367, 255, 216,
	393, 401, 577, 317, 222, 223, 224, 523, 524, 525,
	526, 616, 617, 621, 211, 464, 465, 466, 467, 298,
	611, 314, 470, 469, 336, 337, 382, 451, 539, 541,
	552, 556, 558, 560, 566, 569, 540, 542, 553, 557,
	559, 561, 567, 570, 529, 531, 533, 535, 548, 547,
	544, 572, 573, 550, 555, 534, 546, 551, 564, 571,
	568, 528, 532, 536, 545, 563, 562, 543, 554, 565,
	549, 537, 530, 538, 1363, 203, 227, 371, 1426, 456,
	294, 646, 615, 610, 212, 229, 1299, 268, 1311, 1320,
	0, 1326, 1334, 1335, 1347, 1350, 1351, 1352, 1353, 0,
	1371, 1372, 1374, 1382, 1384, 1387, 1389, 1396, 1408, 1429,
	205, 207, 215, 228, 238, 242, 249, 267, 282, 284,
	291, 304, 315, 323, 324, 327, 333, 383, 389, 390,
	391, 392, 411, 412, 413, 416, 419, 420, 423, 425,
	426, 429, 433, 437, 438, 439, 441, 443, 445, 457,
	462, 476, 477, 478, 479, 480, 483, 484, 489, 490,
	491, 492, 493, 501, 502, 515, 586, 588, 604, 622,
	628, 482, 306, 307, 446, 447, 319, 320, 642, 643,
	305, 599, 629, 597, 641, 623, 440, 381, 1362, 1368,
	384, 287, 310, 325, 1377, 614, 503, 233, 468, 296,
	257, 1395, 1397, 217, 252, 236, 265, 280, 283, 329,
	394, 402, 431, 436, 302, 277, 250, 461, 247, 486,
	518, 519, 520, 522, 398, 272, 435, 1358, 1386, 379,
	575, 576, 321, 399, 0, 0, 0, 0, 0, 527,
	0, 771, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 759, 0, 0, 0,
	276, 764, 0, 0, 0, 369, 273, 0, 0, 432,
	0, 210, 0, 488, 258, 380, 377, 583, 288, 279,
	275, 256, 322, 388, 430, 517, 424, 770, 373, 0,
	0, 498, 403, 0, 0, 0, 0, 0, 766, 767,
	0, 0, 0, 0, 0, 0, 0, 0, 328, 254,
	330, 209, 415, 499, 292, 0, 96, 0, 0, 967,
	951, 743, 917, 955, 968, 969, 970, 971, 956, 0,
	244, 957, 958, 251, 959, 0, 916, 801, 803, 802,
	866, 867, 868, 869, 870, 871, 872, 799, 964, 972,
	973, 0, 271, 326, 278, 270, 580, 0, 0, 2199,
	2200, 2201, 0, 0, 0, 235, 0, 0, 0, 0,
	0, 0, 0, 739, 756, 0, 769, 0, 0, 0,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 753, 754, 0,
	0, 0, 0, 911, 0, 755, 0, 0, 0, 0,
	763, 974, 975, 976, 977, 978, 979, 980, 981, 982,
	983, 984, 985, 986, 987, 988, 989, 990, 991, 992,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012,
	1013, 1014, 1015, 765, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 303, 0, 404, 263, 0, 455,
	910, 0, 0, 625, 0, 0, 908, 0, 0, 0,
	0, 368, 0, 335, 0, 0, 0, 204, 231, 0,
	0, 414, 463, 475, 647, 0, 0, 0, 961, 0,
	473, 428, 603, 239, 290, 460, 434, 471, 442, 293,
	0, 0, 472, 375, 585, 452, 600, 626, 627, 269,
	408, 612, 593, 521, 620, 644, 232, 266, 422, 506,
	606, 495, 400, 581, 582, 334, 494, 301, 208, 372,
	578, 632, 230, 481, 374, 248, 237, 587, 609, 295,
	458, 639, 219, 516, 598, 245, 485, 0, 0, 648,
	253, 505, 221, 595, 504, 396, 331, 332, 220, 0,
	459, 274, 299, 0, 0, 264, 417, 962, 963, 262,
	649, 807, 619, 226, 0, 618, 410, 584, 596, 397,
	386, 225, 594, 395, 385, 339, 815, 816, 286, 312,
	892, 891, 890, 311, 313, 888, 889, 887, 213, 607,
	0, 214, 0, 500, 608, 650, 454, 218, 240, 241,
	243, 0, 285, 289, 297, 300, 308, 309, 318, 370,
	421, 448, 444, 453, 0, 579, 601, 613, 624, 630,
	631, 633, 634, 635, 636, 637, 640, 638, 409, 316,
	496, 338, 376, 0, 0, 427, 474, 246, 605, 497,
	898, 920, 909, 775, 776, 899, 900, 924, 901, 778,
	779, 921, 922, 772, 773, 777, 923, 925, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 645, 507, 513, 508,
	509, 510, 511, 512, 0, 514, 912, 762, 761, 0,
	768, 0, 797, 798, 800, 804, 805, 806, 817, 864,
	865, 873, 875, 876, 874, 877, 878, 879, 882, 883,
	884, 885, 880, 881, 886, 780, 784, 781, 782, 783,
	795, 785, 786, 787, 788, 789, 790, 791, 792, 793,
	794, 796, 935, 936, 937, 938, 939, 940, 810, 814,
	813, 811, 812, 808, 809, 836, 835, 837, 838, 839,
	840, 841, 842, 844, 843, 845, 846, 847, 848, 849,
	850, 818, 819, 822, 823, 821, 820, 824, 833, 834,
	825, 826, 827, 828, 829, 830, 832, 831, 851, 852,
	853, 854, 855, 857, 856, 860, 861, 859, 858, 863,
	862, 760, 203, 227, 371, 0, 456, 294, 646, 615,
	610, 212, 229, 926, 268, 927, 0, 0, 931, 0,
	0, 0, 933, 932, 0, 934, 0, 896, 895, 0,
	0, 928, 929, 0, 930, 0, 0, 205, 207, 215,
	228, 238, 242, 249, 267, 282, 284, 291, 304, 315,
	323, 324, 327, 333, 383, 389, 390, 391, 392, 411,
	412, 413, 416, 419, 420, 423, 425, 426, 429, 433,
	437, 438, 439, 441, 443, 445, 457, 462, 476, 477,
	478, 479, 480, 483, 484, 489, 490, 491, 492, 493,
	501, 502, 515, 586, 588, 604, 622, 628, 482, 941,
	942, 943, 944, 945, 946, 947, 948, 305, 599, 629,
	597, 641, 623, 440, 381, 0, 0, 384, 287, 310,
	325, 0, 614, 503, 233, 468, 296, 257, 966, 0,
	217, 252, 236, 265, 280, 283, 329, 394, 402, 431,
	436, 302, 277, 250, 461, 247, 486, 518, 519, 520,
	522, 398, 272, 435, 399, 0, 379, 575, 576, 321,
	527, 0, 771, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 759, 0, 0,
	0, 276, 764, 0, 0, 0, 369, 273, 0, 0,
	432, 0, 210, 0, 488, 258, 380, 377, 583, 288,
	279, 275, 256, 322, 388, 430, 517, 424, 770, 373,
	0, 0, 498, 403, 0, 0, 0, 0, 0, 766,
	767, 0, 0, 0, 0, 0, 0, 2406, 0, 328,
	254, 330, 209, 415, 499, 292, 0, 96, 0, 0,
	967, 951, 743, 917, 955, 968, 969, 970, 971, 956,
	0, 244, 957, 958, 251, 959, 0, 916, 801, 803,
	802, 866, 867, 868, 869, 870, 871, 872, 799, 964,
	972, 973, 2407, 271, 326, 278, 270, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 0, 739, 756, 0, 769, 0, 0,
	0, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 753, 754,
	0, 0, 0, 0, 911, 0, 755, 0, 0, 0,
	0, 763, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 765, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 303, 0, 404, 263, 0,
	455, 910, 0, 0, 625, 0, 0, 908, 0, 0,
	0, 0, 368, 0, 335, 0, 0, 0, 204, 231,
	0, 0, 414, 463, 475, 647, 0, 0, 0, 961,
	0, 473, 428, 603, 239, 290, 460, 434, 471, 442,
	293, 0, 0, 472, 375, 585, 452, 600, 626, 627,
	269, 408, 612, 593, 521, 620, 644, 232, 266, 422,
	506, 606, 495, 400, 581, 582, 334, 494, 301, 208,
	372, 578, 632, 230, 481, 374, 248, 237, 587, 609,
	295, 458, 639, 219, 516, 598, 245, 485, 0, 0,
	648, 253, 505, 221, 595, 504, 396, 331, 332, 220,
	0, 459, 274, 299, 0, 0, 264, 417, 962, 963,
	262, 649, 807, 619, 226, 0, 618, 410, 584, 596,
	397, 386, 225, 594, 395, 385, 339, 815, 816, 286,
	312, 892, 891, 890, 311, 313, 888, 889, 887, 213,
	607, 0, 214, 0, 500, 608, 650, 454, 218, 240,
	241, 243, 0, 285, 289, 297, 300, 308, 309, 318,
	370, 421, 448, 444, 453, 0, 579, 601, 613, 624,
	630, 631, 633, 634, 635, 636, 637, 640, 638, 409,
	316, 496, 338, 376, 0, 0, 427, 474, 246, 605,
	497, 898, 920, 909, 775, 776, 899, 900, 924, 901,
	778, 779, 921, 922, 772, 773, 777, 923, 925, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 645, 507, 513,
	508, 509, 510, 511, 512, 0, 514, 912, 762, 761,
	0, 768, 0, 797, 798, 800, 804, 805, 806, 817,
	864, 865, 873, 875, 876, 874, 877, 878, 879, 882,
	883, 884, 885, 880, 881, 886, 780, 784, 781, 782,
	783, 795, 785, 786, 787, 788, 789, 790, 791, 792,
	793, 794, 796, 935, 936, 937, 938, 939, 940, 810,
	814, 813, 811, 812, 808, 809, 836, 835, 837, 838,
	839, 840, 841, 842, 844, 843, 845, 846, 847, 848,
	849, 850, 818, 819, 822, 823, 821, 820, 824, 833,
	834, 825, 826, 827, 828, 829, 830, 832, 831, 851,
	852, 853, 854, 855, 857, 856, 860, 861, 859, 858,
	863, 862, 760, 203, 227, 371, 0, 456, 294, 646,
	615, 610, 212, 229, 926, 268, 927, 0, 0, 931,
	0, 0, 0, 933, 932, 0, 934, 0, 896, 895,
	0, 0, 928, 929, 0, 930, 0, 0, 205, 207,
	215, 228, 238, 242, 249, 267, 282, 284, 291, 304,
	315, 323, 324, 327, 333, 383, 389, 390, 391, 392,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 489, 490, 491, 492,
	493, 501, 502, 515, 586, 588, 604, 622, 628, 482,
	941, 942, 943, 944, 945, 946, 947, 948, 305, 599,
	629, 597, 641, 623, 440, 381, 0, 0, 384, 287,
	310, 325, 0, 614, 503, 233, 468, 296, 257, 966,
	0, 217, 252, 236, 265, 280, 283, 329, 394, 402,
	431, 436, 302, 277, 250, 461, 247, 486, 518, 519,
	520, 522, 398, 272, 435, 0, 399, 379, 575, 576,
	321, 87, 527, 0, 771, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 418, 0, 0, 0, 0, 759,
	0, 0, 0, 276, 764, 0, 0, 0, 369, 273,
	0, 0, 432, 0, 210, 0, 488, 258, 380, 377,
	583, 288, 279, 275, 256, 322, 388, 430, 517, 424,
	770, 373, 0, 0, 498, 403, 0, 0, 0, 0,
	0, 766, 767, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 254, 330, 209, 415, 499, 292, 0, 96,
	0, 0, 967, 951, 743, 917, 955, 968, 969, 970,
	971, 956, 0, 244, 957, 958, 251, 959, 0, 916,
	801, 803, 802, 866, 867, 868, 869, 870, 871, 872,
	799, 964, 972, 973, 0, 271, 326, 278, 270, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 739, 756, 0, 769,
	0, 0, 0, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	753, 754, 0, 0, 0, 0, 911, 0, 755, 0,
	0, 0, 0, 763, 974, 975, 976, 977, 978, 979,
	980, 981, 982, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 765, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 303, 0, 404,
	263, 0, 455, 910, 0, 0, 625, 0, 0, 908,
	0, 0, 0, 0, 368, 0, 335, 0, 0, 0,
	204, 231, 0, 0, 414, 463, 475, 647, 0, 0,
	0, 961, 0, 473, 428, 603, 239, 290, 460, 434,
	471, 442, 293, 0, 0, 472, 375, 585, 452, 600,
	626, 627, 269, 408, 612, 593, 521, 620, 644, 232,
	266, 422, 506, 606, 495, 400, 581, 582, 334, 494,
	301, 208, 372, 578, 632, 230, 481, 374, 248, 237,
	587, 609, 295, 458, 639, 219, 516, 598, 245, 485,
	0, 0, 648, 253, 505, 221, 595, 504, 396, 331,
	332, 220, 0, 459, 274, 299, 0, 0, 264, 417,
	962, 963, 262, 649, 807, 619, 226, 0, 618, 410,
	584, 596, 397, 386, 225, 594, 395, 385, 339, 815,
	816, 286, 312, 892, 891, 890, 311, 313, 888, 889,
	887, 213, 607, 0, 214, 0, 500, 608, 650, 454,
	218, 240, 241, 243, 0, 285, 289, 297, 300, 308,
	309, 318, 370, 421, 448, 444, 453, 0, 579, 601,
	613, 624, 630, 631, 633, 634, 635, 636, 637, 640,
	638, 409, 316, 496, 338, 376, 0, 0, 427, 474,
	246, 605, 497, 898, 920, 909, 775, 776, 899, 900,
	924, 901, 778, 779, 921, 922, 772, 773, 777, 923,
	925, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 645,
	507, 513, 508, 509, 510, 511, 512, 0, 514, 912,
	762, 761, 0, 768, 0, 797, 798, 800, 804, 805,
	806, 817, 864, 865, 873, 875, 876, 874, 877, 878,
	879, 882, 883, 884, 885, 880, 881, 886, 780, 784,
	781, 782, 783, 795, 785, 786, 787, 788, 789, 790,
	791, 792, 793, 794, 796, 935, 936, 937, 938, 939,
	940, 810, 814, 813, 811, 812, 808, 809, 836, 835,
	837, 838, 839, 840, 841, 842, 844, 843, 845, 846,
	847, 848, 849, 850, 818, 819, 822, 823, 821, 820,
	824, 833, 834, 825, 826, 827, 828, 829, 830, 832,
	831, 851, 852, 853, 854, 855, 857, 856, 860, 861,
	859, 858, 863, 862, 760, 203, 227, 371, 95, 456,
	294, 646, 615, 610, 212, 229, 926, 268, 927, 0,
	0, 931, 0, 0, 0, 933, 932, 0, 934, 0,
	896, 895, 0, 0, 928, 929, 0, 930, 0, 0,
	205, 207, 215, 228, 238, 242, 249, 267, 282, 284,
	291, 304, 315, 323, 324, 327, 333, 383, 389, 390,
	391, 392, 411, 412, 413, 416, 419, 420, 423, 425,
	426, 429, 433, 437, 438, 439, 441, 443, 445, 457,
	462, 476, 477, 478, 479, 480, 483, 484, 489, 490,
	491, 492, 493, 501, 502, 515, 586, 588, 604, 622,
	628, 482, 941, 942, 943, 944, 945, 946, 947, 948,
	305, 599, 629, 597, 641, 623, 440, 381, 0, 0,
	384, 287, 310, 325, 0, 614, 503, 233, 468, 296,
	257, 966, 0, 217, 252, 236, 265, 280, 283, 329,
	394, 402, 431, 436, 302, 277, 250, 461, 247, 486,
	518, 519, 520, 522, 398, 272, 435, 399, 0, 379,
	575, 576, 321, 527, 0, 771, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 418, 0, 0, 0, 0,
	759, 0, 0, 0, 276, 764, 0, 0, 0, 369,
	273, 0, 0, 432, 0, 210, 0, 488, 258, 380,
	377, 583, 288, 279, 275, 256, 322, 388, 430, 517,
	424, 770, 373, 0, 0, 498, 403, 0, 0, 0,
	0, 0, 766, 767, 0, 0, 0, 0, 0, 0,
	0, 0, 328, 254, 330, 209, 415, 499, 292, 0,
	96, 0, 0, 967, 951, 743, 917, 955, 968, 969,
	970, 971, 956, 0, 244, 957, 958, 251, 959, 0,
	916, 801, 803, 802, 866, 867, 868, 869, 870, 871,
	872, 799, 964, 972, 973, 0, 271, 326, 278, 270,
	580, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 0, 0, 0, 0, 0, 739, 756, 0,
	769, 0, 0, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 753, 754, 0, 0, 0, 0, 911, 0, 755,
	0, 0, 0, 0, 763, 974, 975, 976, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 765, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 303, 0,
	404, 263, 0, 455, 910, 0, 0, 625, 0, 0,
	908, 0, 0, 0, 0, 368, 0, 335, 0, 0,
	0, 204, 231, 0, 0, 414, 463, 475, 647, 0,
	0, 0, 961, 0, 473, 428, 603, 239, 290, 460,
	434, 471, 442, 293, 4060, 0, 472, 375, 585, 452,
	600, 626, 627, 269, 408, 612, 593, 521, 620, 644,
	232, 266, 422, 506, 606, 495, 400, 581, 582, 334,
	494, 301, 208, 372, 578, 632, 230, 481, 374, 248,
	237, 587, 609, 295, 458, 639, 219, 516, 598, 245,
	485, 0, 0, 648, 253, 505, 221, 595, 504, 396,
	331, 332, 220, 0, 459, 274, 299, 0, 0, 264,
	417, 962, 963, 262, 649, 807, 619, 226, 0, 618,
	410, 584, 596, 397, 386, 225, 594, 395, 385, 339,
	815, 816, 286, 312, 892, 891, 890, 311, 313, 888,
	889, 887, 213, 607, 0, 214, 0, 500, 608, 650,
	454, 218, 240, 241, 243, 0, 285, 289, 297, 300,
	308, 309, 318, 370, 421, 448, 444, 453, 0, 579,
	601, 613, 624, 630, 631, 633, 634, 635, 636, 637,
	640, 638, 409, 316, 496, 338, 376, 0, 0, 427,
	474, 246, 605, 497, 898, 920, 909, 775, 776, 899,
	900, 924, 901, 778, 779, 921, 922, 772, 773, 777,
	923, 925, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	645, 507, 513, 508, 509, 510, 511, 512, 0, 514,
	912, 762, 761, 0, 768, 0, 797, 798, 800, 804,
	805, 806, 817, 864, 865, 873, 875, 876, 874, 877,
	878, 879, 882, 883, 884, 885, 880, 881, 886, 780,
	784, 781, 782, 783, 795, 785, 786, 787, 788, 789,
	790, 791, 792, 793, 794, 796, 935, 936, 937, 938,
	939, 940, 810, 814, 813, 811, 812, 808, 809, 836,
	835, 837, 838, 839, 840, 841, 842, 844, 843, 845,
	846, 847, 848, 849, 850, 818, 819, 822, 823, 821,
	820, 824, 833, 834, 825, 826, 827, 828, 829, 830,
	832, 831, 851, 852, 853, 854, 855, 857, 856, 860,
	861, 859, 858, 863, 862, 760, 203, 227, 371, 0,
	456, 294, 646, 615, 610, 212, 229, 926, 268, 927,
	0, 0, 931, 0, 0, 0, 933, 932, 0, 934,
	0, 896, 895, 0, 0, 928, 929, 0, 930, 0,
	0, 205, 207, 215, 228, 238, 242, 249, 267, 282,
	284, 291, 304, 315, 323, 324, 327, 333, 383, 389,
	390, 391, 392, 411, 412, 413, 416, 419, 420, 423,
	425, 426, 429, 433, 437, 438, 439, 441, 443, 445,
	457, 462, 476, 477, 478, 479, 480, 483, 484, 489,
	490, 491, 492, 493, 501, 502, 515, 586, 588, 604,
	622, 628, 482, 941, 942, 943, 944, 945, 946, 947,
	948, 305, 599, 629, 597, 641, 623, 440, 381, 0,
	0, 384, 287, 310, 325, 0, 614, 503, 233, 468,
	296, 257, 966, 0, 217, 252, 236, 265, 280, 283,
	329, 394, 402, 431, 436, 302, 277, 250, 461, 247,
	486, 518, 519, 520, 522, 398, 272, 435, 399, 0,
	379, 575, 576, 321, 527, 0, 771, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 759, 0, 0, 0, 276, 764, 0, 0, 0,
	369, 273, 0, 0, 432, 0, 210, 0, 488, 258,
	380, 377, 583, 288, 279, 275, 256, 322, 388, 430,
	517, 424, 770, 373, 0, 0, 498, 403, 0, 0,
	0, 0, 0, 766, 767, 0, 0, 0, 0, 0,
	0, 0, 0, 328, 254, 330, 209, 415, 499, 292,
	0, 96, 0, 1733, 967, 951, 743, 917, 955, 968,
	969, 970, 971, 956, 0, 244, 957, 958, 251, 959,
	0, 916, 801, 803, 802, 866, 867, 868, 869, 870,
	871, 872, 799, 964, 972, 973, 0, 271, 326, 278,
	270, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 739, 756,
	0, 769, 0, 0, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 753, 754, 0, 0, 0, 0, 911, 0,
	755, 0, 0, 0, 0, 763, 974, 975, 976, 977,
	978, 979, 980, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 765, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 303,
	0, 404, 263, 0, 455, 910, 0, 0, 625, 0,
	0, 908, 0, 0, 0, 0, 368, 0, 335, 0,
	0, 0, 204, 231, 0, 0, 414, 463, 475, 647,
	0, 0, 0, 961, 0, 473, 428, 603, 239, 290,
	460, 434, 471, 442, 293, 0, 0, 472, 375, 585,
	452, 600, 626, 627, 269, 408, 612, 593, 521, 620,
	644, 232, 266, 422, 506, 606, 495, 400, 581, 582,
	334, 494, 301, 208, 372, 578, 632, 230, 481, 374,
	248, 237, 587, 609, 295, 458, 639, 219, 516, 598,
	245, 485, 0, 0, 648, 253, 505, 221, 595, 504,
	396, 331, 332, 220, 0, 459, 274, 299, 0, 0,
	264, 417, 962, 963, 262, 649, 807, 619, 226, 0,
	618, 410, 584, 596, 397, 386, 225, 594, 395, 385,
	339, 815, 816, 286, 312, 892, 891, 890, 311, 313,
	888, 889, 887, 213, 607, 0, 214, 0, 500, 608,
	650, 454, 218, 240, 241, 243, 0, 285, 289, 297,
	300, 308, 309, 318, 370, 421, 448, 444, 453, 0,
	579, 601, 613, 624, 630, 631, 633, 634, 635, 636,
	637, 640, 638, 409, 316, 496, 338, 376, 0, 0,
	427, 474, 246, 605, 497, 898, 920, 909, 775, 776,
	899, 900, 924, 901, 778, 779, 921, 922, 772, 773,
	777, 923, 925, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 645, 507, 513, 508, 509, 510, 511, 512, 0,
	514, 912, 762, 761, 0, 768, 0, 797, 798, 800,
	804, 805, 806, 817, 864, 865, 873, 875, 876, 874,
	877, 878, 879, 882, 883, 884, 885, 880, 881, 886,
	780, 784, 781, 782, 783, 795, 785, 786, 787, 788,
	789, 790, 791, 792, 793, 794, 796, 935, 936, 937,
	938, 939, 940, 810, 814, 813, 811, 812, 808, 809,
	836, 835, 837, 838, 839, 840, 841, 842, 844, 843,
	845, 846, 847, 848, 849, 850, 818, 819, 822, 823,
	821, 820, 824, 833, 834, 825, 826, 827, 828, 829,
	830, 832, 831, 851, 852, 853, 854, 855, 857, 856,
	860, 861, 859, 858, 863, 862, 760, 203, 227, 371,
	0, 456, 294, 646, 615, 610, 212, 229, 926, 268,
	927, 0, 0, 931, 0, 0, 0, 933, 932, 0,
	934, 0, 896, 895, 0, 0, 928, 929, 0, 930,
	0, 0, 205, 207, 215, 228, 238, 242, 249, 267,
	282, 284, 291, 304, 315, 323, 324, 327, 333, 383,
	389, 390, 391, 392, 411, 412, 413, 416, 419, 420,
	423, 425, 426, 429, 433, 437, 438, 439, 441, 443,
	445, 457, 462, 476, 477, 478, 479, 480, 483, 484,
	489, 490, 491, 492, 493, 501, 502, 515, 586, 588,
	604, 622, 628, 482, 941, 942, 943, 944, 945, 946,
	947, 948, 305, 599, 629, 597, 641, 623, 440, 381,
	0, 0, 384, 287, 310, 325, 0, 614, 503, 233,
	468, 296, 257, 966, 0, 217, 252, 236, 265, 280,
	283, 329, 394, 402, 431, 436, 302, 277, 250, 461,
	247, 486, 518, 519, 520, 522, 398, 272, 435, 399,
	0, 379, 575, 576, 321, 527, 0, 771, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 418, 0, 0,
	0, 0, 759, 0, 0, 0, 276, 764, 0, 0,
	0, 369, 273, 0, 0, 432, 0, 210, 0, 488,
	258, 380, 377, 583, 288, 279, 275, 256, 322, 388,
	430, 517, 424, 770, 373, 0, 0, 498, 403, 0,
	0, 0, 0, 0, 766, 767, 0, 0, 0, 0,
	0, 0, 0, 0, 328, 254, 330, 209, 415, 499,
	292, 0, 96, 0, 0, 967, 951, 743, 917, 955,
	968, 969, 970, 971, 956, 0, 244, 957, 958, 251,
	959, 0, 916, 801, 803, 802, 866, 867, 868, 869,
	870, 871, 872, 799, 964, 972, 973, 0, 271, 326,
	278, 270, 580, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 0, 0, 0, 0, 739,
	756, 0, 769, 0, 0, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 753, 754, 1058, 0, 0, 0, 911,
	0, 755, 0, 0, 0, 0, 763, 974, 975, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 765,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	303, 0, 404, 263, 0, 455, 910, 0, 0, 625,
	0, 0, 908, 0, 0, 0, 0, 368, 0, 335,
	0, 0, 0, 204, 231, 0, 0, 414, 463, 475,
	647, 0, 0, 0, 961, 0, 473, 428, 603, 239,
	290, 460, 434, 471, 442, 293, 0, 0, 472, 375,
	585, 452, 600, 626, 627, 269, 408, 612, 593, 521,
	620, 644, 232, 266, 422, 506, 606, 495, 400, 581,
	582, 334, 494, 301, 208, 372, 578, 632, 230, 481,
	374, 248, 237, 587, 609, 295, 458, 639, 219, 516,
	598, 245, 485, 0, 0, 648, 253, 505, 221, 595,
	504, 396, 331, 332, 220, 0, 459, 274, 299, 0,
	0, 264, 417, 962, 963, 262, 649, 807, 619, 226,
	0, 618, 410, 584, 596, 397, 386, 225, 594, 395,
	385, 339, 815, 816, 286, 312, 892, 891, 890, 311,
	313, 888, 889, 887, 213, 607, 0, 214, 0, 500,
	608, 650, 454, 218, 240, 241, 243, 0, 285, 289,
	297, 300, 308, 309, 318, 370, 421, 448, 444, 453,
	0, 579, 601, 613, 624, 630, 631, 633, 634, 635,
	636, 637, 640, 638, 409, 316, 496, 338, 376, 0,
	0, 427, 474, 246, 605, 497, 898, 920, 909, 775,
	776, 899, 900, 924, 901, 778, 779, 921, 922, 772,
	773, 777, 923, 925, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 645, 507, 513, 508, 509, 510, 511, 512,
	0, 514, 912, 762, 761, 0, 768, 0, 797, 798,
	800, 804, 805, 806, 817, 864, 865, 873, 875, 876,
	874, 877, 878, 879, 882, 883, 884, 885, 880, 881,
	886, 780, 784, 781, 782, 783, 795, 785, 786, 787,
	788, 789, 790, 791, 792, 793, 794, 796, 935, 936,
	937, 938, 939, 940, 810, 814, 813, 811, 812, 808,
	809, 836, 835, 837, 838, 839, 840, 841, 842, 844,
	843, 845, 846, 847, 848, 849, 850, 818, 819, 822,
	823, 821, 820, 824, 833, 834, 825, 826, 827, 828,
	829, 830, 832, 831, 851, 852, 853, 854, 855, 857,
	856, 860, 861, 859, 858, 863, 862, 760, 203, 227,
	371, 0, 456, 294, 646, 615, 610, 212, 229, 926,
	268, 927, 0, 0, 931, 0, 0, 0, 933, 932,
	0, 934, 0, 896, 895, 0, 0, 928, 929, 0,
	930, 0, 0, 205, 207, 215, 228, 238, 242, 249,
	267, 282, 284, 291, 304, 315, 323, 324, 327, 333,
	383, 389, 390, 391, 392, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 489, 490, 491, 492, 493, 501, 502, 515, 586,
	588, 604, 622, 628, 482, 941, 942, 943, 944, 945,
	946, 947, 948, 305, 599, 629, 597, 641, 623, 440,
	381, 0, 0, 384, 287, 310, 325, 0, 614, 503,
	233, 468, 296, 257, 966, 0, 217, 252, 236, 265,
	280, 283, 329, 394, 402, 431, 436, 302, 277, 250,
	461, 247, 486, 518, 519, 520, 522, 398, 272, 435,
	399, 0, 379, 575, 576, 321, 527, 0, 771, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 759, 0, 0, 0, 276, 764, 0,
	0, 0, 369, 273, 0, 0, 432, 0, 210, 0,
	488, 258, 380, 377, 583, 288, 279, 275, 256, 322,
	388, 430, 517, 424, 770, 373, 0, 0, 498, 403,
	0, 0, 0, 0, 0, 766, 767, 0, 0, 0,
	0, 0, 0, 0, 0, 328, 254, 330, 209, 415,
	499, 292, 0, 96, 0, 0, 967, 951, 743, 917,
	955, 968, 969, 970, 971, 956, 0, 244, 957, 958,
	251, 959, 0, 916, 801, 803, 802, 866, 867, 868,
	869, 870, 871, 872, 799, 964, 972, 973, 0, 271,
	326, 278, 270, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 0,
	739, 756, 0, 769, 0, 0, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 753, 754, 0, 0, 0, 0,
	911, 0, 755, 0, 0, 0, 0, 763, 974, 975,
	976, 977, 978, 979, 980, 981, 982, 983, 984, 985,
	986, 987, 988, 989, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015,
	765, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 303, 0, 404, 263, 0, 455, 910, 0, 0,
	625, 0, 0, 908, 0, 0, 0, 0, 368, 0,
	335, 0, 0, 0, 204, 231, 0, 0, 414, 463,
	475, 647, 0, 0, 0, 961, 0, 473, 428, 603,
	239, 290, 460, 434, 471, 442, 293, 0, 0, 472,
	375, 585, 452, 600, 626, 627, 269, 408, 612, 593,
	521, 620, 644, 232, 266, 422, 506, 606, 495, 400,
	581, 582, 334, 494, 301, 208, 372, 578, 632, 230,
	481, 374, 248, 237, 587, 609, 295, 458, 639, 219,
	516, 598, 245, 485, 0, 0, 648, 253, 505, 221,
	595, 504, 396, 331, 332, 220, 0, 459, 274, 299,
	0, 0, 264, 417, 962, 963, 262, 649, 807, 619,
	226, 0, 618, 410, 584, 596, 397, 386, 225, 594,
	395, 385, 339, 815, 816, 286, 312, 892, 891, 890,
	311, 313, 888, 889, 887, 213, 607, 0, 214, 0,
	500, 608, 650, 454, 218, 240, 241, 243, 0, 285,
	289, 297, 300, 308, 309, 318, 370, 421, 448, 444,
	453, 0, 579, 601, 613, 624, 630, 631, 633, 634,
	635, 636, 637, 640, 638, 409, 316, 496, 338, 376,
	0, 0, 427, 474, 246, 605, 497, 898, 920, 909,
	775, 776, 899, 900, 924, 901, 778, 779, 921, 922,
	772, 773, 777, 923, 925, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 645, 507, 513, 508, 509, 510, 511,
	512, 0, 514, 912, 762, 761, 0, 768, 0, 797,
	798, 800, 804, 805, 806, 817, 864, 865, 873, 875,
	876, 874, 877, 878, 879, 882, 883, 884, 885, 880,
	881, 886, 780, 784, 781, 782, 783, 795, 785, 786,
	787, 788, 789, 790, 791, 792, 793, 794, 796, 935,
	936, 937, 938, 939, 940, 810, 814, 813, 811, 812,
	808, 809, 836, 835, 837, 838, 839, 840, 841, 842,
	844, 843, 845, 846, 847, 848, 849, 850, 818, 819,
	822, 823, 821, 820, 824, 833, 834, 825, 826, 827,
	828, 829, 830, 832, 831, 851, 852, 853, 854, 855,
	857, 856, 860, 861, 859, 858, 863, 862, 760, 203,
	227, 371, 0, 456, 294, 646, 615, 610, 212, 229,
	926, 268, 927, 0, 0, 931, 0, 0, 0, 933,
	932, 0, 934, 0, 896, 895, 0, 0, 928, 929,
	0, 930, 0, 0, 205, 207, 215, 228, 238, 242,
	249, 267, 282, 284, 291, 304, 315, 323, 324, 327,
	333, 383, 389, 390, 391, 392, 411, 412, 413, 416,
	419, 420, 423, 425, 426, 429, 433, 437, 438, 439,
	441, 443, 445, 457, 462, 476, 477, 478, 479, 480,
	483, 484, 489, 490, 491, 492, 493, 501, 502, 515,
	586, 588, 604, 622, 628, 482, 941, 942, 943, 944,
	945, 946, 947, 948, 305, 599, 629, 597, 641, 623,
	440, 381, 0, 0, 384, 287, 310, 325, 0, 614,
	503, 233, 468, 296, 257, 966, 0, 217, 252, 236,
	265, 280, 283, 329, 394, 402, 431, 436, 302, 277,
	250, 461, 247, 486, 518, 519, 520, 522, 398, 272,
	435, 399, 0, 379, 575, 576, 321, 527, 0, 771,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 759, 0, 0, 0, 276, 764,
	0, 0, 0, 369, 273, 0, 0, 432, 0, 210,
	0, 488, 258, 380, 377, 583, 288, 279, 275, 256,
	322, 388, 430, 517, 424, 770, 373, 0, 0, 498,
	403, 0, 0, 0, 0, 0, 766, 767, 0, 0,
	0, 0, 0, 0, 0, 0, 328, 254, 330, 209,
	415, 499, 292, 0, 96, 0, 0, 967, 951, 743,
	917, 955, 968, 969, 970, 971, 956, 0, 244, 957,
	958, 251, 959, 0, 916, 801, 803, 802, 866, 867,
	868, 869, 870, 871, 872, 799, 964, 972, 973, 0,
	271, 326, 278, 270, 580, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 0, 0, 0, 0,
	0, 739, 756, 0, 769, 0, 0, 0, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 753, 754, 0, 0, 0,
	0, 911, 0, 755, 0, 0, 0, 0, 763, 974,
	975, 976, 977, 978, 979, 980, 981, 982, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014,
	1015, 3128, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 303, 0, 404, 263, 0, 455, 910, 0,
	0, 625, 0, 0, 908, 0, 0, 0, 0, 368,
	0, 335, 0, 0, 0, 204, 231, 0, 0, 414,
	463, 475, 647, 0, 0, 0, 961, 0, 473, 428,
	603, 239, 290, 460, 434, 471, 442, 293, 0, 0,
	472, 375, 585, 452, 600, 626, 627, 269, 408, 612,
	593, 521, 620, 644, 232, 266, 422, 506, 606, 495,
	400, 581, 582, 334, 494, 301, 208, 372, 578, 632,
	230, 481, 374, 248, 237, 587, 609, 295, 458, 639,
	219, 516, 598, 245, 485, 0, 0, 648, 253, 505,
	221, 595, 504, 396, 331, 332, 220, 0, 459, 274,
	299, 0, 0, 264, 417, 962, 963, 262, 649, 807,
	619, 226, 0, 618, 410, 584, 596, 397, 386, 225,
	594, 395, 385, 339, 815, 816, 286, 312, 892, 891,
	890, 311, 313, 888, 889, 887, 213, 607, 0, 214,
	0, 500, 608, 650, 454, 218, 240, 241, 243, 0,
	285, 289, 297, 300, 308, 309, 318, 370, 421, 448,
	444, 453, 0, 579, 601, 613, 624, 630, 631, 633,
	634, 635, 636, 637, 640, 638, 409, 316, 496, 338,
	376, 0, 0, 427, 474, 246, 605, 497, 898, 920,
	909, 775, 776, 899, 900, 924, 901, 778, 779, 921,
	922, 772, 773, 777, 923, 925, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 645, 507, 513, 508, 509, 510,
	511, 512, 0, 514, 912, 762, 761, 0, 768, 0,
	797, 798, 800, 804, 805, 806, 817, 864, 865, 873,
	875, 876, 874, 877, 878, 879, 882, 883, 884, 885,
	880, 881, 886, 780, 784, 781, 782, 783, 795, 785,
	786, 787, 788, 789, 790, 791, 792, 793, 794, 796,
	935, 936, 937, 938, 939, 940, 810, 814, 813, 811,
	812, 808, 809, 836, 835, 837, 838, 839, 840, 841,
	842, 844, 843, 845, 846, 847, 848, 849, 850, 818,
	819, 822, 823, 821, 820, 824, 833, 834, 825, 826,
	827, 828, 829, 830, 832, 831, 851, 852, 853, 854,
	855, 857, 856, 860, 861, 859, 858, 863, 862, 760,
	203, 227, 371, 0, 456, 294, 646, 615, 610, 212,
	229, 926, 268, 927, 0, 0, 931, 0, 0, 0,
	933, 932, 0, 934, 0, 896, 895, 0, 0, 928,
	929, 0, 930, 0, 0, 205, 207, 215, 228, 238,
	242, 249, 267, 282, 284, 291, 304, 315, 323, 324,
	327, 333, 383, 389, 390, 391, 392, 411, 412, 413,
	416, 419, 420, 423, 425, 426, 429, 433, 437, 438,
	439, 441, 443, 445, 457, 462, 476, 477, 478, 479,
	480, 483, 484, 489, 490, 491, 492, 493, 501, 502,
	515, 586, 588, 604, 622, 628, 482, 941, 942, 943,
	944, 945, 946, 947, 948, 305, 599, 629, 597, 641,
	623, 440, 381, 0, 0, 384, 287, 310, 325, 0,
	614, 503, 233, 468, 296, 257, 966, 0, 217, 252,
	236, 265, 280, 283, 329, 394, 402, 431, 436, 302,
	277, 250, 461, 247, 486, 518, 519, 520, 522, 398,
	272, 435, 399, 0, 379, 575, 576, 321, 527, 0,
	771, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 759, 0, 0, 0, 276,
	764, 0, 0, 0, 369, 273, 0, 0, 432, 0,
	210, 0, 488, 258, 380, 377, 583, 288, 279, 275,
	256, 322, 388, 430, 517, 424, 770, 373, 0, 0,
	498, 403, 0, 0, 0, 0, 0, 766, 767, 0,
	0, 0, 0, 0, 0, 0, 0, 328, 254, 330,
	209, 415, 499, 292, 0, 96, 0, 0, 967, 951,
	743, 917, 955, 968, 969, 970, 971, 956, 0, 244,
	957, 958, 251, 959, 0, 916, 801, 803, 802, 866,
	867, 868, 869, 870, 871, 872, 799, 964, 972, 973,
	0, 271, 326, 278, 270, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 0, 0, 0,
	0, 0, 739, 756, 0, 769, 0, 0, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 753, 754, 0, 0,
	0, 0, 911, 0, 755, 0, 0, 0, 0, 763,
	974, 975, 976, 977, 978, 979, 980, 981, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 3124, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 303, 0, 404, 263, 0, 455, 910,
	0, 0, 625, 0, 0, 908, 0, 0, 0, 0,
	368, 0, 335, 0, 0, 0, 204, 231, 0, 0,
	414, 463, 475, 647, 0, 0, 0, 961, 0, 473,
	428, 603, 239, 290, 460, 434, 471, 442, 293, 0,
	0, 472, 375, 585, 452, 600, 626, 627, 269, 408,
	612, 593, 521, 620, 644, 232, 266, 422, 506, 606,
	495, 400, 581, 582, 334, 494, 301, 208, 372, 578,
	632, 230, 481, 374, 248, 237, 587, 609, 295, 458,
	639, 219, 516, 598, 245, 485, 0, 0, 648, 253,
	505, 221, 595, 504, 396, 331, 332, 220, 0, 459,
	274, 299, 0, 0, 264, 417, 962, 963, 262, 649,
	807, 619, 226, 0, 618, 410, 584, 596, 397, 386,
	225, 594, 395, 385, 339, 815, 816, 286, 312, 892,
	891, 890, 311, 313, 888, 889, 887, 213, 607, 0,
	214, 0, 500, 608, 650, 454, 218, 240, 241, 243,
	0, 285, 289, 297, 300, 308, 309, 318, 370, 421,
	448, 444, 453, 0, 579, 601, 613, 624, 630, 631,
	633, 634, 635, 636, 637, 640, 638, 409, 316, 496,
	338, 376, 0, 0, 427, 474, 246, 605, 497, 898,
	920, 909, 775, 776, 899, 900, 924, 901, 778, 779,
	921, 922, 772, 773, 777, 923, 925, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 645, 507, 513, 508, 509,
	510, 511, 512, 0, 514, 912, 762, 761, 0, 768,
	0, 797, 798, 800, 804, 805, 806, 817, 864, 865,
	873, 875, 876, 874, 877, 878, 879, 882, 883, 884,
	885, 880, 881, 886, 780, 784, 781, 782, 783, 795,
	785, 786, 787, 788, 789, 790, 791, 792, 793, 794,
	796, 935, 936, 937, 938, 939, 940, 810, 814, 813,
	811, 812, 808, 809, 836, 835, 837, 838, 839, 840,
	841, 842, 844, 843, 845, 846, 847, 848, 849, 850,
	818, 819, 822, 823, 821, 820, 824, 833, 834, 825,
	826, 827, 828, 829, 830, 832, 831, 851, 852, 853,
	854, 855, 857, 856, 860, 861, 859, 858, 863, 862,
	760, 203, 227, 371, 0, 456, 294, 646, 615, 610,
	212, 229, 926, 268, 927, 0, 0, 931, 0, 0,
	0, 933, 932, 0, 934, 0, 896, 895, 0, 0,
	928, 929, 0, 930, 0, 0, 205, 207, 215, 228,
	238, 242, 249, 267, 282, 284, 291, 304, 315, 323,
	324, 327, 333, 383, 389, 390, 391, 392, 411, 412,
	413, 416, 419, 420, 423, 425, 426, 429, 433, 437,
	438, 439, 441, 443, 445, 457, 462, 476, 477, 478,
	479, 480, 483, 484, 489, 490, 491, 492, 493, 501,
	502, 515, 586, 588, 604, 622, 628, 482, 941, 942,
	943, 944, 945, 946, 947, 948, 305, 599, 629, 597,
	641, 623, 440, 381, 0, 0, 384, 287, 310, 325,
	0, 614, 503, 233, 468, 296, 257, 966, 0, 217,
	252, 236, 265, 280, 283, 329, 394, 402, 431, 436,
	302, 277, 250, 461, 247, 486, 518, 519, 520, 522,
	398, 272, 435, 399, 0, 379, 575, 576, 321, 527,
	0, 771, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 759, 0, 0, 0,
	276, 764, 0, 0, 0, 369, 273, 0, 0, 432,
	0, 210, 0, 488, 258, 380, 377, 583, 288, 279,
	275, 256, 322, 388, 430, 517, 424, 770, 373, 0,
	0, 498, 403, 0, 0, 0, 0, 0, 766, 767,
	0, 0, 0, 0, 0, 0, 0, 0, 328, 254,
	330, 209, 415, 499, 292, 0, 96, 0, 0, 967,
	951, 1082, 917, 955, 968, 969, 970, 971, 956, 0,
	244, 957, 958, 251, 959, 0, 916, 801, 803, 802,
	866, 867, 868, 869, 870, 871, 872, 799, 964, 972,
	973, 0, 271, 326, 278, 270, 580, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	0, 0, 0, 0, 756, 0, 769, 0, 0, 0,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 753, 754, 0,
	0, 0, 0, 911, 0, 755, 0, 0, 0, 0,
	763, 974, 975, 976, 977, 978, 979, 980, 981, 982,
	983, 984, 985, 986, 987, 988, 989, 990, 991, 992,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012,
	1013, 1014, 1015, 765, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 303, 0, 404, 263, 0, 455,
	910, 0, 0, 625, 0, 0, 908, 0, 0, 0,
	0, 368, 0, 335, 0, 0, 0, 204, 231, 0,
	0, 414, 463, 475, 647, 0, 0, 0, 961, 0,
	473, 428, 603, 239, 290, 460, 434, 471, 442, 293,
	0, 0, 472, 375, 585, 452, 600, 626, 627, 269,
	408, 612, 593, 521, 620, 644, 232, 266, 422, 506,
	606, 495, 400, 581, 582, 334, 494, 301, 208, 372,
	578, 632, 230, 481, 374, 248, 237, 587, 609, 295,
	458, 639, 219, 516, 598, 245, 485, 0, 0, 648,
	253, 505, 221, 595, 504, 396, 331, 332, 220, 0,
	459, 274, 299, 0, 0, 264, 417, 962, 963, 262,
	649, 807, 619, 226, 0, 618, 410, 584, 596, 397,
	386, 225, 594, 395, 385, 339, 815, 816, 286, 312,
	892, 891, 890, 311, 313, 888, 889, 887, 213, 607,
	0, 214, 0, 500, 608, 650, 454, 218, 240, 241,
	243, 0, 285, 289, 297, 300, 308, 309, 318, 370,
	421, 448, 444, 453, 0, 579, 601, 613, 624, 630,
	631, 633, 634, 635, 636, 637, 640, 638, 409, 316,
	496, 338, 376, 0, 0, 427, 474, 246, 605, 497,
	898, 920, 909, 775, 776, 899, 900, 924, 901, 778,
	779, 921, 922, 772, 773, 777, 923, 925, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 645, 507, 513, 508,
	509, 510, 511, 512, 0, 514, 912, 762, 761, 0,
	768, 0, 797, 798, 800, 804, 805, 806, 817, 864,
	865, 873, 875, 876, 874, 877, 878, 879, 882, 883,
	884, 885, 880, 881, 886, 780, 784, 781, 782, 783,
	795, 785, 786, 787, 788, 789, 790, 791, 792, 793,
	794, 796, 935, 936, 937, 938, 939, 940, 810, 814,
	813, 811, 812, 808, 809, 836, 835, 837, 838, 839,
	840, 841, 842, 844, 843, 845, 846, 847, 848, 849,
	850, 818, 819, 822, 823, 821, 820, 824, 833, 834,
	825, 826, 827, 828, 829, 830, 832, 831, 851, 852,
	853, 854, 855, 857, 856, 860, 861, 859, 858, 863,
	862, 760, 203, 227, 371, 0, 456, 294, 646, 615,
	610, 212, 229, 926, 268, 927, 0, 0, 931, 0,
	0, 0, 933, 932, 0, 934, 0, 896, 895, 0,
	0, 928, 929, 0, 930, 0, 0, 205, 207, 215,
	228, 238, 242, 249, 267, 282, 284, 291, 304, 315,
	323, 324, 327, 333, 383, 389, 390, 391, 392, 411,
	412, 413, 416, 419, 420, 423, 425, 426, 429, 433,
	437, 438, 439, 441, 443, 445, 457, 462, 476, 477,
	478, 479, 480, 483, 484, 489, 490, 491, 492, 493,
	501, 502, 515, 586, 588, 604, 622, 628, 482, 941,
	942, 943, 944, 945, 946, 947, 948, 305, 599, 629,
	597, 641, 623, 440, 381, 0, 0, 384, 287, 310,
	325, 0, 614, 503, 233, 468, 296, 257, 966, 0,
	217, 252, 236, 265, 280, 283, 329, 394, 402, 431,
	436, 302, 277, 250, 461, 247, 486, 518, 519, 520,
	522, 398, 272, 435, 399, 0, 379, 575, 576, 321,
	527, 0, 771, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 759, 0, 0,
	0, 276, 764, 0, 0, 0, 369, 273, 0, 0,
	432, 0, 210, 0, 488, 258, 380, 377, 583, 288,
	279, 275, 256, 322, 388, 430, 517, 424, 770, 373,
	0, 0, 498, 403, 0, 0, 0, 0, 0, 766,
	767, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	254, 330, 209, 415, 499, 292, 0, 96, 0, 0,
	967, 951, 1082, 917, 955, 968, 969, 970, 971, 956,
	0, 244, 957, 958, 251, 959, 0, 916, 801, 803,
	802, 866, 867, 868, 869, 870, 871, 872, 799, 964,
	972, 973, 0, 271, 326, 278, 270, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 756, 0, 769, 0, 0,
	0, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 753, 754,
	0, 0, 0, 0, 911, 0, 755, 0, 0, 0,
	0, 763, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 2093, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 303, 0, 404, 263, 0,
	455, 910, 0, 0, 625, 0, 0, 908, 0, 0,
	0, 0, 368, 0, 335, 0, 0, 0, 204, 231,
	0, 0, 414, 463, 475, 647, 0, 0, 0, 961,
	0, 473, 428, 603, 239, 290, 460, 434, 471, 442,
	293, 0, 0, 472, 375, 585, 452, 600, 626, 627,
	269, 408, 612, 593, 521, 620, 644, 232, 266, 422,
	506, 606, 495, 400, 581, 582, 334, 494, 301, 208,
	372, 578, 632, 230, 481, 374, 248, 237, 587, 609,
	295, 458, 639, 219, 516, 598, 245, 485, 0, 0,
	648, 253, 505, 221, 595, 504, 396, 331, 332, 220,
	0, 459, 274, 299, 0, 0, 264, 417, 962, 963,
	262, 649, 807, 619, 226, 0, 618, 410, 584, 596,
	397, 386, 225, 594, 395, 385, 339, 815, 816, 286,
	312, 892, 891, 890, 311, 313, 888, 889, 887, 213,
	607, 0, 214, 0, 500, 608, 650, 454, 218, 240,
	241, 243, 0, 285, 289, 297, 300, 308, 309, 318,
	370, 421, 448, 444, 453, 0, 579, 601, 613, 624,
	630, 631, 633, 634, 635, 636, 637, 640, 638, 409,
	316, 496, 338, 376, 0, 0, 427, 474, 246, 605,
	497, 898, 920, 909, 775, 776, 899, 900, 924, 901,
	778, 779, 921, 922, 772, 773, 777, 923, 925, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 645, 507, 513,
	508, 509, 510, 511, 512, 0, 514, 912, 762, 761,
	0, 768, 0, 797, 798, 800, 804, 805, 806, 817,
	864, 865, 873, 875, 876, 874, 877, 878, 879, 882,
	883, 884, 885, 880, 881, 886, 780, 784, 781, 782,
	783, 795, 785, 786, 787, 788, 789, 790, 791, 792,
	793, 794, 796, 935, 936, 937, 938, 939, 940, 810,
	814, 813, 811, 812, 808, 809, 836, 835, 837, 838,
	839, 840, 841, 842, 844, 843, 845, 846, 847, 848,
	849, 850, 818, 819, 822, 823, 821, 820, 824, 833,
	834, 825, 826, 827, 828, 829, 830, 832, 831, 851,
	852, 853, 854, 855, 857, 856, 860, 861, 859, 858,
	863, 862, 760, 203, 227, 371, 0, 456, 294, 646,
	615, 610, 212, 229, 926, 268, 927, 0, 0, 931,
	0, 0, 0, 933, 932, 0, 934, 0, 896, 895,
	0, 0, 928, 929, 0, 930, 0, 0, 205, 207,
	215, 228, 238, 242, 249, 267, 282, 284, 291, 304,
	315, 323, 324, 327, 333, 383, 389, 390, 391, 392,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 489, 490, 491, 492,
	493, 501, 502, 515, 586, 588, 604, 622, 628, 482,
	941, 942, 943, 944, 945, 946, 947, 948, 305, 599,
	629, 597, 641, 623, 440, 381, 0, 0, 384, 287,
	310, 325, 0, 614, 503, 233, 468, 296, 257, 966,
	0, 217, 252, 236, 265, 280, 283, 329, 394, 402,
	431, 436, 302, 277, 250, 461, 247, 486, 518, 519,
	520, 522, 398, 272, 435, 399, 0, 379, 575, 576,
	321, 527, 0, 771, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 418, 0, 0, 0, 0, 759, 0,
	0, 0, 276, 764, 0, 0, 0, 369, 273, 0,
	0, 432, 0, 210, 0, 488, 258, 380, 377, 583,
	288, 279, 275, 256, 322, 388, 430, 517, 424, 770,
	373, 0, 0, 498, 403, 0, 0, 0, 0, 0,
	766, 767, 0, 0, 0, 0, 0, 0, 0, 0,
	328, 254, 330, 209, 415, 499, 292, 0, 96, 0,
	0, 967, 951, 1082, 917, 955, 968, 969, 970, 971,
	956, 0, 244, 957, 958, 251, 959, 0, 916, 801,
	803, 802, 866, 867, 868, 869, 870, 871, 872, 799,
	964, 972, 973, 0, 271, 326, 278, 270, 580, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 0, 0, 0, 0, 756, 0, 769, 0,
	0, 0, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 753,
	754, 0, 0, 0, 0, 911, 0, 755, 0, 0,
	0, 0, 763, 974, 975, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
	1011, 1012, 1013, 1014, 1015, 2091, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 303, 0, 404, 263,
	0, 455, 910, 0, 0, 625, 0, 0, 908, 0,
	0, 0, 0, 368, 0, 335, 0, 0, 0, 204,
	231, 0, 0, 414, 463, 475, 647, 0, 0, 0,
	961, 0, 473, 428, 603, 239, 290, 460, 434, 471,
	442, 293, 0, 0, 472, 375, 585, 452, 600, 626,
	627, 269, 408, 612, 593, 521, 620, 644, 232, 266,
	422, 506, 606, 495, 400, 581, 582, 334, 494, 301,
	208, 372, 578, 632, 230, 481, 374, 248, 237, 587,
	609, 295, 458, 639, 219, 516, 598, 245, 485, 0,
	0, 648, 253, 505, 221, 595, 504, 396, 331, 332,
	220, 0, 459, 274, 299, 0, 0, 264, 417, 962,
	963, 262, 649, 807, 619, 226, 0, 618, 410, 584,
	596, 397, 386, 225, 594, 395, 385, 339, 815, 816,
	286, 312, 892, 891, 890, 311, 313, 888, 889, 887,
	213, 607, 0, 214, 0, 500, 608, 650, 454, 218,
	240, 241, 243, 0, 285, 289, 297, 300, 308, 309,
	318, 370, 421, 448, 444, 453, 0, 579, 601, 613,
	624, 630, 631, 633, 634, 635, 636, 637, 640, 638,
	409, 316, 496, 338, 376, 0, 0, 427, 474, 246,
	605, 497, 898, 920, 909, 775, 776, 899, 900, 924,
	901, 778, 779, 921, 922, 772, 773, 777, 923, 925,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 645, 507,
	513, 508, 509, 510, 511, 512, 0, 514, 912, 762,
	761, 0, 768, 0, 797, 798, 800, 804, 805, 806,
	817, 864, 865, 873, 875, 876, 874, 877, 878, 879,
	882, 883, 884, 885, 880, 881, 886, 780, 784, 781,
	782, 783, 795, 785, 786, 787, 788, 789, 790, 791,
	792, 793, 794, 796, 935, 936, 937, 938, 939, 940,
	810, 814, 813, 811, 812, 808, 809, 836, 835, 837,
	838, 839, 840, 841, 842, 844, 843, 845, 846, 847,
	848, 849, 850, 818, 819, 822, 823, 821, 820, 824,
	833, 834, 825, 826, 827, 828, 829, 830, 832, 831,
	851, 852, 853, 854, 855, 857, 856, 860, 861, 859,
	858, 863, 862, 760, 203, 227, 371, 0, 456, 294,
	646, 615, 610, 212, 229, 926, 268, 927, 0, 0,
	931, 0, 0, 0, 933, 932, 0, 934, 0, 896,
	895, 0, 0, 928, 929, 0, 930, 0, 0, 205,
	207, 215, 228, 238, 242, 249, 267, 282, 284, 291,
	304, 315, 323, 324, 327, 333, 383, 389, 390, 391,
	392, 411, 412, 413, 416, 419, 420, 423, 425, 426,
	429, 433, 437, 438, 439, 441, 443, 445, 457, 462,
	476, 477, 478, 479, 480, 483, 484, 489, 490, 491,
	492, 493, 501, 502, 515, 586, 588, 604, 622, 628,
	482, 941, 942, 943, 944, 945, 946, 947, 948, 305,
	599, 629, 597, 641, 623, 440, 381, 0, 0, 384,
	287, 310, 325, 0, 614, 503, 233, 468, 296, 257,
	966, 0, 217, 252, 236, 265, 280, 283, 329, 394,
	402, 431, 436, 302, 277, 250, 461, 247, 486, 518,
	519, 520, 522, 398, 272, 435, 399, 0, 379, 575,
	576, 321, 527, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 418, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 0, 0, 0, 0, 369, 273,
	0, 0, 432, 0, 210, 0, 488, 258, 380, 377,
	583, 288, 279, 275, 256, 322, 388, 430, 517, 424,
	0, 373, 0, 0, 498, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 254, 330, 209, 415, 499, 292, 0, 0,
	0, 0, 0, 719, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 251, 0, 0, 0,
	354, 363, 362, 343, 344, 346, 348, 353, 360, 366,
	0, 0, 0, 0, 0, 271, 326, 278, 270, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	1133, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 303, 0, 404,
	263, 0, 455, 0, 0, 1132, 625, 0, 0, 0,
	0, 0, 1129, 1130, 368, 1090, 335, 0, 0, 0,
	204, 231, 1123, 1127, 414, 463, 475, 647, 0, 0,
	0, 259, 0, 473, 428, 603, 239, 290, 460, 434,
	471, 442, 293, 0, 0, 472, 375, 585, 452, 600,
	626, 627, 269, 408, 612, 593, 521, 620, 644, 232,
	266, 422, 506, 606, 495, 400, 581, 582, 334, 494,
	301, 208, 372, 578, 632, 230, 481, 374, 248, 237,
	587, 609, 295, 458, 639, 219, 516, 598, 245, 485,
	0, 0, 648, 253, 505, 221, 595, 504, 396, 331,
	332, 220, 0, 459, 274, 299, 0, 0, 264, 417,
	589, 590, 262, 649, 234, 619, 226, 0, 618, 410,
	584, 596, 397, 386, 225, 594, 395, 385, 339, 358,
	359, 286, 312, 449, 378, 450, 311, 313, 406, 405,
	407, 213, 607, 0, 214, 0, 500, 608, 650, 454,
	218, 240, 241, 243, 0, 285, 289, 297, 300, 308,
	309, 318, 370, 421, 448, 444, 453, 0, 579, 601,
	613, 624, 630, 631, 633, 634, 635, 636, 637, 640,
	638, 409, 316, 496, 338, 376, 0, 0, 427, 474,
	246, 605, 497, 206, 0, 0, 0, 0, 260, 261,
	0, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 645,
	507, 513, 508, 509, 510, 511, 512, 0, 514, 0,
	0, 0, 0, 0, 0, 591, 592, 669, 387, 487,
	602, 340, 352, 355, 345, 364, 0, 365, 341, 342,
	347, 349, 350, 351, 356, 357, 361, 367, 255, 216,
	393, 401, 577, 317, 222, 223, 224, 523, 524, 525,
	526, 616, 617, 621, 211, 464, 465, 466, 467, 298,
	611, 314, 470, 469, 336, 337, 382, 451, 539, 541,
	552, 556, 558, 560, 566, 569, 540, 542, 553, 557,
	559, 561, 567, 570, 529, 531, 533, 535, 548, 547,
	544, 572, 573, 550, 555, 534, 546, 551, 564, 571,
	568, 528, 532, 536, 545, 563, 562, 543, 554, 565,
	549, 537, 530, 538, 0, 203, 227, 371, 0, 456,
	294, 646, 615, 610, 212, 229, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 207, 215, 228, 238, 242, 249, 267, 282, 284,
	291, 304, 315, 323, 324, 327, 333, 383, 389, 390,
	391, 392, 411, 412, 413, 416, 419, 420, 423, 425,
	426, 429, 433, 437, 438, 439, 441, 443, 445, 457,
	462, 476, 477, 478, 479, 480, 483, 484, 489, 490,
	491, 492, 493, 501, 502, 515, 586, 588, 604, 622,
	628, 482, 306, 307, 446, 447, 319, 320, 642, 643,
	305, 599, 629, 597, 641, 623, 440, 381, 0, 0,
	384, 287, 310, 325, 0, 614, 503, 233, 468, 296,
	257, 0, 0, 217, 252, 236, 265, 280, 283, 329,
	394, 402, 431, 436, 302, 277, 250, 461, 247, 486,
	518, 519, 520, 522, 398, 272, 435, 399, 0, 379,
	575, 576, 321, 527, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 418, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 0, 0, 0, 369,
	273, 0, 0, 432, 0, 210, 0, 488, 258, 380,
	377, 583, 288, 279, 275, 256, 322, 388, 430, 517,
	424, 0, 373, 0, 0, 498, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 328, 254, 330, 209, 415, 499, 292, 0,
	0, 0, 0, 1696, 951, 0, 0, 1693, 0, 0,
	0, 0, 1691, 0, 244, 1692, 1690, 251, 1695, 0,
	916, 354, 363, 362, 343, 344, 346, 348, 353, 360,
	366, 0, 0, 0, 0, 0, 271, 326, 278, 270,
	580, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 303, 0,
	404, 263, 0, 455, 0, 0, 0, 625, 0, 0,
	0, 0, 0, 0, 0, 368, 0, 335, 0, 0,
	0, 204, 231, 0, 0, 414, 463, 475, 647, 0,
	0, 0, 259, 0, 473, 428, 603, 239, 290, 460,
	434, 471, 442, 293, 0, 0, 472, 375, 585, 452,
	600, 626, 627, 269, 408, 612, 593, 521, 620, 644,
	232, 266, 422, 506, 606, 495, 400, 581, 582, 334,
	494, 301, 208, 372, 578, 632, 230, 481, 374, 248,
	237, 587, 609, 295, 458, 639, 219, 516, 598, 245,
	485, 0, 0, 648, 253, 505, 221, 595, 504, 396,
	331, 332, 220, 0, 459, 274, 299, 0, 0, 264,
	417, 589, 590, 262, 649, 234, 619, 226, 0, 618,
	410, 584, 596, 397, 386, 225, 594, 395, 385, 339,
	358, 359, 286, 312, 449, 378, 450, 311, 313, 406,
	405, 407, 213, 607, 0, 214, 0, 500, 608, 650,
	454, 218, 240, 241, 243, 0, 285, 289, 297, 300,
	308, 309, 318, 370, 421, 448, 444, 453, 0, 579,
	601, 613, 624, 630, 631, 633, 634, 635, 636, 637,
	640, 638, 409, 316, 496, 338, 376, 0, 0, 427,
	474, 246, 605, 497, 206, 0, 0, 0, 0, 260,
	261, 0, 574, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	645, 507, 513, 508, 509, 510, 511, 512, 0, 514,
	0, 0, 0, 0, 0, 0, 591, 592, 669, 387,
	487, 602, 340, 352, 355, 345, 364, 0, 365, 341,
	342, 347, 349, 350, 351, 356, 357, 361, 367, 255,
	216, 393, 401, 577, 317, 222, 223, 224, 523, 524,
	525, 526, 616, 617, 621, 211, 464, 465, 466, 467,
	298, 611, 314, 470, 469, 336, 337, 382, 451, 539,
	541, 552, 556, 558, 560, 566, 569, 540, 542, 553,
	557, 559, 561, 567, 570, 529, 531, 533, 535, 548,
	547, 544, 572, 573, 550, 555, 534, 546, 551, 564,
	571, 568, 528, 532, 536, 545, 563, 562, 543, 554,
	565, 549, 537, 530, 538, 0, 203, 227, 371, 0,
	456, 294, 646, 615, 610, 212, 229, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 205, 207, 215, 228, 238, 242, 249, 267, 282,
	284, 291, 304, 315, 323, 324, 327, 333, 383, 389,
	390, 391, 392, 411, 412, 413, 416, 419, 420, 423,
	425, 426, 429, 433, 437, 438, 439, 441, 443, 445,
	457, 462, 476, 477, 478, 479, 480, 483, 484, 489,
	490, 491, 492, 493, 501, 502, 515, 586, 588, 604,
	622, 628, 482, 306, 307, 446, 447, 319, 320, 642,
	643, 305, 599, 629, 597, 641, 623, 440, 381, 0,
	0, 384, 287, 310, 325, 0, 614, 503, 233, 468,
	296, 257, 0, 0, 217, 252, 236, 265, 280, 283,
	329, 394, 402, 431, 436, 302, 277, 250, 461, 247,
	486, 518, 519, 520, 522, 398, 272, 435, 0, 399,
	379, 575, 576, 321, 87, 527, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 0, 0,
	0, 369, 273, 0, 0, 432, 0, 210, 0, 488,
	258, 380, 377, 583, 288, 279, 275, 256, 322, 388,
	430, 517, 424, 0, 373, 0, 0, 498, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 328, 254, 330, 209, 415, 499,
	292, 0, 96, 0, 0, 0, 201, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 251,
	0, 0, 0, 354, 363, 362, 343, 344, 346, 348,
	353, 360, 366, 0, 0, 0, 0, 0, 271, 326,
	278, 270, 580, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	303, 0, 404, 263, 0, 455, 0, 0, 0, 625,
	0, 0, 0, 0, 0, 0, 0, 368, 0, 335,
	0, 0, 0, 204, 231, 0, 0, 414, 463, 475,
	647, 0, 0, 0, 259, 0, 473, 428, 603, 239,
	290, 460, 434, 471, 442, 293, 0, 0, 472, 375,
	585, 452, 600, 626, 627, 269, 408, 612, 593, 521,
	620, 644, 232, 266, 422, 506, 606, 495, 400, 581,
	582, 334, 494, 301, 208, 372, 578, 632, 230, 481,
	374, 248, 237, 587, 609, 295, 458, 639, 219, 516,
	598, 245, 485, 0, 0, 648, 253, 505, 221, 595,
	504, 396, 331, 332, 220, 0, 459, 274, 299, 0,
	0, 264, 417, 589, 590, 262, 649, 234, 619, 226,
	0, 618, 410, 584, 596, 397, 386, 225, 594, 395,
	385, 339, 358, 359, 286, 312, 449, 378, 450, 311,
	313, 406, 405, 407, 213, 607, 0, 214, 0, 500,
	608, 650, 454, 218, 240, 241, 243, 0, 285, 289,
	297, 300, 308, 309, 318, 370, 421, 448, 444, 453,
	0, 579, 601, 613, 624, 630, 631, 633, 634, 635,
	636, 637, 640, 638, 409, 316, 496, 338, 376, 0,
	0, 427, 474, 246, 605, 497, 206, 0, 0, 0,
	0, 260, 261, 0, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 645, 507, 513, 508, 509, 510, 511, 512,
	0, 514, 0, 0, 0, 0, 0, 0, 591, 592,
	669, 387, 487, 602, 340, 352, 355, 345, 364, 0,
	365, 341, 342, 347, 349, 350, 351, 356, 357, 361,
	367, 255, 216, 393, 401, 577, 317, 222, 223, 224,
	523, 524, 525, 526, 616, 617, 621, 211, 464, 465,
	466, 467, 298, 611, 314, 470, 469, 336, 337, 382,
	451, 539, 541, 552, 556, 558, 560, 566, 569, 540,
	542, 553, 557, 559, 561, 567, 570, 529, 531, 533,
	535, 548, 547, 544, 572, 573, 550, 555, 534, 546,
	551, 564, 571, 568, 528, 532, 536, 545, 563, 562,
	543, 554, 565, 549, 537, 530, 538, 0, 203, 227,
	371, 95, 456, 294, 646, 615, 610, 212, 229, 0,
	268, 0, 0, 0, 0, 0, 0, 2393, 0, 0,
	2392, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 207, 215, 228, 238, 242, 249,
	267, 282, 284, 291, 304, 315, 323, 324, 327, 333,
	383, 389, 390, 391, 392, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 489, 490, 491, 492, 493, 501, 502, 515, 586,
	588, 604, 622, 628, 482, 306, 307, 446, 447, 319,
	320, 642, 643, 305, 599, 629, 597, 641, 623, 440,
	381, 0, 0, 384, 287, 310, 325, 0, 614, 503,
	233, 468, 296, 257, 0, 0, 217, 252, 236, 265,
	280, 283, 329, 394, 402, 431, 436, 302, 277, 250,
	461, 247, 486, 518, 519, 520, 522, 398, 272, 435,
	1752, 0, 379, 575, 576, 321, 527, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 418, 0,
	0, 0, 1754, 0, 0, 0, 0, 276, 0, 0,
	0, 0, 369, 273, 0, 0, 432, 0, 210, 0,
	488, 258, 380, 377, 583, 288, 279, 275, 256, 322,
	388, 430, 517, 424, 0, 373, 0, 0, 498, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 328, 254, 330, 209, 415,
	499, 292, 0, 0, 0, 0, 1756, 719, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	251, 0, 0, 0, 354, 363, 362, 343, 344, 346,
	348, 353, 360, 366, 0, 0, 0, 0, 0, 271,
	326, 278, 270, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 0, 1469, 0, 1470, 1471,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 303, 0, 404, 263, 0, 455, 0, 0, 0,
	625, 0, 0, 0, 0, 0, 0, 0, 368, 0,
	335, 0, 0, 0, 204, 231, 0, 0, 414, 463,
	475, 647, 0, 0, 0, 259, 0, 473, 428, 603,
	239, 290, 460, 434, 471, 442, 293, 0, 0, 472,
	375, 585, 452, 600, 626, 627, 269, 408, 612, 593,
	521, 620, 644, 232, 266, 422, 506, 606, 495, 400,
	581, 582, 334, 494, 301, 208, 372, 578, 632, 230,
	481, 374, 248, 237, 587, 609, 295, 458, 639, 219,
	516, 598, 245, 485, 0, 0, 648, 253, 505, 221,
	595, 504, 396, 331, 332, 220, 0, 459, 274, 299,
	0, 0, 264, 417, 589, 590, 262, 649, 234, 619,
	226, 0, 618, 410, 584, 596, 397, 386, 225, 594,
	395, 385, 339, 358, 359, 286, 312, 449, 378, 450,
	311, 313, 406, 405, 407, 213, 607, 0, 214, 0,
	500, 608, 650, 454, 218, 240, 241, 243, 0, 285,
	289, 297, 300, 308, 309, 318, 370, 421, 448, 444,
	453, 0, 579, 601, 613, 624, 630, 631, 633, 634,
	635, 636, 637, 640, 638, 409, 316, 496, 338, 376,
	0, 0, 427, 474, 246, 605, 497, 206, 0, 0,
	0, 0, 260, 261, 0, 574, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 645, 507, 513, 508, 509, 510, 511,
	512, 0, 514, 0, 0, 0, 0, 0, 0, 591,
	592, 669, 387, 487, 602, 340, 352, 355, 345, 364,
	0, 365, 341, 342, 347, 349, 350, 351, 356, 357,
	361, 367, 255, 216, 393, 401, 577, 317, 222, 223,
	224, 523, 524, 525, 526, 616, 617, 621, 211, 464,
	465, 466, 467, 298, 611, 314, 470, 469, 336, 337,
	382, 451, 539, 541, 552, 556, 558, 560, 566, 569,
	540, 542, 553, 557, 559, 561, 567, 570, 529, 531,
	533, 535, 548, 547, 544, 572, 573, 550, 555, 534,
	546, 551, 564, 571, 568, 528, 532, 536, 545, 563,
	562, 543, 554, 565, 549, 537, 530, 538, 0, 203,
	227, 371, 0, 456, 294, 646, 615, 610, 212, 229,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 205, 207, 215, 228, 238, 242,
	249, 267, 282, 284, 291, 304, 315, 323, 324, 327,
	333, 383, 389, 390, 391, 392, 411, 412, 413, 416,
	419, 420, 423, 425, 426, 429, 433, 437, 438, 439,
	441, 443, 445, 457, 462, 476, 477, 478, 479, 480,
	483, 484, 489, 490, 491, 492, 493, 501, 502, 515,
	586, 588, 604, 622, 628, 482, 306, 307, 446, 447,
	319, 320, 642, 643, 305, 599, 629, 597, 641, 623,
	440, 381, 0, 0, 384, 287, 310, 325, 0, 614,
	503, 233, 468, 296, 257, 0, 0, 217, 252, 236,
	265, 280, 283, 329, 394, 402, 431, 436, 302, 277,
	250, 461, 247, 486, 518, 519, 520, 522, 398, 272,
	435, 0, 399, 379, 575, 576, 321, 87, 527, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	0, 0, 0, 0, 369, 273, 0, 0, 432, 0,
	210, 0, 488, 258, 380, 377, 583, 288, 279, 275,
	256, 322, 388, 430, 517, 424, 0, 373, 0, 0,
	498, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 328, 254, 330,
	209, 415, 499, 292, 0, 96, 0, 1733, 0, 719,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 251, 0, 0, 0, 354, 363, 362, 343,
	344, 346, 348, 353, 360, 366, 0, 0, 0, 0,
	0, 271, 326, 278, 270, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 303, 0, 404, 263, 0, 455, 0,
	0, 0, 625, 0, 0, 0, 0, 0, 0, 0,
	368, 0, 335, 0, 0, 0, 204, 231, 0, 0,
	414, 463, 475, 647, 0, 0, 0, 259, 0, 473,
	428, 603, 239, 290, 460, 434, 471, 442, 293, 0,
	0, 472, 375, 585, 452, 600, 626, 627, 269, 408,
	612, 593, 521, 620, 644, 232, 266, 422, 506, 606,
	495, 400, 581, 582, 334, 494, 301, 208, 372, 578,
	632, 230, 481, 374, 248, 237, 587, 609, 295, 458,
	639, 219, 516, 598, 245, 485, 0, 0, 648, 253,
	505, 221, 595, 504, 396, 331, 332, 220, 0, 459,
	274, 299, 0, 0, 264, 417, 589, 590, 262, 649,
	234, 619, 226, 0, 618, 410, 584, 596, 397, 386,
	225, 594, 395, 385, 339, 358, 359, 286, 312, 449,
	378, 450, 311, 313, 406, 405, 407, 213, 607, 0,
	214, 0, 500, 608, 650, 454, 218, 240, 241, 243,
	0, 285, 289, 297, 300, 308, 309, 318, 370, 421,
	448, 444, 453, 0, 579, 601, 613, 624, 630, 631,
	633, 634, 635, 636, 637, 640, 638, 409, 316, 496,
	338, 376, 0, 0, 427, 474, 246, 605, 497, 206,
	0, 0, 0, 0, 260, 261, 0, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 645, 507, 513, 508, 509,
	510, 511, 512, 0, 514, 0, 0, 0, 0, 0,
	0, 591, 592, 669, 387, 487, 602, 340, 352, 355,
	345, 364, 0, 365, 341, 342, 347, 349, 350, 351,
	356, 357, 361, 367, 255, 216, 393, 401, 577, 317,
	222, 223, 224, 523, 524, 525, 526, 616, 617, 621,
	211, 464, 465, 466, 467, 298, 611, 314, 470, 469,
	336, 337, 382, 451, 539, 541, 552, 556, 558, 560,
	566, 569, 540, 542, 553, 557, 559, 561, 567, 570,
	529, 531, 533, 535, 548, 547, 544, 572, 573, 550,
	555, 534, 546, 551, 564, 571, 568, 528, 532, 536,
	545, 563, 562, 543, 554, 565, 549, 537, 530, 538,
	0, 203, 227, 371, 95, 456, 294, 646, 615, 610,
	212, 229, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 205, 207, 215, 228,
	238, 242, 249, 267, 282, 284, 291, 304, 315, 323,
	324, 327, 333, 383, 389, 390, 391, 392, 411, 412,
	413, 416, 419, 420, 423, 425, 426, 429, 433, 437,
	438, 439, 441, 443, 445, 457, 462, 476, 477, 478,
	479, 480, 483, 484, 489, 490, 491, 492, 493, 501,
	502, 515, 586, 588, 604, 622, 628, 482, 306, 307,
	446, 447, 319, 320, 642, 643, 305, 599, 629, 597,
	641, 623, 440, 381, 0, 0, 384, 287, 310, 325,
	0, 614, 503, 233, 468, 296, 257, 0, 0, 217,
	252, 236, 265, 280, 283, 329, 394, 402, 431, 436,
	302, 277, 250, 461, 247, 486, 518, 519, 520, 522,
	398, 272, 435, 399, 0, 379, 575, 576, 321, 527,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 0, 0, 0, 369, 273, 0, 0, 432,
	0, 210, 0, 488, 258, 380, 377, 583, 288, 279,
	275, 256, 322, 388, 430, 517, 424, 0, 373, 0,
	0, 498, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 328, 254,
	330, 209, 415, 499, 292, 0, 96, 0, 0, 0,
	201, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 251, 0, 0, 0, 354, 363, 362,
	343, 344, 346, 348, 353, 360, 366, 0, 0, 0,
	0, 0, 271, 326, 278, 270, 580, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 303, 0, 404, 263, 0, 455,
	0, 0, 0, 625, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 335, 0, 0, 0, 204, 231, 0,
	0, 414, 463, 475, 647, 0, 0, 0, 259, 0,
	473, 428, 603, 239, 290, 460, 434, 471, 442, 293,
	0, 0, 472, 375, 585, 452, 600, 626, 627, 269,
	408, 612, 593, 521, 620, 644, 232, 266, 422, 506,
	606, 495, 400, 581, 582, 334, 494, 301, 208, 372,
	578, 632, 230, 481, 374, 248, 237, 587, 609, 295,
	458, 639, 219, 516, 598, 245, 485, 0, 0, 648,
	253, 505, 221, 595, 504, 396, 331, 332, 220, 0,
	459, 274, 299, 0, 0, 264, 417, 589, 590, 262,
	649, 234, 619, 226, 0, 618, 410, 584, 596, 397,
	386, 225, 594, 395, 385, 339, 358, 359, 286, 312,
	449, 378, 450, 311, 313, 406, 405, 407, 213, 607,
	0, 214, 0, 500, 608, 650, 454, 218, 240, 241,
	243, 0, 285, 289, 297, 300, 308, 309, 318, 370,
	421, 448, 444, 453, 0, 579, 601, 613, 624, 630,
	631, 633, 634, 635, 636, 637, 640, 638, 409, 316,
	496, 338, 376, 0, 0, 427, 474, 246, 605, 497,
	206, 0, 0, 0, 0, 260, 261, 0, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 645, 507, 513, 508,
	509, 510, 511, 512, 0, 514, 0, 0, 0, 0,
	0, 0, 591, 592, 669, 387, 487, 602, 340, 352,
	355, 345, 364, 0, 365, 341, 342, 347, 349, 350,
	351, 356, 357, 361, 367, 255, 216, 393, 401, 577,
	317, 222, 223, 224, 523, 524, 525, 526, 616, 617,
	621, 211, 464, 465, 466, 467, 298, 611, 314, 470,
	469, 336, 337, 382, 451, 539, 541, 552, 556, 558,
	560, 566, 569, 540, 542, 553, 557, 559, 561, 567,
	570, 529, 531, 533, 535, 548, 547, 544, 572, 573,
	550, 555, 534, 546, 551, 564, 571, 568, 528, 532,
	536, 545, 563, 562, 543, 554, 565, 549, 537, 530,
	538, 0, 203, 227, 371, 0, 456, 294, 646, 615,
	610, 212, 229, 0, 268, 0, 0, 0, 0, 0,
	0, 2393, 0, 0, 2392, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 207, 215,
	228, 238, 242, 249, 267, 282, 284, 291, 304, 315,
	323, 324, 327, 333, 383, 389, 390, 391, 392, 411,
	412, 413, 416, 419, 420, 423, 425, 426, 429, 433,
	437, 438, 439, 441, 443, 445, 457, 462, 476, 477,
	478, 479, 480, 483, 484, 489, 490, 491, 492, 493,
	501, 502, 515, 586, 588, 604, 622, 628, 482, 306,
	307, 446, 447, 319, 320, 642, 643, 305, 599, 629,
	597, 641, 623, 440, 381, 0, 0, 384, 287, 310,
	325, 0, 614, 503, 233, 468, 296, 257, 0, 0,
	217, 252, 236, 265, 280, 283, 329, 394, 402, 431,
	436, 302, 277, 250, 461, 247, 486, 518, 519, 520,
	522, 398, 272, 435, 399, 0, 379, 575, 576, 321,
	527, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 418, 0, 0, 0, 2342, 0, 0, 0,
	0, 276, 0, 0, 0, 0, 369, 273, 0, 0,
	432, 0, 210, 0, 488, 258, 380, 377, 583, 288,
	279, 275, 256, 322, 388, 430, 517, 424, 0, 373,
	0, 0, 498, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	254, 330, 209, 415, 499, 292, 0, 0, 0, 0,
	1936, 201, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 354, 363,
	362, 343, 344, 346, 348, 353, 360, 366, 0, 0,
	0, 0, 0, 271, 326, 278, 270, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 303, 0, 404, 263, 0,
	455, 0, 0, 0, 625, 0, 0, 0, 0, 0,
	0, 0, 368, 0, 335, 0, 0, 0, 204, 231,
	0, 0, 414, 463, 475, 647, 0, 0, 0, 259,
	0, 473, 428, 603, 239, 290, 460, 434, 471, 442,
	293, 0, 2340, 472, 375, 585, 452, 600, 626, 627,
	269, 408, 612, 593, 521, 620, 644, 232, 266, 422,
	506, 606, 495, 400, 581, 582, 334, 494, 301, 208,
	372, 578, 632, 230, 481, 374, 248, 237, 587, 609,
	295, 458, 639, 219, 516, 598, 245, 485, 0, 0,
	648, 253, 505, 221, 595, 504, 396, 331, 332, 220,
	0, 459, 274, 299, 0, 0, 264, 417, 589, 590,
	262, 649, 234, 619, 226, 0, 618, 410, 584, 596,
	397, 386, 225, 594, 395, 385, 339, 358, 359, 286,
	312, 449, 378, 450, 311, 313, 406, 405, 407, 213,
	607, 0, 214, 0, 500, 608, 650, 454, 218, 240,
	241, 243, 0, 285, 289, 297, 300, 308, 309, 318,
	370, 421, 448, 444, 453, 0, 579, 601, 613, 624,
	630, 631, 633, 634, 635, 636, 637, 640, 638, 409,
	316, 496, 338, 376, 0, 0, 427, 474, 246, 605,
	497, 206, 0, 0, 0, 0, 260, 261, 0, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 645, 507, 513,
	508, 509, 510, 511, 512, 0, 514, 0, 0, 0,
	0, 0, 0, 591, 592, 669, 387, 487, 602, 340,
	352, 355, 345, 364, 0, 365, 341, 342, 347, 349,
	350, 351, 356, 357, 361, 367, 255, 216, 393, 401,
	577, 317, 222, 223, 224, 523, 524, 525, 526, 616,
	617, 621, 211, 464, 465, 466, 467, 298, 611, 314,
	470, 469, 336, 337, 382, 451, 539, 541, 552, 556,
	558, 560, 566, 569, 540, 542, 553, 557, 559, 561,
	567, 570, 529, 531, 533, 535, 548, 547, 544, 572,
	573, 550, 555, 534, 546, 551, 564, 571, 568, 528,
	532, 536, 545, 563, 562, 543, 554, 565, 549, 537,
	530, 538, 0, 203, 227, 371, 0, 456, 294, 646,
	615, 610, 212, 229, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 205, 207,
	215, 228, 238, 242, 249, 267, 282, 284, 291, 304,
	315, 323, 324, 327, 333, 383, 389, 390, 391, 392,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 489, 490, 491, 492,
	493, 501, 502, 515, 586, 588, 604, 622, 628, 482,
	306, 307, 446, 447, 319, 320, 642, 643, 305, 599,
	629, 597, 641, 623, 440, 381, 0, 0, 384, 287,
	310, 325, 0, 614, 503, 233, 468, 296, 257, 0,
	0, 217, 252, 236, 265, 280, 283, 329, 394, 402,
	431, 436, 302, 277, 250, 461, 247, 486, 518, 519,
	520, 522, 398, 272, 435, 399, 0, 379, 575, 576,
	321, 527, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 418, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 0, 0, 0, 369, 273, 0,
	0, 432, 0, 210, 0, 488, 258, 380, 377, 583,
	288, 279, 275, 256, 322, 388, 430, 517, 424, 0,
	373, 0, 0, 498, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	328, 254, 330, 209, 415, 499, 292, 0, 0, 0,
	0, 0, 719, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 251, 0, 0, 0, 354,
	363, 362, 343, 344, 346, 348, 353, 360, 366, 0,
	0, 0, 0, 0, 271, 326, 278, 270, 580, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 1084, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 303, 0, 404, 263,
	0, 455, 0, 0, 0, 625, 0, 0, 0, 0,
	0, 0, 0, 368, 1090, 335, 0, 0, 0, 204,
	231, 1088, 0, 414, 463, 475, 647, 0, 0, 0,
	259, 0, 473, 428, 603, 239, 290, 460, 434, 471,
	442, 293, 0, 0, 472, 375, 585, 452, 600, 626,
	627, 269, 408, 612, 593, 521, 620, 644, 232, 266,
	422, 506, 606, 495, 400, 581, 582, 334, 494, 301,
	208, 372, 578, 632, 230, 481, 374, 248, 237, 587,
	609, 295, 458, 639, 219, 516, 598, 245, 485, 0,
	0, 648, 253, 505, 221, 595, 504, 396, 331, 332,
	220, 0, 459, 274, 299, 0, 0, 264, 417, 589,
	590, 262, 649, 234, 619, 226, 0, 618, 410, 584,
	596, 397, 386, 225, 594, 395, 385, 339, 358, 359,
	286, 312, 449, 378, 450, 311, 313, 406, 405, 407,
	213, 607, 0, 214, 0, 500, 608, 650, 454, 218,
	240, 241, 243, 0, 285, 289, 297, 300, 308, 309,
	318, 370, 421, 448, 444, 453, 0, 579, 601, 613,
	624, 630, 631, 633, 634, 635, 636, 637, 640, 638,
	409, 316, 496, 338, 376, 0, 0, 427, 474, 246,
	605, 497, 206, 0, 0, 0, 0, 260, 261, 0,
	574, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 645, 507,
	513, 508, 509, 510, 511, 512, 0, 514, 0, 0,
	0, 0, 0, 0, 591, 592, 669, 387, 487, 602,
	340, 352, 355, 345, 364, 0, 365, 341, 342, 347,
	349, 350, 351, 356, 357, 361, 367, 255, 216, 393,
	401, 577, 317, 222, 223, 224, 523, 524, 525, 526,
	616, 617, 621, 211, 464, 465, 466, 467, 298, 611,
	314, 470, 469, 336, 337, 382, 451, 539, 541, 552,
	556, 558, 560, 566, 569, 540, 542, 553, 557, 559,
	561, 567, 570, 529, 531, 533, 535, 548, 547, 544,
	572, 573, 550, 555, 534, 546, 551, 564, 571, 568,
	528, 532, 536, 545, 563, 562, 543, 554, 565, 549,
	537, 530, 538, 0, 203, 227, 371, 0, 456, 294,
	646, 615, 610, 212, 229, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	207, 215, 228, 238, 242, 249, 267, 282, 284, 291,
	304, 315, 323, 324, 327, 333, 383, 389, 390, 391,
	392, 411, 412, 413, 416, 419, 420, 423, 425, 426,
	429, 433, 437, 438, 439, 441, 443, 445, 457, 462,
	476, 477, 478, 479, 480, 483, 484, 489, 490, 491,
	492, 493, 501, 502, 515, 586, 588, 604, 622, 628,
	482, 306, 307, 446, 447, 319, 320, 642, 643, 305,
	599, 629, 597, 641, 623, 440, 381, 0, 0, 384,
	287, 310, 325, 0, 614, 503, 233, 468, 296, 257,
	0, 0, 217, 252, 236, 265, 280, 283, 329, 394,
	402, 431, 436, 302, 277, 250, 461, 247, 486, 518,
	519, 520, 522, 398, 272, 435, 399, 0, 379, 575,
	576, 321, 527, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 418, 0, 0, 0, 2342, 0,
	0, 0, 0, 276, 0, 0, 0, 0, 369, 273,
	0, 0, 432, 0, 210, 0, 488, 258, 380, 377,
	583, 288, 279, 275, 256, 322, 388, 430, 517, 424,
	0, 373, 0, 0, 498, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 254, 330, 209, 415, 499, 292, 0, 0,
	0, 0, 1936, 201, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 251, 0, 0, 0,
	354, 363, 362, 343, 344, 346, 348, 353, 360, 366,
	0, 0, 0, 0, 0, 271, 326, 278, 270, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 303, 0, 404,
	263, 0, 455, 0, 0, 0, 625, 0, 0, 0,
	0, 0, 0, 0, 368, 0, 335, 0, 0, 0,
	204, 231, 0, 0, 414, 463, 475, 647, 0, 0,
	0, 259, 0, 473, 428, 603, 239, 290, 460, 434,
	471, 442, 293, 0, 0, 472, 375, 585, 452, 600,
	626, 627, 269, 408, 612, 593, 521, 620, 644, 232,
	266, 422, 506, 606, 495, 400, 581, 582, 334, 494,
	301, 208, 372, 578, 632, 230, 481, 374, 248, 237,
	587, 609, 295, 458, 639, 219, 516, 598, 245, 485,
	0, 0, 648, 253, 505, 221, 595, 504, 396, 331,
	332, 220, 0, 459, 274, 299, 0, 0, 264, 417,
	589, 590, 262, 649, 234, 619, 226, 0, 618, 410,
	584, 596, 397, 386, 225, 594, 395, 385, 339, 358,
	359, 286, 312, 449, 378, 450, 311, 313, 406, 405,
	407, 213, 607, 0, 214, 0, 500, 608, 650, 454,
	218, 240, 241, 243, 0, 285, 289, 297, 300, 308,
	309, 318, 370, 421, 448, 444, 453, 0, 579, 601,
	613, 624, 630, 631, 633, 634, 635, 636, 637, 640,
	638, 409, 316, 496, 338, 376, 0, 0, 427, 474,
	246, 605, 497, 206, 0, 0, 0, 0, 260, 261,
	0, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 645,
	507, 513, 508, 509, 510, 511, 512, 0, 514, 0,
	0, 0, 0, 0, 0, 591, 592, 669, 387, 487,
	602, 340, 352, 355, 345, 364, 0, 365, 341, 342,
	347, 349, 350, 351, 356, 357, 361, 367, 255, 216,
	393, 401, 577, 317, 222, 223, 224, 523, 524, 525,
	526, 616, 617, 621, 211, 464, 465, 466, 467, 298,
	611, 314, 470, 469, 336, 337, 382, 451, 539, 541,
	552, 556, 558, 560, 566, 569, 540, 542, 553, 557,
	559, 561, 567, 570, 529, 531, 533, 535, 548, 547,
	544, 572, 573, 550, 555, 534, 546, 551, 564, 571,
	568, 528, 532, 536, 545, 563, 562, 543, 554, 565,
	549, 537, 530, 538, 0, 203, 227, 371, 0, 456,
	294, 646, 615, 610, 212, 229, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 207, 215, 228, 238, 242, 249, 267, 282, 284,
	291, 304, 315, 323, 324, 327, 333, 383, 389, 390,
	391, 392, 411, 412, 413, 416, 419, 420, 423, 425,
	426, 429, 433, 437, 438, 439, 441, 443, 445, 457,
	462, 476, 477, 478, 479, 480, 483, 484, 489, 490,
	491, 492, 493, 501, 502, 515, 586, 588, 604, 622,
	628, 482, 306, 307, 446, 447, 319, 320, 642, 643,
	305, 599, 629, 597, 641, 623, 440, 381, 0, 0,
	384, 287, 310, 325, 0, 614, 503, 233, 468, 296,
	257, 0, 0, 217, 252, 236, 265, 280, 283, 329,
	394, 402, 431, 436, 302, 277, 250, 461, 247, 486,
	518, 519, 520, 522, 398, 272, 435, 399, 0, 379,
	575, 576, 321, 527, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 418, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 0, 0, 0, 369,
	273, 0, 0, 432, 0, 210, 0, 488, 258, 380,
	377, 583, 288, 279, 275, 256, 322, 388, 430, 517,
	424, 0, 373, 0, 0, 498, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 328, 254, 330, 209, 415, 499, 292, 0,
	0, 0, 1733, 0, 719, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 251, 0, 0,
	0, 354, 363, 362, 343, 344, 346, 348, 353, 360,
	366, 0, 0, 0, 0, 0, 271, 326, 278, 270,
	580, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 303, 0,
	404, 263, 0, 455, 0, 0, 0, 625, 0, 0,
	0, 3958, 0, 0, 0, 368, 0, 335, 0, 0,
	0, 204, 231, 0, 0, 414, 463, 475, 647, 0,
	0, 0, 259, 0, 473, 428, 603, 239, 290, 460,
	434, 471, 442, 293, 0, 0, 472, 375, 585, 452,
	600, 626, 627, 269, 408, 612, 593, 521, 620, 644,
	232, 266, 422, 506, 606, 495, 400, 581, 582, 334,
	494, 301, 208, 372, 578, 632, 230, 481, 374, 248,
	237, 587, 609, 295, 458, 639, 219, 516, 598, 245,
	485, 0, 0, 648, 253, 505, 221, 595, 504, 396,
	331, 332, 220, 0, 459, 274, 299, 0, 0, 264,
	417, 589, 590, 262, 649, 234, 619, 226, 0, 618,
	410, 584, 596, 397, 386, 225, 594, 395, 385, 339,
	358, 359, 286, 312, 449, 378, 450, 311, 313, 406,
	405, 407, 213, 607, 0, 214, 0, 500, 608, 650,
	454, 218, 240, 241, 243, 0, 285, 289, 297, 300,
	308, 309, 318, 370, 421, 448, 444, 453, 0, 579,
	601, 613, 624, 630, 631, 633, 634, 635, 636, 637,
	640, 638, 409, 316, 496, 338, 376, 0, 0, 427,
	474, 246, 605, 497, 206, 0, 0, 0, 0, 260,
	261, 0, 574, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	645, 507, 513, 508, 509, 510, 511, 512, 0, 514,
	0, 0, 0, 0, 0, 0, 591, 592, 669, 387,
	487, 602, 340, 352, 355, 345, 364, 0, 365, 341,
	342, 347, 349, 350, 351, 356, 357, 361, 367, 255,
	216, 393, 401, 577, 317, 222, 223, 224, 523, 524,
	525, 526, 616, 617, 621, 211, 464, 465, 466, 467,
	298, 611, 314, 470, 469, 336, 337, 382, 451, 539,
	541, 552, 556, 558, 560, 566, 569, 540, 542, 553,
	557, 559, 561, 567, 570, 529, 531, 533, 535, 548,
	547, 544, 572, 573, 550, 555, 534, 546, 551, 564,
	571, 568, 528, 532, 536, 545, 563, 562, 543, 554,
	565, 549, 537, 530, 538, 0, 203, 227, 371, 0,
	456, 294, 646, 615, 610, 212, 229, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 205, 207, 215, 228, 238, 242, 249, 267, 282,
	284, 291, 304, 315, 323, 324, 327, 333, 383, 389,
	390, 391, 392, 411, 412, 413, 416, 419, 420, 423,
	425, 426, 429, 433, 437, 438, 439, 441, 443, 445,
	457, 462, 476, 477, 478, 479, 480, 483, 484, 489,
	490, 491, 492, 493, 501, 502, 515, 586, 588, 604,
	622, 628, 482, 306, 307, 446, 447, 319, 320, 642,
	643, 305, 599, 629, 597, 641, 623, 440, 381, 0,
	0, 384, 287, 310, 325, 0, 614, 503, 233, 468,
	296, 257, 0, 0, 217, 252, 236, 265, 280, 283,
	329, 394, 402, 431, 436, 302, 277, 250, 461, 247,
	486, 518, 519, 520, 522, 398, 272, 435, 399, 0,
	379, 575, 576, 321, 527, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 0, 0, 0,
	369, 273, 0, 0, 432, 0, 210, 0, 488, 258,
	380, 377, 583, 288, 279, 275, 256, 322, 388, 430,
	517, 424, 0, 373, 0, 0, 498, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 328, 254, 330, 209, 415, 499, 292,
	0, 0, 0, 0, 2102, 719, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 251, 0,
	0, 0, 354, 363, 362, 343, 344, 346, 348, 353,
	360, 366, 0, 0, 0, 0, 0, 271, 326, 278,
	270, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2103, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 303,
	0, 404, 263, 0, 455, 0, 0, 0, 625, 0,
	0, 0, 0, 0, 0, 0, 368, 0, 335, 0,
	0, 0, 204, 231, 0, 0, 414, 463, 475, 647,
	0, 0, 0, 259, 0, 473, 428, 603, 239, 290,
	460, 434, 471, 442, 293, 0, 0, 472, 375, 585,
	452, 600, 626, 627, 269, 408, 612, 593, 521, 620,
	644, 232, 266, 422, 506, 606, 495, 400, 581, 582,
	334, 494, 301, 208, 372, 578, 632, 230, 481, 374,
	248, 237, 587, 609, 295, 458, 639, 219, 516, 598,
	245, 485, 0, 0, 648, 253, 505, 221, 595, 504,
	396, 331, 332, 220, 0, 459, 274, 299, 0, 0,
	264, 417, 589, 590, 262, 649, 234, 619, 226, 0,
	618, 410, 584, 596, 397, 386, 225, 594, 395, 385,
	339, 358, 359, 286, 312, 449, 378, 450, 311, 313,
	406, 405, 407, 213, 607, 0, 214, 0, 500, 608,
	650, 454, 218, 240, 241, 243, 0, 285, 289, 297,
	300, 308, 309, 318, 370, 421, 448, 444, 453, 0,
	579, 601, 613, 624, 630, 631, 633, 634, 635, 636,
	637, 640, 638, 409, 316, 496, 338, 376, 0, 0,
	427, 474, 246, 605, 497, 206, 0, 0, 0, 0,
	260, 261, 0, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 645, 507, 513, 508, 509, 510, 511, 512, 0,
	514, 0, 0, 0, 0, 0, 0, 591, 592, 669,
	387, 487, 602, 340, 352, 355, 345, 364, 0, 365,
	341, 342, 347, 349, 350, 351, 356, 357, 361, 367,
	255, 216, 393, 401, 577, 317, 222, 223, 224, 523,
	524, 525, 526, 616, 617, 621, 211, 464, 465, 466,
	467, 298, 611, 314, 470, 469, 336, 337, 382, 451,
	539, 541, 552, 556, 558, 560, 566, 569, 540, 542,
	553, 557, 559, 561, 567, 570, 529, 531, 533, 535,
	548, 547, 544, 572, 573, 550, 555, 534, 546, 551,
	564, 571, 568, 528, 532, 536, 545, 563, 562, 543,
	554, 565, 549, 537, 530, 538, 0, 203, 227, 371,
	0, 456, 294, 646, 615, 610, 212, 229, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 205, 207, 215, 228, 238, 242, 249, 267,
	282, 284, 291, 304, 315, 323, 324, 327, 333, 383,
	389, 390, 391, 392, 411, 412, 413, 416, 419, 420,
	423, 425, 426, 429, 433, 437, 438, 439, 441, 443,
	445, 457, 462, 476, 477, 478, 479, 480, 483, 484,
	489, 490, 491, 492, 493, 501, 502, 515, 586, 588,
	604, 622, 628, 482, 306, 307, 446, 447, 319, 320,
	642, 643, 305, 599, 629, 597, 641, 623, 440, 381,
	0, 0, 384, 287, 310, 325, 0, 614, 503, 233,
	468, 296, 257, 0, 0, 217, 252, 236, 265, 280,
	283, 329, 394, 402, 431, 436, 302, 277, 250, 461,
	247, 486, 518, 519, 520, 522, 398, 272, 435, 399,
	0, 379, 575, 576, 321, 527, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 0, 0,
	0, 369, 273, 0, 0, 432, 0, 210, 0, 488,
	258, 380, 377, 583, 288, 279, 275, 256, 322, 388,
	430, 517, 424, 0, 373, 0, 0, 498, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 328, 254, 330, 209, 415, 499,
	292, 0, 0, 0, 0, 2843, 719, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 251,
	0, 0, 0, 354, 363, 362, 343, 344, 346, 348,
	353, 360, 366, 0, 0, 0, 0, 0, 271, 326,
	278, 270, 580, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2844, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	303, 0, 404, 263, 0, 455, 0, 0, 0, 625,
	0, 0, 0, 0, 0, 0, 0, 368, 0, 335,
	0, 0, 0, 204, 231, 0, 0, 414, 463, 475,
	647, 0, 0, 0, 259, 0, 473, 428, 603, 239,
	290, 460, 434, 471, 442, 293, 0, 0, 472, 375,
	585, 452, 600, 626, 627, 269, 408, 612, 593, 521,
	620, 644, 232, 266, 422, 506, 606, 495, 400, 581,
	582, 334, 494, 301, 208, 372, 578, 632, 230, 481,
	374, 248, 237, 587, 609, 295, 458, 639, 219, 516,
	598, 245, 485, 0, 0, 648, 253, 505, 221, 595,
	504, 396, 331, 332, 220, 0, 459, 274, 299, 0,
	0, 264, 417, 589, 590, 262, 649, 234, 619, 226,
	0, 618, 410, 584, 596, 397, 386, 225, 594, 395,
	385, 339, 358, 359, 286, 312, 449, 378, 450, 311,
	313, 406, 405, 407, 213, 607, 0, 214, 0, 500,
	608, 650, 454, 218, 240, 241, 243, 0, 285, 289,
	297, 300, 308, 309, 318, 370, 421, 448, 444, 453,
	0, 579, 601, 613, 624, 630, 631, 633, 634, 635,
	636, 637, 640, 638, 409, 316, 496, 338, 376, 0,
	0, 427, 474, 246, 605, 497, 206, 0, 0, 0,
	0, 260, 261, 0, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 645, 507, 513, 508, 509, 510, 511, 512,
	0, 514, 0, 0, 0, 0, 0, 0, 591, 592,
	669, 387, 487, 602, 340, 352, 355, 345, 364, 0,
	365, 341, 342, 347, 349, 350, 351, 356, 357, 361,
	367, 255, 216, 393, 401, 577, 317, 222, 223, 224,
	523, 524, 525, 526, 616, 617, 621, 211, 464, 465,
	466, 467, 298, 611, 314, 470, 469, 336, 337, 382,
	451, 539, 541, 552, 556, 558, 560, 566, 569, 540,
	542, 553, 557, 559, 561, 567, 570, 529, 531, 533,
	535, 548, 547, 544, 572, 573, 550, 555, 534, 546,
	551, 564, 571, 568, 528, 532, 536, 545, 563, 562,
	543, 554, 565, 549, 537, 530, 538, 0, 203, 227,
	371, 0, 456, 294, 646, 615, 610, 212, 229, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 207, 215, 228, 238, 242, 249,
	267, 282, 284, 291, 304, 315, 323, 324, 327, 333,
	383, 389, 390, 391, 392, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 489, 490, 491, 492, 493, 501, 502, 515, 586,
	588, 604, 622, 628, 482, 306, 307, 446, 447, 319,
	320, 642, 643, 305, 599, 629, 597, 641, 623, 440,
	381, 0, 0, 384, 287, 310, 325, 0, 614, 503,
	233, 468, 296, 257, 0, 0, 217, 252, 236, 265,
	280, 283, 329, 394, 402, 431, 436, 302, 277, 250,
	461, 247, 486, 518, 519, 520, 522, 398, 272, 435,
	399, 0, 379, 575, 576, 321, 527, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 0,
	0, 0, 369, 273, 0, 0, 432, 0, 210, 0,
	488, 258, 380, 377, 583, 288, 279, 275, 256, 322,
	388, 430, 517, 424, 0, 373, 0, 0, 498, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 328, 254, 330, 209, 415,
	499, 292, 0, 0, 0, 0, 0, 719, 0, 0,
	0, 0, 2828, 0, 0, 0, 0, 244, 0, 0,
	251, 2829, 0, 0, 354, 363, 362, 343, 344, 346,
	348, 353, 360, 366, 0, 0, 0, 0, 0, 271,
	326, 278, 270, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 303, 0, 404, 263, 0, 455, 0, 0, 0,
	625, 0, 0, 0, 0, 0, 0, 0, 368, 0,
	335, 0, 0, 0, 204, 231, 0, 0, 414, 463,
	475, 647, 0, 0, 0, 259, 0, 473, 428, 603,
	239, 290, 460, 434, 471, 442, 293, 0, 0, 472,
	375, 585, 452, 600, 626, 627, 269, 408, 612, 593,
	521, 620, 644, 232, 266, 422, 506, 606, 495, 400,
	581, 582, 334, 494, 301, 208, 372, 578, 632, 230,
	481, 374, 248, 237, 587, 609, 295, 458, 639, 219,
	516, 598, 245, 485, 0, 0, 648, 253, 505, 221,
	595, 504, 396, 331, 332, 220, 0, 459, 274, 299,
	0, 0, 264, 417, 589, 590, 262, 649, 234, 619,
	226, 0, 618, 410, 584, 596, 397, 386, 225, 594,
	395, 385, 339, 358, 359, 286, 312, 449, 378, 450,
	311, 313, 406, 405, 407, 213, 607, 0, 214, 0,
	500, 608, 650, 454, 218, 240, 241, 243, 0, 285,
	289, 297, 300, 308, 309, 318, 370, 421, 448, 444,
	453, 0, 579, 601, 613, 624, 630, 631, 633, 634,
	635, 636, 637, 640, 638, 409, 316, 496, 338, 376,
	0, 0, 427, 474, 246, 605, 497, 206, 0, 0,
	0, 0, 260, 261, 0, 574, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 645, 507, 513, 508, 509, 510, 511,
	512, 0, 514, 0, 0, 0, 0, 0, 0, 591,
	592, 669, 387, 487, 602, 340, 352, 355, 345, 364,
	0, 365, 341, 342, 347, 349, 350, 351, 356, 357,
	361, 367, 255, 216, 393, 401, 577, 317, 222, 223,
	224, 523, 524, 525, 526, 616, 617, 621, 211, 464,
	465, 466, 467, 298, 611, 314, 470, 469, 336, 337,
	382, 451, 539, 541, 552, 556, 558, 560, 566, 569,
	540, 542, 553, 557, 559, 561, 567, 570, 529, 531,
	533, 535, 548, 547, 544, 572, 573, 550, 555, 534,
	546, 551, 564, 571, 568, 528, 532, 536, 545, 563,
	562, 543, 554, 565, 549, 537, 530, 538, 0, 203,
	227, 371, 0, 456, 294, 646, 615, 610, 212, 229,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 205, 207, 215, 228, 238, 242,
	249, 267, 282, 284, 291, 304, 315, 323, 324, 327,
	333, 383, 389, 390, 391, 392, 411, 412, 413, 416,
	419, 420, 423, 425, 426, 429, 433, 437, 438, 439,
	441, 443, 445, 457, 462, 476, 477, 478, 479, 480,
	483, 484, 489, 490, 491, 492, 493, 501, 502, 515,
	586, 588, 604, 622, 628, 482, 306, 307, 446, 447,
	319, 320, 642, 643, 305, 599, 629, 597, 641, 623,
	440, 381, 0, 0, 384, 287, 310, 325, 0, 614,
	503, 233, 468, 296, 257, 0, 0, 217, 252, 236,
	265, 280, 283, 329, 394, 402, 431, 436, 302, 277,
	250, 461, 247, 486, 518, 519, 520, 522, 398, 272,
	435, 399, 0, 379, 575, 576, 321, 527, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 1776,
	0, 0, 0, 369, 273, 0, 0, 432, 0, 210,
	0, 488, 258, 380, 377, 583, 288, 279, 275, 256,
	322, 388, 430, 517, 424, 0, 373, 0, 0, 498,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 328, 254, 330, 209,
	415, 499, 292, 0, 0, 0, 0, 1775, 719, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 251, 0, 0, 0, 354, 363, 362, 343, 344,
	346, 348, 353, 360, 366, 0, 0, 0, 0, 0,
	271, 326, 278, 270, 580, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 303, 0, 404, 263, 0, 455, 0, 0,
	0, 625, 0, 0, 0, 0, 0, 0, 0, 368,
	0, 335, 0, 0, 0, 204, 231, 0, 0, 414,
	463, 475, 647, 0, 0, 0, 259, 0, 473, 428,
	603, 239, 290, 460, 434, 471, 442, 293, 0, 0,
	472, 375, 585, 452, 600, 626, 627, 269, 408, 612,
	593, 521, 620, 644, 232, 266, 422, 506, 606, 495,
	400, 581, 582, 334, 494, 301, 208, 372, 578, 632,
	230, 481, 374, 248, 237, 587, 609, 295, 458, 639,
	219, 516, 598, 245, 485, 0, 0, 648, 253, 505,
	221, 595, 504, 396, 331, 332, 220, 0, 459, 274,
	299, 0, 0, 264, 417, 589, 590, 262, 649, 234,
	619, 226, 0, 618, 410, 584, 596, 397, 386, 225,
	594, 395, 385, 339, 358, 359, 286, 312, 449, 378,
	450, 311, 313, 406, 405, 407, 213, 607, 0, 214,
	0, 500, 608, 650, 454, 218, 240, 241, 243, 0,
	285, 289, 297, 300, 308, 309, 318, 370, 421, 448,
	444, 453, 0, 579, 601, 613, 624, 630, 631, 633,
	634, 635, 636, 637, 640, 638, 409, 316, 496, 338,
	376, 0, 0, 427, 474, 246, 605, 497, 206, 0,
	0, 0, 0, 260, 261, 0, 574, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 645, 507, 513, 508, 509, 510,
	511, 512, 0, 514, 0, 0, 0, 0, 0, 0,
	591, 592, 669, 387, 487, 602, 340, 352, 355, 345,
	364, 0, 365, 341, 342, 347, 349, 350, 351, 356,
	357, 361, 367, 255, 216, 393, 401, 577, 317, 222,
	223, 224, 523, 524, 525, 526, 616, 617, 621, 211,
	464, 465, 466, 467, 298, 611, 314, 470, 469, 336,
	337, 382, 451, 539, 541, 552, 556, 558, 560, 566,
	569, 540, 542, 553, 557, 559, 561, 567, 570, 529,
	531, 533, 535, 548, 547, 544, 572, 573, 550, 555,
	534, 546, 551, 564, 571, 568, 528, 532, 536, 545,
	563, 562, 543, 554, 565, 549, 537, 530, 538, 0,
	203, 227, 371, 0, 456, 294, 646, 615, 610, 212,
	229, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 205, 207, 215, 228, 238,
	242, 249, 267, 282, 284, 291, 304, 315, 323, 324,
	327, 333, 383, 389, 390, 391, 392, 411, 412, 413,
	416, 419, 420, 423, 425, 426, 429, 433, 437, 438,
	439, 441, 443, 445, 457, 462, 476, 477, 478, 479,
	480, 483, 484, 489, 490, 491, 492, 493, 501, 502,
	515, 586, 588, 604, 622, 628, 482, 306, 307, 446,
	447, 319, 320, 642, 643, 305, 599, 629, 597, 641,
	623, 440, 381, 0, 0, 384, 287, 310, 325, 0,
	614, 503, 233, 468, 296, 257, 0, 0, 217, 252,
	236, 265, 280, 283, 329, 394, 402, 431, 436, 302,
	277, 250, 461, 247, 486, 518, 519, 520, 522, 398,
	272, 435, 399, 0, 379, 575, 576, 321, 527, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	0, 0, 0, 0, 369, 273, 0, 0, 432, 0,
	210, 0, 488, 258, 380, 377, 583, 288, 279, 275,
	256, 322, 388, 430, 517, 424, 0, 373, 0, 0,
	498, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 328, 254, 330,
	209, 415, 499, 292, 0, 0, 0, 0, 0, 721,
	722, 723, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 251, 0, 0, 0, 354, 363, 362, 343,
	344, 346, 348, 353, 360, 366, 0, 0, 0, 0,
	0, 271, 326, 278, 270, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 303, 0, 404, 263, 0, 455, 0,
	0, 0, 625, 0, 0, 0, 0, 0, 0, 0,
	368, 0, 335, 0, 0, 0, 204, 231, 0, 0,
	414, 463, 475, 647, 0, 0, 0, 259, 0, 473,
	428, 603, 239, 290, 460, 434, 471, 442, 293, 0,
	0, 472, 375, 585, 452, 600, 626, 627, 269, 408,
	612, 593, 521, 620, 644, 232, 266, 422, 506, 606,
	495, 400, 581, 582, 334, 494, 301, 208, 372, 578,
	632, 230, 481, 374, 248, 237, 587, 609, 295, 458,
	639, 219, 516, 598, 245, 485, 0, 0, 648, 253,
	505, 221, 595, 504, 396, 331, 332, 220, 0, 459,
	274, 299, 0, 0, 264, 417, 589, 590, 262, 649,
	234, 619, 226, 0, 618, 410, 584, 596, 397, 386,
	225, 594, 395, 385, 339, 358, 359, 286, 312, 449,
	378, 450, 311, 313, 406, 405, 407, 213, 607, 0,
	214, 0, 500, 608, 650, 454, 218, 240, 241, 243,
	0, 285, 289, 297, 300, 308, 309, 318, 370, 421,
	448, 444, 453, 0, 579, 601, 613, 624, 630, 631,
	633, 634, 635, 636, 637, 640, 638, 409, 316, 496,
	338, 376, 0, 0, 427, 474, 246, 605, 497, 206,
	0, 0, 0, 0, 260, 261, 0, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 645, 507, 513, 508, 509,
	510, 511, 512, 0, 514, 0, 0, 0, 0, 0,
	0, 591, 592, 669, 387, 487, 602, 340, 352, 355,
	345, 364, 0, 365, 341, 342, 347, 349, 350, 351,
	356, 357, 361, 367, 255, 216, 393, 401, 577, 317,
	222, 223, 224, 523, 524, 525, 526, 616, 617, 621,
	211, 464, 465, 466, 467, 298, 611, 314, 470, 469,
	336, 337, 382, 451, 539, 541, 552, 556, 558, 560,
	566, 569, 540, 542, 553, 557, 559, 561, 567, 570,
	529, 531, 533, 535, 548, 547, 544, 572, 573, 550,
	555, 534, 546, 551, 564, 571, 568, 528, 532, 536,
	545, 563, 562, 543, 554, 565, 549, 537, 530, 538,
	0, 203, 227, 371, 0, 456, 294, 646, 615, 610,
	212, 229, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 205, 207, 215, 228,
	238, 242, 249, 267, 282, 284, 291, 304, 315, 323,
	324, 327, 333, 383, 389, 390, 391, 392, 411, 412,
	413, 416, 419, 420, 423, 425, 426, 429, 433, 437,
	438, 439, 441, 443, 445, 457, 462, 476, 477, 478,
	479, 480, 483, 484, 489, 490, 491, 492, 493, 501,
	502, 515, 586, 588, 604, 622, 628, 482, 306, 307,
	446, 447, 319, 320, 642, 643, 305, 599, 629, 597,
	641, 623, 440, 381, 0, 0, 384, 287, 310, 325,
	0, 614, 503, 233, 468, 296, 257, 0, 0, 217,
	252, 236, 265, 280, 283, 329, 394, 402, 431, 436,
	302, 277, 250, 461, 247, 486, 518, 519, 520, 522,
	398, 272, 435, 399, 0, 379, 575, 576, 321, 527,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 0, 0, 0, 369, 273, 0, 0, 432,
	0, 210, 0, 488, 258, 380, 377, 583, 288, 279,
	275, 256, 322, 388, 430, 517, 424, 0, 373, 0,
	0, 498, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 328, 254,
	330, 209, 415, 499, 292, 0, 0, 0, 0, 0,
	719, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 251, 0, 0, 0, 354, 363, 362,
	343, 344, 346, 348, 353, 360, 366, 0, 0, 0,
	0, 0, 271, 326, 278, 270, 580, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 303, 0, 404, 263, 0, 455,
	0, 0, 0, 625, 0, 0, 0, 4094, 0, 0,
	0, 368, 0, 335, 0, 0, 0, 204, 231, 0,
	0, 414, 463, 475, 647, 0, 0, 0, 259, 0,
	473, 428, 603, 239, 290, 460, 434, 471, 442, 293,
	0, 0, 472, 375, 585, 452, 600, 626, 627, 269,
	408, 612, 593, 521, 620, 644, 232, 266, 422, 506,
	606, 495, 400, 581, 582, 334, 494, 301, 208, 372,
	578, 632, 230, 481, 374, 248, 237, 587, 609, 295,
	458, 639, 219, 516, 598, 245, 485, 0, 0, 648,
	253, 505, 221, 595, 504, 396, 331, 332, 220, 0,
	459, 274, 299, 0, 0, 264, 417, 589, 590, 262,
	649, 234, 619, 226, 0, 618, 410, 584, 596, 397,
	386, 225, 594, 395, 385, 339, 358, 359, 286, 312,
	449, 378, 450, 311, 313, 406, 405, 407, 213, 607,
	0, 214, 0, 500, 608, 650, 454, 218, 240, 241,
	243, 0, 285, 289, 297, 300, 308, 309, 318, 370,
	421, 448, 444, 453, 0, 579, 601, 613, 624, 630,
	631, 633, 634, 635, 636, 637, 640, 638, 409, 316,
	496, 338, 376, 0, 0, 427, 474, 246, 605, 497,
	206, 0, 0, 0, 0, 260, 261, 0, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 645, 507, 513, 508,
	509, 510, 511, 512, 0, 514, 0, 0, 0, 0,
	0, 0, 591, 592, 669, 387, 487, 602, 340, 352,
	355, 345, 364, 0, 365, 341, 342, 347, 349, 350,
	351, 356, 357, 361, 367, 255, 216, 393, 401, 577,
	317, 222, 223, 224, 523, 524, 525, 526, 616, 617,
	621, 211, 464, 465, 466, 467, 298, 611, 314, 470,
	469, 336, 337, 382, 451, 539, 541, 552, 556, 558,
	560, 566, 569, 540, 542, 553, 557, 559, 561, 567,
	570, 529, 531, 533, 535, 548, 547, 544, 572, 573,
	550, 555, 534, 546, 551, 564, 571, 568, 528, 532,
	536, 545, 563, 562, 543, 554, 565, 549, 537, 530,
	538, 0, 203, 227, 371, 0, 456, 294, 646, 615,
	610, 212, 229, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 207, 215,
	228, 238, 242, 249, 267, 282, 284, 291, 304, 315,
	323, 324, 327, 333, 383, 389, 390, 391, 392, 411,
	412, 413, 416, 419, 420, 423, 425, 426, 429, 433,
	437, 438, 439, 441, 443, 445, 457, 462, 476, 477,
	478, 479, 480, 483, 484, 489, 490, 491, 492, 493,
	501, 502, 515, 586, 588, 604, 622, 628, 482, 306,
	307, 446, 447, 319, 320, 642, 643, 305, 599, 629,
	597, 641, 623, 440, 381, 0, 0, 384, 287, 310,
	325, 0, 614, 503, 233, 468, 296, 257, 0, 0,
	217, 252, 236, 265, 280, 283, 329, 394, 402, 431,
	436, 302, 277, 250, 461, 247, 486, 518, 519, 520,
	522, 398, 272, 435, 399, 0, 379, 575, 576, 321,
	527, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 0, 0, 0, 369, 273, 0, 0,
	432, 0, 210, 0, 488, 258, 380, 377, 583, 288,
	279, 275, 256, 322, 388, 430, 517, 424, 0, 373,
	0, 0, 498, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	254, 330, 209, 415, 499, 292, 0, 0, 0, 0,
	1936, 201, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 354, 363,
	362, 343, 344, 346, 348, 353, 360, 366, 0, 0,
	0, 0, 0, 271, 326, 278, 270, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 303, 0, 404, 263, 0,
	455, 0, 0, 0, 625, 0, 0, 0, 0, 0,
	0, 0, 368, 0, 335, 0, 0, 0, 204, 231,
	0, 0, 414, 463, 475, 647, 0, 0, 0, 259,
	0, 473, 428, 603, 239, 290, 460, 434, 471, 442,
	293, 0, 0, 472, 375, 585, 452, 600, 626, 627,
	269, 408, 612, 593, 521, 620, 644, 232, 266, 422,
	506, 606, 495, 400, 581, 582, 334, 494, 301, 208,
	372, 578, 632, 230, 481, 374, 248, 237, 587, 609,
	295, 458, 639, 219, 516, 598, 245, 485, 0, 0,
	648, 253, 505, 221, 595, 504, 396, 331, 332, 220,
	0, 459, 274, 299, 0, 0, 264, 417, 589, 590,
	262, 649, 234, 619, 226, 0, 618, 410, 584, 596,
	397, 386, 225, 594, 395, 385, 339, 358, 359, 286,
	312, 449, 378, 450, 311, 313, 406, 405, 407, 213,
	607, 0, 214, 0, 500, 608, 650, 454, 218, 240,
	241, 243, 0, 285, 289, 297, 300, 308, 309, 318,
	370, 421, 448, 444, 453, 0, 579, 601, 613, 624,
	630, 631, 633, 634, 635, 636, 637, 640, 638, 409,
	316, 496, 338, 376, 0, 0, 427, 474, 246, 605,
	497, 206, 0, 0, 0, 0, 260, 261, 0, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 645, 507, 513,
	508, 509, 510, 511, 512, 0, 514, 0, 0, 0,
	0, 0, 0, 591, 592, 669, 387, 487, 602, 340,
	352, 355, 345, 364, 0, 365, 341, 342, 347, 349,
	350, 351, 356, 357, 361, 367, 255, 216, 393, 401,
	577, 317, 222, 223, 224, 523, 524, 525, 526, 616,
	617, 621, 211, 464, 465, 466, 467, 298, 611, 314,
	470, 469, 336, 337, 382, 451, 539, 541, 552, 556,
	558, 560, 566, 569, 540, 542, 553, 557, 559, 561,
	567, 570, 529, 531, 533, 535, 548, 547, 544, 572,
	573, 550, 555, 534, 546, 551, 564, 571, 568, 528,
	532, 536, 545, 563, 562, 543, 554, 565, 549, 537,
	530, 538, 0, 203, 227, 371, 0, 456, 294, 646,
	615, 610, 212, 229, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 205, 207,
	215, 228, 238, 242, 249, 267, 282, 284, 291, 304,
	315, 323, 324, 327, 333, 383, 389, 390, 391, 392,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 489, 490, 491, 492,
	493, 501, 502, 515, 586, 588, 604, 622, 628, 482,
	306, 307, 446, 447, 319, 320, 642, 643, 305, 599,
	629, 597, 641, 623, 440, 381, 0, 0, 384, 287,
	310, 325, 0, 614, 503, 233, 468, 296, 257, 0,
	0, 217, 252, 236, 265, 280, 283, 329, 394, 402,
	431, 436, 302, 277, 250, 461, 247, 486, 518, 519,
	520, 522, 398, 272, 435, 399, 0, 379, 575, 576,
	321, 527, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 418, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 0, 0, 0, 369, 273, 0,
	0, 432, 0, 210, 0, 488, 258, 380, 377, 583,
	288, 279, 275, 256, 322, 388, 430, 517, 424, 0,
	373, 0, 0, 498, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	328, 254, 330, 209, 415, 499, 292, 0, 0, 0,
	0, 0, 719, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 251, 0, 0, 0, 354,
	363, 362, 343, 344, 346, 348, 353, 360, 366, 0,
	0, 0, 0, 0, 271, 326, 278, 270, 580, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 303, 0, 404, 263,
	0, 455, 0, 0, 0, 625, 0, 0, 0, 3958,
	0, 0, 0, 368, 0, 335, 0, 0, 0, 204,
	231, 0, 0, 414, 463, 475, 647, 0, 0, 0,
	259, 0, 473, 428, 603, 239, 290, 460, 434, 471,
	442, 293, 0, 0, 472, 375, 585, 452, 600, 626,
	627, 269, 408, 612, 593, 521, 620, 644, 232, 266,
	422, 506, 606, 495, 400, 581, 582, 334, 494, 301,
	208, 372, 578, 632, 230, 481, 374, 248, 237, 587,
	609, 295, 458, 639, 219, 516, 598, 245, 485, 0,
	0, 648, 253, 505, 221, 595, 504, 396, 331, 332,
	220, 0, 459, 274, 299, 0, 0, 264, 417, 589,
	590, 262, 649, 234, 619, 226, 0, 618, 410, 584,
	596, 397, 386, 225, 594, 395, 385, 339, 358, 359,
	286, 312, 449, 378, 450, 311, 313, 406, 405, 407,
	213, 607, 0, 214, 0, 500, 608, 650, 454, 218,
	240, 241, 243, 0, 285, 289, 297, 300, 308, 309,
	318, 370, 421, 448, 444, 453, 0, 579, 601, 613,
	624, 630, 631, 633, 634, 635, 636, 637, 640, 638,
	409, 316, 496, 338, 376, 0, 0, 427, 474, 246,
	605, 497, 206, 0, 0, 0, 0, 260, 261, 0,
	574, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 645, 507,
	513, 508, 509, 510, 511, 512, 0, 514, 0, 0,
	0, 0, 0, 0, 591, 592, 669, 387, 487, 602,
	340, 352, 355, 345, 364, 0, 365, 341, 342, 347,
	349, 350, 351, 356, 357, 361, 367, 255, 216, 393,
	401, 577, 317, 222, 223, 224, 523, 524, 525, 526,
	616, 617, 621, 211, 464, 465, 466, 467, 298, 611,
	314, 470, 469, 336, 337, 382, 451, 539, 541, 552,
	556, 558, 560, 566, 569, 540, 542, 553, 557, 559,
	561, 567, 570, 529, 531, 533, 535, 548, 547, 544,
	572, 573, 550, 555, 534, 546, 551, 564, 571, 568,
	528, 532, 536, 545, 563, 562, 543, 554, 565, 549,
	537, 530, 538, 0, 203, 227, 371, 0, 456, 294,
	646, 615, 610, 212, 229, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	207, 215, 228, 238, 242, 249, 267, 282, 284, 291,
	304, 315, 323, 324, 327, 333, 383, 389, 390, 391,
	392, 411, 412, 413, 416, 419, 420, 423, 425, 426,
	429, 433, 437, 438, 439, 441, 443, 445, 457, 462,
	476, 477, 478, 479, 480, 483, 484, 489, 490, 491,
	492, 493, 501, 502, 515, 586, 588, 604, 622, 628,
	482, 306, 307, 446, 447, 319, 320, 642, 643, 305,
	599, 629, 597, 641, 623, 440, 381, 0, 0, 384,
	287, 310, 325, 0, 614, 503, 233, 468, 296, 257,
	0, 0, 217, 252, 236, 265, 280, 283, 329, 394,
	402, 431, 436, 302, 277, 250, 461, 247, 486, 518,
	519, 520, 522, 398, 272, 435, 399, 0, 379, 575,
	576, 321, 527, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 418, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 0, 0, 0, 0, 369, 273,
	0, 0, 432, 0, 210, 0, 488, 258, 380, 377,
	583, 288, 279, 275, 256, 322, 388, 430, 517, 424,
	0, 373, 0, 0, 498, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 254, 330, 209, 415, 499, 292, 0, 96,
	0, 0, 0, 719, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 251, 0, 0, 0,
	354, 363, 362, 343, 344, 346, 348, 353, 360, 366,
	0, 0, 0, 0, 0, 271, 326, 278, 270, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 303, 0, 404,
	263, 0, 455, 0, 0, 0, 625, 0, 0, 0,
	0, 0, 0, 0, 368, 0, 335, 0, 0, 0,
	204, 231, 0, 0, 414, 463, 475, 647, 0, 0,
	0, 259, 0, 473, 428, 603, 239, 290, 460, 434,
	471, 442, 293, 0, 0, 472, 375, 585, 452, 600,
	626, 627, 269, 408, 612, 593, 521, 620, 644, 232,
	266, 422, 506, 606, 495, 400, 581, 582, 334, 494,
	301, 208, 372, 578, 632, 230, 481, 374, 248, 237,
	587, 609, 295, 458, 639, 219, 516, 598, 245, 485,
	0, 0, 648, 253, 505, 221, 595, 504, 396, 331,
	332, 220, 0, 459, 274, 299, 0, 0, 264, 417,
	589, 590, 262, 649, 234, 619, 226, 0, 618, 410,
	584, 596, 397, 386, 225, 594, 395, 385, 339, 358,
	359, 286, 312, 449, 378, 450, 311, 313, 406, 405,
	407, 213, 607, 0, 214, 0, 500, 608, 650, 454,
	218, 240, 241, 243, 0, 285, 289, 297, 300, 308,
	309, 318, 370, 421, 448, 444, 453, 0, 579, 601,
	613, 624, 630, 631, 633, 634, 635, 636, 637, 640,
	638, 409, 316, 496, 338, 376, 0, 0, 427, 474,
	246, 605, 497, 206, 0, 0, 0, 0, 260, 261,
	0, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 645,
	507, 513, 508, 509, 510, 511, 512, 0, 514, 0,
	0, 0, 0, 0, 0, 591, 592, 669, 387, 487,
	602, 340, 352, 355, 345, 364, 0, 365, 341, 342,
	347, 349, 350, 351, 356, 357, 361, 367, 255, 216,
	393, 401, 577, 317, 222, 223, 224, 523, 524, 525,
	526, 616, 617, 621, 211, 464, 465, 466, 467, 298,
	611, 314, 470, 469, 336, 337, 382, 451, 539, 541,
	552, 556, 558, 560, 566, 569, 540, 542, 553, 557,
	559, 561, 567, 570, 529, 531, 533, 535, 548, 547,
	544, 572, 573, 550, 555, 534, 546, 551, 564, 571,
	568, 528, 532, 536, 545, 563, 562, 543, 554, 565,
	549, 537, 530, 538, 0, 203, 227, 371, 0, 456,
	294, 646, 615, 610, 212, 229, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 207, 215, 228, 238, 242, 249, 267, 282, 284,
	291, 304, 315, 323, 324, 327, 333, 383, 389, 390,
	391, 392, 411, 412, 413, 416, 419, 420, 423, 425,
	426, 429, 433, 437, 438, 439, 441, 443, 445, 457,
	462, 476, 477, 478, 479, 480, 483, 484, 489, 490,
	491, 492, 493, 501, 502, 515, 586, 588, 604, 622,
	628, 482, 306, 307, 446, 447, 319, 320, 642, 643,
	305, 599, 629, 597, 641, 623, 440, 381, 0, 0,
	384, 287, 310, 325, 0, 614, 503, 233, 468, 296,
	257, 0, 0, 217, 252, 236, 265, 280, 283, 329,
	394, 402, 431, 436, 302, 277, 250, 461, 247, 486,
	518, 519, 520, 522, 398, 272, 435, 399, 0, 379,
	575, 576, 321, 527, 0, 0, 0, 0, 2394, 0,
	0, 0, 0, 0, 0, 418, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 0, 0, 0, 369,
	273, 0, 0, 432, 0, 210, 0, 488, 258, 380,
	377, 583, 288, 279, 275, 256, 322, 388, 430, 517,
	424, 0, 373, 0, 0, 498, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 328, 254, 330, 209, 415, 499, 292, 0,
	0, 0, 0, 0, 201, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 251, 0, 0,
	0, 354, 363, 362, 343, 344, 346, 348, 353, 360,
	366, 0, 0, 0, 0, 0, 271, 326, 278, 270,
	580, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 303, 0,
	404, 263, 0, 455, 0, 0, 0, 625, 0, 0,
	0, 0, 0, 0, 0, 368, 0, 335, 0, 0,
	0, 204, 231, 0, 0, 414, 463, 475, 647, 0,
	0, 0, 259, 0, 473, 428, 603, 239, 290, 460,
	434, 471, 442, 293, 0, 0, 472, 375, 585, 452,
	600, 626, 627, 269, 408, 612, 593, 521, 620, 644,
	232, 266, 422, 506, 606, 495, 400, 581, 582, 334,
	494, 301, 208, 372, 578, 632, 230, 481, 374, 248,
	237, 587, 609, 295, 458, 639, 219, 516, 598, 245,
	485, 0, 0, 648, 253, 505, 221, 595, 504, 396,
	331, 332, 220, 0, 459, 274, 299, 0, 0, 264,
	417, 589, 590, 262, 649, 234, 619, 226, 0, 618,
	410, 584, 596, 397, 386, 225, 594, 395, 385, 339,
	358, 359, 286, 312, 449, 378, 450, 311, 313, 406,
	405, 407, 213, 607, 0, 214, 0, 500, 608, 650,
	454, 218, 240, 241, 243, 0, 285, 289, 297, 300,
	308, 309, 318, 370, 421, 448, 444, 453, 0, 579,
	601, 613, 624, 630, 631, 633, 634, 635, 636, 637,
	640, 638, 409, 316, 496, 338, 376, 0, 0, 427,
	474, 246, 605, 497, 206, 0, 0, 0, 0, 260,
	261, 0, 574, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	645, 507, 513, 508, 509, 510, 511, 512, 0, 514,
	0, 0, 0, 0, 0, 0, 591, 592, 669, 387,
	487, 602, 340, 352, 355, 345, 364, 0, 365, 341,
	342, 347, 349, 350, 351, 356, 357, 361, 367, 255,
	216, 393, 401, 577, 317, 222, 223, 224, 523, 524,
	525, 526, 616, 617, 621, 211, 464, 465, 466, 467,
	298, 611, 314, 470, 469, 336, 337, 382, 451, 539,
	541, 552, 556, 558, 560, 566, 569, 540, 542, 553,
	557, 559, 561, 567, 570, 529, 531, 533, 535, 548,
	547, 544, 572, 573, 550, 555, 534, 546, 551, 564,
	571, 568, 528, 532, 536, 545, 563, 562, 543, 554,
	565, 549, 537, 530, 538, 0, 203, 227, 371, 0,
	456, 294, 646, 615, 610, 212, 229, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 205, 207, 215, 228, 238, 242, 249, 267, 282,
	284, 291, 304, 315, 323, 324, 327, 333, 383, 389,
	390, 391, 392, 411, 412, 413, 416, 419, 420, 423,
	425, 426, 429, 433, 437, 438, 439, 441, 443, 445,
	457, 462, 476, 477, 478, 479, 480, 483, 484, 489,
	490, 491, 492, 493, 501, 502, 515, 586, 588, 604,
	622, 628, 482, 306, 307, 446, 447, 319, 320, 642,
	643, 305, 599, 629, 597, 641, 623, 440, 381, 0,
	0, 384, 287, 310, 325, 0, 614, 503, 233, 468,
	296, 257, 0, 0, 217, 252, 236, 265, 280, 283,
	329, 394, 402, 431, 436, 302, 277, 250, 461, 247,
	486, 518, 519, 520, 522, 398, 272, 435, 399, 0,
	379, 575, 576, 321, 527, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 0, 0, 0,
	369, 273, 0, 0, 432, 0, 210, 0, 488, 258,
	380, 377, 583, 288, 279, 275, 256, 322, 388, 430,
	517, 424, 0, 373, 0, 0, 498, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 328, 254, 330, 209, 415, 499, 292,
	0, 0, 0, 0, 1756, 719, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 251, 0,
	0, 0, 354, 363, 362, 343, 344, 346, 348, 353,
	360, 366, 0, 0, 0, 0, 0, 271, 326, 278,
	270, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 303,
	0, 404, 263, 0, 455, 0, 0, 0, 625, 0,
	0, 0, 0, 0, 0, 0, 368, 0, 335, 0,
	0, 0, 204, 231, 0, 0, 414, 463, 475, 647,
	0, 0, 0, 259, 0, 473, 428, 603, 239, 290,
	460, 434, 471, 442, 293, 0, 0, 472, 375, 585,
	452, 600, 626, 627, 269, 408, 612, 593, 521, 620,
	644, 232, 266, 422, 506, 606, 495, 400, 581, 582,
	334, 494, 301, 208, 372, 578, 632, 230, 481, 374,
	248, 237, 587, 609, 295, 458, 639, 219, 516, 598,
	245, 485, 0, 0, 648, 253, 505, 221, 595, 504,
	396, 331, 332, 220, 0, 459, 274, 299, 0, 0,
	264, 417, 589, 590, 262, 649, 234, 619, 226, 0,
	618, 410, 584, 596, 397, 386, 225, 594, 395, 385,
	339, 358, 359, 286, 312, 449, 378, 450, 311, 313,
	406, 405, 407, 213, 607, 0, 214, 0, 500, 608,
	650, 454, 218, 240, 241, 243, 0, 285, 289, 297,
	300, 308, 309, 318, 370, 421, 448, 444, 453, 0,
	579, 601, 613, 624, 630, 631, 633, 634, 635, 636,
	637, 640, 638, 409, 316, 496, 338, 376, 0, 0,
	427, 474, 246, 605, 497, 206, 0, 0, 0, 0,
	260, 261, 0, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 645, 507, 513, 508, 509, 510, 511, 512, 0,
	514, 0, 0, 0, 0, 0, 0, 591, 592, 669,
	387, 487, 602, 340, 352, 355, 345, 364, 0, 365,
	341, 342, 347, 349, 350, 351, 356, 357, 361, 367,
	255, 216, 393, 401, 577, 317, 222, 223, 224, 523,
	524, 525, 526, 616, 617, 621, 211, 464, 465, 466,
	467, 298, 611, 314, 470, 469, 336, 337, 382, 451,
	539, 541, 552, 556, 558, 560, 566, 569, 540, 542,
	553, 557, 559, 561, 567, 570, 529, 531, 533, 535,
	548, 547, 544, 572, 573, 550, 555, 534, 546, 551,
	564, 571, 568, 528, 532, 536, 545, 563, 562, 543,
	554, 565, 549, 537, 530, 538, 0, 203, 227, 371,
	0, 456, 294, 646, 615, 610, 212, 229, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 205, 207, 215, 228, 238, 242, 249, 267,
	282, 284, 291, 304, 315, 323, 324, 327, 333, 383,
	389, 390, 391, 392, 411, 412, 413, 416, 419, 420,
	423, 425, 426, 429, 433, 437, 438, 439, 441, 443,
	445, 457, 462, 476, 477, 478, 479, 480, 483, 484,
	489, 490, 491, 492, 493, 501, 502, 515, 586, 588,
	604, 622, 628, 482, 306, 307, 446, 447, 319, 320,
	642, 643, 305, 599, 629, 597, 641, 623, 440, 381,
	0, 0, 384, 287, 310, 325, 0, 614, 503, 233,
	468, 296, 257, 0, 0, 217, 252, 236, 265, 280,
	283, 329, 394, 402, 431, 436, 302, 277, 250, 461,
	247, 486, 518, 519, 520, 522, 398, 272, 435, 399,
	0, 379, 575, 576, 321, 527, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 0, 0,
	0, 369, 273, 0, 0, 432, 0, 210, 0, 488,
	258, 380, 377, 583, 288, 279, 275, 256, 322, 388,
	430, 517, 424, 0, 373, 0, 0, 498, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 328, 254, 330, 209, 415, 499,
	292, 0, 0, 0, 0, 0, 201, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 251,
	0, 0, 0, 354, 363, 362, 343, 344, 346, 348,
	353, 360, 366, 0, 0, 0, 0, 0, 271, 326,
	278, 270, 580, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	303, 0, 404, 263, 0, 455, 0, 0, 0, 625,
	0, 0, 0, 0, 0, 0, 0, 368, 0, 335,
	0, 0, 0, 204, 231, 0, 0, 414, 463, 475,
	647, 0, 0, 0, 259, 0, 473, 428, 603, 239,
	290, 460, 434, 471, 442, 293, 0, 0, 472, 375,
	585, 452, 600, 626, 627, 269, 408, 612, 593, 521,
	620, 644, 232, 266, 422, 506, 606, 495, 400, 581,
	582, 334, 494, 301, 208, 372, 578, 632, 230, 481,
	374, 248, 237, 587, 609, 295, 458, 639, 219, 516,
	598, 245, 485, 0, 0, 648, 253, 505, 221, 595,
	504, 396, 331, 332, 220, 0, 459, 274, 299, 0,
	0, 264, 417, 589, 590, 262, 649, 234, 619, 226,
	0, 618, 410, 584, 596, 397, 386, 225, 594, 395,
	385, 339, 358, 359, 286, 312, 449, 378, 450, 311,
	313, 406, 405, 407, 213, 607, 0, 214, 0, 500,
	608, 650, 454, 218, 240, 241, 243, 0, 285, 289,
	297, 300, 308, 309, 318, 370, 421, 448, 444, 453,
	0, 579, 601, 613, 624, 630, 631, 633, 634, 635,
	636, 637, 640, 638, 409, 316, 496, 338, 376, 0,
	0, 427, 474, 246, 605, 497, 206, 0, 0, 0,
	0, 260, 261, 0, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 645, 507, 513, 508, 509, 510, 511, 512,
	0, 514, 0, 0, 0, 0, 0, 0, 591, 592,
	669, 387, 487, 602, 340, 352, 355, 345, 364, 0,
	365, 341, 342, 347, 349, 350, 351, 356, 357, 361,
	367, 255, 216, 393, 401, 577, 317, 222, 223, 224,
	523, 524, 525, 526, 616, 617, 621, 211, 464, 465,
	466, 467, 298, 611, 314, 470, 469, 336, 337, 382,
	451, 539, 541, 552, 556, 558, 560, 566, 569, 540,
	542, 553, 557, 559, 561, 567, 570, 529, 531, 533,
	535, 548, 547, 544, 572, 573, 550, 555, 534, 546,
	551, 564, 571, 568, 528, 532, 536, 545, 563, 562,
	543, 554, 565, 549, 537, 530, 538, 0, 203, 227,
	371, 2054, 456, 294, 646, 615, 610, 212, 229, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 207, 215, 228, 238, 242, 249,
	267, 282, 284, 291, 304, 315, 323, 324, 327, 333,
	383, 389, 390, 391, 392, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 489, 490, 491, 492, 493, 501, 502, 515, 586,
	588, 604, 622, 628, 482, 306, 307, 446, 447, 319,
	320, 642, 643, 305, 599, 629, 597, 641, 623, 440,
	381, 0, 0, 384, 287, 310, 325, 0, 614, 503,
	233, 468, 296, 257, 0, 0, 217, 252, 236, 265,
	280, 283, 329, 394, 402, 431, 436, 302, 277, 250,
	461, 247, 486, 518, 519, 520, 522, 398, 272, 435,
	399, 0, 379, 575, 576, 321, 527, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 0,
	0, 0, 369, 273, 0, 0, 432, 0, 210, 0,
	488, 258, 380, 377, 583, 288, 279, 275, 256, 322,
	388, 430, 517, 424, 0, 373, 0, 0, 498, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 328, 254, 330, 209, 415,
	499, 292, 0, 0, 0, 0, 2045, 719, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	251, 0, 0, 0, 354, 363, 362, 343, 344, 346,
	348, 353, 360, 366, 0, 0, 0, 0, 0, 271,
	326, 278, 270, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 303, 0, 404, 263, 0, 455, 0, 0, 0,
	625, 0, 0, 0, 0, 0, 0, 0, 368, 0,
	335, 0, 0, 0, 204, 231, 0, 0, 414, 463,
	475, 647, 0, 0, 0, 259, 0, 473, 428, 603,
	239, 290, 460, 434, 471, 442, 293, 0, 0, 472,
	375, 585, 452, 600, 626, 627, 269, 408, 612, 593,
	521, 620, 644, 232, 266, 422, 506, 606, 495, 400,
	581, 582, 334, 494, 301, 208, 372, 578, 632, 230,
	481, 374, 248, 237, 587, 609, 295, 458, 639, 219,
	516, 598, 245, 485, 0, 0, 648, 253, 505, 221,
	595, 504, 396, 331, 332, 220, 0, 459, 274, 299,
	0, 0, 264, 417, 589, 590, 262, 649, 234, 619,
	226, 0, 618, 410, 584, 596, 397, 386, 225, 594,
	395, 385, 339, 358, 359, 286, 312, 449, 378, 450,
	311, 313, 406, 405, 407, 213, 607, 0, 214, 0,
	500, 608, 650, 454, 218, 240, 241, 243, 0, 285,
	289, 297, 300, 308, 309, 318, 370, 421, 448, 444,
	453, 0, 579, 601, 613, 624, 630, 631, 633, 634,
	635, 636, 637, 640, 638, 409, 316, 496, 338, 376,
	0, 0, 427, 474, 246, 605, 497, 206, 0, 0,
	0, 0, 260, 261, 0, 574, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 645, 507, 513, 508, 509, 510, 511,
	512, 0, 514, 0, 0, 0, 0, 0, 0, 591,
	592, 669, 387, 487, 602, 340, 352, 355, 345, 364,
	0, 365, 341, 342, 347, 349, 350, 351, 356, 357,
	361, 367, 255, 216, 393, 401, 577, 317, 222, 223,
	224, 523, 524, 525, 526, 616, 617, 621, 211, 464,
	465, 466, 467, 298, 611, 314, 470, 469, 336, 337,
	382, 451, 539, 541, 552, 556, 558, 560, 566, 569,
	540, 542, 553, 557, 559, 561, 567, 570, 529, 531,
	533, 535, 548, 547, 544, 572, 573, 550, 555, 534,
	546, 551, 564, 571, 568, 528, 532, 536, 545, 563,
	562, 543, 554, 565, 549, 537, 530, 538, 0, 203,
	227, 371, 0, 456, 294, 646, 615, 610, 212, 229,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 205, 207, 215, 228, 238, 242,
	249, 267, 282, 284, 291, 304, 315, 323, 324, 327,
	333, 383, 389, 390, 391, 392, 411, 412, 413, 416,
	419, 420, 423, 425, 426, 429, 433, 437, 438, 439,
	441, 443, 445, 457, 462, 476, 477, 478, 479, 480,
	483, 484, 489, 490, 491, 492, 493, 501, 502, 515,
	586, 588, 604, 622, 628, 482, 306, 307, 446, 447,
	319, 320, 642, 643, 305, 599, 629, 597, 641, 623,
	440, 381, 0, 0, 384, 287, 310, 325, 0, 614,
	503, 233, 468, 296, 257, 0, 0, 217, 252, 236,
	265, 280, 283, 329, 394, 402, 431, 436, 302, 277,
	250, 461, 247, 486, 518, 519, 520, 522, 398, 272,
	435, 399, 0, 379, 575, 576, 321, 527, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 418,
	0, 1903, 0, 0, 0, 0, 0, 0, 276, 0,
	0, 0, 0, 369, 273, 0, 0, 432, 0, 210,
	0, 488, 258, 380, 377, 583, 288, 279, 275, 256,
	322, 388, 430, 517, 424, 0, 373, 0, 0, 498,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 328, 254, 330, 209,
	415, 499, 292, 0, 0, 0, 0, 0, 719, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 251, 0, 0, 0, 354, 363, 362, 343, 344,
	346, 348, 353, 360, 366, 0, 0, 0, 0, 0,
	271, 326, 278, 270, 580, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 303, 0, 404, 263, 0, 455, 0, 0,
	0, 625, 0, 0, 0, 0, 0, 0, 0, 368,
	0, 335, 0, 0, 0, 204, 231, 0, 0, 414,
	463, 475, 647, 0, 0, 0, 259, 0, 473, 428,
	603, 239, 290, 460, 434, 471, 442, 293, 0, 0,
	472, 375, 585, 452, 600, 626, 627, 269, 408, 612,
	593, 521, 620, 644, 232, 266, 422, 506, 606, 495,
	400, 581, 582, 334, 494, 301, 208, 372, 578, 632,
	230, 481, 374, 248, 237, 587, 609, 295, 458, 639,
	219, 516, 598, 245, 485, 0, 0, 648, 253, 505,
	221, 595, 504, 396, 331, 332, 220, 0, 459, 274,
	299, 0, 0, 264, 417, 589, 590, 262, 649, 234,
	619, 226, 0, 618, 410, 584, 596, 397, 386, 225,
	594, 395, 385, 339, 358, 359, 286, 312, 449, 378,
	450, 311, 313, 406, 405, 407, 213, 607, 0, 214,
	0, 500, 608, 650, 454, 218, 240, 241, 243, 0,
	285, 289, 297, 300, 308, 309, 318, 370, 421, 448,
	444, 453, 0, 579, 601, 613, 624, 630, 631, 633,
	634, 635, 636, 637, 640, 638, 409, 316, 496, 338,
	376, 0, 0, 427, 474, 246, 605, 497, 206, 0,
	0, 0, 0, 260, 261, 0, 574, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 645, 507, 513, 508, 509, 510,
	511, 512, 0, 514, 0, 0, 0, 0, 0, 0,
	591, 592, 669, 387, 487, 602, 340, 352, 355, 345,
	364, 0, 365, 341, 342, 347, 349, 350, 351, 356,
	357, 361, 367, 255, 216, 393, 401, 577, 317, 222,
	223, 224, 523, 524, 525, 526, 616, 617, 621, 211,
	464, 465, 466, 467, 298, 611, 314, 470, 469, 336,
	337, 382, 451, 539, 541, 552, 556, 558, 560, 566,
	569, 540, 542, 553, 557, 559, 561, 567, 570, 529,
	531, 533, 535, 548, 547, 544, 572, 573, 550, 555,
	534, 546, 551, 564, 571, 568, 528, 532, 536, 545,
	563, 562, 543, 554, 565, 549, 537, 530, 538, 0,
	203, 227, 371, 0, 456, 294, 646, 615, 610, 212,
	229, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 205, 207, 215, 228, 238,
	242, 249, 267, 282, 284, 291, 304, 315, 323, 324,
	327, 333, 383, 389, 390, 391, 392, 411, 412, 413,
	416, 419, 420, 423, 425, 426, 429, 433, 437, 438,
	439, 441, 443, 445, 457, 462, 476, 477, 478, 479,
	480, 483, 484, 489, 490, 491, 492, 493, 501, 502,
	515, 586, 588, 604, 622, 628, 482, 306, 307, 446,
	447, 319, 320, 642, 643, 305, 599, 629, 597, 641,
	623, 440, 381, 0, 0, 384, 287, 310, 325, 0,
	614, 503, 233, 468, 296, 257, 0, 0, 217, 252,
	236, 265, 280, 283, 329, 394, 402, 431, 436, 302,
	277, 250, 461, 247, 486, 518, 519, 520, 522, 398,
	272, 435, 399, 0, 379, 575, 576, 321, 527, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	418, 0, 1901, 0, 0, 0, 0, 0, 0, 276,
	0, 0, 0, 0, 369, 273, 0, 0, 432, 0,
	210, 0, 488, 258, 380, 377, 583, 288, 279, 275,
	256, 322, 388, 430, 517, 424, 0, 373, 0, 0,
	498, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 328, 254, 330,
	209, 415, 499, 292, 0, 0, 0, 0, 0, 719,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 251, 0, 0, 0, 354, 363, 362, 343,
	344, 346, 348, 353, 360, 366, 0, 0, 0, 0,
	0, 271, 326, 278, 270, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 303, 0, 404, 263, 0, 455, 0,
	0, 0, 625, 0, 0, 0, 0, 0, 0, 0,
	368, 0, 335, 0, 0, 0, 204, 231, 0, 0,
	414, 463, 475, 647, 0, 0, 0, 259, 0, 473,
	428, 603, 239, 290, 460, 434, 471, 442, 293, 0,
	0, 472, 375, 585, 452, 600, 626, 627, 269, 408,
	612, 593, 521, 620, 644, 232, 266, 422, 506, 606,
	495, 400, 581, 582, 334, 494, 301, 208, 372, 578,
	632, 230, 481, 374, 248, 237, 587, 609, 295, 458,
	639, 219, 516, 598, 245, 485, 0, 0, 648, 253,
	505, 221, 595, 504, 396, 331, 332, 220, 0, 459,
	274, 299, 0, 0, 264, 417, 589, 590, 262, 649,
	234, 619, 226, 0, 618, 410, 584, 596, 397, 386,
	225, 594, 395, 385, 339, 358, 359, 286, 312, 449,
	378, 450, 311, 313, 406, 405, 407, 213, 607, 0,
	214, 0, 500, 608, 650, 454, 218, 240, 241, 243,
	0, 285, 289, 297, 300, 308, 309, 318, 370, 421,
	448, 444, 453, 0, 579, 601, 613, 624, 630, 631,
	633, 634, 635, 636, 637, 640, 638, 409, 316, 496,
	338, 376, 0, 0, 427, 474, 246, 605, 497, 206,
	0, 0, 0, 0, 260, 261, 0, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 645, 507, 513, 508, 509,
	510, 511, 512, 0, 514, 0, 0, 0, 0, 0,
	0, 591, 592, 669, 387, 487, 602, 340, 352, 355,
	345, 364, 0, 365, 341, 342, 347, 349, 350, 351,
	356, 357, 361, 367, 255, 216, 393, 401, 577, 317,
	222, 223, 224, 523, 524, 525, 526, 616, 617, 621,
	211, 464, 465, 466, 467, 298, 611, 314, 470, 469,
	336, 337, 382, 451, 539, 541, 552, 556, 558, 560,
	566, 569, 540, 542, 553, 557, 559, 561, 567, 570,
	529, 531, 533, 535, 548, 547, 544, 572, 573, 550,
	555, 534, 546, 551, 564, 571, 568, 528, 532, 536,
	545, 563, 562, 543, 554, 565, 549, 537, 530, 538,
	0, 203, 227, 371, 0, 456, 294, 646, 615, 610,
	212, 229, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 205, 207, 215, 228,
	238, 242, 249, 267, 282, 284, 291, 304, 315, 323,
	324, 327, 333, 383, 389, 390, 391, 392, 411, 412,
	413, 416, 419, 420, 423, 425, 426, 429, 433, 437,
	438, 439, 441, 443, 445, 457, 462, 476, 477, 478,
	479, 480, 483, 484, 489, 490, 491, 492, 493, 501,
	502, 515, 586, 588, 604, 622, 628, 482, 306, 307,
	446, 447, 319, 320, 642, 643, 305, 599, 629, 597,
	641, 623, 440, 381, 0, 0, 384, 287, 310, 325,
	0, 614, 503, 233, 468, 296, 257, 0, 0, 217,
	252, 236, 265, 280, 283, 329, 394, 402, 431, 436,
	302, 277, 250, 461, 247, 486, 518, 519, 520, 522,
	398, 272, 435, 399, 0, 379, 575, 576, 321, 527,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 1899, 0, 0, 0, 0, 0, 0,
	276, 0, 0, 0, 0, 369, 273, 0, 0, 432,
	0, 210, 0, 488, 258, 380, 377, 583, 288, 279,
	275, 256, 322, 388, 430, 517, 424, 0, 373, 0,
	0, 498, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 328, 254,
	330, 209, 415, 499, 292, 0, 0, 0, 0, 0,
	719, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 251, 0, 0, 0, 354, 363, 362,
	343, 344, 346, 348, 353, 360, 366, 0, 0, 0,
	0, 0, 271, 326, 278, 270, 580, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 303, 0, 404, 263, 0, 455,
	0, 0, 0, 625, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 335, 0, 0, 0, 204, 231, 0,
	0, 414, 463, 475, 647, 0, 0, 0, 259, 0,
	473, 428, 603, 239, 290, 460, 434, 471, 442, 293,
	0, 0, 472, 375, 585, 452, 600, 626, 627, 269,
	408, 612, 593, 521, 620, 644, 232, 266, 422, 506,
	606, 495, 400, 581, 582, 334, 494, 301, 208, 372,
	578, 632, 230, 481, 374, 248, 237, 587, 609, 295,
	458, 639, 219, 516, 598, 245, 485, 0, 0, 648,
	253, 505, 221, 595, 504, 396, 331, 332, 220, 0,
	459, 274, 299, 0, 0, 264, 417, 589, 590, 262,
	649, 234, 619, 226, 0, 618, 410, 584, 596, 397,
	386, 225, 594, 395, 385, 339, 358, 359, 286, 312,
	449, 378, 450, 311, 313, 406, 405, 407, 213, 607,
	0, 214, 0, 500, 608, 650, 454, 218, 240, 241,
	243, 0, 285, 289, 297, 300, 308, 309, 318, 370,
	421, 448, 444, 453, 0, 579, 601, 613, 624, 630,
	631, 633, 634, 635, 636, 637, 640, 638, 409, 316,
	496, 338, 376, 0, 0, 427, 474, 246, 605, 497,
	206, 0, 0, 0, 0, 260, 261, 0, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 645, 507, 513, 508,
	509, 510, 511, 512, 0, 514, 0, 0, 0, 0,
	0, 0, 591, 592, 669, 387, 487, 602, 340, 352,
	355, 345, 364, 0, 365, 341, 342, 347, 349, 350,
	351, 356, 357, 361, 367, 255, 216, 393, 401, 577,
	317, 222, 223, 224, 523, 524, 525, 526, 616, 617,
	621, 211, 464, 465, 466, 467, 298, 611, 314, 470,
	469, 336, 337, 382, 451, 539, 541, 552, 556, 558,
	560, 566, 569, 540, 542, 553, 557, 559, 561, 567,
	570, 529, 531, 533, 535, 548, 547, 544, 572, 573,
	550, 555, 534, 546, 551, 564, 571, 568, 528, 532,
	536, 545, 563, 562, 543, 554, 565, 549, 537, 530,
	538, 0, 203, 227, 371, 0, 456, 294, 646, 615,
	610, 212, 229, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 207, 215,
	228, 238, 242, 249, 267, 282, 284, 291, 304, 315,
	323, 324, 327, 333, 383, 389, 390, 391, 392, 411,
	412, 413, 416, 419, 420, 423, 425, 426, 429, 433,
	437, 438, 439, 441, 443, 445, 457, 462, 476, 477,
	478, 479, 480, 483, 484, 489, 490, 491, 492, 493,
	501, 502, 515, 586, 588, 604, 622, 628, 482, 306,
	307, 446, 447, 319, 320, 642, 643, 305, 599, 629,
	597, 641, 623, 440, 381, 0, 0, 384, 287, 310,
	325, 0, 614, 503, 233, 468, 296, 257, 0, 0,
	217, 252, 236, 265, 280, 283, 329, 394, 402, 431,
	436, 302, 277, 250, 461, 247, 486, 518, 519, 520,
	522, 398, 272, 435, 399, 0, 379, 575, 576, 321,
	527, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 418, 0, 1897, 0, 0, 0, 0, 0,
	0, 276, 0, 0, 0, 0, 369, 273, 0, 0,
	432, 0, 210, 0, 488, 258, 380, 377, 583, 288,
	279, 275, 256, 322, 388, 430, 517, 424, 0, 373,
	0, 0, 498, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	254, 330, 209, 415, 499, 292, 0, 0, 0, 0,
	0, 719, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 354, 363,
	362, 343, 344, 346, 348, 353, 360, 366, 0, 0,
	0, 0, 0, 271, 326, 278, 270, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 303, 0, 404, 263, 0,
	455, 0, 0, 0, 625, 0, 0, 0, 0, 0,
	0, 0, 368, 0, 335, 0, 0, 0, 204, 231,
	0, 0, 414, 463, 475, 647, 0, 0, 0, 259,
	0, 473, 428, 603, 239, 290, 460, 434, 471, 442,
	293, 0, 0, 472, 375, 585, 452, 600, 626, 627,
	269, 408, 612, 593, 521, 620, 644, 232, 266, 422,
	506, 606, 495, 400, 581, 582, 334, 494, 301, 208,
	372, 578, 632, 230, 481, 374, 248, 237, 587, 609,
	295, 458, 639, 219, 516, 598, 245, 485, 0, 0,
	648, 253, 505, 221, 595, 504, 396, 331, 332, 220,
	0, 459, 274, 299, 0, 0, 264, 417, 589, 590,
	262, 649, 234, 619, 226, 0, 618, 410, 584, 596,
	397, 386, 225, 594, 395, 385, 339, 358, 359, 286,
	312, 449, 378, 450, 311, 313, 406, 405, 407, 213,
	607, 0, 214, 0, 500, 608, 650, 454, 218, 240,
	241, 243, 0, 285, 289, 297, 300, 308, 309, 318,
	370, 421, 448, 444, 453, 0, 579, 601, 613, 624,
	630, 631, 633, 634, 635, 636, 637, 640, 638, 409,
	316, 496, 338, 376, 0, 0, 427, 474, 246, 605,
	497, 206, 0, 0, 0, 0, 260, 261, 0, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 645, 507, 513,
	508, 509, 510, 511, 512, 0, 514, 0, 0, 0,
	0, 0, 0, 591, 592, 669, 387, 487, 602, 340,
	352, 355, 345, 364, 0, 365, 341, 342, 347, 349,
	350, 351, 356, 357, 361, 367, 255, 216, 393, 401,
	577, 317, 222, 223, 224, 523, 524, 525, 526, 616,
	617, 621, 211, 464, 465, 466, 467, 298, 611, 314,
	470, 469, 336, 337, 382, 451, 539, 541, 552, 556,
	558, 560, 566, 569, 540, 542, 553, 557, 559, 561,
	567, 570, 529, 531, 533, 535, 548, 547, 544, 572,
	573, 550, 555, 534, 546, 551, 564, 571, 568, 528,
	532, 536, 545, 563, 562, 543, 554, 565, 549, 537,
	530, 538, 0, 203, 227, 371, 0, 456, 294, 646,
	615, 610, 212, 229, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 205, 207,
	215, 228, 238, 242, 249, 267, 282, 284, 291, 304,
	315, 323, 324, 327, 333, 383, 389, 390, 391, 392,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 489, 490, 491, 492,
	493, 501, 502, 515, 586, 588, 604, 622, 628, 482,
	306, 307, 446, 447, 319, 320, 642, 643, 305, 599,
	629, 597, 641, 623, 440, 381, 0, 0, 384, 287,
	310, 325, 0, 614, 503, 233, 468, 296, 257, 0,
	0, 217, 252, 236, 265, 280, 283, 329, 394, 402,
	431, 436, 302, 277, 250, 461, 247, 486, 518, 519,
	520, 522, 398, 272, 435, 399, 0, 379, 575, 576,
	321, 527, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 418, 0, 1895, 0, 0, 0, 0,
	0, 0, 276, 0, 0, 0, 0, 369, 273, 0,
	0, 432, 0, 210, 0, 488, 258, 380, 377, 583,
	288, 279, 275, 256, 322, 388, 430, 517, 424, 0,
	373, 0, 0, 498, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	328, 254, 330, 209, 415, 499, 292, 0, 0, 0,
	0, 0, 719, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 251, 0, 0, 0, 354,
	363, 362, 343, 344, 346, 348, 353, 360, 366, 0,
	0, 0, 0, 0, 271, 326, 278, 270, 580, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 303, 0, 404, 263,
	0, 455, 0, 0, 0, 625, 0, 0, 0, 0,
	0, 0, 0, 368, 0, 335, 0, 0, 0, 204,
	231, 0, 0, 414, 463, 475, 647, 0, 0, 0,
	259, 0, 473, 428, 603, 239, 290, 460, 434, 471,
	442, 293, 0, 0, 472, 375, 585, 452, 600, 626,
	627, 269, 408, 612, 593, 521, 620, 644, 232, 266,
	422, 506, 606, 495, 400, 581, 582, 334, 494, 301,
	208, 372, 578, 632, 230, 481, 374, 248, 237, 587,
	609, 295, 458, 639, 219, 516, 598, 245, 485, 0,
	0, 648, 253, 505, 221, 595, 504, 396, 331, 332,
	220, 0, 459, 274, 299, 0, 0, 264, 417, 589,
	590, 262, 649, 234, 619, 226, 0, 618, 410, 584,
	596, 397, 386, 225, 594, 395, 385, 339, 358, 359,
	286, 312, 449, 378, 450, 311, 313, 406, 405, 407,
	213, 607, 0, 214, 0, 500, 608, 650, 454, 218,
	240, 241, 243, 0, 285, 289, 297, 300, 308, 309,
	318, 370, 421, 448, 444, 453, 0, 579, 601, 613,
	624, 630, 631, 633, 634, 635, 636, 637, 640, 638,
	409, 316, 496, 338, 376, 0, 0, 427, 474, 246,
	605, 497, 206, 0, 0, 0, 0, 260, 261, 0,
	574, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 645, 507,
	513, 508, 509, 510, 511, 512, 0, 514, 0, 0,
	0, 0, 0, 0, 591, 592, 669, 387, 487, 602,
	340, 352, 355, 345, 364, 0, 365, 341, 342, 347,
	349, 350, 351, 356, 357, 361, 367, 255, 216, 393,
	401, 577, 317, 222, 223, 224, 523, 524, 525, 526,
	616, 617, 621, 211, 464, 465, 466, 467, 298, 611,
	314, 470, 469, 336, 337, 382, 451, 539, 541, 552,
	556, 558, 560, 566, 569, 540, 542, 553, 557, 559,
	561, 567, 570, 529, 531, 533, 535, 548, 547, 544,
	572, 573, 550, 555, 534, 546, 551, 564, 571, 568,
	528, 532, 536, 545, 563, 562, 543, 554, 565, 549,
	537, 530, 538, 0, 203, 227, 371, 0, 456, 294,
	646, 615, 610, 212, 229, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	207, 215, 228, 238, 242, 249, 267, 282, 284, 291,
	304, 315, 323, 324, 327, 333, 383, 389, 390, 391,
	392, 411, 412, 413, 416, 419, 420, 423, 425, 426,
	429, 433, 437, 438, 439, 441, 443, 445, 457, 462,
	476, 477, 478, 479, 480, 483, 484, 489, 490, 491,
	492, 493, 501, 502, 515, 586, 588, 604, 622, 628,
	482, 306, 307, 446, 447, 319, 320, 642, 643, 305,
	599, 629, 597, 641, 623, 440, 381, 0, 0, 384,
	287, 310, 325, 0, 614, 503, 233, 468, 296, 257,
	0, 0, 217, 252, 236, 265, 280, 283, 329, 394,
	402, 431, 436, 302, 277, 250, 461, 247, 486, 518,
	519, 520, 522, 398, 272, 435, 399, 0, 379, 575,
	576, 321, 527, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 418, 0, 1891, 0, 0, 0,
	0, 0, 0, 276, 0, 0, 0, 0, 369, 273,
	0, 0, 432, 0, 210, 0, 488, 258, 380, 377,
	583, 288, 279, 275, 256, 322, 388, 430, 517, 424,
	0, 373, 0, 0, 498, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 254, 330, 209, 415, 499, 292, 0, 0,
	0, 0, 0, 719, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 251, 0, 0, 0,
	354, 363, 362, 343, 344, 346, 348, 353, 360, 366,
	0, 0, 0, 0, 0, 271, 326, 278, 270, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 303, 0, 404,
	263, 0, 455, 0, 0, 0, 625, 0, 0, 0,
	0, 0, 0, 0, 368, 0, 335, 0, 0, 0,
	204, 231, 0, 0, 414, 463, 475, 647, 0, 0,
	0, 259, 0, 473, 428, 603, 239, 290, 460, 434,
	471, 442, 293, 0, 0, 472, 375, 585, 452, 600,
	626, 627, 269, 408, 612, 593, 521, 620, 644, 232,
	266, 422, 506, 606, 495, 400, 581, 582, 334, 494,
	301, 208, 372, 578, 632, 230, 481, 374, 248, 237,
	587, 609, 295, 458, 639, 219, 516, 598, 245, 485,
	0, 0, 648, 253, 505, 221, 595, 504, 396, 331,
	332, 220, 0, 459, 274, 299, 0, 0, 264, 417,
	589, 590, 262, 649, 234, 619, 226, 0, 618, 410,
	584, 596, 397, 386, 225, 594, 395, 385, 339, 358,
	359, 286, 312, 449, 378, 450, 311, 313, 406, 405,
	407, 213, 607, 0, 214, 0, 500, 608, 650, 454,
	218, 240, 241, 243, 0, 285, 289, 297, 300, 308,
	309, 318, 370, 421, 448, 444, 453, 0, 579, 601,
	613, 624, 630, 631, 633, 634, 635, 636, 637, 640,
	638, 409, 316, 496, 338, 376, 0, 0, 427, 474,
	246, 605, 497, 206, 0, 0, 0, 0, 260, 261,
	0, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 645,
	507, 513, 508, 509, 510, 511, 512, 0, 514, 0,
	0, 0, 0, 0, 0, 591, 592, 669, 387, 487,
	602, 340, 352, 355, 345, 364, 0, 365, 341, 342,
	347, 349, 350, 351, 356, 357, 361, 367, 255, 216,
	393, 401, 577, 317, 222, 223, 224, 523, 524, 525,
	526, 616, 617, 621, 211, 464, 465, 466, 467, 298,
	611, 314, 470, 469, 336, 337, 382, 451, 539, 541,
	552, 556, 558, 560, 566, 569, 540, 542, 553, 557,
	559, 561, 567, 570, 529, 531, 533, 535, 548, 547,
	544, 572, 573, 550, 555, 534, 546, 551, 564, 571,
	568, 528, 532, 536, 545, 563, 562, 543, 554, 565,
	549, 537, 530, 538, 0, 203, 227, 371, 0, 456,
	294, 646, 615, 610, 212, 229, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 207, 215, 228, 238, 242, 249, 267, 282, 284,
	291, 304, 315, 323, 324, 327, 333, 383, 389, 390,
	391, 392, 411, 412, 413, 416, 419, 420, 423, 425,
	426, 429, 433, 437, 438, 439, 441, 443, 445, 457,
	462, 476, 477, 478, 479, 480, 483, 484, 489, 490,
	491, 492, 493, 501, 502, 515, 586, 588, 604, 622,
	628, 482, 306, 307, 446, 447, 319, 320, 642, 643,
	305, 599, 629, 597, 641, 623, 440, 381, 0, 0,
	384, 287, 310, 325, 0, 614, 503, 233, 468, 296,
	257, 0, 0, 217, 252, 236, 265, 280, 283, 329,
	394, 402, 431, 436, 302, 277, 250, 461, 247, 486,
	518, 519, 520, 522, 398, 272, 435, 399, 0, 379,
	575, 576, 321, 527, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 418, 0, 1889, 0, 0,
	0, 0, 0, 0, 276, 0, 0, 0, 0, 369,
	273, 0, 0, 432, 0, 210, 0, 488, 258, 380,
	377, 583, 288, 279, 275, 256, 322, 388, 430, 517,
	424, 0, 373, 0, 0, 498, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 328, 254, 330, 209, 415, 499, 292, 0,
	0, 0, 0, 0, 719, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 251, 0, 0,
	0, 354, 363, 362, 343, 344, 346, 348, 353, 360,
	366, 0, 0, 0, 0, 0, 271, 326, 278, 270,
	580, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 303, 0,
	404, 263, 0, 455, 0, 0, 0, 625, 0, 0,
	0, 0, 0, 0, 0, 368, 0, 335, 0, 0,
	0, 204, 231, 0, 0, 414, 463, 475, 647, 0,
	0, 0, 259, 0, 473, 428, 603, 239, 290, 460,
	434, 471, 442, 293, 0, 0, 472, 375, 585, 452,
	600, 626, 627, 269, 408, 612, 593, 521, 620, 644,
	232, 266, 422, 506, 606, 495, 400, 581, 582, 334,
	494, 301, 208, 372, 578, 632, 230, 481, 374, 248,
	237, 587, 609, 295, 458, 639, 219, 516, 598, 245,
	485, 0, 0, 648, 253, 505, 221, 595, 504, 396,
	331, 332, 220, 0, 459, 274, 299, 0, 0, 264,
	417, 589, 590, 262, 649, 234, 619, 226, 0, 618,
	410, 584, 596, 397, 386, 225, 594, 395, 385, 339,
	358, 359, 286, 312, 449, 378, 450, 311, 313, 406,
	405, 407, 213, 607, 0, 214, 0, 500, 608, 650,
	454, 218, 240, 241, 243, 0, 285, 289, 297, 300,
	308, 309, 318, 370, 421, 448, 444, 453, 0, 579,
	601, 613, 624, 630, 631, 633, 634, 635, 636, 637,
	640, 638, 409, 316, 496, 338, 376, 0, 0, 427,
	474, 246, 605, 497, 206, 0, 0, 0, 0, 260,
	261, 0, 574, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	645, 507, 513, 508, 509, 510, 511, 512, 0, 514,
	0, 0, 0, 0, 0, 0, 591, 592, 669, 387,
	487, 602, 340, 352, 355, 345, 364, 0, 365, 341,
	342, 347, 349, 350, 351, 356, 357, 361, 367, 255,
	216, 393, 401, 577, 317, 222, 223, 224, 523, 524,
	525, 526, 616, 617, 621, 211, 464, 465, 466, 467,
	298, 611, 314, 470, 469, 336, 337, 382, 451, 539,
	541, 552, 556, 558, 560, 566, 569, 540, 542, 553,
	557, 559, 561, 567, 570, 529, 531, 533, 535, 548,
	547, 544, 572, 573, 550, 555, 534, 546, 551, 564,
	571, 568, 528, 532, 536, 545, 563, 562, 543, 554,
	565, 549, 537, 530, 538, 0, 203, 227, 371, 0,
	456, 294, 646, 615, 610, 212, 229, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 205, 207, 215, 228, 238, 242, 249, 267, 282,
	284, 291, 304, 315, 323, 324, 327, 333, 383, 389,
	390, 391, 392, 411, 412, 413, 416, 419, 420, 423,
	425, 426, 429, 433, 437, 438, 439, 441, 443, 445,
	457, 462, 476, 477, 478, 479, 480, 483, 484, 489,
	490, 491, 492, 493, 501, 502, 515, 586, 588, 604,
	622, 628, 482, 306, 307, 446, 447, 319, 320, 642,
	643, 305, 599, 629, 597, 641, 623, 440, 381, 0,
	0, 384, 287, 310, 325, 0, 614, 503, 233, 468,
	296, 257, 0, 0, 217, 252, 236, 265, 280, 283,
	329, 394, 402, 431, 436, 302, 277, 250, 461, 247,
	486, 518, 519, 520, 522, 398, 272, 435, 399, 0,
	379, 575, 576, 321, 527, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 1887, 0,
	0, 0, 0, 0, 0, 276, 0, 0, 0, 0,
	369, 273, 0, 0, 432, 0, 210, 0, 488, 258,
	380, 377, 583, 288, 279, 275, 256, 322, 388, 430,
	517, 424, 0, 373, 0, 0, 498, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 328, 254, 330, 209, 415, 499, 292,
	0, 0, 0, 0, 0, 719, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 251, 0,
	0, 0, 354, 363, 362, 343, 344, 346, 348, 353,
	360, 366, 0, 0, 0, 0, 0, 271, 326, 278,
	270, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 303,
	0, 404, 263, 0, 455, 0, 0, 0, 625, 0,
	0, 0, 0, 0, 0, 0, 368, 0, 335, 0,
	0, 0, 204, 231, 0, 0, 414, 463, 475, 647,
	0, 0, 0, 259, 0, 473, 428, 603, 239, 290,
	460, 434, 471, 442, 293, 0, 0, 472, 375, 585,
	452, 600, 626, 627, 269, 408, 612, 593, 521, 620,
	644, 232, 266, 422, 506, 606, 495, 400, 581, 582,
	334, 494, 301, 208, 372, 578, 632, 230, 481, 374,
	248, 237, 587, 609, 295, 458, 639, 219, 516, 598,
	245, 485, 0, 0, 648, 253, 505, 221, 595, 504,
	396, 331, 332, 220, 0, 459, 274, 299, 0, 0,
	264, 417, 589, 590, 262, 649, 234, 619, 226, 0,
	618, 410, 584, 596, 397, 386, 225, 594, 395, 385,
	339, 358, 359, 286, 312, 449, 378, 450, 311, 313,
	406, 405, 407, 213, 607, 0, 214, 0, 500, 608,
	650, 454, 218, 240, 241, 243, 0, 285, 289, 297,
	300, 308, 309, 318, 370, 421, 448, 444, 453, 0,
	579, 601, 613, 624, 630, 631, 633, 634, 635, 636,
	637, 640, 638, 409, 316, 496, 338, 376, 0, 0,
	427, 474, 246, 605, 497, 206, 0, 0, 0, 0,
	260, 261, 0, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 645, 507, 513, 508, 509, 510, 511, 512, 0,
	514, 0, 0, 0, 0, 0, 0, 591, 592, 669,
	387, 487, 602, 340, 352, 355, 345, 364, 0, 365,
	341, 342, 347, 349, 350, 351, 356, 357, 361, 367,
	255, 216, 393, 401, 577, 317, 222, 223, 224, 523,
	524, 525, 526, 616, 617, 621, 211, 464, 465, 466,
	467, 298, 611, 314, 470, 469, 336, 337, 382, 451,
	539, 541, 552, 556, 558, 560, 566, 569, 540, 542,
	553, 557, 559, 561, 567, 570, 529, 531, 533, 535,
	548, 547, 544, 572, 573, 550, 555, 534, 546, 551,
	564, 571, 568, 528, 532, 536, 545, 563, 562, 543,
	554, 565, 549, 537, 530, 538, 0, 203, 227, 371,
	0, 456, 294, 646, 615, 610, 212, 229, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 205, 207, 215, 228, 238, 242, 249, 267,
	282, 284, 291, 304, 315, 323, 324, 327, 333, 383,
	389, 390, 391, 392, 411, 412, 413, 416, 419, 420,
	423, 425, 426, 429, 433, 437, 438, 439, 441, 443,
	445, 457, 462, 476, 477, 478, 479, 480, 483, 484,
	489, 490, 491, 492, 493, 501, 502, 515, 586, 588,
	604, 622, 628, 482, 306, 307, 446, 447, 319, 320,
	642, 643, 305, 599, 629, 597, 641, 623, 440, 381,
	0, 0, 384, 287, 310, 325, 0, 614, 503, 233,
	468, 296, 257, 0, 0, 217, 252, 236, 265, 280,
	283, 329, 394, 402, 431, 436, 302, 277, 250, 461,
	247, 486, 518, 519, 520, 522, 398, 272, 435, 399,
	0, 379, 575, 576, 321, 527, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 0, 0,
	0, 369, 273, 0, 0, 432, 0, 210, 0, 488,
	258, 380, 377, 583, 288, 279, 275, 256, 322, 388,
	430, 517, 424, 0, 373, 0, 0, 498, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 328, 254, 330, 209, 415, 499,
	292, 0, 1862, 0, 0, 0, 719, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 251,
	0, 0, 0, 354, 363, 362, 343, 344, 346, 348,
	353, 360, 366, 0, 0, 0, 0, 0, 271, 326,
	278, 270, 580, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	303, 0, 404, 263, 0, 455, 0, 0, 0, 625,
	0, 0, 0, 0, 0, 0, 0, 368, 0, 335,
	0, 0, 0, 204, 231, 0, 0, 414, 463, 475,
	647, 0, 0, 0, 259, 0, 473, 428, 603, 239,
	290, 460, 434, 471, 442, 293, 0, 0, 472, 375,
	585, 452, 600, 626, 627, 269, 408, 612, 593, 521,
	620, 644, 232, 266, 422, 506, 606, 495, 400, 581,
	582, 334, 494, 301, 208, 372, 578, 632, 230, 481,
	374, 248, 237, 587, 609, 295, 458, 639, 219, 516,
	598, 245, 485, 0, 0, 648, 253, 505, 221, 595,
	504, 396, 331, 332, 220, 0, 459, 274, 299, 0,
	0, 264, 417, 589, 590, 262, 649, 234, 619, 226,
	0, 618, 410, 584, 596, 397, 386, 225, 594, 395,
	385, 339, 358, 359, 286, 312, 449, 378, 450, 311,
	313, 406, 405, 407, 213, 607, 0, 214, 0, 500,
	608, 650, 454, 218, 240, 241, 243, 0, 285, 289,
	297, 300, 308, 309, 318, 370, 421, 448, 444, 453,
	0, 579, 601, 613, 624, 630, 631, 633, 634, 635,
	636, 637, 640, 638, 409, 316, 496, 338, 376, 0,
	0, 427, 474, 246, 605, 497, 206, 0, 0, 0,
	0, 260, 261, 0, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 645, 507, 513, 508, 509, 510, 511, 512,
	0, 514, 0, 0, 0, 0, 0, 0, 591, 592,
	669, 387, 487, 602, 340, 352, 355, 345, 364, 0,
	365, 341, 342, 347, 349, 350, 351, 356, 357, 361,
	367, 255, 216, 393, 401, 577, 317, 222, 223, 224,
	523, 524, 525, 526, 616, 617, 621, 211, 464, 465,
	466, 467, 298, 611, 314, 470, 469, 336, 337, 382,
	451, 539, 541, 552, 556, 558, 560, 566, 569, 540,
	542, 553, 557, 559, 561, 567, 570, 529, 531, 533,
	535, 548, 547, 544, 572, 573, 550, 555, 534, 546,
	551, 564, 571, 568, 528, 532, 536, 545, 563, 562,
	543, 554, 565, 549, 537, 530, 538, 0, 203, 227,
	371, 0, 456, 294, 646, 615, 610, 212, 229, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 207, 215, 228, 238, 242, 249,
	267, 282, 284, 291, 304, 315, 323, 324, 327, 333,
	383, 389, 390, 391, 392, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 489, 490, 491, 492, 493, 501, 502, 515, 586,
	588, 604, 622, 628, 482, 306, 307, 446, 447, 319,
	320, 642, 643, 305, 599, 629, 597, 641, 623, 440,
	381, 0, 0, 384, 287, 310, 325, 0, 614, 503,
	233, 468, 296, 257, 0, 0, 217, 252, 236, 265,
	280, 283, 329, 394, 402, 431, 436, 302, 277, 250,
	461, 247, 486, 518, 519, 520, 522, 398, 272, 435,
	399, 0, 379, 575, 576, 321, 527, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 0, 1760, 276, 0, 0,
	0, 0, 369, 273, 0, 0, 432, 0, 210, 0,
	488, 258, 380, 377, 583, 288, 279, 275, 256, 322,
	388, 430, 517, 424, 0, 373, 0, 0, 498, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 328, 254, 330, 209, 415,
	499, 292, 0, 0, 0, 0, 0, 201, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	251, 0, 0, 0, 354, 363, 362, 343, 344, 346,
	348, 353, 360, 366, 0, 0, 0, 0, 0, 271,
	326, 278, 270, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 303, 0, 404, 263, 0, 455, 0, 0, 0,
	625, 0, 0, 0, 0, 0, 0, 0, 368, 0,
	335, 0, 0, 0, 204, 231, 0, 0, 414, 463,
	475, 647, 0, 0, 0, 259, 0, 473, 428, 603,
	239, 290, 460, 434, 471, 442, 293, 0, 0, 472,
	375, 585, 452, 600, 626, 627, 269, 408, 612, 593,
	521, 620, 644, 232, 266, 422, 506, 606, 495, 400,
	581, 582, 334, 494, 301, 208, 372, 578, 632, 230,
	481, 374, 248, 237, 587, 609, 295, 458, 639, 219,
	516, 598, 245, 485, 0, 0, 648, 253, 505, 221,
	595, 504, 396, 331, 332, 220, 0, 459, 274, 299,
	0, 0, 264, 417, 589, 590, 262, 649, 234, 619,
	226, 0, 618, 410, 584, 596, 397, 386, 225, 594,
	395, 385, 339, 358, 359, 286, 312, 449, 378, 450,
	311, 313, 406, 405, 407, 213, 607, 0, 214, 0,
	500, 608, 650, 454, 218, 240, 241, 243, 0, 285,
	289, 297, 300, 308, 309, 318, 370, 421, 448, 444,
	453, 0, 579, 601, 613, 624, 630, 631, 633, 634,
	635, 636, 637, 640, 638, 409, 316, 496, 338, 376,
	0, 0, 427, 474, 246, 605, 497, 206, 0, 0,
	0, 0, 260, 261, 0, 574, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 645, 507, 513, 508, 509, 510, 511,
	512, 0, 514, 0, 0, 0, 0, 0, 0, 591,
	592, 669, 387, 487, 602, 340, 352, 355, 345, 364,
	0, 365, 341, 342, 347, 349, 350, 351, 356, 357,
	361, 367, 255, 216, 393, 401, 577, 317, 222, 223,
	224, 523, 524, 525, 526, 616, 617, 621, 211, 464,
	465, 466, 467, 298, 611, 314, 470, 469, 336, 337,
	382, 451, 539, 541, 552, 556, 558, 560, 566, 569,
	540, 542, 553, 557, 559, 561, 567, 570, 529, 531,
	533, 535, 548, 547, 544, 572, 573, 550, 555, 534,
	546, 551, 564, 571, 568, 528, 532, 536, 545, 563,
	562, 543, 554, 565, 549, 537, 530, 538, 0, 203,
	227, 371, 0, 456, 294, 646, 615, 610, 212, 229,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 205, 207, 215, 228, 238, 242,
	249, 267, 282, 284, 291, 304, 315, 323, 324, 327,
	333, 383, 389, 390, 391, 392, 411, 412, 413, 416,
	419, 420, 423, 425, 426, 429, 433, 437, 438, 439,
	441, 443, 445, 457, 462, 476, 477, 478, 479, 480,
	483, 484, 489, 490, 491, 492, 493, 501, 502, 515,
	586, 588, 604, 622, 628, 482, 306, 307, 446, 447,
	319, 320, 642, 643, 305, 599, 629, 597, 641, 623,
	440, 381, 0, 0, 384, 287, 310, 325, 0, 614,
	503, 233, 468, 296, 257, 0, 0, 217, 252, 236,
	265, 280, 283, 329, 394, 402, 431, 436, 302, 277,
	250, 461, 247, 486, 518, 519, 520, 522, 398, 272,
	435, 399, 0, 379, 575, 576, 321, 527, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	0, 0, 0, 369, 273, 0, 0, 432, 0, 210,
	0, 488, 258, 380, 377, 583, 288, 279, 275, 256,
	322, 388, 430, 517, 424, 0, 373, 0, 0, 498,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 328, 254, 330, 209,
	415, 499, 292, 0, 96, 0, 0, 0, 951, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 251, 0, 0, 0, 354, 363, 362, 343, 344,
	346, 348, 353, 360, 366, 0, 0, 0, 0, 0,
	271, 326, 278, 270, 580, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 303, 0, 404, 263, 0, 455, 0, 0,
	0, 625, 0, 0, 0, 0, 0, 0, 0, 368,
	0, 335, 0, 0, 0, 204, 231, 0, 0, 414,
	463, 475, 647, 0, 0, 0, 259, 0, 473, 428,
	603, 239, 290, 460, 434, 471, 442, 293, 0, 0,
	472, 375, 585, 452, 600, 626, 627, 269, 408, 612,
	593, 521, 620, 644, 232, 266, 422, 506, 606, 495,
	400, 581, 582, 334, 494, 301, 208, 372, 578, 632,
	230, 481, 374, 248, 237, 587, 609, 295, 458, 639,
	219, 516, 598, 245, 485, 0, 0, 648, 253, 505,
	221, 595, 504, 396, 331, 332, 220, 0, 459, 274,
	299, 0, 0, 264, 417, 589, 590, 262, 649, 234,
	619, 226, 0, 618, 410, 584, 596, 397, 386, 225,
	594, 395, 385, 339, 358, 359, 286, 312, 449, 378,
	450, 311, 313, 406, 405, 407, 213, 607, 0, 214,
	0, 500, 608, 650, 454, 218, 240, 241, 243, 0,
	285, 289, 297, 300, 308, 309, 318, 370, 421, 448,
	444, 453, 0, 579, 601, 613, 624, 630, 631, 633,
	634, 635, 636, 637, 640, 638, 409, 316, 496, 338,
	376, 0, 0, 427, 474, 246, 605, 497, 206, 0,
	0, 0, 0, 260, 261, 0, 574, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 645, 507, 513, 508, 509, 510,
	511, 512, 0, 514, 0, 0, 0, 0, 0, 0,
	591, 592, 669, 387, 487, 602, 340, 352, 355, 345,
	364, 0, 365, 341, 342, 347, 349, 350, 351, 356,
	357, 361, 367, 255, 216, 393, 401, 577, 317, 222,
	223, 224, 523, 524, 525, 526, 616, 617, 621, 211,
	464, 465, 466, 467, 298, 611, 314, 470, 469, 336,
	337, 382, 451, 539, 541, 552, 556, 558, 560, 566,
	569, 540, 542, 553, 557, 559, 561, 567, 570, 529,
	531, 533, 535, 548, 547, 544, 572, 573, 550, 555,
	534, 546, 551, 564, 571, 568, 528, 532, 536, 545,
	563, 562, 543, 554, 565, 549, 537, 530, 538, 0,
	203, 227, 371, 0, 456, 294, 646, 615, 610, 212,
	229, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 205, 207, 215, 228, 238,
	242, 249, 267, 282, 284, 291, 304, 315, 323, 324,
	327, 333, 383, 389, 390, 391, 392, 411, 412, 413,
	416, 419, 420, 423, 425, 426, 429, 433, 437, 438,
	439, 441, 443, 445, 457, 462, 476, 477, 478, 479,
	480, 483, 484, 489, 490, 491, 492, 493, 501, 502,
	515, 586, 588, 604, 622, 628, 482, 306, 307, 446,
	447, 319, 320, 642, 643, 305, 599, 629, 597, 641,
	623, 440, 381, 0, 0, 384, 287, 310, 325, 0,
	614, 503, 233, 468, 296, 257, 0, 0, 217, 252,
	236, 265, 280, 283, 329, 394, 402, 431, 436, 302,
	277, 250, 461, 247, 486, 518, 519, 520, 522, 398,
	272, 435, 399, 0, 379, 575, 576, 321, 527, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	0, 0, 0, 0, 369, 273, 0, 0, 432, 0,
	210, 0, 488, 258, 380, 377, 583, 288, 279, 275,
	256, 322, 388, 430, 517, 424, 0, 373, 0, 0,
	498, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 328, 254, 330,
	209, 415, 499, 292, 0, 0, 0, 0, 0, 201,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 251, 0, 0, 0, 354, 363, 362, 343,
	344, 346, 348, 353, 360, 366, 0, 0, 0, 0,
	0, 271, 326, 278, 270, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1448, 0, 303, 0, 404, 263, 0, 455, 0,
	0, 0, 625, 0, 0, 0, 0, 0, 0, 0,
	368, 0, 335, 0, 0, 0, 204, 231, 0, 0,
	414, 463, 475, 647, 0, 0, 0, 259, 0, 473,
	428, 603, 239, 290, 460, 434, 471, 442, 293, 0,
	0, 472, 375, 585, 452, 600, 626, 627, 269, 408,
	612, 593, 521, 620, 644, 232, 266, 422, 506, 606,
	495, 400, 581, 582, 334, 494, 301, 208, 372, 578,
	632, 230, 481, 374, 248, 237, 587, 609, 295, 458,
	639, 219, 516, 598, 245, 485, 0, 0, 648, 253,
	505, 221, 595, 504, 396, 331, 332, 220, 0, 459,
	274, 299, 0, 0, 264, 417, 589, 590, 262, 649,
	234, 619, 226, 0, 618, 410, 584, 596, 397, 386,
	225, 594, 395, 385, 339, 358, 359, 286, 312, 449,
	378, 450, 311, 313, 406, 405, 407, 213, 607, 0,
	214, 0, 500, 608, 650, 454, 218, 240, 241, 243,
	0, 285, 289, 297, 300, 308, 309, 318, 370, 421,
	448, 444, 453, 0, 579, 601, 613, 624, 630, 631,
	633, 634, 635, 636, 637, 640, 638, 409, 316, 496,
	338, 376, 0, 0, 427, 474, 246, 605, 497, 206,
	0, 0, 0, 0, 260, 261, 0, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 645, 507, 513, 508, 509,
	510, 511, 512, 0, 514, 0, 0, 0, 0, 0,
	0, 591, 592, 669, 387, 487, 602, 340, 352, 355,
	345, 364, 0, 365, 341, 342, 347, 349, 350, 351,
	356, 357, 361, 367, 255, 216, 393, 401, 577, 317,
	222, 223, 224, 523, 524, 525, 526, 616, 617, 621,
	211, 464, 465, 466, 467, 298, 611, 314, 470, 469,
	336, 337, 382, 451, 539, 541, 552, 556, 558, 560,
	566, 569, 540, 542, 553, 557, 559, 561, 567, 570,
	529, 531, 533, 535, 548, 547, 544, 572, 573, 550,
	555, 534, 546, 551, 564, 571, 568, 528, 532, 536,
	545, 563, 562, 543, 554, 565, 549, 537, 530, 538,
	0, 203, 227, 371, 0, 456, 294, 646, 615, 610,
	212, 229, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 205, 207, 215, 228,
	238, 242, 249, 267, 282, 284, 291, 304, 315, 323,
	324, 327, 333, 383, 389, 390, 391, 392, 411, 412,
	413, 416, 419, 420, 423, 425, 426, 429, 433, 437,
	438, 439, 441, 443, 445, 457, 462, 476, 477, 478,
	479, 480, 483, 484, 489, 490, 491, 492, 493, 501,
	502, 515, 586, 588, 604, 622, 628, 482, 306, 307,
	446, 447, 319, 320, 642, 643, 1447, 599, 629, 597,
	641, 623, 440, 381, 0, 0, 384, 287, 310, 325,
	0, 614, 503, 233, 468, 296, 257, 0, 0, 217,
	252, 236, 265, 280, 283, 329, 394, 402, 431, 436,
	302, 277, 250, 461, 247, 486, 518, 519, 520, 522,
	398, 272, 435, 399, 0, 379, 575, 576, 321, 527,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 0, 0, 0, 369, 273, 0, 0, 432,
	0, 210, 0, 488, 258, 380, 377, 583, 288, 279,
	275, 256, 322, 388, 430, 517, 424, 0, 373, 0,
	0, 498, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 328, 254,
	330, 209, 415, 499, 292, 0, 0, 0, 0, 0,
	201, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 251, 0, 0, 0, 354, 363, 362,
	343, 344, 346, 348, 353, 360, 366, 0, 0, 0,
	0, 0, 271, 326, 278, 270, 580, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 303, 0, 404, 263, 0, 455,
	0, 0, 0, 625, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 335, 0, 0, 0, 204, 231, 0,
	0, 414, 463, 475, 647, 0, 0, 0, 259, 0,
	473, 428, 603, 239, 290, 460, 434, 471, 442, 293,
	0, 0, 472, 375, 585, 452, 600, 626, 627, 269,
	408, 612, 593, 521, 620, 644, 232, 266, 422, 506,
	606, 495, 400, 581, 582, 334, 494, 301, 208, 372,
	578, 632, 230, 481, 374, 248, 237, 587, 609, 295,
	458, 639, 219, 516, 598, 245, 485, 0, 0, 648,
	253, 505, 221, 595, 504, 396, 331, 332, 220, 0,
	459, 274, 299, 0, 0, 264, 417, 589, 590, 262,
	649, 234, 619, 226, 0, 618, 410, 584, 596, 397,
	386, 225, 594, 395, 385, 339, 358, 359, 286, 312,
	449, 378, 450, 311, 313, 406, 405, 407, 213, 607,
	0, 214, 0, 500, 608, 650, 454, 218, 240, 241,
	243, 0, 285, 289, 297, 300, 308, 309, 318, 370,
	421, 448, 444, 453, 0, 579, 601, 613, 624, 630,
	631, 633, 634, 635, 636, 637, 640, 638, 409, 316,
	496, 338, 376, 0, 0, 427, 474, 246, 605, 497,
	206, 0, 0, 0, 0, 260, 261, 0, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 645, 507, 513, 508,
	509, 510, 511, 512, 0, 514, 0, 0, 0, 0,
	0, 0, 591, 592, 669, 387, 487, 602, 340, 352,
	355, 345, 364, 0, 365, 341, 342, 347, 349, 350,
	351, 356, 357, 361, 367, 255, 216, 393, 401, 577,
	317, 222, 223, 224, 523, 524, 525, 526, 616, 617,
	621, 211, 464, 465, 466, 467, 298, 611, 314, 470,
	469, 336, 337, 382, 451, 539, 541, 552, 556, 558,
	560, 566, 569, 540, 542, 553, 557, 559, 561, 567,
	570, 529, 531, 533, 535, 548, 547, 544, 572, 573,
	550, 555, 534, 546, 551, 564, 571, 568, 528, 532,
	536, 545, 563, 562, 543, 554, 565, 549, 537, 530,
	538, 0, 203, 227, 371, 0, 456, 294, 646, 615,
	610, 212, 229, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1039, 0, 0, 0, 205, 207, 215,
	228, 238, 242, 249, 267, 282, 284, 291, 304, 315,
	323, 324, 327, 333, 383, 389, 390, 391, 392, 411,
	412, 413, 416, 419, 420, 423, 425, 426, 429, 433,
	437, 438, 439, 441, 443, 445, 457, 462, 476, 477,
	478, 479, 480, 483, 484, 489, 490, 491, 492, 493,
	501, 502, 515, 586, 588, 604, 622, 628, 482, 306,
	307, 446, 447, 319, 320, 642, 643, 305, 599, 629,
	597, 641, 623, 440, 381, 0, 0, 384, 287, 310,
	325, 0, 614, 503, 233, 468, 296, 257, 0, 0,
	217, 252, 236, 265, 280, 283, 329, 394, 402, 431,
	436, 302, 277, 250, 461, 247, 486, 518, 519, 520,
	522, 398, 272, 435, 399, 0, 379, 575, 576, 321,
	527, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 0, 0, 0, 369, 273, 0, 0,
	432, 0, 210, 0, 488, 258, 380, 377, 583, 288,
	279, 275, 256, 322, 388, 430, 517, 424, 0, 373,
	0, 0, 498, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	254, 330, 209, 415, 499, 292, 0, 0, 0, 0,
	0, 201, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 354, 363,
	362, 343, 344, 346, 348, 353, 360, 366, 0, 0,
	0, 0, 0, 271, 326, 278, 270, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 303, 0, 404, 263, 0,
	455, 0, 672, 0, 625, 0, 0, 0, 0, 0,
	0, 0, 368, 0, 335, 0, 0, 0, 204, 231,
	0, 0, 414, 463, 475, 647, 0, 0, 0, 259,
	0, 473, 428, 603, 239, 290, 460, 434, 471, 442,
	293, 0, 0, 472, 375, 585, 452, 600, 626, 627,
	269, 408, 612, 593, 521, 620, 644, 232, 266, 422,
	506, 606, 495, 400, 581, 582, 334, 494, 301, 208,
	372, 578, 632, 230, 481, 374, 248, 237, 587, 609,
	295, 458, 639, 219, 516, 598, 245, 485, 0, 0,
	648, 253, 505, 221, 595, 504, 396, 331, 332, 220,
	0, 459, 274, 299, 0, 0, 264, 417, 589, 590,
	262, 649, 234, 619, 226, 0, 618, 410, 584, 596,
	397, 386, 225, 594, 395, 385, 339, 358, 359, 286,
	312, 449, 378, 450, 311, 313, 406, 405, 407, 213,
	607, 0, 214, 0, 500, 608, 650, 454, 218, 240,
	241, 243, 0, 285, 289, 297, 300, 308, 309, 318,
	370, 421, 448, 444, 453, 0, 579, 601, 613, 624,
	630, 631, 633, 634, 635, 636, 637, 640, 638, 409,
	316, 496, 338, 376, 0, 0, 427, 474, 246, 605,
	497, 206, 0, 0, 0, 0, 260, 261, 0, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 645, 507, 513,
	508, 509, 510, 511, 512, 0, 514, 0, 0, 0,
	0, 0, 0, 591, 592, 669, 387, 487, 602, 340,
	352, 355, 345, 364, 0, 365, 341, 342, 347, 349,
	350, 351, 356, 357, 361, 367, 255, 216, 393, 401,
	577, 317, 222, 223, 224, 523, 524, 525, 526, 616,
	617, 621, 211, 464, 465, 466, 467, 298, 611, 314,
	470, 469, 336, 337, 382, 451, 539, 541, 552, 556,
	558, 560, 566, 569, 540, 542, 553, 557, 559, 561,
	567, 570, 529, 531, 533, 535, 548, 547, 544, 572,
	573, 550, 555, 534, 546, 551, 564, 571, 568, 528,
	532, 536, 545, 563, 562, 543, 554, 565, 549, 537,
	530, 538, 0, 203, 227, 371, 0, 456, 294, 646,
	615, 610, 212, 229, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 205, 207,
	215, 228, 238, 242, 249, 267, 282, 284, 291, 304,
	315, 323, 324, 327, 333, 383, 389, 390, 391, 392,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 489, 490, 491, 492,
	493, 501, 502, 515, 586, 588, 604, 622, 628, 482,
	306, 307, 446, 447, 319, 320, 642, 643, 305, 599,
	629, 597, 641, 623, 440, 381, 0, 0, 384, 287,
	310, 325, 0, 614, 503, 233, 468, 296, 257, 0,
	0, 217, 252, 236, 265, 280, 283, 329, 394, 402,
	431, 436, 302, 277, 250, 461, 247, 486, 518, 519,
	520, 522, 398, 272, 435, 399, 0, 379, 575, 576,
	321, 527, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 418, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 0, 0, 0, 369, 273, 0,
	0, 432, 0, 210, 0, 488, 258, 380, 377, 583,
	288, 279, 275, 256, 322, 388, 430, 517, 424, 0,
	373, 0, 0, 498, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	328, 254, 330, 209, 415, 499, 292, 0, 0, 0,
	0, 0, 719, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 251, 0, 0, 0, 354,
	363, 362, 343, 344, 346, 348, 353, 360, 366, 0,
	0, 0, 0, 0, 271, 326, 278, 270, 580, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 303, 0, 404, 263,
	0, 455, 0, 0, 0, 625, 0, 0, 0, 0,
	0, 0, 0, 368, 0, 335, 0, 0, 0, 204,
	231, 0, 0, 414, 463, 475, 647, 0, 0, 0,
	259, 0, 473, 428, 603, 239, 290, 460, 434, 471,
	442, 293, 0, 0, 472, 375, 585, 452, 600, 626,
	627, 269, 408, 612, 593, 521, 620, 644, 232, 266,
	422, 506, 606, 495, 400, 581, 582, 334, 494, 301,
	208, 372, 578, 632, 230, 481, 374, 248, 237, 587,
	609, 295, 458, 639, 219, 516, 598, 245, 485, 0,
	0, 648, 253, 505, 221, 595, 504, 396, 331, 332,
	220, 0, 459, 274, 299, 0, 0, 264, 417, 589,
	590, 262, 649, 234, 619, 226, 0, 618, 410, 584,
	596, 397, 386, 225, 594, 395, 385, 339, 358, 359,
	286, 312, 449, 378, 450, 311, 313, 406, 405, 407,
	213, 607, 0, 214, 0, 500, 608, 650, 454, 218,
	240, 241, 243, 0, 285, 289, 297, 300, 308, 309,
	318, 370, 421, 448, 444, 453, 0, 579, 601, 613,
	624, 630, 631, 633, 634, 635, 636, 637, 640, 638,
	409, 316, 496, 338, 376, 0, 0, 427, 474, 246,
	605, 497, 206, 0, 0, 0, 0, 260, 261, 0,
	574, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 645, 507,
	513, 508, 509, 510, 511, 512, 0, 514, 0, 0,
	0, 0, 0, 0, 591, 592, 669, 387, 487, 602,
	340, 352, 355, 345, 364, 0, 365, 341, 342, 347,
	349, 350, 351, 356, 357, 361, 367, 255, 216, 393,
	401, 577, 317, 222, 223, 224, 523, 524, 525, 526,
	616, 617, 621, 211, 464, 465, 466, 467, 298, 611,
	314, 470, 469, 336, 337, 382, 451, 539, 541, 552,
	556, 558, 560, 566, 569, 540, 542, 553, 557, 559,
	561, 567, 570, 529, 531, 533, 535, 548, 547, 544,
	572, 573, 550, 555, 534, 546, 551, 564, 571, 568,
	528, 532, 536, 545, 563, 562, 543, 554, 565, 549,
	537, 530, 538, 0, 203, 227, 371, 0, 456, 294,
	646, 615, 610, 212, 229, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	207, 215, 228, 238, 242, 249, 267, 282, 284, 291,
	304, 315, 323, 324, 327, 333, 383, 389, 390, 391,
	392, 4110, 412, 413, 416, 419, 420, 423, 425, 426,
	429, 433, 437, 438, 439, 441, 443, 445, 457, 462,
	476, 477, 478, 479, 480, 483, 484, 489, 490, 491,
	492, 493, 501, 502, 515, 586, 588, 604, 622, 628,
	482, 306, 307, 446, 447, 319, 320, 642, 643, 305,
	599, 629, 597, 641, 623, 440, 381, 0, 0, 384,
	287, 310, 325, 0, 614, 503, 233, 468, 296, 257,
	0, 0, 217, 252, 236, 265, 280, 283, 329, 394,
	402, 431, 436, 302, 277, 250, 461, 247, 486, 518,
	519, 520, 522, 398, 272, 435, 399, 0, 379, 575,
	576, 321, 527, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 418, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 0, 0, 0, 0, 369, 273,
	0, 0, 432, 0, 210, 0, 488, 258, 380, 377,
	583, 288, 279, 275, 256, 322, 388, 430, 517, 424,
	0, 373, 0, 0, 498, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 254, 330, 209, 415, 499, 292, 0, 0,
	0, 0, 0, 719, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 251, 0, 0, 0,
	354, 363, 362, 343, 344, 346, 348, 353, 360, 366,
	0, 0, 0, 0, 0, 271, 326, 278, 270, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 303, 0, 404,
	263, 0, 455, 0, 0, 0, 625, 0, 0, 0,
	0, 0, 0, 0, 368, 0, 335, 0, 0, 0,
	204, 231, 0, 0, 414, 463, 475, 647, 0, 0,
	0, 259, 0, 473, 428, 603, 239, 290, 460, 434,
	471, 442, 293, 0, 0, 472, 375, 585, 452, 600,
	626, 627, 269, 408, 612, 593, 521, 620, 644, 232,
	266, 422, 506, 606, 495, 400, 581, 582, 334, 494,
	301, 208, 372, 578, 632, 230, 481, 374, 248, 237,
	587, 609, 295, 458, 639, 219, 516, 598, 245, 485,
	0, 0, 648, 253, 505, 221, 595, 504, 396, 331,
	332, 220, 0, 459, 274, 299, 0, 0, 264, 417,
	589, 590, 262, 649, 234, 619, 226, 0, 618, 410,
	584, 596, 397, 386, 225, 594, 395, 385, 339, 358,
	359, 286, 312, 449, 378, 450, 311, 313, 406, 405,
	407, 213, 607, 0, 214, 0, 500, 608, 650, 454,
	218, 240, 241, 243, 0, 285, 289, 297, 300, 308,
	309, 318, 370, 421, 448, 444, 453, 0, 579, 601,
	613, 624, 630, 631, 633, 634, 635, 636, 637, 640,
	638, 409, 316, 496, 338, 376, 0, 0, 427, 474,
	246, 605, 497, 206, 0, 0, 0, 0, 260, 261,
	0, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 645,
	507, 513, 508, 509, 510, 511, 512, 0, 514, 0,
	0, 0, 0, 0, 0, 591, 592, 669, 387, 487,
	602, 340, 352, 355, 345, 364, 0, 365, 341, 342,
	347, 349, 350, 351, 356, 357, 361, 367, 255, 216,
	393, 401, 577, 317, 222, 223, 224, 523, 524, 525,
	526, 616, 617, 621, 211, 464, 465, 466, 467, 298,
	611, 314, 470, 469, 336, 337, 382, 451, 539, 541,
	552, 556, 558, 560, 566, 569, 540, 542, 553, 557,
	559, 561, 567, 570, 529, 531, 533, 535, 548, 547,
	544, 572, 573, 550, 555, 534, 546, 551, 564, 571,
	568, 528, 532, 536, 545, 563, 562, 543, 554, 565,
	549, 537, 530, 538, 0, 203, 227, 371, 0, 456,
	294, 646, 615, 610, 212, 229, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 207, 215, 228, 238, 242, 249, 267, 282, 284,
	291, 304, 315, 323, 324, 327, 333, 383, 389, 390,
	391, 392, 411, 412, 413, 416, 419, 420, 423, 425,
	426, 429, 433, 437, 438, 439, 441, 443, 445, 457,
	462, 476, 477, 478, 479, 480, 483, 484, 489, 490,
	491, 492, 493, 501, 502, 515, 586, 588, 604, 622,
	628, 482, 306, 307, 446, 447, 319, 320, 642, 643,
	305, 599, 629, 597, 641, 623, 440, 381, 0, 0,
	384, 287, 310, 325, 0, 614, 503, 233, 468, 296,
	257, 0, 0, 217, 252, 236, 265, 280, 283, 329,
	394, 402, 431, 436, 302, 277, 250, 461, 247, 486,
	518, 519, 520, 522, 398, 272, 435, 399, 0, 379,
	575, 576, 321, 527, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 418, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 0, 0, 0, 369,
	273, 0, 0, 432, 0, 210, 0, 488, 258, 380,
	377, 583, 288, 279, 275, 256, 322, 388, 430, 517,
	424, 0, 373, 0, 0, 498, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 328, 254, 330, 209, 415, 499, 292, 0,
	0, 0, 0, 0, 951, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 251, 0, 0,
	0, 354, 363, 362, 343, 344, 346, 348, 353, 360,
	366, 0, 0, 0, 0, 0, 271, 326, 278, 270,
	580, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 303, 0,
	404, 263, 0, 455, 0, 0, 0, 625, 0, 0,
	0, 0, 0, 0, 0, 368, 0, 335, 0, 0,
	0, 204, 231, 0, 0, 414, 463, 475, 647, 0,
	0, 0, 259, 0, 473, 428, 603, 239, 290, 460,
	434, 471, 442, 293, 0, 0, 472, 375, 585, 452,
	600, 626, 627, 269, 408, 612, 593, 521, 620, 644,
	232, 266, 422, 506, 606, 495, 400, 581, 582, 334,
	494, 301, 208, 372, 578, 632, 230, 481, 374, 248,
	237, 587, 609, 295, 458, 639, 219, 516, 598, 245,
	485, 0, 0, 648, 253, 505, 221, 595, 504, 396,
	331, 332, 220, 0, 459, 274, 299, 0, 0, 264,
	417, 589, 590, 262, 649, 234, 619, 226, 0, 618,
	410, 584, 596, 397, 386, 225, 594, 395, 385, 339,
	358, 359, 286, 312, 449, 378, 450, 311, 313, 406,
	405, 407, 213, 607, 0, 214, 0, 500, 608, 650,
	454, 218, 240, 241, 243, 0, 285, 289, 297, 300,
	308, 309, 318, 370, 421, 448, 444, 453, 0, 579,
	601, 613, 624, 630, 631, 633, 634, 635, 636, 637,
	640, 638, 409, 316, 496, 338, 376, 0, 0, 427,
	474, 246, 605, 497, 206, 0, 0, 0, 0, 260,
	261, 0, 574, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	645, 507, 513, 508, 509, 510, 511, 512, 0, 514,
	0, 0, 0, 0, 0, 0, 591, 592, 669, 387,
	487, 602, 340, 352, 355, 345, 364, 0, 365, 341,
	342, 347, 349, 350, 351, 356, 357, 361, 367, 255,
	216, 393, 401, 577, 317, 222, 223, 224, 523, 524,
	525, 526, 616, 617, 621, 211, 464, 465, 466, 467,
	298, 611, 314, 470, 469, 336, 337, 382, 451, 539,
	541, 552, 556, 558, 560, 566, 569, 540, 542, 553,
	557, 559, 561, 567, 570, 529, 531, 533, 535, 548,
	547, 544, 572, 573, 550, 555, 534, 546, 551, 564,
	571, 568, 528, 532, 536, 545, 563, 562, 543, 554,
	565, 549, 537, 530, 538, 0, 203, 227, 371, 0,
	456, 294, 646, 615, 610, 212, 229, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 205, 207, 215, 228, 238, 242, 249, 267, 282,
	284, 291, 304, 315, 323, 324, 327, 333, 383, 389,
	390, 391, 392, 411, 412, 413, 416, 419, 420, 423,
	425, 426, 429, 433, 437, 438, 439, 441, 443, 445,
	457, 462, 476, 477, 478, 479, 480, 483, 484, 489,
	490, 491, 492, 493, 501, 502, 515, 586, 588, 604,
	622, 628, 482, 306, 307, 446, 447, 319, 320, 642,
	643, 305, 599, 629, 597, 641, 623, 440, 381, 0,
	0, 384, 287, 310, 325, 0, 614, 503, 233, 468,
	296, 257, 0, 0, 217, 252, 236, 265, 280, 283,
	329, 394, 402, 431, 436, 302, 277, 250, 461, 247,
	486, 518, 519, 520, 522, 398, 272, 435, 399, 0,
	379, 575, 576, 321, 527, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 0, 0, 0,
	369, 273, 0, 0, 432, 0, 210, 0, 488, 258,
	380, 377, 583, 288, 279, 275, 256, 322, 388, 430,
	517, 424, 0, 373, 0, 0, 498, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 328, 254, 330, 209, 415, 499, 292,
	0, 0, 0, 0, 0, 201, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 251, 0,
	0, 0, 354, 363, 362, 343, 344, 346, 348, 353,
	360, 366, 0, 0, 0, 0, 0, 271, 326, 278,
	270, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 303,
	0, 404, 263, 0, 455, 0, 0, 0, 625, 0,
	0, 0, 0, 0, 0, 0, 368, 0, 335, 0,
	0, 0, 204, 231, 0, 0, 414, 463, 475, 647,
	0, 0, 0, 259, 0, 473, 428, 603, 239, 290,
	460, 434, 471, 442, 293, 0, 0, 472, 375, 585,
	452, 600, 626, 627, 269, 408, 612, 593, 521, 620,
	644, 232, 266, 422, 506, 606, 495, 400, 581, 582,
	334, 494, 301, 208, 372, 578, 632, 230, 481, 374,
	248, 237, 587, 609, 295, 458, 639, 219, 516, 598,
	245, 485, 0, 0, 648, 253, 505, 221, 595, 504,
	396, 331, 332, 220, 0, 459, 274, 299, 0, 0,
	264, 417, 589, 590, 262, 649, 234, 619, 226, 0,
	618, 410, 584, 596, 397, 386, 225, 594, 395, 385,
	339, 358, 359, 286, 312, 449, 378, 450, 311, 313,
	406, 405, 407, 213, 607, 0, 214, 0, 500, 608,
	650, 454, 218, 240, 241, 243, 0, 285, 289, 297,
	300, 308, 309, 318, 370, 421, 448, 444, 453, 0,
	579, 601, 613, 624, 630, 631, 633, 634, 635, 636,
	637, 640, 638, 409, 316, 496, 338, 376, 0, 0,
	427, 474, 246, 605, 497, 206, 0, 0, 0, 0,
	260, 261, 0, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 645, 507, 513, 508, 509, 510, 511, 512, 0,
	514, 0, 0, 0, 0, 0, 0, 591, 592, 669,
	387, 487, 602, 340, 352, 355, 345, 364, 0, 365,
	341, 342, 347, 349, 350, 351, 356, 357, 361, 367,
	255, 216, 393, 401, 577, 317, 222, 223, 224, 523,
	524, 525, 526, 616, 617, 621, 211, 464, 465, 466,
	467, 298, 611, 314, 470, 469, 336, 337, 382, 451,
	539, 541, 552, 556, 558, 560, 566, 569, 540, 542,
	553, 557, 559, 561, 567, 570, 529, 531, 533, 535,
	548, 547, 544, 572, 573, 550, 555, 534, 546, 551,
	564, 571, 568, 528, 532, 536, 545, 563, 562, 543,
	554, 565, 549, 537, 530, 538, 0, 203, 227, 371,
	0, 456, 294, 646, 615, 610, 212, 229, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 205, 207, 215, 228, 238, 242, 249, 267,
	282, 284, 291, 304, 315, 323, 324, 327, 333, 383,
	389, 390, 391, 392, 411, 412, 413, 416, 419, 420,
	423, 425, 426, 429, 433, 437, 438, 439, 441, 443,
	445, 457, 462, 476, 477, 478, 479, 480, 483, 484,
	489, 490, 491, 492, 493, 501, 502, 515, 586, 588,
	604, 622, 628, 482, 306, 307, 446, 447, 319, 320,
	642, 643, 305, 599, 629, 597, 641, 623, 440, 381,
	0, 0, 384, 287, 310, 325, 0, 614, 503, 233,
	468, 296, 257, 0, 0, 217, 252, 236, 265, 280,
	283, 329, 394, 402, 431, 436, 302, 277, 250, 461,
	247, 486, 518, 519, 520, 522, 398, 272, 435, 0,
	0, 379, 575, 576, 321,
}

var yyPact = [...]int{
	-1000, -1000, 5270, -1000, -532, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2249, 2348, -1000, -1000, -1000, -1000, 2206, 2476,
	-1000, 836, 1920, -1000, 2267, 297, -1000, 55474, 536, -1000,
	52550, -412, 646, 4002, 36468, -1000, 193, -1000, 186, 54012,
	192, -1000, -1000, -1000, -1000, -412, 21846, 39, 36, 55474,
	-1000, -1000, -1000, -1000, -349, 2430, 1901, -1000, 394, -1000,
	-1000, -1000, -1000, -1000, -1000, 51819, -1000, 980, -1000, -1000,
	2274, 2259, 2484, 697, 2163, -1000, 2347, 1901, -1000, 21846,
	2431, 2314, 21115, 21115, 477, -408, -1000, -1000, 207, -1000,
	-1000, 31351, 55474, 39392, 398, -1000, 2267, -1000, -1000, -1000,
	93, -1000, 377, 1813, -1000, 1810, -1000, 797, 533, 404,
	524, 487, 402, 401, 400, 399, 393, 392, 390, 387,
	411, -1000, 718, 718, -220, -222, 5133, 465, 457, 457,
	833, 485, 2235, 2232, -1000, -1000, 718, 718, 718, 348,
	718, 718, 718, 718, 356, 354, 718, 718, 718, 718,
	718, 718, 718, 718, 718, 718, 718, 718, 718, 718,
	718, 718, 718, 2425, 2416, 468, -1000, 1676, 335, 2267,
	329, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	55474, 221, 55474, -1000, 592, 535, -1000, -1000, -420, 846,
	846, 111, 846, 846, 846, 846, 215, 658, 35, -1000,
	210, 288, 152, 326, 834, 224, -1000, -1000, 303, 834,
	1670, -1000, 701, 308, 150, -1000, 846, 846, -1000, 14511,
	160, 14511, 14511, -1000, 2264, -1000, -1000, -1000, -1000, -1000,
	1124, -1000, -1000, -1000, -1000, -44, 483, -1000, -1000, -1000,
	-1000, 54012, 51088, 273, -1000, -1000, 47, 1613, 1256, 21846,
	1236, 689, -1000, -1000, 1120, 650, -1000, -1000, -1000, -1000,
	-1000, 552, -1000, 24039, 24039, 24039, 24039, -1000, -1000, 1817,
	50357, 1817, 1817, 24039, 1817, 24039, 1817, 1817, 1817, 21846,
	1817, 1817, 1817, 1817, -1000, 1817, 1817, 1817, 1817, 1817,
	1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817,
	1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817,
	1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817,
	1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817,
	1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817,
	1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817,
	1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817,
	1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817,
	1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817,
	1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817,
	1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817,
	1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817,
	1817, 1817, -1000, -1000, -1000, -1000, 1817, 589, 1817, 1817,
	1817, 1817, 1817, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1817, 1817, 1817, 1817, 1817, 1817, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1817, 1817, 1817, 1817, 1817,
	1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	26963, 1374, 1371, 1369, -1000, 18922, 1817, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 55474, -1000, 1817, 212,
	54012, 54012, 383, 1166, -1000, -1000, 2347, 1901, -1000, 2430,
	2381, 394, -1000, 2760, 1543, 1440, 1257, 1901, 1783, 55474,
	-1000, 1830, -1000, -1000, -1000, -1000, 2052, 1425, 1667, -1000,
	-1000, -1000, -1000, 1000, 21846, -1000, -1000, 2465, -1000, 28426,
	588, 2462, 49626, -1000, -1000, -246, -1000, 477, 477, 1804,
	445, -18, -1000, -1000, -1000, -1000, 754, 35737, -1000, -1000,
	-1000, -1000, -1000, 1692, 55474, -1000, -1000, 5071, 1137, -1000,
	1919, -1000, 1690, -1000, 1854, 21846, 1931, 525, 1137, 499,
	497, 490, -1000, -78, -1000, -1000, -1000, -1000, -1000, -1000,
	718, 718, 718, -1000, 403, 2411, 297, 4993, -1000, -1000,
	-1000, 48895, 1918, 1137, -1000, 1917, -1000, 901, 561, 593,
	593, 1137, -1000, -1000, 54743, 1137, 900, 896, 1137, 1137,
	54012, 54012, -1000, 48164, -1000, 47433, 46702, 1163, 54012, 45971,
	45240, 44509, 43778, 43047, -1000, 2111, -1000, 2020, -1000, -1000,
	-1000, 54743, 1137, 1137, 54743, 54012, 54743, 55474, 1137, -1000,
	-1000, 362, -1000, -1000, 1162, 1148, 1147, 718, 718, 1143,
	1664, 1644, 1631, 718, 718, 1139, 1628, 37930, 1606, 277,
	1133, 1131, 1130, 1122, 1580, 204, 1566, 1115, 1073, 1121,
	54012, 1916, 54012, 54012, 885, -1000, 55474, -1000, 283, 758,
	560, 740, 2267, 2160, 1803, 482, 523, 1137, 466, 466,
	54012, -1000, 15248, 55474, 228, -1000, 1559, 21846, -1000, 835,
	834, 834, -1000, -1000, -1000, -1000, -1000, -1000, 846, 55474,
	835, -1000, -1000, -1000, 834, 846, 55474, 846, 846, 846,
	846, 834, 834, 834, 846, 55474, 55474, 55474, 55474, 55474,
	55474, 55474, 55474, 55474, 14511, 701, 846, -421, -1000, 1557,
	-1000, -1000, 2029, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 14511, 14511, -1000, -1000, -1000, -1000, -1000, 1802,
	-1000, 183, 9, 191, -1000, 42316, 416, 739, -1000, 416,
	-1000, -1000, -1000, 1801, 41585, -1000, -423, -425, -426, -429,
	-1000, -1000, -1000, -435, -436, -1000, -1000, -1000, 21846, 21846,
	21846, 21846, -254, -1000, 923, 24039, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 21846, 162, 736, 24039, 24039, 24039, 24039,
	24039, 24039, 24039, 25501, 24770, 24039, 24039, 24039, 24039, 24039,
	24039, -1000, -1000, 33544, 6970, 6970, 650, 650, 650, 650,
	-1000, -191, 1799, 54743, -1000, -1000, -1000, 587, 21846, 21846,
	650, -1000, 1137, 4196, 18922, 21115, 21115, 21846, 762, 1256,
	54743, 21846, -1000, 1257, -1000, -1000, -1000, -1000, 1050, -1000,
	-1000, 865, 2242, 2242, 2242, 2242, 21846, 21846, 21846, 21846,
	21846, 21846, 21846, 21846, 21846, 21846, 2242, 21846, 644, 644,
	957, 21846, 21846, 21846, 21846, 21846, 21846, 17459, 21846, 21846,
	24039, 21846, 21846, 21846, 1257, 21846, 21846, 21846, 21846, 21846,
	21846, 21846, 21846, 21846, 21846, 21846, 21846, 21846, 21846, 21846,
	21846, 21846, 21846, 21846, 21846, 21846, 21846, 21846, 21846, 21846,
	21846, 21846, 21846, 21846, 21846, 21846, 21846, 21846, 21846, 21846,
	21846, 21846, 21846, 21846, 21846, 21846, 21846, 21846, 21846, 21846,
	21846, 21846, 21846, 21846, 21846, 21846, 21846, 21846, 21846, 21846,
	21846, 21846, 21846, 21846, 21846, 21846, 21846, 21846, 21846, 21846,
	21846, 21846, 21846, 21846, 21846, 21846, 21846, 21846, 21846, 21846,
	21846, 21846, 21846, 21846, 1257, 21846, 1255, 21846, 21846, 21846,
	21846, 21846, 21846, 21115, 16722, 21115, 21115, 21115, 21115, 21115,
	-1000, -1000, -1000, -1000, -1000, -1000, 21846, 21846, 21846, 21846,
	21846, 21846, 21846, 21846, 1257, 21846, 21846, 21846, 21846, 21846,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1579, 1504, 1368, 21846, 1797, -1000, -159, 30620, 21846, 1532,
	2459, 1962, 54012, -1000, -1000, -1000, -1000, 2347, -1000, 2347,
	1579, 2294, 2065, 21115, -1000, -1000, 2294, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1584, -1000, 55474, 1783, 2309,
	54012, 2046, 1522, 450, -1000, 21846, 21846, 1782, -1000, 1308,
	55474, -1000, -254, -1000, 40854, -1000, -1000, 13774, 55474, 378,
	55474, -1000, 1519, 29889, 40123, 246, -1000, -18, 1761, -1000,
	13, -7, 18190, 647, -1000, -1000, -1000, 5133, 26232, 1572,
	647, 90, -1000, -1000, -1000, 1854, -1000, 1854, 1854, 1854,
	1854, 450, 450, 450, 450, -1000, -1000, -1000, -1000, -1000,
	1909, 1907, -1000, 1854, 1854, 1854, 1854, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1898, 1898, 1898, 1894, 1894, 1856,
	1856, 452, -1000, 21846, 351, 39392, 2277, 1119, 1529, 283,
	473, 1960, 1137, 1137, 1137, 473, -1000, 1290, 1287, 1266,
	-1000, -520, 1780, -1000, -1000, 2407, -1000, -1000, 921, 943,
	941, 591, 54012, 255, 371, -1000, 443, -1000, 39392, 1137,
	869, 593, 1137, -1000, 1137, -1000, -1000, -1000, -1000, -1000,
	1137, -1000, -1000, 1769, -1000, 1637, 967, 939, 964, 937,
	1769, -1000, -1000, -199, 1769, -1000, 1769, -1000, 1769, -1000,
	1769, -1000, 1769, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 763, 190, -326, 54012, 255, 481, -1000, 480,
	33544, -1000, -1000, -1000, 33544, 33544, -1000, -1000, -1000, -1000,
	1513, 1511, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -507, 55474, -1000, 1887, -1000, 244, 55474, -1000, 243,
	737, 336, 375, 323, 55474, 278, 2328, 2324, 2322, 2321,
	2317, 332, 352, 55474, 55474, 466, 2008, 55474, 2284, 55474,
	-1000, -1000, -1000, -1000, -1000, 1509, 1496, -1000, 1256, 55474,
	-1000, -1000, 846, 846, -1000, -1000, 55474, 846, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 846, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 55474, -1000, -1000, -1000, -1000, -44, 180, -1000,
	-1000, 54012, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -82, -1000, 56, 7, 384, -1000, -1000, -1000, -1000,
	-1000, 2343, -1000, 1256, 890, 775, -1000, 1817, -1000, -1000,
	953, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 162,
	24039, 24039, 24039, 1330, 517, 1375, 1263, 1351, 1016, 1016,
	951, 24039, 951, 24039, 657, 657, 657, 657, 657, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1490, -1000, 1817,
	54743, 1687, 16722, 1436, 2035, 1257, 678, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 4135, 1680, -1000,
	1680, 1233, 761, -1000, 21846, 1257, 4131, -1000, -1000, 1257,
	1257, 21846, -1000, -1000, 21846, 21846, 21846, 21846, 1529, 1529,
	1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 21846, 1529,
	1765, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1764,
	2448, 1037, 1529, 1529, 1529, 1529, 1529, 21846, 1642, -1000,
	-1000, -1000, 1482, 4127, 1319, 4119, 1529, 1529, -1000, 1529,
	4112, 4108, 1257, 1613, 3325, 3316, 1529, 1529, 1529, 1529,
	1529, 3305, 3275, 1529, 1529, 3260, 1529, 4100, 1529, 3256,
	3249, 3230, 3219, 3212, 3184, 3156, 3123, 3115, 3036, 3027,
	3013, 2902, 2853, 2833, 2792, 2460, 2456, 1529, 1529, 1529,
	4096, 1529, 4092, 1529, 4071, 1529, 1529, 4052, 2439, 2413,
	1257, 1763, -1000, 3985, 1529, 3978, 3947, 3853, 2394, 3831,
	3824, 3817, 1529, 1529, 1529, 2378, 3810, 3796, 3788, 3771,
	3728, 3720, 3630, 3531, 3465, 1529, 1368, 1368, 1368, 1368,
	1368, 3449, -256, 1529, 1257, -1000, -1000, -1000, -1000, -1000,
	3439, 2368, 3418, 3412, 3408, 3383, 1257, 1762, 1817, 586,
	-1000, -1000, 1680, 1257, 1257, 1680, 1680, 3372, 3367, 3362,
	3352, 3342, 3338, 1529, 1529, -1000, 1529, 3309, 3281, 2353,
	2297, 1257, -1000, 1368, 55474, -1000, -409, -1000, -25, 635,
	1817, -1000, 37930, 1257, -1000, 6919, -1000, 1004, -1000, -1000,
	-1000, -1000, -1000, 35006, 1741, 2294, -1000, -1000, 1817, 1663,
	-1000, -1000, 450, 64, 34275, 641, 641, 103, 1256, 1256,
	21846, -1000, -1000, -1000, -1000, -1000, -1000, 578, 2398, 380,
	1817, -1000, 2268, 1753, 2498, -1000, -1000, -1000, 2303, 27695,
	-1000, -1000, 1817, 1817, 55474, 1677, 1517, -1000, 573, -1000,
	1172, 1761, -18, -22, -1000, -1000, -1000, -1000, 1256, -1000,
	1229, 379, 5076, -1000, 439, -1000, -1000, -1000, -1000, 2222,
	72, -1000, -1000, -1000, 233, 450, -1000, -1000, -1000, -1000,
	-1000, -1000, 1487, 1487, -1000, -1000, -1000, -1000, -1000, 1118,
	-1000, -1000, -1000, -1000, 1113, -1000, -1000, 1111, -1000, -1000,
	2883, 1976, 351, -1000, -1000, 718, 1484, -1000, -1000, 2226,
	718, 718, 54012, -1000, -1000, 1565, 2277, 243, 55474, 770,
	2002, -1000, 1960, 1960, 1960, 55474, -1000, -1000, -1000, -1000,
	-1000, -1000, -509, 70, 370, -1000, -1000, -1000, 611, 54012,
	1660, -1000, 249, -1000, 1556, -1000, 54012, -1000, 1658, 1886,
	1137, 1137, -1000, -1000, -1000, 54012, 1817, -1000, -1000, -1000,
	-1000, 502, 2260, 269, -1000, -1000, -279, -1000, -1000, 255,
	249, 54743, 1137, 647, -1000, -1000, -1000, -1000, -1000, -510,
	1656, 54012, 1108, -1000, 1877, 495, 257, 320, 55474, 55474,
	55474, 55474, 55474, 55474, 55474, 55474, 554, -1000, -1000, 23,
	-1000, -1000, 202, -1000, -1000, -1000, -1000, 202, -1000, -1000,
	-1000, -1000, 343, 479, -1000, 55474, 55474, 621, -1000, -1000,
	-1000, -1000, -1000, 834, -1000, -1000, 834, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2250,
	55474, 2, -472, -1000, -464, 21846, -1000, -1000, -1000, -1000,
	1132, 513, 1375, 24039, 24039, 4196, 4196, 24039, -1000, -1000,
	-1000, 1002, 1002, 33544, -1000, 24039, 21846, 21115, -1000, -1000,
	21846, 21846, 756, -1000, 21846, 911, -1000, 21846, -1000, -1000,
	1368, 1529, 1529, 1529, 1529, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1768, -1000, 21846, 21846, 21846,
	1257, 324, -1000, -1000, -1000, -1000, -1000, 2443, -1000, 21846,
	-1000, 33544, 21846, 21846, 21846, -1000, -1000, -1000, 21846, 21846,
	-1000, -1000, 21846, -1000, 21846, -1000, -1000, -1000, -1000, -1000,
	-1000, 21846, -1000, 21846, -1000, -1000, -1000, 21846, -1000, 21846,
	-1000, -1000, 21846, -1000, 21846, -1000, 21846, -1000, 21846, -1000,
	21846, -1000, 21846, -1000, 21846, -1000, 21846, -1000, 21846, -1000,
	21846, -1000, 21846, -1000, 21846, -1000, 21846, -1000, 21846, -1000,
	21846, -1000, 21846, -1000, 21846, -1000, 21846, -1000, -1000, -1000,
	21846, -1000, 21846, -1000, 21846, -1000, -1000, 21846, -1000, 21846,
	-1000, 21846, -1000, 21846, 21846, -1000, 21846, 21846, 21846, -1000,
	21846, 21846, 21846, 21846, -1000, -1000, -1000, -1000, 21846, 21846,
	21846, 21846, 21846, 21846, 21846, 21846, 21846, 21846, -1000, -1000,
	-1000, -1000, -1000, -1000, 21846, -1000, 39392, 46, -256, 1255,
	46, 1255, 23308, 596, 594, 22577, -1000, 21115, 15985, -1000,
	-1000, -1000, -1000, -1000, 21846, 21846, 21846, 21846, 21846, 21846,
	-1000, -1000, -1000, 21846, 21846, -1000, 21846, -1000, 21846, -1000,
	-1000, -1000, -1000, -1000, 635, -1000, 593, 593, 593, 54012,
	-1000, -1000, -1000, -1000, 1758, -1000, 2356, -1000, 2091, 2090,
	2437, 2398, -1000, 29889, 2294, -1000, -1000, 54012, -399, -1000,
	2157, 2123, 641, 641, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 13037, 2347, 21846, 2000, 54743, 147, -1000, 29158, 54012,
	501, 54743, 29889, 29889, 29889, 29889, 29889, -1000, 2025, 2022,
	-1000, 2073, 2026, 2048, 55474, -1000, 1579, 1654, -1000, 21846,
	32082, 1736, 29889, -1000, -1000, 29889, 55474, 12300, -1000, -1000,
	-15, -13, -1000, -1000, -1000, -1000, 5133, -1000, -1000, 422,
	2302, 2213, -1000, -1000, -1000, -1000, -1000, 1635, -1000, 1623,
	1738, 1621, 1611, 190, -1000, 1927, 2244, 718, 718, -1000,
	1107, -1000, 1137, 1473, 1471, -1000, -1000, -1000, 488, -1000,
	2283, 55474, 1999, 1995, 1990, -1000, -519, 1103, 1860, 1926,
	21846, 1859, 2402, 1729, 54012, -1000, -1000, 54743, -1000, 169,
	-1000, 351, 54012, -1000, -1000, -1000, 371, 55474, -1000, 5828,
	-1000, -1000, -1000, 249, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1592, -1000, 54012, 55474, 317, -1000, 1858, 1012, -1000,
	-1000, 1945, 1945, -1000, -1000, -1000, -1000, -1000, -1000, 318,
	291, 1445, 200, 1438, 200, -1000, 55474, 613, 1976, 55474,
	-1000, -1000, -1000, 846, 846, -1000, -1000, 2243, -1000, 1137,
	1529, 24039, 24039, -1000, 650, -1000, -1000, 322, -230, 1854,
	1854, -1000, 1854, 1856, -1000, 1854, 170, 1854, 163, 1854,
	-1000, -1000, 1257, 1257, -1000, 1368, -1000, 2292, 1968, -1000,
	1256, 21846, 2911, -1000, -1000, -1000, -1000, -1000, -85, 2879,
	2842, 1529, -1000, 1853, 1852, 21846, 1529, 1257, 2276, 1529,
	1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529,
	1529, 2266, 2254, 2069, 2042, 1994, 1986, 1959, 1954, 1948,
	1938, 1923, 1891, 1882, 1826, 1811, 1766, 1529, 1529, 1754,
	1529, 1733, 1724, -1000, 1256, 1368, 2466, 1368, 1529, 1529,
	2383, 290, 1529, 1587, 1587, 1587, 1587, 1587, 1368, 1368,
	1368, 1368, 1529, 54012, -1000, -256, -1000, -1000, -308, -317,
	-1000, 1257, -256, 1735, 24039, 1529, 24039, 24039, 24039, 1529,
	1257, -1000, 1619, 1598, 2345, 1590, 1529, 2319, 1529, 1529,
	1529, 1577, -1000, 2338, 2338, 2338, 1575, 1004, 55474, -1000,
	-1000, -1000, -1000, 2398, 2371, 1732, -1000, -1000, 64, 426,
	-1000, 2125, 2123, -1000, 2401, 2139, 2400, -1000, -1000, -1000,
	-1000, -1000, 1256, -1000, 2272, 1600, -1000, 732, 1701, -1000,
	-1000, 20384, 1365, 2086, 570, 1575, 55474, 1777, 2498, 1951,
	1987, 2735, -1000, -1000, -1000, -1000, 2004, -1000, 1846, -1000,
	-1000, 1830, -1000, 2012, 378, 29889, 1775, 1775, -1000, 567,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 958, 5828, 2481,
	-1000, 1424, -1000, 1220, 199, 1102, -1000, -1000, 718, 718,
	-1000, 863, 848, -1000, 55474, 1842, -1000, 450, 1418, 450,
	1096, -1000, -1000, 1080, -1000, -1000, -1000, -1000, 1970, 1989,
	-1000, -1000, -1000, -1000, 55474, -1000, -1000, 55474, 55474, 55474,
	1836, 2395, -1000, 21846, 1835, 722, 2444, 54012, 54012, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	489, 718, -486, 350, 346, 718, 718, 718, -526, -1000,
	-1000, 1571, 1564, -1000, -214, -1000, 21846, -1000, -1000, -1000,
	-1000, -1000, 1098, 1098, 1374, 1371, 1369, -1000, 1945, 1553,
	1830, -1000, -1000, -1000, 1541, -1000, -1000, -203, 54012, -203,
	54012, 54012, 54012, 1349, -1000, 54012, 54012, -1000, 1312, -1000,
	-1000, -1000, 1001, -1000, -1000, -1000, 424, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 650, 1257, 321, -209, 1257,
	-1000, -1000, 450, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 21846, -1000, 21846, -1000, 1256, 21846, 2347,
	1310, 21846, 21846, -1000, 1070, 1053, 1529, -1000, -1000, -1000,
	21846, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 21846, -1000, 21846, -1000, 21846, -1000,
	21846, -1000, 21846, -1000, 21846, -1000, 21846, -1000, 21846, -1000,
	21846, -1000, 21846, -1000, 21846, -1000, 21846, -1000, 21846, -1000,
	21846, -1000, 21846, -1000, 21846, -1000, -1000, 21846, -1000, -1000,
	-1000, 21846, -1000, 21846, -1000, 21846, -1000, -1000, -1000, 21846,
	232, 1002, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1257, 376, -1000, -1000, -1000, -1000, 2435,
	-1000, 1257, 21846, 4196, -1000, 4196, 4196, 4196, -1000, -1000,
	-1000, 21846, -1000, 21846, 21846, -1000, 21846, -1000, 21846, -1000,
	-1000, -1000, -1000, 21846, 1817, 2245, 1817, 1817, 32082, -1000,
	-1000, 2371, 2358, 2392, 2102, 2126, 2126, 2125, -1000, 2391,
	2390, -1000, 1292, 2385, 1282, 808, -1000, 54743, 21846, 147,
	-1000, 382, 54012, 147, 54012, -1000, 60, 2354, -1000, -1000,
	21846, 1833, -1000, 21846, -1000, -1000, -1000, -1000, 6970, 2398,
	1775, -1000, -1000, 668, -1000, 21846, -1000, 9946, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1280, 1273, -1000, -1000,
	1831, 21846, -1000, -1000, -1000, 1480, 1465, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1830, -1000, -1000, -1000, -1000,
	371, -515, 2336, 54012, 1048, -1000, 1549, 1729, 353, 147,
	1271, 718, 718, 718, 1042, 1014, 37930, 1547, -1000, 54012,
	427, -1000, 371, -1000, -223, -224, 1529, -1000, -1000, -1000,
	-1000, 2300, -1000, -1000, 15985, -1000, -1000, -1000, 1829, 1825,
	1952, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2044, -195, -211, -1000, -1000, 1529, 1529, 1944, 1257, -1000,
	1529, 1529, 1390, 1352, -1000, 1529, 1529, 1529, 1529, 1529,
	1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529,
	1529, 1529, 1529, 1529, 1529, 1368, 1555, -1000, 232, 1257,
	1985, -1000, -1000, 6970, -1000, -1000, 2354, 2384, 46, -1000,
	-1000, 236, 46, 1256, 768, 1257, 1257, 768, 1551, 1529,
	1508, 1477, 1529, 1529, 32813, -1000, 2379, 2375, 38661, 38661,
	635, 2358, -264, 21846, 21846, 2098, 1008, -1000, -1000, -1000,
	-1000, 1268, 1259, -1000, 1252, -1000, 2471, -1000, 1256, -1000,
	147, -1000, 564, 1701, -1000, 2155, 2153, -1000, -1000, 2347,
	1256, 54012, 1256, 58, 2354, -1000, 1529, -1000, 1817, 1817,
	1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817,
	1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817,
	1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817,
	1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817,
	1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817,
	1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817,
	1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817,
	1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817,
	1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817,
	1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817,
	1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817,
	1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817, 1817,
	1817, 1817, 1817, 1817, 1817, 1817, 1817, -1000, -1000, 54012,
	2304, -1000, -1000, 2296, 1545, 67, -1000, 1264, 1729, -1000,
	-1000, 146, -1000, 21846, -1000, 37930, 1245, 1243, -1000, -1000,
	-1000, -1000, -526, -1000, -1000, -1000, -1000, -1000, -1000, 394,
	1728, -1000, 712, 54012, 54012, 55474, -1000, 2032, -1000, -1000,
	-1000, 21846, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 21846,
	-1000, 1257, 1982, -1000, -355, -1000, -489, 21846, -256, -1000,
	-1000, -256, -1000, -1000, -1000, -1000, -1000, 21846, -1000, -1000,
	21846, -1000, 21846, -1000, -1000, 1540, -1000, -1000, -1000, -1000,
	-1000, 1540, 1540, -1000, -264, -1000, 1702, -1000, 54012, 1256,
	1613, -1000, 1007, -1000, -1000, -1000, -1000, -1000, 54743, 1701,
	54012, 1817, 2071, 2136, 2364, -1000, 1537, 1257, 1817, 2347,
	-1000, 1479, -1000, 394, -1000, 1824, 1926, -1000, -1000, -1000,
	19653, -1000, -1000, -1000, -1000, -1000, 201, -202, 15985, 11563,
	1389, 1387, -1000, -200, 1529, 1368, -1000, -454, -1000, -1000,
	-1000, -1000, 157, -1000, -1000, 1613, -1000, -1000, 1468, 1464,
	1448, 37199, -1000, -1000, -1000, -1000, -264, -1000, -1000, 2295,
	-1000, -1000, 1594, -1000, -1000, 54012, 2152, 2363, 2127, 2357,
	1226, -1000, 32082, 53281, -1000, -186, 342, -202, 21846, 1818,
	1257, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -17,
	-1000, -1000, 541, -1000, -1000, -1000, 1945, 1945, -213, -1000,
	-1000, -1000, 161, -477, -283, -289, 24039, -1000, 21846, -1000,
	21846, -1000, 21846, -1000, -1000, -1000, 54012, 1817, 1365, -1000,
	2355, 1194, -1000, 2350, 1187, -1000, -1000, 1337, -1000, 4403,
	-338, 1973, -1000, -93, -1000, -1000, -1000, 909, 1182, -1000,
	-1000, -1000, -1000, -1000, -1000, 1685, 54012, -1000, 444, -1000,
	-1000, 15248, -203, -203, -212, 773, -1000, -1000, -1000, -1000,
	-1000, 4196, 1442, 1079, 1529, -1000, 54012, -1000, 1177, -1000,
	1175, -1000, -1000, 53281, -322, 647, 6970, -1000, 1972, 1964,
	2440, -1000, -1000, -1000, -1000, -1000, -1000, -529, 1296, 268,
	-1000, -1000, 234, -1000, 161, -309, -1000, 21846, -1000, 21846,
	-1000, 1257, -1000, -1000, -1000, -1000, 2282, 58, -1000, 2468,
	-1000, 2441, 741, 741, -1000, 1013, -529, -1000, 985, -1000,
	-1000, -1000, 1529, 1529, -1000, -345, -1000, -1000, -1000, -1000,
	-1000, 406, 1054, -1000, -1000, -1000, -1000, -1000, -1000, 6970,
	-1000, -1000, -1000, 235, 235, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3242, 3241, 43, 8, 41, 40, 3238, 3236, 3235,
	181, 3226, 3225, 3224, 3222, 3221, 3220, 2514, 2509, 2500,
	3219, 3218, 3215, 3214, 3213, 3210, 3209, 3208, 3207, 44,
	106, 33, 96, 203, 206, 3206, 177, 165, 200, 3205,
	3202, 3200, 115, 196, 86, 88, 198, 3198, 3196, 95,
	3195, 3193, 3190, 192, 191, 190, 821, 3189, 188, 118,
	50, 3187, 3185, 3184, 3181, 3180, 3177, 3174, 3173, 3172,
	3171, 3166, 3165, 3164, 3163, 3162, 3161, 3159, 3158, 276,
	3157, 3154, 23, 3152, 99, 3151, 3150, 3148, 3146, 3145,
	12, 3144, 3143, 18, 52, 3138, 3135, 53, 3132, 3129,
	3128, 3118, 3117, 20, 3056, 31, 3055, 45, 3050, 3049,
	127, 3046, 193, 3043, 3035, 3028, 46, 3027, 3024, 3020,
	22, 175, 3018, 3016, 144, 3015, 3014, 3013, 170, 202,
	3012, 2045, 3010, 178, 105, 126, 3009, 3008, 113, 199,
	3005, 123, 3002, 2998, 2997, 155, 2992, 1092, 2989, 2986,
	72, 73, 309, 2981, 2978, 218, 70, 11, 4, 5,
	2977, 2974, 69, 137, 2970, 108, 2959, 2956, 98, 75,
	2953, 94, 104, 2947, 2946, 17, 10, 2943, 2, 6,
	3, 76, 2937, 2936, 179, 2928, 2918, 2912, 92, 2911,
	2908, 6229, 2905, 93, 140, 109, 83, 2903, 56, 63,
	2902, 2901, 2894, 2891, 2889, 60, 2886, 2885, 2884, 148,
	184, 168, 2882, 49, 107, 59, 173, 2879, 58, 84,
	204, 169, 2877, 2876, 142, 139, 2870, 2866, 65, 51,
	97, 2863, 117, 136, 130, 74, 110, 143, 2860, 2858,
	68, 81, 2855, 2853, 2851, 2849, 176, 2848, 2845, 80,
	2844, 64, 2843, 172, 30, 26, 57, 2842, 55, 2841,
	160, 2840, 82, 2836, 2835, 77, 103, 78, 42, 2833,
	163, 167, 132, 162, 2832, 2830, 62, 2827, 2822, 2821,
	201, 295, 2820, 2819, 116, 183, 149, 151, 87, 2818,
	316, 2817, 2815, 19, 5545, 9, 2814, 61, 164, 2811,
	2810, 4477, 25, 48, 29, 2807, 213, 2800, 2795, 2794,
	2793, 1201, 182, 135, 166, 129, 2792, 2791, 2789, 16,
	2788, 2783, 2777, 2768, 2767, 2766, 171, 39, 38, 37,
	211, 66, 14, 101, 174, 157, 90, 2765, 2764, 2763,
	125, 102, 2757, 159, 158, 128, 121, 2667, 186, 147,
	114, 2663, 771, 35, 2661, 2653, 2652, 2649, 91, 2637,
	2636, 2630, 2627, 156, 146, 124, 89, 2626, 85, 119,
	153, 150, 54, 2625, 71, 2622, 2621, 32, 197, 34,
	2614, 21, 112, 111, 2613, 7416, 194, 2610, 24, 2607,
	307, 152, 2601, 2595, 7, 13, 15, 2590, 2589, 2588,
	2585, 138, 2583, 2578, 2575, 2573, 28, 67, 27, 1,
	189, 100, 2570, 2560, 145, 2557, 2552, 2551, 2550, 2547,
	2546, 2540, 2530, 2529, 2524, 2522, 2519, 4022, 0, 134,
	2513, 207, 2505,
}

//line sql.y:8852
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) distributionPrimaryKeyOptionUnion() *DistributionPrimaryKeyOption {
	v, _ := st.union.(*DistributionPrimaryKeyOption)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalType {
	v, _ := st.union.(IntervalType)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) itemUnion() interface{} {
	v, _ := st.union.(interface{})
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) killTypeUnion() KillType {
	v, _ := st.union.(KillType)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 425, 426, 426, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 262, 385, 386, 386, 260, 260, 28, 74,
	36, 36, 35, 35, 38, 38, 37, 31, 31, 31,
	32, 32, 32, 32, 32, 32, 32, 32, 33, 33,
	33, 33, 33, 29, 29, 29, 29, 30, 30, 30,
	30, 30, 15, 16, 34, 34, 17, 17, 108, 108,
	18, 19, 19, 19, 19, 429, 429, 186, 186, 184,
	184, 185, 185, 265, 265, 20, 269, 269, 271, 271,
	271, 271, 261, 261, 261, 21, 21, 270, 270, 272,
	272, 272, 275, 275, 275, 275, 314, 314, 314, 22,
	22, 22, 22, 22, 130, 130, 388, 388, 389, 387,
	381, 381, 380, 380, 379, 384, 384, 383, 383, 382,
	40, 41, 50, 50, 50, 50, 51, 52, 390, 390,
	354, 57, 57, 56, 56, 56, 56, 56, 56, 58,
	58, 54, 54, 53, 53, 55, 55, 356, 356, 342,
	342, 355, 355, 355, 355, 355, 355, 355, 341, 341,
	142, 142, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 405,
	405, 405, 404, 404, 239, 239, 239, 239, 239, 239,
	239, 239, 151, 151, 162, 162, 162, 162, 162, 162,
	149, 149, 150, 148, 148, 148, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 161, 161, 157, 157, 157,
	158, 158, 158, 159, 159, 406, 406, 406, 406, 319,
	319, 319, 319, 322, 322, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 321, 321, 321, 321, 321, 321,
	321, 323, 323, 323, 323, 323, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 325, 325, 325, 325, 325, 325, 325, 325,
	340, 340, 326, 326, 334, 334, 335, 335, 336, 336,
	336, 337, 337, 337, 338, 338, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 333, 333, 332, 332, 332,
	343, 368, 368, 367, 367, 365, 365, 365, 365, 365,
	365, 365, 365, 352, 352, 362, 362, 362, 362, 362,
	351, 351, 347, 347, 347, 348, 348, 349, 349, 346,
	346, 350, 350, 364, 364, 363, 363, 344, 344, 345,
	345, 370, 407, 407, 407, 407, 407, 408, 408, 371,
	397, 399, 399, 399, 398, 398, 395, 396, 394, 394,
	394, 394, 394, 84, 84, 84, 132, 132, 288, 288,
	289, 289, 360, 360, 359, 359, 359, 361, 361, 358,
	358, 358, 358, 358, 358, 358, 358, 358, 358, 358,
	358, 358, 358, 358, 358, 358, 358, 358, 358, 358,
	358, 358, 358, 358, 358, 358, 358, 358, 358, 358,
	358, 358, 358, 358, 358, 283, 283, 283, 393, 393,
	393, 393, 393, 393, 392, 392, 392, 357, 357, 357,
	357, 391, 391, 59, 59, 219, 219, 410, 410, 411,
	411, 411, 47, 47, 47, 47, 47, 47, 46, 46,
	46, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 48, 48, 43, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 110, 110, 111, 111, 111, 111, 113, 112,
	115, 115, 115, 373, 373, 60, 60, 3, 3, 174,
	176, 177, 177, 175, 175, 175, 175, 175, 175, 62,
	62, 61, 61, 179, 178, 180, 180, 180, 1, 1,
	2, 2, 4, 4, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 339, 339, 339, 372,
	372, 374, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 118, 117, 117, 116, 119, 119, 119, 119,
	119, 119, 119, 119, 376, 376, 376, 63, 63, 377,
	327, 328, 329, 5, 6, 353, 375, 126, 126, 24,
	39, 39, 25, 25, 25, 25, 26, 26, 64, 67,
	67, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 282, 282, 291, 291, 281, 281, 306,
	306, 306, 284, 284, 284, 285, 285, 403, 403, 403,
	278, 278, 66, 66, 66, 307, 307, 307, 307, 69,
	69, 412, 412, 413, 413, 414, 414, 414, 70, 71,
	71, 309, 309, 310, 310, 72, 73, 85, 85, 85,
	85, 85, 85, 85, 86, 86, 86, 86, 109, 109,
	109, 10, 10, 10, 10, 81, 81, 81, 9, 9,
	11, 68, 68, 75, 400, 400, 401, 402, 402, 402,
	402, 76, 78, 27, 27, 27, 27, 27, 27, 137,
	137, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 131, 131, 131, 125, 125, 430, 79,
	80, 80, 129, 129, 129, 122, 122, 122, 128, 128,
	128, 12, 12, 13, 264, 264, 14, 14, 134, 134,
	136, 136, 136, 136, 136, 138, 138, 138, 138, 138,
	138, 138, 133, 133, 135, 135, 135, 135, 299, 299,
	299, 298, 298, 168, 168, 170, 169, 169, 171, 171,
	172, 172, 172, 172, 217, 217, 194, 194, 256, 256,
	257, 257, 255, 255, 263, 263, 258, 258, 258, 258,
	266, 266, 173, 173, 173, 173, 181, 181, 182, 182,
	183, 183, 308, 308, 304, 304, 304, 303, 303, 187,
	187, 187, 189, 188, 188, 188, 188, 190, 190, 192,
	192, 191, 191, 193, 198, 198, 197, 197, 195, 195,
	195, 195, 196, 196, 196, 196, 199, 199, 147, 147,
	147, 147, 147, 147, 147, 147, 160, 160, 160, 160,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 246, 246, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 155, 155,
	155, 155, 155, 155, 155, 155, 155, 155, 155, 155,
	155, 155, 155, 155, 155, 155, 155, 155, 155, 155,
	155, 155, 155, 222, 222, 221, 221, 87, 87, 87,
	88, 88, 89, 89, 89, 89, 89, 90, 90, 90,
	90, 90, 90, 90, 92, 92, 91, 91, 212, 212,
	296, 296, 93, 94, 94, 97, 97, 96, 95, 95,
	101, 101, 98, 98, 100, 100, 99, 102, 102, 103,
	104, 104, 279, 279, 200, 200, 208, 208, 208, 208,
	201, 201, 201, 201, 201, 201, 201, 209, 209, 209,
	216, 210, 210, 206, 206, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 165, 165, 165, 165,
	227, 227, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 154, 154, 166,
	166, 166, 166, 167, 167, 167, 167, 167, 167, 167,
	316, 316, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	431, 431, 330, 330, 330, 207, 207, 207, 207, 207,
	127, 127, 127, 127, 127, 313, 313, 313, 317, 317,
	317, 315, 315, 315, 315, 315, 315, 315, 315, 315,
	315, 315, 315, 315, 315, 315, 318, 318, 225, 225,
	123, 123, 223, 223, 224, 226, 226, 218, 218, 218,
	218, 220, 220, 203, 203, 203, 228, 228, 229, 229,
	105, 106, 106, 107, 107, 230, 230, 232, 231, 231,
	233, 234, 234, 234, 235, 235, 236, 236, 236, 49,
	49, 49, 49, 49, 44, 44, 44, 44, 45, 45,
	45, 45, 139, 139, 139, 139, 141, 141, 140, 140,
	82, 82, 83, 83, 83, 145, 145, 146, 146, 146,
	143, 143, 144, 144, 253, 253, 237, 237, 237, 244,
	244, 244, 240, 240, 242, 242, 242, 243, 243, 243,
	241, 250, 250, 252, 252, 251, 251, 247, 247, 248,
	248, 249, 249, 249, 245, 245, 202, 202, 202, 202,
	202, 254, 254, 254, 254, 267, 267, 213, 213, 215,
	215, 214, 214, 164, 268, 268, 276, 273, 273, 274,
	274, 300, 300, 300, 277, 277, 290, 290, 286, 286,
	287, 287, 280, 280, 292, 292, 292, 77, 211, 211,
	369, 369, 366, 295, 295, 297, 297, 301, 301, 305,
	305, 302, 302, 422, 422, 259, 259, 416, 416, 415,
	415, 419, 419, 418, 418, 417, 417, 420, 420, 421,
	421, 432, 432, 423, 8, 424, 424, 424, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 427, 428, 311,
	312, 312, 312,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 0, 1, 1, 1, 2, 3,
	2, 3, 0, 1, 3, 1, 4, 3, 3, 4,
	3, 2, 3, 4, 3, 4, 2, 7, 1, 3,
	3, 3, 3, 1, 2, 1, 1, 3, 2, 3,
	3, 2, 5, 7, 10, 9, 7, 8, 1, 1,
	10, 11, 9, 8, 8, 1, 1, 1, 3, 1,
	3, 1, 3, 0, 4, 3, 1, 3, 3, 3,
	3, 3, 1, 1, 2, 5, 4, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 2,
	2, 6, 12, 2, 0, 2, 0, 2, 1, 1,
	0, 2, 1, 3, 3, 0, 1, 1, 3, 3,
	6, 4, 7, 8, 8, 8, 6, 3, 1, 1,
	5, 0, 1, 1, 1, 1, 2, 2, 2, 0,
	1, 4, 4, 4, 4, 4, 4, 2, 4, 1,
	3, 1, 1, 3, 4, 3, 3, 3, 5, 10,
	0, 2, 0, 2, 3, 5, 3, 4, 2, 3,
	2, 3, 3, 3, 3, 2, 2, 4, 4, 1,
	1, 1, 1, 1, 0, 2, 2, 3, 3, 2,
	2, 2, 1, 1, 2, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 3, 3, 3, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	5, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 3, 0, 5, 1, 3, 0, 3,
	5, 0, 1, 1, 0, 1, 0, 3, 3, 2,
	2, 2, 1, 2, 2, 0, 1, 0, 2, 2,
	5, 0, 1, 1, 2, 1, 3, 2, 1, 1,
	3, 3, 3, 0, 1, 4, 3, 3, 4, 2,
	0, 2, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 1, 3, 3, 4, 3, 1, 3,
	1, 7, 6, 7, 7, 8, 8, 0, 1, 5,
	2, 1, 1, 1, 0, 1, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 1, 0, 1, 1, 2,
	0, 1, 0, 1, 1, 3, 2, 1, 2, 3,
	3, 3, 4, 4, 3, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 4, 5,
	3, 5, 4, 1, 2, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 1,
	1, 0, 1, 0, 1, 0, 2, 0, 2, 0,
	2, 2, 0, 1, 5, 1, 3, 7, 1, 3,
	3, 1, 2, 2, 2, 5, 5, 5, 6, 8,
	5, 5, 4, 4, 4, 6, 5, 5, 5, 2,
	2, 2, 2, 3, 3, 3, 4, 3, 3, 1,
	3, 5, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 3, 4, 4, 2, 11, 3,
	6, 8, 8, 6, 6, 6, 6, 13, 15, 8,
	8, 6, 6, 10, 7, 8, 8, 7, 7, 5,
	5, 5, 7, 5, 5, 5, 5, 5, 7, 7,
	5, 5, 0, 6, 5, 6, 4, 5, 4, 5,
	0, 8, 9, 0, 3, 0, 1, 0, 3, 8,
	4, 1, 3, 3, 6, 7, 7, 8, 4, 0,
	1, 0, 1, 3, 3, 1, 1, 2, 1, 1,
	0, 2, 0, 2, 5, 3, 7, 4, 4, 4,
	4, 3, 3, 3, 7, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 0, 2, 2, 1,
	3, 2, 0, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 1, 3, 3, 0, 2, 2, 2,
	2, 2, 2, 2, 4, 4, 3, 0, 1, 4,
	3, 4, 4, 3, 3, 3, 2, 1, 3, 3,
	3, 5, 8, 7, 6, 5, 3, 2, 4, 5,
	5, 3, 3, 7, 3, 3, 3, 3, 4, 7,
	5, 2, 4, 4, 4, 4, 4, 5, 5, 4,
	4, 4, 4, 4, 4, 4, 4, 2, 2, 4,
	4, 4, 4, 4, 2, 3, 3, 3, 3, 5,
	2, 3, 3, 2, 3, 4, 4, 4, 3, 4,
	4, 5, 3, 0, 1, 0, 1, 1, 1, 0,
	2, 2, 0, 2, 2, 0, 2, 0, 1, 1,
	1, 1, 2, 1, 3, 1, 1, 1, 1, 1,
	3, 0, 1, 1, 3, 3, 2, 2, 1, 1,
	5, 0, 1, 0, 1, 2, 3, 0, 3, 3,
	3, 3, 3, 1, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 4, 4,
	4, 2, 2, 3, 1, 3, 2, 1, 2, 1,
	2, 2, 4, 3, 3, 6, 4, 7, 6, 1,
	3, 2, 2, 2, 2, 1, 1, 1, 3, 2,
	1, 1, 1, 0, 1, 1, 0, 3, 0, 2,
	0, 2, 1, 2, 2, 0, 1, 1, 0, 1,
	1, 5, 5, 4, 0, 2, 4, 4, 0, 1,
	0, 1, 2, 3, 4, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 2, 3, 5, 0, 1,
	2, 1, 1, 0, 1, 2, 1, 3, 1, 1,
	1, 4, 3, 1, 1, 2, 3, 7, 0, 3,
	0, 1, 1, 3, 1, 3, 1, 1, 3, 3,
	1, 3, 4, 4, 4, 3, 2, 4, 0, 1,
	0, 2, 0, 1, 0, 1, 2, 1, 1, 1,
	2, 2, 1, 2, 3, 2, 3, 2, 2, 2,
	1, 1, 3, 3, 0, 1, 1, 2, 6, 5,
	6, 6, 0, 2, 3, 3, 0, 2, 3, 3,
	3, 2, 3, 1, 3, 6, 3, 4, 3, 1,
	3, 4, 5, 6, 3, 4, 5, 6, 3, 4,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 5,
	5, 3, 3, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 3, 1, 1, 1, 2, 2, 2, 2,
	1, 1, 2, 7, 7, 6, 6, 2, 2, 5,
	6, 3, 3, 1, 3, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 4, 2, 4, 0, 1, 2, 5, 0, 3,
	0, 1, 4, 4, 2, 0, 1, 1, 2, 2,
	1, 1, 2, 2, 0, 1, 1, 1, 1, 5,
	1, 3, 0, 3, 1, 1, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 4, 6, 4, 4, 8, 6, 8,
	6, 5, 4, 10, 2, 2, 1, 2, 2, 2,
	2, 2, 4, 5, 5, 5, 5, 5, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 8, 4,
	8, 8, 6, 5, 4, 4, 4, 4, 4, 7,
	4, 4, 6, 6, 6, 8, 6, 6, 4, 4,
	3, 4, 6, 6, 4, 4, 6, 4, 6, 4,
	4, 4, 4, 4, 4, 6, 4, 6, 4, 4,
	4, 6, 4, 6, 4, 4, 6, 4, 6, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 4, 4,
	6, 4, 6, 4, 8, 6, 4, 4, 6, 4,
	6, 8, 4, 6, 8, 4, 4, 6, 8, 6,
	4, 6, 6, 8, 10, 7, 8, 8, 9, 4,
	4, 4, 4, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 4, 4, 4, 4, 4, 4, 6,
	4, 6, 5, 9, 6, 9, 8, 6, 8, 8,
	8, 6, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 6, 8, 10, 12, 14, 6, 8, 8,
	10, 12, 14, 6, 8, 10, 12, 6, 8, 4,
	4, 3, 4, 6, 6, 4, 6, 4, 6, 8,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 0, 2, 3, 4, 4, 4, 4, 4,
	0, 3, 4, 7, 3, 1, 1, 1, 0, 5,
	5, 2, 3, 1, 2, 2, 1, 2, 1, 2,
	2, 1, 2, 2, 1, 1, 0, 1, 0, 1,
	0, 2, 1, 2, 4, 0, 2, 1, 1, 3,
	5, 1, 1, 1, 2, 2, 0, 3, 0, 2,
	2, 1, 3, 0, 1, 0, 1, 3, 1, 3,
	2, 0, 1, 1, 0, 1, 2, 4, 4, 0,
	2, 2, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 0, 3, 3, 3, 0, 3, 1, 1,
	0, 4, 0, 1, 1, 0, 3, 1, 3, 2,
	1, 1, 0, 1, 2, 4, 9, 3, 5, 0,
	3, 3, 0, 1, 0, 2, 2, 0, 2, 2,
	2, 0, 2, 1, 2, 3, 3, 0, 2, 1,
	2, 3, 4, 3, 0, 1, 2, 1, 5, 4,
	4, 1, 3, 3, 5, 0, 5, 1, 3, 1,
	2, 3, 4, 1, 1, 3, 3, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	0, 3, 0, 1, 0, 1, 1, 5, 0, 1,
	0, 1, 2, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 0, 3, 0, 4, 0,
	3, 0, 3, 0, 3, 0, 3, 0, 3, 0,
	3, 1, 1, 11, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	0, 1, 1,
}

var yyChk = [...]int{
	-1000, -425, -79, -430, -7, -29, -15, -16, -17, -423,
	-18, -19, -20, -21, -22, -23, -24, -25, -26, -64,
	-67, -65, -66, -69, -70, -71, -72, -73, -9, -11,
	-68, -27, -28, -74, -75, -76, -77, -78, -12, -13,
	-14, -8, -32, -31, -30, 10, 11, -108, 46, -35,
	33, -40, -50, 229, -51, -41, 230, -52, 232, 231,
	273, 233, 387, 266, 75, 323, 324, 326, 327, 328,
	329, -109, 693, 271, 272, 235, 37, 34, 35, 38,
	239, 279, 280, 238, 133, -33, -36, 9, -427, 12,
	477, 268, 267, 29, -34, 586, 87, -80, -426, 741,
	-253, -237, 23, 34, 30, -236, -232, -129, -237, 21,
	19, 8, -79, -79, -79, 45, 13, 14, -79, -354,
	-356, 87, 160, 87, -79, -57, -56, -54, -53, -55,
	-58, 32, -47, -48, -378, -46, -43, 234, 231, 283,
	123, 124, 273, 274, 275, 233, 253, 272, 276, 271,
	292, -42, 82, 34, 586, 589, -361, 230, 236, 237,
	232, 478, 126, 125, 76, -358, 382, 620, 711, -58,
	713, 101, 104, 712, 45, 243, 714, 715, 716, 627,
	717, 252, 718, 719, 720, 721, 727, 668, 728, 729,
	730, 127, 8, 179, 180, 255, 256, 257, -79, -305,
	-301, 91, -294, 583, 258, 618, 431, 619, 309, 82,
	42, 522, 592, 379, 382, 620, 507, 711, 388, 323,
	339, 333, 512, 513, 514, 362, 354, 584, 621, 593,
	313, 259, 297, 705, 352, 136, 713, 317, 622, 274,
	389, 390, 623, 391, 101, 326, 428, 726, 316, 624,
	724, 104, 712, 331, 80, 506, 52, 708, 45, 269,
	436, 437, 350, 238, 346, 714, 298, 625, 595, 290,
	126, 123, 733, 37, 342, 51, 31, 723, 125, 50,
	715, 151, 626, 716, 627, 393, 369, 699, 49, 394,
	275, 628, 85, 280, 588, 320, 707, 395, 527, 343,
	396, 308, 722, 235, 629, 688, 680, 681, 397, 398,
	700, 374, 370, 375, 529, 630, 420, 511, 399, 684,
	685, 740, 53, 631, 632, 701, 124, 633, 79, 717,
	81, 337, 338, 634, 306, 254, 532, 533, 422, 366,
	489, 496, 497, 111, 112, 492, 113, 498, 114, 499,
	500, 501, 490, 115, 108, 491, 502, 503, 367, 368,
	116, 504, 110, 109, 493, 495, 117, 505, 252, 36,
	400, 585, 310, 59, 315, 284, 423, 47, 372, 737,
	46, 695, 534, 635, 698, 365, 361, 486, 54, 636,
	637, 638, 639, 508, 718, 364, 336, 360, 732, 4,
	303, 509, 719, 63, 237, 377, 376, 378, 291, 419,
	357, 640, 641, 642, 262, 83, 643, 347, 22, 644,
	645, 401, 299, 646, 57, 647, 648, 426, 272, 649,
	55, 720, 40, 650, 277, 734, 721, 651, 652, 653,
	694, 654, 279, 655, 403, 656, 682, 683, 402, 371,
	373, 535, 286, 404, 387, 240, 587, 657, 321, 341,
	276, 725, 658, 263, 523, 524, 525, 526, 706, 531,
	530, 278, 283, 271, 427, 264, 659, 660, 661, 662,
	663, 314, 679, 664, 665, 327, 727, 487, 44, 666,
	667, 668, 669, 670, 307, 302, 421, 430, 62, 84,
	384, 671, 672, 704, 335, 332, 300, 468, 470, 471,
	472, 473, 474, 469, 476, 673, 324, 56, 728, 729,
	730, 294, 731, 515, 516, 517, 518, 10, 569, 552,
	580, 553, 570, 554, 563, 555, 571, 579, 581, 536,
	544, 537, 545, 575, 558, 572, 564, 557, 556, 578,
	561, 565, 538, 546, 576, 562, 539, 547, 540, 548,
	541, 549, 574, 573, 566, 577, 542, 550, 568, 543,
	551, 567, 559, 560, 439, 738, 739, 510, 311, 406,
	127, 304, 305, 48, 358, 285, 674, 318, 675, 348,
	349, 483, 484, 293, 363, 334, 359, 691, 325, 689,
	287, 407, 488, 273, 676, 429, 301, 380, 385, 319,
	591, 528, 292, 408, 703, 590, 519, 520, 356, 353,
	295, 521, 677, 693, 409, 244, 288, 289, 678, 690,
	410, 411, 312, 412, 413, 414, 415, 416, 418, 322,
	417, 692, 686, 687, 296, 467, 589, 265, 330, 351,
	386, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 460, 461, 462, 463, 464, 465, 466, 485,
	242, -79, 242, -191, -301, -131, 695, 697, 181, -273,
	390, -291, 392, 405, 400, 410, 398, -282, 401, 403,
	286, -403, 420, 242, 407, 229, 393, 402, 411, 412,
	312, 418, 413, 322, 417, 296, 414, 415, 416, -385,
	181, 716, 731, 136, 355, 397, 395, 421, 695, 91,
	-307, 91, 92, 93, -294, 325, -309, 330, -295, -385,
	-294, 328, -79, -79, -311, -311, -131, -210, -147, 144,
	-160, -262, -163, 92, -152, -155, -204, -205, -206, -207,
	-161, -220, -260, 168, 169, 176, 145, -216, -164, 27,
	582, 479, 478, 181, 32, 224, 69, 70, 481, 147,
	58, 12, 444, 445, -162, 434, 435, 446, 440, 441,
	506, 508, 509, 510, 507, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 511, 522, 483, 484, 118,
	485, 108, 110, 109, 486, 487, 488, 352, 534, 535,
	529, 532, 533, 531, 530, 367, 368, 489, 552, 553,
	557, 556, 554, 555, 558, 561, 562, 563, 564, 565,
	566, 568, 567, 559, 560, 537, 536, 538, 539, 540,
	541, 542, 543, 545, 544, 546, 547, 548, 549, 550,
	551, 569, 570, 571, 572, 573, 575, 574, 579, 578,
	576, 577, 581, 580, 490, 491, 111, 112, 113, 114,
	115, 116, 117, 492, 495, 493, 494, 496, 497, 498,
	503, 504, 499, 500, 501, 502, 505, 378, 376, 377,
	373, 372, 371, -89, -101, 609, 608, -102, 431, 436,
	437, 439, -153, -154, -166, -167, -295, -301, 247, 433,
	241, 174, 477, -156, -150, -218, 107, 93, -31, -214,
	432, 442, 443, 447, 438, 448, 594, 596, 612, 613,
	615, 599, 604, 603, 606, 523, 524, 525, 526, 527,
	528, 680, 681, 682, 683, 684, 685, 686, 687, -385,
	-294, 91, -158, -157, -200, 94, 99, 102, 103, 105,
	-409, 269, 348, 349, 119, -427, 709, 90, 95, 96,
	97, 98, 120, 121, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 406, 406, -191, -79,
	-79, -79, -79, -424, 712, 587, -230, -129, -232, -33,
	-31, -427, 9, -79, -31, -32, -30, -36, -38, 614,
	-37, -301, 100, -237, -253, 13, 163, 43, 51, -235,
	-236, -34, -31, -147, 20, 24, 25, -135, 170, -147,
	-301, -135, -280, 246, -311, -422, 695, -79, -79, -269,
	-314, 325, -271, 421, 695, 420, -261, -274, 91, -260,
	-273, 419, 92, -355, 160, -341, -345, -295, 260, -371,
	253, -191, -364, -363, -295, -427, -130, -290, 243, 251,
	250, 137, -390, 140, 304, 433, 241, -53, -54, -55,
	-273, 178, 715, -110, 278, 282, 88, 88, -345, -344,
	-343, -391, 282, 260, -370, -362, 249, 261, -351, 250,
	251, -346, 243, 138, -391, -346, 248, 261, 253, 260,
	282, 282, 127, 282, 127, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 277, -352, 152, -352, 590, 590,
	-358, -391, 253, 243, -391, -391, 249, -292, -346, 245,
	26, 245, 36, 36, -352, -352, -352, -273, 178, -352,
	-352, -352, -352, 290, 290, -352, -352, -352, -352, -352,
	-352, -352, -352, -352, -352, -352, -352, -352, -352, -352,
	-352, -352, 20, 20, 248, 90, 242, -390, -139, 417,
	312, 82, -56, 292, -39, -191, -290, 243, 244, -390,
	279, -191, 225, 242, 698, -284, 160, 16, -284, -281,
	406, 404, 391, 396, -284, -284, -284, -284, 294, 389,
	-347, 243, 36, 254, 406, 294, 389, 294, 295, 294,
	295, 399, 409, 294, -306, 15, 163, 433, 394, 398,
	286, 242, 287, 244, 408, 295, -306, 90, -285, 160,
	294, 406, 289, -284, -284, -312, -427, -297, -295, -293,
	234, 24, 143, 26, 28, 146, 181, 130, 20, 147,
	38, 236, 355, 253, 178, 249, 478, 229, 73, 594,
	434, 441, 432, 440, 444, 480, 481, 433, 392, 32,
	14, 596, 29, 267, 25, 39, 179, 172, 231, 150,
	597, 270, 27, 268, 118, 121, 599, 23, 76, 261,
	15, 251, 41, 17, 600, 601, 18, 247, 246, 163,
	243, 71, 12, 224, 30, 159, 67, 602, 138, 133,
	603, 604, 605, 606, 131, 69, 160, 21, 735, 442,
	443, 34, 696, 582, 281, 174, 74, 60, 697, 144,
	438, 608, 609, 119, 610, 122, 77, 702, 140, 19,
	72, 43, 611, 282, 612, 248, 736, 613, 424, 614,
	161, 232, 477, 70, 162, 709, 615, 710, 241, 405,
	9, 482, 33, 266, 250, 129, 68, 448, 616, 242,
	180, 149, 245, 132, 120, 8, 137, 35, 13, 75,
	78, 445, 446, 447, 58, 128, 586, 148, 16, 617,
	425, 142, -385, 698, -312, -312, 33, 92, -412, -413,
	-414, 586, 424, 245, -295, -191, -85, 688, 233, -86,
	694, 24, 240, -137, 406, -124, 181, 716, 699, 700,
	701, 698, 403, 706, 704, 702, 294, 703, 88, 140,
	142, 143, 4, -147, 159, -201, 152, 153, 154, 155,
	156, 157, 158, 164, 163, 144, 146, 160, -246, 141,
	165, 166, 167, 168, 169, 170, 171, 173, 172, 174,
	175, 161, 162, 178, 227, 228, -155, -155, -155, -155,
	-216, -222, -221, -427, -218, -385, -294, -301, -427, -427,
	-155, -279, -427, -152, -427, -427, -427, -427, -225, -147,
	-427, -427, -431, -427, -431, -431, -431, -330, -427, -330,
	-330, -427, -427, -427, -427, -427, -427, -427, -427, -427,
	-427, -427, -427, -427, -427, -427, -427, -427, -427, -427,
	-427, -427, -427, -427, -427, -427, -427, -427, -427, -427,
	-427, -427, -427, -427, -427, -427, -427, -427, -427, -427,
	-427, -427, -427, -427, -427, -427, -427, -427, -427, -427,
	-427, -427, -427, -427, -427, -427, -427, -427, -427, -427,
	-427, -427, -427, -427, -427, -427, -427, -427, -427, -427,
	-427, -427, -427, -427, -427, -427, -427, -427, -427, -427,
	-427, -427, -427, -427, -427, -427, -427, -427, -427, -427,
	-427, -427, -427, -427, -427, -427, -427, -427, -427, -427,
	-427, -427, -427, -427, -427, -427, -427, -427, -427, -427,
	-427, -427, -427, -427, -427, -427, -427, -427, -427, -427,
	-427, -427, -427, -427, 225, -427, -427, -427, -427, -427,
	-330, -330, -330, -330, -330, -330, -427, -427, -427, -427,
	-427, -427, -427, -427, -427, -427, -427, -427, -427, -427,
	103, 99, 102, 94, -220, 105, 90, 90, 90, 90,
	-31, -32, -210, -427, -400, -401, -194, -191, -427, 312,
	-295, -295, 279, 96, -235, -34, -31, -230, -236, -232,
	-31, -79, -122, -136, 64, 65, -138, 25, 39, 68,
	66, 24, -428, 89, -428, -253, -428, 88, -38, -256,
	87, 62, 44, 90, 90, 88, 22, -231, -233, -147,
	15, -299, 4, -298, 26, -295, 90, 225, 15, -192,
	30, -191, 607, -280, -280, 88, 91, 325, -270, -272,
	422, 424, 152, -300, -295, 90, 32, 89, 88, -191,
	-319, -322, -324, -323, -325, -320, -321, 352, 353, 181,
	356, 358, 359, 360, 361, 362, 363, 364, 365, 366,
	369, 33, 269, 348, 349, 350, 351, 370, 371, 372,
	373, 375, 376, 377, 378, 333, 354, 584, 334, 335,
	336, 337, 338, 339, 341, 342, 345, 343, 344, 346,
	347, -386, -385, 87, 89, 88, -326, 87, -147, -139,
	242, -385, 243, 243, 243, -79, 477, -352, -352, -352,
	277, 20, -46, -43, -378, 19, -42, -43, 234, 123,
	124, 231, 87, -341, 87, -350, -386, -385, 87, 138,
	248, 137, -349, -346, -349, -350, -385, -218, -385, 138,
	138, -385, -385, -266, -295, -266, -266, 24, -266, 24,
	-266, 24, 96, -295, -266, 24, -266, 24, -266, 24,
	-266, 24, -266, 24, 32, 79, 80, 81, 32, 83,
	84, 85, -218, -385, -385, -218, -341, -218, -191, -385,
	-273, 96, 96, 96, -352, -352, 96, 90, 90, 90,
	-352, -352, 96, 90, -303, -301, 90, 90, -392, 262,
	308, 310, 96, 96, 96, 96, 32, 90, -393, 32,
	723, 722, 724, 725, 726, 90, 96, 32, 96, 32,
	96, -295, 87, -112, -389, -295, -112, 138, -191, -145,
	298, 229, 231, 234, 77, 90, 315, 316, 313, 318,
	319, 152, 45, 88, 245, 242, -385, -286, 247, -286,
	-295, -302, -301, -293, -191, 245, 388, 90, -147, -348,
	15, 163, -306, -306, -284, -191, -348, -306, -284, -191,
	-284, -284, -284, -284, -306, -306, -306, -284, -301, -301,
	-191, -191, -191, -191, -191, -191, -191, -312, -285, -284,
	698, 90, -278, 15, 77, -312, -312, 88, 331, 425,
	426, -310, 328, -81, -295, 90, -10, -29, -18, -17,
	-19, 152, -10, 88, 586, -184, -191, 698, 698, 698,
	698, 698, 698, -147, -147, -147, -147, 610, -208, 119,
	144, 120, 121, -163, -147, -209, -214, -216, 106, 163,
	146, 160, -246, -152, -155, -152, -152, -152, -152, -152,
	-152, 224, -152, 224, -152, -152, -152, -152, -152, -152,
	-313, -295, 90, 181, -159, -158, 105, -409, -159, 583,
	88, -221, 225, -147, -147, -385, -120, 450, 451, 452,
	453, 455, 456, 457, 460, 461, 465, 466, 449, 467,
	454, 459, 462, 463, 464, 458, 351, -147, -133, -135,
	-133, -147, -223, -224, 148, -218, -147, -428, -428, 96,
	170, -128, 25, 39, -128, -128, -128, -128, -147, -147,
	-147, -147, -147, -147, -147, -147, -147, -147, -128, -147,
	-121, 449, 467, 454, 459, 462, 463, 464, 458, 351,
	468, 469, 470, 471, 472, 473, 474, 475, 476, -121,
	-120, -147, -147, -147, -147, -147, -147, -87, -147, 130,
	131, 132, -210, -147, -152, -147, -147, -147, -428, -147,
	-147, -147, -211, -210, -147, -147, -147, -147, -147, -147,
	-147, -147, -147, -147, -147, -147, -147, -147, -147, -147,
	-147, -147, -147, -147, -147, -147, -147, -147, -147, -147,
	-147, -147, -147, -147, -147, -147, -147, -147, -147, -147,
	-147, -147, -147, -147, -147, -147, -147, -147, -147, -147,
	-384, -383, -382, -147, -147, -147, -147, -147, -147, -147,
	-147, -147, -147, -147, -147, -147, -147, -147, -147, -147,
	-147, -147, -147, -147, -147, -147, -210, -210, -210, -210,
	-210, -147, -428, -147, -165, -150, 96, -262, 105, 92,
	-147, -147, -147, -147, -147, -147, -134, -133, -297, -302,
	-293, -294, -133, -134, -134, -133, -133, -147, -147, -147,
	-147, -147, -147, -147, -147, -428, -147, -147, -147, -147,
	-147, -253, -428, -210, 88, -402, 424, 425, 696, -304,
	282, -303, 26, -211, 90, 15, -264, 78, -295, -235,
	-235, 64, 65, 60, -133, -138, -428, -37, 26, -255,
	-295, 63, 90, -331, -273, 379, 380, 181, -147, -147,
	88, -234, 28, 29, -191, -298, 170, -302, -191, -265,
	282, -191, 90, -169, -171, -172, -173, -194, -217, -427,
	-174, -31, 605, 602, 15, -184, -185, -193, -301, -271,
	-314, -270, 88, 423, 425, 426, 77, 122, -147, -332,
	178, -360, -359, -358, -341, -343, -344, -345, 89, -332,
	-337, 385, 384, -326, -326, -326, -326, -326, -331, -331,
	-331, -331, 87, 87, -326, -326, -326, -326, -334, 87,
	-334, -334, -335, -334, 87, -335, -336, 87, -336, -371,
	-147, -368, -367, -365, -366, 252, 101, 678, 634, 586,
	627, 668, 78, -363, -234, 96, -428, -145, -287, 247,
	-369, -366, -385, -385, -385, -287, 91, 90, 91, 90,
	91, 90, -111, -60, -1, 735, 736, 737, 88, 20,
	-342, -341, -59, 308, -374, -375, 282, -370, -364, -350,
	138, -349, -350, -350, -385, 88, 30, 127, 127, 127,
	127, 586, 231, 33, -288, 626, 144, 678, 634, -341,
	-59, 245, 245, -313, -313, -313, 90, 90, -283, 731,
	-184, 87, 311, -113, -191, -141, 300, 152, 288, 293,
	288, 293, 242, 302, 242, 302, -191, 314, 317, 315,
	316, 313, 318, 319, 24, 24, 24, 24, 24, 301,
	303, 305, 290, -191, -191, -286, 77, -186, -191, 27,
	-301, 90, 90, -191, -284, -284, -191, -284, -284, -191,
	-414, 332, -295, 366, 689, 690, 692, 691, -124, 424,
	88, 586, 23, -125, 23, -427, 119, 120, 121, -209,
	-152, -155, -152, 143, 270, -152, -152, -427, -218, -428,
	-297, 26, 88, 78, -428, 168, 88, 88, -428, -428,
	88, 15, -226, -224, 150, -147, -428, 88, -428, -428,
	-210, -147, -147, -147, -147, -428, -428, -428, -428, -428,
	-428, -428, -428, -428, -428, -210, -428, 88, 88, 15,
	-317, 26, -428, -428, -428, -428, -428, -225, -428, 15,
	-428, 78, 88, 163, 88, -428, -428, -428, 88, 88,
	-428, -428, 88, -428, 88, -428, -428, -428, -428, -428,
	-428, 88, -428, 88, -428, -428, -428, 88, -428, 88,
	-428, -428, 88, -428, 88, -428, 88, -428, 88, -428,
	88, -428, 88, -428, 88, -428, 88, -428, 88, -428,
	88, -428, 88, -428, 88, -428, 88, -428, 88, -428,
	88, -428, 88, -428, 88, -428, 88, -428, -428, -428,
	88, -428, 88, -428, 88, -428, -428, 88, -428, 88,
	-428, 88, -428, 88, 88, -428, 88, 88, 88, -428,
	88, 88, 88, 88, -428, -428, -428, -428, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 88, -428, -428,
	-428, -428, -428, -428, 88, -94, 611, -428, -428, 88,
	-428, 88, 88, 88, 88, 88, -428, -427, 225, -428,
	-428, -428, -428, -428, 88, 88, 88, 88, 88, 88,
	-428, -428, -428, 88, 88, -428, 88, -428, 88, -428,
	-401, 695, 425, -198, -197, -195, 75, 246, 76, -427,
	-303, -428, -159, -262, -263, -262, -203, -295, 96, 105,
	-237, -168, -170, 15, -138, -216, 89, 88, -331, -241,
	-247, -281, -295, 90, 181, -333, 181, -333, 379, 380,
	-233, 225, -199, 16, -202, 33, 58, -29, -427, -427,
	30, 33, 88, -187, -189, -188, -190, 67, 71, 73,
	68, 69, 70, 74, -308, 26, -31, -169, -31, -427,
	-191, -184, -429, 15, 78, -429, 88, 225, -272, -275,
	427, 424, 430, -385, 90, -110, 88, -358, -345, -238,
	-142, 41, -338, 386, -331, 593, -331, -340, 90, -340,
	96, 96, 96, 89, -49, -44, -45, 34, 82, -365,
	-352, 90, 40, -352, -352, -295, 89, -234, -141, -191,
	144, 77, -369, -369, -369, -301, -2, 734, 740, 138,
	87, 391, 19, -255, 88, 89, -219, 309, 89, -114,
	-295, 89, 87, -350, -350, -295, -427, 242, 32, 32,
	678, 634, 626, -59, -219, -218, -385, -332, 733, 732,
	89, -255, 96, 87, 244, 307, -146, 444, -143, 90,
	91, -191, -191, -191, -191, -191, -191, -191, -191, 234,
	231, 414, -410, 320, -410, 291, 245, -184, -191, 88,
	-84, 264, 259, -306, -306, 34, -191, 424, 707, 705,
	-147, 143, 270, -163, -155, -120, -120, -152, -315, 181,
	352, 269, 350, 346, 366, 357, 384, 348, 385, 343,
	342, 341, -315, -313, -152, -210, -135, -147, -147, 151,
	-147, 149, -147, -428, -428, -428, -428, -428, -230, -147,
	-147, -147, -428, 181, 352, 15, -147, -313, -147, -147,
	-147, -147, -147, -147, -147, -147, -147, -147, -147, -147,
	-147, -147, -147, -147, -147, -147, -147, -147, -147, -147,
	-147, -147, -147, -147, -147, -147, -147, -147, -147, -147,
	-147, -147, -147, -382, -147, -210, -147, -210, -147, -147,
	-147, -147, -147, -383, -383, -383, -383, -383, -210, -210,
	-210, -210, -147, -427, -295, -97, -96, -95, 661, 246,
	-94, -165, -97, -165, 224, -147, 224, 224, 224, -147,
	-134, -297, -147, -147, -147, -147, -147, -147, -147, -147,
	-147, -147, -195, -346, -346, -346, -266, 88, -277, 23,
	15, 58, 58, -168, -199, -169, -138, -295, -244, 688,
	-250, 47, -248, -249, 48, -245, 49, 57, -333, -333,
	170, -235, -147, -267, 77, -268, -276, -218, -213, -215,
	-214, -427, -254, -428, -295, -266, 242, -268, -171, -172,
	-172, -171, -172, 67, 67, 67, 72, 67, 72, 67,
	-188, -301, -428, -147, -304, 78, -169, -169, -193, -301,
	170, 424, 428, 429, -358, -408, 119, 144, 32, 77,
	382, 101, -406, 178, 623, 673, 678, 634, 627, 668,
	-407, 248, 137, 138, 263, 26, 42, 89, 88, 89,
	88, 89, 89, 88, -289, -288, -45, -44, -352, -352,
	96, -385, 90, 90, 244, 27, -191, 77, 77, 77,
	-115, 738, 96, 87, -3, 82, -147, 87, 20, -341,
	-218, -376, -327, -377, -328, -329, -5, -6, -353, -118,
	58, 101, -63, 45, 243, 718, 719, 127, -427, 731,
	-368, -255, -372, -374, -191, -151, -427, -162, -149, -148,
	-150, -156, 168, 169, 269, 348, 349, -219, 89, -255,
	-191, -140, 298, 306, 87, -144, 92, -388, 78, -388,
	288, 293, 382, 257, 256, 288, 293, 382, 257, 256,
	90, -411, 321, 90, -411, -191, -84, -49, -191, -284,
	-284, 34, -385, -428, -163, -155, -127, 163, 586, -318,
	592, -326, -326, -326, -336, -326, 338, -326, 338, -326,
	-428, -428, -428, 88, -428, 23, -428, -147, 88, -123,
	482, 88, 88, -428, 87, 87, -147, -428, -428, -428,
	88, -428, -428, -428, -428, -428, -428, -428, -428, -428,
	-428, -428, -428, -428, 88, -428, 88, -428, 88, -428,
	88, -428, 88, -428, 88, -428, 88, -428, 88, -428,
	88, -428, 88, -428, 88, -428, 88, -428, 88, -428,
	88, -428, 88, -428, 88, -428, -428, 88, -428, -428,
	-428, 88, -428, 88, -428, 88, -428, -428, -428, 88,
	-316, 679, -428, -428, -428, -428, -428, -428, -428, -428,
	-428, -428, -428, -93, -296, -295, -94, 643, 643, -428,
	-94, -227, 88, -152, -428, -152, -152, -152, -428, -428,
	-428, 88, -428, 88, 88, -428, 88, -428, 88, -428,
	-428, -428, -428, 88, -196, 23, -196, -196, -428, -262,
	-191, -199, -228, 17, -241, 52, 358, -252, -251, 56,
	48, -249, 20, 50, 20, 31, -267, 88, 152, 88,
	-428, -428, 88, 58, 225, -428, -191, -199, -182, -181,
	77, 78, -183, 77, -181, 67, 67, -256, 88, -265,
	-169, -199, -199, 225, 119, -427, -151, 13, 90, 90,
	-385, -405, 722, 723, 32, 96, -352, -352, 138, 138,
	-191, 87, -331, 90, -331, 96, 96, 32, 83, 84,
	85, 32, 79, 80, 81, -191, -191, -191, -191, -373,
	87, 20, -147, 87, 152, 89, -255, -255, 284, 163,
	-352, 716, 290, 290, -352, -352, -352, -117, -116, 738,
	89, -428, 88, -339, 586, 589, -147, -157, -157, -388,
	89, -256, 89, -381, 586, -387, -295, -381, -295, -295,
	-295, 90, -295, -295, 90, 96, 98, -132, 265, -428,
	584, 74, 587, -428, -331, -147, -147, -147, -235, 90,
	-147, -147, 96, 96, -428, -147, -147, -147, -147, -147,
	-147, -147, -147, -147, -147, -147, -147, -147, -147, -147,
	-147, -147, -147, -147, -147, -210, -147, -428, -179, -178,
	-180, 699, 119, 32, -315, -428, -212, 282, -100, -99,
	-98, 15, -428, -147, -120, -120, -120, -120, -147, -147,
	-147, -147, -147, -147, -427, 67, 19, 17, -427, -427,
	-304, -228, -229, 18, 20, -242, 54, -240, 53, -240,
	-251, 20, 20, 90, 20, 90, 138, -276, -147, -215,
	58, -29, -295, -213, -295, -416, -432, 396, 391, -230,
	-147, 87, -147, -159, -199, -199, -147, -205, 506, 508,
	509, 510, 507, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 511, 522, 483, 484, 485, 108, 110,
	109, 486, 487, 488, 352, 534, 535, 529, 532, 533,
	531, 530, 367, 368, 489, 552, 553, 557, 556, 554,
	555, 558, 561, 562, 563, 564, 565, 566, 568, 567,
	559, 560, 537, 536, 538, 539, 540, 541, 542, 543,
	545, 544, 546, 547, 548, 549, 550, 551, 569, 570,
	571, 572, 573, 575, 574, 579, 578, 576, 577, 581,
	580, 490, 491, 111, 112, 113, 114, 115, 116, 117,
	492, 495, 493, 496, 497, 498, 503, 504, 499, 500,
	501, 502, 505, 378, 376, 377, 373, 372, 371, 431,
	436, 437, 439, 523, 524, 525, 526, 527, 528, 680,
	681, 682, 683, 684, 685, 686, 687, 90, 90, 87,
	-147, 89, 89, -256, -372, -60, 89, -257, -255, 96,
	89, 285, -214, -427, 90, -352, -352, -352, 96, 96,
	-303, -428, 88, -295, -407, -374, 590, 590, -428, 26,
	-380, -379, -297, 87, 87, 78, 63, 585, 588, -428,
	-428, 88, -428, -428, -428, 89, 89, -428, -428, -428,
	-428, -428, -428, -428, -428, -428, -428, -428, -428, -428,
	-428, -428, -428, -428, -428, -428, -428, -428, -428, 88,
	-428, -178, -180, -428, 77, -159, -230, 20, -97, 308,
	310, -97, -428, -428, -428, -428, -428, 88, -428, -428,
	88, -428, 88, -428, -428, -258, -428, -295, 248, 20,
	20, -258, -258, -198, -229, -107, -106, -105, 617, -147,
	-210, -243, 55, 77, 122, 90, 90, 90, 13, -213,
	225, -415, 47, -419, 48, -235, -255, -176, 391, -230,
	-428, -255, 89, 26, 89, 740, 138, 89, -214, -126,
	-427, 281, -303, 90, 90, -116, -119, -29, 88, 152,
	-255, -255, -191, 63, -147, -210, -428, 77, 597, 699,
	-92, -91, -88, 710, 736, -210, -94, -94, -147, -147,
	-147, 88, -428, -428, -428, -107, 88, -104, -103, -295,
	77, 122, -268, -295, -259, -427, -420, 56, -418, 50,
	20, 89, -428, -427, -235, 89, -239, -29, 87, -3,
	281, -327, -377, -328, -329, -5, -6, -353, -82, 586,
	-379, -357, -301, -297, 90, 96, 89, 89, 586, -428,
	-428, -90, 146, 708, 676, -157, 224, -428, 88, -428,
	88, -428, 88, -295, 248, -105, 88, 26, -254, -421,
	48, 20, -417, 49, 20, 90, -304, -177, -175, -295,
	640, -398, -397, 582, -408, -404, 119, 144, 101, -406,
	678, 634, 128, 129, -82, -147, 87, -428, -83, 297,
	695, 225, -388, -388, 587, -90, 709, 654, 629, 654,
	629, -152, -147, -147, -147, -103, -427, -428, 20, 90,
	20, 90, -428, 88, 23, -319, -62, 651, -395, -396,
	77, -399, 397, 650, 671, 119, 90, 89, -255, 253,
	-302, -381, -381, 588, 143, -120, -428, 88, -428, 88,
	-428, -93, 90, 90, -175, 647, -332, -159, -396, 77,
	-395, 77, 14, 13, -4, 739, 89, 299, 311, -90,
	654, 629, -147, -147, -428, -61, 27, -176, -394, 264,
	259, 262, 33, -394, 96, -4, 96, -428, -428, 651,
	258, 32, 119, -159, -179, -178, -178,
}

var yyDef = [...]int{
	898, -2, -2, 900, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	39, 40, 73, 75, 76, 898, 898, 898, 0, 0,
	898, 0, 0, 898, -2, -2, 898, 1629, 0, 898,
	0, 893, 0, -2, 813, 819, 0, 828, -2, 0,
	0, 898, 898, 2279, 2279, 893, 0, 0, 0, 0,
	898, 898, 898, 898, 1655, 1495, 53, 898, 0, 88,
	89, 848, 849, 850, 68, 0, 2277, 899, 1, 3,
	74, 78, 0, 0, 0, 61, 1504, 0, 81, 0,
	0, 902, 0, 0, 1612, -2, 898, 898, 0, 129,
	130, 0, 0, 0, -2, 133, -2, 163, 164, 165,
	0, 170, 622, 535, 587, 533, 572, -2, 521, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 538, 403, 403, 0, 0, -2, 521, 521, 521,
	1614, 0, 0, 0, 569, 467, 403, 403, 403, 0,
	403, 403, 403, 403, 0, 0, 403, 403, 403, 403,
	403, 403, 403, 403, 403, 403, 403, 403, 403, 403,
	403, 403, 403, 0, 0, 0, 503, 0, 1522, 169,
	1630, 1627, 1628, 1810, 1811, 1812, 1813, 1814, 1815, 1816,
	1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826,
	1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836,
	1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846,
	1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856,
	1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866,
	1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876,
	1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886,
	1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896,
	1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906,
	1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916,
	1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926,
	1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936,
	1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946,
	1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956,
	1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966,
	1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976,
	1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986,
	1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996,
	1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006,
	2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016,
	2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026,
	2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036,
	2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046,
	2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056,
	2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066,
	2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076,
	2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086,
	2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096,
	2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106,
	2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116,
	2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126,
	2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136,
	2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146,
	2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156,
	2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166,
	2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176,
	2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186,
	2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196,
	2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206,
	2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216,
	2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226,
	2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236,
	2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246,
	2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256,
	2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266,
	2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276,
	0, 1606, 0, 737, 1001, 0, 894, 895, 0, 802,
	802, 0, 802, 802, 802, 802, 0, 0, 0, 751,
	0, 0, 0, 0, 799, 0, 767, 768, 0, 799,
	0, 774, 805, 0, 0, 780, 802, 802, 783, 2280,
	0, 2280, 2280, 1597, 0, 796, 794, 808, 809, 43,
	812, 815, 816, 817, 818, 821, 0, 832, 835, 1623,
	1624, 0, 837, 844, 861, 862, 0, 48, 1151, 0,
	1023, 0, 1029, -2, 1040, 1057, 1058, 1059, 1060, 1061,
	1063, 1064, 1065, 0, 0, 0, 0, 1070, 1071, 0,
	0, 0, 0, 0, 1132, 0, 0, 0, 0, 1468,
	0, 0, 1430, 1430, 1166, 1430, 1430, 1432, 1432, 1432,
	1862, 2000, 2008, 2184, 1823, 1829, 1830, 1831, 2130, 2131,
	2132, 2133, 2223, 2224, 2228, 1924, 1818, 2198, 2199, 0,
	2276, 1961, 1969, 1970, 1994, 2094, 2209, 1841, 1989, 2058,
	1921, 1943, 1944, 2076, 2077, 1965, 1966, 1947, 2136, 2138,
	2154, 2155, 2140, 2142, 2151, 2157, 2162, 2141, 2153, 2158,
	2171, 2175, 2178, 2179, 2180, 2148, 2146, 2159, 2163, 2165,
	2167, 2173, 2176, 2149, 2147, 2160, 2164, 2166, 2168, 2174,
	2177, 2135, 2139, 2143, 2152, 2170, 2150, 2169, 2144, 2156,
	2161, 2172, 2145, 2137, 1959, 1962, 1950, 1951, 1953, 1955,
	1960, 1967, 1973, 1952, 1972, 1971, 0, 1948, 1949, 1954,
	1964, 1968, 1956, 1957, 1958, 1963, 1974, 2014, 2013, 2012,
	2057, 1985, 2056, 0, 0, 0, 0, 0, 1813, 1867,
	1868, 2181, 1352, 1353, 1354, 1355, 0, 0, 0, 0,
	0, 0, 0, 295, 296, 1481, 1482, 47, 1150, 1593,
	1432, 1432, 1432, 1432, 1432, 1432, 1092, 1093, 1094, 1095,
	1096, 1120, 1121, 1127, 1128, 2071, 2072, 2073, 2074, 1905,
	2218, 1913, 1914, 2053, 2054, 1926, 1927, 2249, 2250, -2,
	-2, -2, 236, 237, 238, 239, 240, 241, 242, 243,
	0, 1866, 2196, 2197, 232, 0, 0, 300, 301, 297,
	298, 299, 1134, 1135, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274, 275, 276, 277, 278,
	279, 280, 281, 282, 283, 284, 285, 286, 287, 288,
	289, 290, 291, 292, 293, 294, 0, 871, 0, 0,
	0, 0, 0, 0, 1656, 1657, 1504, 0, 1496, 1495,
	66, 0, 898, -2, 0, 0, 0, 0, 50, 0,
	55, 958, 901, 80, 79, 1544, 0, 0, 0, 62,
	1505, 70, 72, 1506, 0, 903, 904, 0, 934, 938,
	0, 0, 0, 1613, 49, 0, 1634, 1612, 1612, 105,
	0, 0, 106, 126, 127, 128, 0, 0, 112, 113,
	1599, 1600, 46, 0, 0, 181, 182, 0, 44, 430,
	0, 177, 0, 423, 362, 0, 1522, 0, 0, 0,
	0, 0, 898, 0, 1607, 158, 159, 166, 167, 168,
	403, 403, 403, 584, 0, 0, 169, 169, 542, 543,
	544, 0, 0, -2, 428, 0, 522, 0, 0, 417,
	417, 421, 419, 420, 0, 0, 0, 0, 0, 0,
	0, 0, 561, 0, 562, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 685, 0, 404, 0, 582, 583,
	468, 0, 0, 0, 0, 0, 0, 0, 0, 1615,
	1616, 0, 559, 560, 0, 0, 0, 403, 403, 0,
	0, 0, 0, 403, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 504, 0, 157, 1535, 0,
	0, 0, -2, 0, 729, 0, 0, 0, 1608, 1608,
	0, 736, 0, 0, 0, 741, 0, 0, 742, 0,
	799, 799, 797, 798, 744, 745, 746, 747, 802, 0,
	0, 412, 413, 414, 799, 802, 0, 802, 802, 802,
	802, 799, 799, 799, 802, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2280, 805, 802, 0, 775, 0,
	776, 777, 778, 781, 782, 784, 2281, 2282, 1625, 1626,
	1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667,
	1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677,
	1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687,
	1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697,
	1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707,
	1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717,
	1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727,
	1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737,
	1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747,
	1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757,
	1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767,
	1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777,
	1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787,
	1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797,
	1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807,
	1808, 1809, 2280, 2280, 788, 792, 1598, 814, 820, 822,
	823, 0, 0, 833, 836, 855, 52, 1912, 843, 52,
	845, 846, 847, 873, 874, 879, 0, 0, 0, 0,
	885, 886, 887, 0, 0, 890, 891, 892, 0, 0,
	0, 0, 0, 1021, 0, 0, 1140, 1141, 1142, 1143,
	1144, 1145, 1146, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1041, 1042, 0, 0, 0, 1066, 1067, 1068, 1069,
	1072, 0, 1083, 0, 1085, 1477, -2, 0, 0, 0,
	1077, 1078, 0, 0, 0, 0, 0, 0, 0, 1469,
	0, 0, 1164, 0, 1165, 1167, 1168, 1169, 0, 1170,
	1171, 908, 908, 908, 908, 908, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 908, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1618, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 145, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 918, 0, 0, 918, 918, 0, 0,
	224, 225, 226, 227, 228, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 302, 250, 251, 252,
	1150, 0, 0, 0, 863, 864, 0, 984, 1618, 0,
	0, 914, 0, 1654, 60, 69, 71, 1504, 64, 1504,
	0, 920, 0, 0, -2, -2, 921, 927, 928, 929,
	930, 931, 57, 2278, 58, 0, 77, 0, 51, 0,
	0, 0, 0, 376, 1547, 0, 0, 1497, 1498, 1501,
	0, 935, 2006, 939, 0, 941, 942, 0, 0, 103,
	0, 1000, 0, 0, 0, 0, 114, 0, 116, 117,
	0, 0, 0, 387, 1601, 1602, 1603, -2, 410, 0,
	387, 371, 310, 311, 312, 362, 314, 362, 362, 362,
	362, 376, 376, 376, 376, 345, 346, 347, 348, 349,
	0, 0, 331, 362, 362, 362, 362, 352, 353, 354,
	355, 356, 357, 358, 359, 315, 316, 317, 318, 319,
	320, 321, 322, 323, 364, 364, 364, 364, 364, 368,
	368, 0, 45, 0, 391, 0, 1501, 0, 0, 1535,
	1610, 1620, 0, 0, 0, 1610, 135, 0, 0, 0,
	585, 635, 536, 573, 586, 0, 539, 540, -2, 0,
	0, 521, 0, 523, 0, 411, 0, -2, 0, 421,
	0, 417, 421, 418, 421, 409, 422, 563, 564, 565,
	0, 567, 568, 665, 970, 0, 0, 0, 0, 0,
	671, 672, 673, 0, 675, 676, 677, 678, 679, 680,
	681, 682, 683, 684, 574, 575, 576, 577, 578, 579,
	580, 581, 0, 0, 0, 0, 523, 0, 570, 0,
	0, 469, 470, 471, 0, 0, 474, 475, 476, 477,
	0, 0, 480, 481, 482, 987, 988, 483, 484, 514,
	515, 516, 485, 486, 487, 488, 489, 490, 491, 508,
	509, 510, 511, 512, 513, 492, 493, 494, 495, 496,
	497, 505, 0, 500, 0, 138, 0, 0, 151, 1526,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1608, 0, 0, 0, 0,
	917, 1002, 1631, 1632, 738, 0, 0, 803, 804, 0,
	415, 416, 802, 802, 748, 789, 0, 802, 752, 790,
	753, 755, 754, 756, 769, 770, 802, 759, 800, 801,
	760, 761, 762, 763, 764, 765, 766, 785, 771, 772,
	773, 806, 0, 810, 811, 786, 787, 0, 0, 826,
	827, 0, 834, 858, 856, 857, 859, 851, 852, 853,
	854, 0, 860, 0, 0, 876, 99, 881, 882, 883,
	884, 896, 889, 1152, 1018, 1019, 1020, 0, 1022, 1026,
	0, 1136, 1138, 1028, 1024, 1030, 1147, 1148, 1149, 0,
	0, 0, 0, 0, 1034, 1038, 1043, 1044, 1045, 1046,
	1047, 0, 1048, 0, 1051, 1052, 1053, 1054, 1055, 1056,
	1062, 1445, 1446, 1447, 1081, 303, 304, 0, 1082, 0,
	0, 0, 0, 0, 0, 0, 0, 1392, 1393, 1394,
	1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404,
	1405, 1406, 1407, 1408, 1409, 1410, 1411, 1151, 0, 932,
	0, 0, 1475, 1472, 0, 0, 0, 1431, 1433, 0,
	0, 0, 909, 910, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420,
	1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 0,
	0, 1448, 0, 0, 0, 0, 0, 1468, 0, 1087,
	1088, 1089, 0, 0, 0, 0, 0, 0, 1210, 0,
	0, 0, 0, 1619, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 146, 147, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1356, 1357, 1358, 1359, 42,
	0, 0, 0, 0, 0, 0, 0, 919, 1479, 0,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1381, 0, 0, 0, 0,
	0, 0, 1591, 0, 0, 866, 867, 869, 0, 1004,
	0, 985, 0, 0, 872, 0, 913, 0, 916, 63,
	65, 925, 926, 0, 943, 922, 59, 54, 0, 0,
	962, 1545, 376, 1567, 0, 385, 385, 382, 1507, 1508,
	0, 1500, 1502, 1503, 82, 940, 936, 0, 1016, 0,
	0, 999, 0, 0, 946, 948, 949, 950, 982, 0,
	953, 954, 0, 0, 0, 0, 0, 101, 1001, 107,
	0, 115, 0, 0, 120, 121, 108, 109, 110, 111,
	0, 622, -2, 464, 183, 185, 186, 187, 178, -2,
	374, 372, 373, 313, 376, 376, 339, 340, 341, 342,
	343, 344, 0, 0, 332, 333, 334, 335, 324, 0,
	325, 326, 327, 366, 0, 328, 329, 0, 330, 429,
	0, 1509, 392, 393, 395, 403, 0, 398, 399, 0,
	403, 403, 0, 424, 425, 0, 1501, 1526, 0, 0,
	0, 1621, 1620, 1620, 1620, 0, 171, 172, 173, 174,
	175, 176, 660, 0, 0, 636, 658, 659, 169, 0,
	0, 179, 525, 524, 0, 692, 0, 427, 0, 0,
	421, 421, 406, 407, 566, 0, 0, 667, 668, 669,
	670, 0, 0, 0, 552, 458, 0, 553, 554, 523,
	525, 0, 0, 387, 472, 473, 478, 479, 498, 0,
	0, 0, 0, 502, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 609, 610, 611,
	614, 616, 527, 620, 613, 615, 617, 527, 621, 1523,
	1524, 1525, 0, 0, 730, 0, 0, 453, 97, 1609,
	735, 739, 740, 799, 758, 791, 799, 750, 757, 779,
	824, 825, 830, 838, 839, 840, 841, 842, 880, 0,
	0, 0, 0, 888, 0, 0, 1027, 1137, 1139, 1031,
	0, 1035, 1039, 0, 0, 0, 0, 0, 1086, 1084,
	1479, 0, 0, 0, 1133, 0, 0, 0, 1155, 1156,
	0, 0, 0, 1473, 0, 0, 1162, 0, 1434, 1172,
	0, 0, 0, 0, 0, 1178, 1179, 1180, 1181, 1182,
	1183, 1184, 1185, 1186, 1187, 1495, 1189, 0, 0, 0,
	0, 0, 1194, 1195, 1196, 1197, 1198, 0, 1200, 0,
	1201, 0, 0, 0, 0, 1208, 1209, 1211, 0, 0,
	1214, 1215, 0, 1217, 0, 1219, 1220, 1221, 1222, 1223,
	1224, 0, 1226, 0, 1228, 1229, 1230, 0, 1232, 0,
	1234, 1235, 0, 1237, 0, 1239, 0, 1242, 0, 1245,
	0, 1248, 0, 1251, 0, 1254, 0, 1257, 0, 1260,
	0, 1263, 0, 1266, 0, 1269, 0, 1272, 0, 1275,
	0, 1278, 0, 1281, 0, 1284, 0, 1287, 1288, 1289,
	0, 1291, 0, 1293, 0, 1296, 1297, 0, 1299, 0,
	1302, 0, 1305, 0, 0, 1306, 0, 0, 0, 1310,
	0, 0, 0, 0, 1319, 1320, 1321, 1322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1333, 1334,
	1335, 1336, 1337, 1338, 0, 1340, 0, 1115, 0, 0,
	1115, 0, 0, 0, 0, 0, 1153, 918, 0, 1435,
	1436, 1437, 1438, 1439, 0, 0, 0, 0, 0, 0,
	1379, 1380, 1382, 0, 0, 1385, 0, 1387, 0, 1592,
	865, 868, 870, 956, 1005, 1006, 0, 0, 0, 0,
	986, 1617, 911, 912, 915, 964, 0, 1483, 0, 0,
	943, 1016, 944, 0, 923, 56, 959, 0, 1549, 1548,
	1561, 1574, 385, 385, 379, 380, 386, 381, 383, 384,
	1499, 0, 1504, 0, 1585, 0, 0, 1577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 989, 0, 0,
	992, 0, 0, 0, 0, 983, 954, 0, 955, 0,
	-2, 0, 0, 95, 96, 0, 0, 0, 118, 119,
	0, 0, 125, 388, 389, 160, 169, 466, 184, 437,
	0, 0, 309, 375, 336, 337, 338, 0, 360, 0,
	0, 0, 0, 460, 131, 1513, 1512, 403, 403, 394,
	0, 397, 0, 0, 0, 1622, 363, 426, 0, 150,
	0, 0, 0, 0, 0, 156, 630, 0, 0, 637,
	0, 0, 0, 534, 0, 545, 546, 0, 664, -2,
	726, 391, 0, 405, 408, 971, 0, 0, 547, 0,
	550, 551, 459, 525, 556, 557, 571, 558, 506, 507,
	499, 0, 501, 0, 0, 0, 1536, 1537, 1542, 1540,
	1541, 136, 136, 593, 594, 596, 602, 595, 601, 0,
	0, 0, 529, 0, 529, 590, 0, 453, 1509, 0,
	734, 454, 455, 802, 802, 875, 100, 0, 878, 0,
	0, 0, 0, 1032, 1036, 1049, 1050, 1440, 1466, 362,
	362, 1453, 362, 368, 1456, 362, 1458, 362, 1461, 362,
	1464, 1465, 0, 0, 1079, 0, 933, 0, 0, 1161,
	1476, 0, 0, 1173, 1174, 1175, 1176, 1177, 1470, 0,
	0, 0, 1193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 148, 149, 0, 0, 0, 0, 0,
	0, 1390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1110, 1114, 0, 1116, 1117, 0, 0,
	1342, 0, 0, 1360, 0, 0, 0, 0, 0, 0,
	0, 1480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1007, 1012, 1012, 1012, 0, 0, 0, 1604,
	1605, 1484, 1485, 1016, 1486, 945, 924, 963, 1567, 0,
	1560, 0, -2, 1569, 0, 0, 0, 1575, 377, 378,
	937, 83, 1017, 86, 0, 1585, 1594, 0, 1576, 1587,
	1589, 0, 0, 0, 1581, 0, 0, 1016, 947, 978,
	980, 0, 975, 990, 991, 993, 0, 995, 0, 997,
	998, 958, 952, 0, 103, 0, 1016, 1016, 102, 0,
	1003, 122, 123, 124, 465, 188, 193, 0, 0, 0,
	198, 0, 200, 0, 0, 0, 205, 206, 403, 403,
	438, 0, 306, 308, 0, 0, 191, 376, 0, 376,
	0, 367, 369, 0, 439, 461, 1510, 1511, 0, 0,
	396, 400, 401, 402, 0, 1611, 152, 0, 0, 0,
	633, 0, 661, 0, 0, 0, 0, 0, 0, 180,
	526, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	0, 403, 0, 0, 0, 403, 403, 403, 0, 718,
	390, 0, 0, 689, 686, 548, 0, 222, 223, 230,
	231, 233, 0, 0, 0, 0, 0, 555, 136, 0,
	958, 1527, 1528, 1529, 0, 1539, 1543, 140, 0, 140,
	0, 0, 0, 0, 607, 0, 0, 604, 0, 608,
	612, 618, 0, 528, 619, 731, 456, 733, 98, 743,
	749, 877, 897, 1025, 1033, 1037, 0, 0, 0, 0,
	1467, 1451, 376, 1454, 1455, 1457, 1459, 1460, 1462, 1463,
	1075, 1076, 1080, 0, 1158, 0, 1160, 1474, 0, 1504,
	0, 0, 0, 1192, 0, 0, 0, 1203, 1202, 1204,
	0, 1206, 1207, 1212, 1213, 1216, 1218, 1225, 1227, 1231,
	1233, 1236, 1238, 1240, 0, 1243, 0, 1246, 0, 1249,
	0, 1252, 0, 1255, 0, 1258, 0, 1261, 0, 1264,
	0, 1267, 0, 1270, 0, 1273, 0, 1276, 0, 1279,
	0, 1282, 0, 1285, 0, 1290, 1292, 0, 1295, 1298,
	1300, 0, 1303, 0, 1307, 0, 1309, 1311, 1312, 0,
	0, 0, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330,
	1331, 1332, 1339, 0, 1108, 1111, 1341, 1118, 1119, 1124,
	1344, 0, 0, 0, 1347, 0, 0, 0, 1351, 1154,
	1362, 0, 1367, 0, 0, 1373, 0, 1377, 0, 1383,
	1384, 1386, 1388, 0, 0, 0, 0, 0, 984, 965,
	67, 1486, 1488, 0, 1554, 1552, 1552, 1562, 1563, 0,
	0, 1570, 0, 0, 0, 0, 87, 0, 0, 0,
	1590, 0, 0, 0, 0, 104, 1637, 1495, 972, 979,
	0, 0, 973, 0, 974, 994, 996, 951, 0, 1016,
	1016, 93, 94, 0, 194, 0, 196, 0, 199, 201,
	202, 203, 209, 210, 211, 204, 0, 0, 305, 307,
	0, 0, 350, 361, 351, 0, 0, 1514, 1515, 1516,
	1517, 1518, 1519, 1520, 1521, 958, 153, 154, 155, 623,
	0, 635, 0, 960, 0, 626, 0, 537, 0, 0,
	0, 403, 403, 403, 0, 0, 0, 0, 703, 0,
	0, 666, 0, 674, 0, 0, 0, 234, 235, 629,
	628, 0, 1538, 591, 0, 137, 139, 592, 0, 0,
	0, 605, 599, 600, 606, 530, 531, 732, 457, 1073,
	0, 0, 0, 1074, 1452, 0, 0, 0, 0, 1471,
	0, 0, 0, 0, 1199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1315, 0, 0,
	0, 655, 656, 0, 1391, 1113, 1495, 0, 1115, 1125,
	1126, 0, 1115, 1361, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1013, 0, 0, 0, 0,
	1004, 1488, 1493, 0, 0, 1557, 0, 1550, 1553, 1551,
	1564, 0, 0, 1571, 0, 1573, 0, 1595, 1596, 1588,
	0, 1580, 1583, 1579, 1582, 1639, 1641, 1651, 1652, 1504,
	976, 0, 981, 0, 1495, 92, 0, 197, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 208, 0,
	0, 365, 370, 0, 0, 0, 624, 0, 961, 638,
	627, 0, 716, 0, 720, 0, 0, 0, 723, 724,
	725, 702, 0, 706, 431, 690, 687, 688, 549, 0,
	141, 142, 0, 0, 0, 0, 1441, 0, 1444, 1157,
	1159, 0, 1188, 1190, 1191, 1449, 1450, 1205, 1241, 1244,
	1247, 1250, 1253, 1256, 1259, 1262, 1265, 1268, 1271, 1274,
	1277, 1280, 1283, 1286, 1294, 1301, 1304, 1308, 1313, 0,
	1316, 0, 0, 1317, 0, 657, 1104, 0, 0, 1122,
	1123, 0, 1346, 1348, 1349, 1350, 1363, 0, 1368, 1369,
	0, 1374, 0, 1378, 1389, 0, 1009, 966, 967, 1014,
	1015, 0, 0, 957, 1493, 85, 1494, 1491, 0, 1489,
	1487, 1546, 0, 1555, 1556, 1565, 1566, 1572, 0, 1578,
	0, 1635, 1647, 1643, 0, 90, 0, 0, 0, 1504,
	195, 0, 214, 0, 634, 0, 637, 625, 714, 715,
	0, 727, 719, 721, 722, 704, -2, 1530, 0, 0,
	0, 0, 603, 1442, 0, 0, 1318, 0, 653, 654,
	1112, 1105, 0, 1090, 1091, 1109, 1343, 1345, 0, 0,
	0, 0, 1008, 1010, 1011, 84, 0, 1490, 1130, 0,
	1558, 1559, 1586, 1584, 1653, 0, 1649, 0, 1645, 0,
	0, 977, 984, 0, 91, 444, 437, 1530, 0, 0,
	0, 707, 708, 709, 710, 711, 712, 713, 588, 1532,
	143, 144, 0, 518, 519, 520, 136, 136, 0, 1163,
	1314, 1106, 0, 0, 0, 0, 0, 1364, 0, 1370,
	0, 1375, 0, 968, 969, 1492, 0, 0, 0, 1640,
	0, 0, 1638, 0, 0, 1642, 639, 0, 641, 0,
	-2, 432, 445, 0, 189, 215, 216, 0, 0, 219,
	220, 221, 212, 213, 132, 0, 0, 728, 0, 1533,
	1534, 0, 140, 140, 0, 0, 1097, 1098, 1099, 1100,
	1102, 0, 0, 0, 0, 1131, 1110, 1636, 0, 1648,
	0, 1644, 640, 0, 0, 387, 0, 650, 433, 434,
	0, 440, 441, 442, 443, 217, 218, 662, 0, 0,
	517, 597, 0, 1443, 0, 0, 1365, 0, 1371, 0,
	1376, 0, 1650, 1646, 642, 643, 651, 0, 435, 0,
	436, 0, 0, 0, 631, 0, 662, 1531, 0, 1107,
	1101, 1103, 0, 0, 1129, 0, 652, 648, 446, 448,
	449, 0, 0, 447, 663, 632, 598, 1366, 1372, 0,
	450, 451, 452, 644, 645, 646, 647,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 145, 3, 3, 3, 173, 165, 3,
	87, 89, 170, 168, 88, 169, 225, 171, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 741,
	153, 152, 154, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 175, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 141, 3, 176,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 142, 143, 144, 146,
	147, 148, 149, 150, 151, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 166, 167, 172, 174, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 58022, 697, 58023, 698, 58024, 699,
	58025, 700, 58026, 701, 58027, 702, 58028, 703, 58029, 704,
	58030, 705, 58031, 706, 58032, 707, 58033, 708, 58034, 709,
	58035, 710, 58036, 711, 58037, 712, 58038, 713, 58039, 714,
	58040, 715, 58041, 716, 58042, 717, 58043, 718, 58044, 719,
	58045, 720, 58046, 721, 58047, 722, 58048, 723, 58049, 724,
	58050, 725, 58051, 726, 58052, 727, 58053, 728, 58054, 729,
	58055, 730, 58056, 731, 58057, 732, 58058, 733, 58059, 734,
	58060, 735, 58061, 736, 58062, 737, 58063, 738, 58064, 739,
	58065, 740, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:609
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:622
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:623
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:627
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:667
		{
			setParseTree(yylex, nil)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:673
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:679
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 44:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:684
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:688
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:694
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:698
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:704
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:710
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:716
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:720
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:725
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:729
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:735
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:739
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:745
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:751
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:755
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:759
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:782
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:788
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:793
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:799
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:806
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:812
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:819
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 67:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:823
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:829
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:833
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:837
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:841
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:845
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:851
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:855
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:860
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:864
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:870
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:874
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:879
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:885
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:891
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:898
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:904
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:912
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:916
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:922
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = getAliasedTableExprFromTableName(yyDollar[4].tableName)
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:934
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: getAliasedTableExprFromTableName(yyDollar[4].tableName), Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:946
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:950
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:956
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:962
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:966
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:970
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:974
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:979
		{
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:980
		{
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:984
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:988
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:994
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:998
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1004
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1008
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 103:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1013
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1017
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1023
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1029
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1033
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1039
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1043
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1047
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1051
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1057
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1061
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1065
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1071
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1075
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1081
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1085
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1091
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1095
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1099
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1105
		{
			yyVAL.str = RepeatableReadStr
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1109
		{
			yyVAL.str = ReadCommittedStr
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1113
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1117
		{
			yyVAL.str = SerializableStr
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1123
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1127
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1131
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1137
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1143
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1150
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1159
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1163
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1170
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1174
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1179
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1183
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1189
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1196
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 140:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1201
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1206
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1212
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1217
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1223
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1228
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1232
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1238
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1242
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1248
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 150:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1254
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1261
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1268
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1273
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1278
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1283
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1290
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1297
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1308
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1315
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1319
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1325
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1329
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1333
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1337
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1341
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1345
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 169:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1351
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1355
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1361
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1365
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1371
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1375
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1381
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1385
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1391
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1395
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1401
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1405
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1411
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1416
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1421
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 184:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1425
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1430
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1434
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1438
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 188:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1449
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1458
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1467
		{
			yyVAL.str = ""
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1471
		{
			yyVAL.str = ""
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1480
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1484
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1490
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1496
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1501
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyDollar[1].columnTypeOptionsUnion().DefaultLiteral = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1507
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1512
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1517
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1522
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1527
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1531
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1536
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1540
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1545
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1551
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1557
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 208:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1561
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1567
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1571
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1575
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1581
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1585
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1590
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1594
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1599
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1605
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1611
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1616
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1621
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1627
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1635
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1642
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1646
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1650
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1654
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1658
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1662
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("sysdate"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1672
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1679
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1683
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1689
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1693
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1697
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1701
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1705
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1709
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1713
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1717
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1721
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1725
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1729
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1733
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1737
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1741
		{
			arg := parseBindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: arg}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1746
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1750
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1754
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1760
		{
			yyVAL.str = Armscii8Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1764
		{
			yyVAL.str = ASCIIStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1768
		{
			yyVAL.str = Big5Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1772
		{
			yyVAL.str = UBinaryStr
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1776
		{
			yyVAL.str = Cp1250Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1780
		{
			yyVAL.str = Cp1251Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1784
		{
			yyVAL.str = Cp1256Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1788
		{
			yyVAL.str = Cp1257Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1792
		{
			yyVAL.str = Cp850Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1796
		{
			yyVAL.str = Cp852Str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1800
		{
			yyVAL.str = Cp866Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1804
		{
			yyVAL.str = Cp932Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1808
		{
			yyVAL.str = Dec8Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1812
		{
			yyVAL.str = EucjpmsStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1816
		{
			yyVAL.str = EuckrStr
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1820
		{
			yyVAL.str = Gb18030Str
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1824
		{
			yyVAL.str = Gb2312Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1828
		{
			yyVAL.str = GbkStr
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1832
		{
			yyVAL.str = Geostd8Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1836
		{
			yyVAL.str = GreekStr
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1840
		{
			yyVAL.str = HebrewStr
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1844
		{
			yyVAL.str = Hp8Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1848
		{
			yyVAL.str = Keybcs2Str
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1852
		{
			yyVAL.str = Koi8rStr
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1856
		{
			yyVAL.str = Koi8uStr
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1860
		{
			yyVAL.str = Latin1Str
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1864
		{
			yyVAL.str = Latin2Str
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1868
		{
			yyVAL.str = Latin5Str
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1872
		{
			yyVAL.str = Latin7Str
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1876
		{
			yyVAL.str = MacceStr
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1880
		{
			yyVAL.str = MacromanStr
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1884
		{
			yyVAL.str = SjisStr
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1888
		{
			yyVAL.str = Swe7Str
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1892
		{
			yyVAL.str = Tis620Str
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1896
		{
			yyVAL.str = Ucs2Str
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1900
		{
			yyVAL.str = UjisStr
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1904
		{
			yyVAL.str = Utf16Str
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1908
		{
			yyVAL.str = Utf16leStr
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1912
		{
			yyVAL.str = Utf32Str
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1916
		{
			yyVAL.str = Utf8mb3Str
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1920
		{
			yyVAL.str = Utf8mb4Str
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1924
		{
			yyVAL.str = Utf8mb3Str
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1934
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1938
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1942
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1948
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1952
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1956
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1962
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1966
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1972
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1976
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1980
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1984
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1990
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2001
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2006
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2012
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2016
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2020
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2024
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2028
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2032
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2036
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2040
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2044
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2050
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2056
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2062
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2068
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2074
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2080
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2086
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2094
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2098
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2102
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2106
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2110
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2116
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2120
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2126
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2130
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2134
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2138
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2142
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2146
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2150
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2154
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2158
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2162
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2166
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2170
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 350:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2174
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 351:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2179
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2185
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2189
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2193
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2197
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2201
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2205
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2209
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2213
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2219
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2224
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2229
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2233
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2238
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 365:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2242
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2251
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2255
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2262
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2266
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2272
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2280
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2284
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2288
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2293
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2297
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2302
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2306
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2310
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2314
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2318
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2323
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2328
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2333
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2338
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2344
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2348
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2353
		{
			yyVAL.str = ""
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2357
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2361
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 390:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2367
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2372
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2376
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2382
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2386
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2392
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2396
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2401
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2405
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2409
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2413
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2417
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2421
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2427
		{
			yyVAL.str = ""
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2431
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 405:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2437
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2441
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2445
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2449
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2453
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2458
		{
			yyVAL.str = ""
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2462
		{
			yyVAL.str = yyDollar[2].str
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2468
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2472
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2476
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2482
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2486
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 417:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2491
		{
			yyVAL.str = "key"
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2495
		{
			yyVAL.str = yyDollar[1].str
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2501
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2505
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2510
		{
			yyVAL.str = ""
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2514
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2520
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2524
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2530
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2534
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2540
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2544
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2550
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2554
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2560
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2566
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2570
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2574
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2578
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2582
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2587
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2591
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2597
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2603
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2609
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2613
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2617
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2622
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2626
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2632
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2638
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2644
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2648
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2652
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2656
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2660
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2665
		{
			yyVAL.str = ""
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2669
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2673
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2678
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2682
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2688
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2692
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2697
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2701
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2706
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2710
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2716
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2720
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2724
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2730
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2734
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2740
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2744
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2748
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2752
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2756
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2760
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2764
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2768
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2772
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2776
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2780
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2784
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2788
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2792
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2796
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2800
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2804
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2808
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2812
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2816
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2820
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2824
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2828
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2832
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2836
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2840
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2844
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2848
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2852
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2856
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2860
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2864
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), DBPartitionOption: yyDollar[3].partitionOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2868
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), TBPartitionOption: yyDollar[3].partitionOptionUnion(), Value: NewIntLiteral(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2872
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), DistributionPrimaryKeyOption: yyDollar[4].distributionPrimaryKeyOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2876
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2880
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: encodeSQLString(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2886
		{
			yyVAL.str = ""
		}
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2890
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2894
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2913
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2917
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2921
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2925
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2930
		{
			yyVAL.str = ""
		}
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2936
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2940
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2945
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2949
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2954
		{
			yyVAL.str = ""
		}
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2958
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2963
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2967
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2971
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2976
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2980
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2984
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2988
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2992
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 537:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2996
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3002
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3006
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3010
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3016
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3020
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3024
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3028
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3032
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3036
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3040
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3044
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion(), DefaultLiteral: true}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3048
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3052
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3057
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3062
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3066
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3070
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3074
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3078
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3082
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3086
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3090
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3094
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3098
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3102
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3106
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3110
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3114
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3118
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3122
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3126
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3130
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3134
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3138
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3144
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3148
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3154
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3158
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3162
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3166
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3170
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3174
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3178
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3182
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3186
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3190
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3196
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3203
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3210
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3217
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3223
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3233
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3240
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3247
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3259
		{
			yyLOCAL = &AlterVschema{
				Action: CreateTindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3271
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3281
		{
			yyLOCAL = &AlterVschema{
				Action: DropTindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3291
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3295
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3299
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-15 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3312
		{
			yyLOCAL = &AlterVschema{
				Action: AddColTindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
				TableCount: convertStringToInt(yyDollar[15].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3326
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3336
		{
			yyLOCAL = &AlterVschema{
				Action: DropColTindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3346
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3350
		{
			yyLOCAL = &AlterVschema{Action: DropSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3354
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3365
		{
			yyLOCAL = &AlterVschema{
				Action: DropAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3372
		{
			yyLOCAL = &AlterVschema{
				Action: AddColSingleDDLAction,
				Table:  yyDollar[5].tableName,
				Value:  encodeSQLString(yyDollar[8].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3380
		{
			yyLOCAL = &AlterVschema{
				Action: DropColSingleDDLAction,
				Table:  yyDollar[5].tableName,
				Value:  encodeSQLString(yyDollar[8].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3388
		{
			yyLOCAL = &AlterVschema{
				Action: AddColBroadcastDDLAction,
				Table:  yyDollar[5].tableName,
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3395
		{
			yyLOCAL = &AlterVschema{
				Action: DropColBroadcastDDLAction,
				Table:  yyDollar[5].tableName,
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3402
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3409
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3416
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3423
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3431
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3437
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3444
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3450
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3457
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3463
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3472
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3480
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3487
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3494
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3498
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3507
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3515
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3524
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3531
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DistributionPrimaryKeyOption
//line sql.y:3541
		{
			yyLOCAL = &DistributionPrimaryKeyOption{
				TableName: yyDollar[1].tableName,
				ColList:   yyDollar[3].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3550
		{
			yyLOCAL = &PartitionOption{
				PartitionMethodName: yyDollar[1].identifierCI,
				ColList:             yyDollar[3].columnsUnion(),
				PartitionMethodType: yyDollar[5].identifierCI,
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3560
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3564
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3573
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3584
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3588
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3593
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3597
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3602
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3606
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3612
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3618
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3624
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3628
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3634
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3638
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3644
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3650
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3656
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3662
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3668
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3672
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3676
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3680
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3686
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3692
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3698
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3702
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3706
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3712
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3716
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3721
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3725
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3730
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3734
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3740
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3744
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3748
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3752
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3756
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3760
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3764
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3768
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3772
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3776
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3780
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3784
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3788
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3792
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3796
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3800
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3804
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3808
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3812
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3816
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3820
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3824
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3829
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3833
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3837
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3843
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3847
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3853
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 692:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3858
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3862
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3867
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3872
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3877
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3882
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3887
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3893
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3899
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3904
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3910
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3916
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3920
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3926
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3931
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3935
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3940
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3945
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3950
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3955
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3961
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3967
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3974
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3981
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3988
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3996
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4000
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:4006
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4012
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4018
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4024
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:4030
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:4036
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4042
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:4048
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4054
		{
			yyVAL.str = ""
		}
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4058
		{
			yyVAL.str = ""
		}
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4064
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:4070
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4074
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 732:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4080
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion(), DropSchema: yyDollar[8].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4084
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4093
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4097
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4103
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4107
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4113
		{
			yyLOCAL = &Analyze{IsLocal: yyDollar[2].booleanUnion(), Table: yyDollar[4].tableName}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4119
		{
			yyLOCAL = &PurgeBinaryLogs{To: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4123
		{
			yyLOCAL = &PurgeBinaryLogs{Before: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4129
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4133
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4137
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4141
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4145
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4149
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4153
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4157
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4161
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4165
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4169
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4173
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4177
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4181
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4185
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4189
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4193
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4197
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4201
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4205
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4209
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4213
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4217
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4221
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4225
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4229
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4233
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4237
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4241
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4245
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4249
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4253
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4257
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4261
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4265
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4269
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4273
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4277
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4281
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4285
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4289
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4293
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4297
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4304
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4308
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4312
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4316
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4320
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4324
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4328
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4332
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4336
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4342
		{
			yyVAL.str = ""
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4346
		{
			yyVAL.str = "extended "
		}
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4352
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4356
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4362
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4366
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4372
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4376
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4380
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4386
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4390
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4394
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4400
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4404
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4410
		{
			yyVAL.empty = struct{}{}
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4414
		{
			yyVAL.empty = struct{}{}
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4418
		{
			yyVAL.empty = struct{}{}
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4424
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4428
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4434
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4438
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4442
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4449
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4453
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4457
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4461
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4468
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4472
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4477
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4481
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4487
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4491
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4497
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4501
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4505
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4512
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4518
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4522
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4527
		{
			yyVAL.empty = struct{}{}
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4529
		{
			yyVAL.empty = struct{}{}
		}
	case 833:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4532
		{
			yyVAL.empty = struct{}{}
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4534
		{
			yyVAL.empty = struct{}{}
		}
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4538
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4544
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4549
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4553
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4557
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4561
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4565
		{
			yyLOCAL = VTExplainType
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4569
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4573
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4578
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4582
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4586
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4590
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4596
		{
			yyVAL.str = yyDollar[1].str
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4600
		{
			yyVAL.str = yyDollar[1].str
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4604
		{
			yyVAL.str = yyDollar[1].str
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4610
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4614
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4618
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4622
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4627
		{
			yyVAL.str = ""
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4631
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4635
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 858:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4641
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4645
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4651
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4657
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4661
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4667
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4673
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4677
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4683
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4689
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4693
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4697
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4701
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4707
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4713
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4719
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4723
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4727
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4731
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4735
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4739
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4745
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4749
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4755
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4759
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4763
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4767
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4771
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4775
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4779
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4783
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4787
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4791
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4795
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4799
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 893:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4804
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4808
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4812
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4817
		{
			yyVAL.str = ""
		}
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4821
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4826
		{
			setAllowComments(yylex, true)
		}
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4830
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4836
		{
			yyVAL.strs = nil
		}
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4840
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4846
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4850
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4854
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4859
		{
			yyVAL.str = ""
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4863
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4867
		{
			yyVAL.str = SQLCacheStr
		}
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4872
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4876
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4880
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4886
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4890
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4900
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4905
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4909
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4915
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4919
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4924
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4928
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4933
		{
			yyVAL.strs = nil
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4937
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4941
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4945
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 924:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4949
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4955
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4959
		{
			yyVAL.str = SQLCacheStr
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4963
		{
			yyVAL.str = DistinctStr
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4967
		{
			yyVAL.str = DistinctStr
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4971
		{
			yyVAL.str = StraightJoinHint
		}
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4975
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4979
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4985
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4989
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4995
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4999
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5003
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5007
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5012
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5016
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5020
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5027
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 943:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5032
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5036
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5042
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5048
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5052
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5062
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5066
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5070
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5074
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5080
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5084
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5090
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5094
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5099
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5103
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5108
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5112
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5118
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5122
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5128
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5132
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5138
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5142
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5146
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5150
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5156
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5160
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 972:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5173
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5177
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5181
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5185
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5191
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 977:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5193
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 978:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5197
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5199
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 980:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5203
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5205
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 982:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5208
		{
			yyVAL.empty = struct{}{}
		}
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5210
		{
			yyVAL.empty = struct{}{}
		}
	case 984:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5213
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5217
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5221
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5228
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5234
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5238
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5242
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5248
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5254
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5258
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5262
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5266
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5272
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5276
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5286
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5290
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5296
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5300
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5306
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 1004:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5311
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5315
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5321
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5325
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 1008:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5331
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5335
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5339
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5343
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5348
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5352
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5356
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5360
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5366
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5370
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5377
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5381
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5385
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5389
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5393
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5397
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5401
		{
			yyLOCAL = &AssignmentExpr{Left: yyDollar[1].variableUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5405
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5411
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5415
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5419
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5423
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5429
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5433
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5437
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5441
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5445
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5449
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5453
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5457
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5461
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5465
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5469
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5475
		{
		}
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5478
		{
		}
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5484
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5488
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5492
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5496
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5500
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5504
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5508
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAdd, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5512
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinarySub, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5516
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5520
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5524
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5528
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5532
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5536
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5540
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5546
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5550
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5554
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5558
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5562
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5566
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5570
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5574
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5578
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5582
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5586
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5590
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5594
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5598
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5602
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5606
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5610
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5614
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5618
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5622
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5630
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5634
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAddLeft, Date: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion(), Interval: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5638
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5642
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5646
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5652
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5656
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5662
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5666
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5672
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5676
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5680
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5686
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5690
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5697
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5701
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5705
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5709
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5713
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5719
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5723
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5727
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5731
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5735
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5739
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5743
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5748
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5752
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5758
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5762
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5767
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5771
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5776
		{
		}
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5779
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1112:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5785
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5791
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5795
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5800
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5807
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5813
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5817
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5823
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5827
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5833
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5837
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5842
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5849
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5855
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5859
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5865
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5871
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5875
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1132:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5881
		{
			yyVAL.str = ""
		}
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5885
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5891
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5895
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5902
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5906
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5910
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5914
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5920
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5924
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5928
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5932
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5936
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5940
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5944
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5950
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5954
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5958
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			markBindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5965
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5971
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5975
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5985
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5989
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5999
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6003
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6007
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6011
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6015
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6019
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6023
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6027
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6031
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6035
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6046
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6050
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6056
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6060
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("curdate")}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6064
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6069
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("curtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6074
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6078
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6082
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6086
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6090
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6094
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6098
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6102
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6106
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6110
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6114
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6118
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6122
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6126
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6130
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6134
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6138
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6142
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6146
		{
			yyLOCAL = &AnyValue{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6150
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprTimestampadd, Date: yyDollar[7].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6154
		{
			yyLOCAL = &TimestampDiffExpr{Unit: yyDollar[3].intervalTypeUnion(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6158
		{
			yyLOCAL = &ExtractFuncExpr{IntervalType: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6162
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6166
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6170
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6174
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6178
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, Type: LeadingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6182
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, Type: TrailingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6186
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6190
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6194
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6198
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6202
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6206
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6210
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6214
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6218
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6222
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6226
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6230
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6234
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6238
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6242
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6246
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6250
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6254
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6258
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6262
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6266
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsEmpty, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6270
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsSimple, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6274
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Dimension, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6278
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Envelope, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6282
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: GeometryType, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6286
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6290
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6294
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6298
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6302
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: EndPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6306
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: IsClosed, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6310
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6314
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6318
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: NumPoints, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6322
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: PointN, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6326
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: StartPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6330
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6334
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6338
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6342
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6346
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6350
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6354
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6358
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6362
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6366
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6370
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6374
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6378
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6382
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6386
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6390
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6394
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6398
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6402
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6406
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6410
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6414
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6418
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6422
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6426
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6430
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6434
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6438
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6442
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6446
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6450
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6454
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6458
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6462
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6466
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6470
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6474
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6478
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6482
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6486
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6490
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6494
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6498
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6502
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6506
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6510
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6514
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6518
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6522
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6526
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6530
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6534
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6538
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Area, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6542
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Centroid, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6546
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: ExteriorRing, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6550
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: InteriorRingN, Polygon: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6554
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: NumInteriorRings, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6558
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: GeometryN, GeomColl: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6562
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: NumGeometries, GeomColl: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6566
		{
			yyLOCAL = &GeoHashFromLatLongExpr{Longitude: yyDollar[3].exprUnion(), Latitude: yyDollar[5].exprUnion(), MaxLength: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6570
		{
			yyLOCAL = &GeoHashFromPointExpr{Point: yyDollar[3].exprUnion(), MaxLength: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6574
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LatitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6578
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LongitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6582
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: PointFromHash, GeoHash: yyDollar[3].exprUnion(), SridOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6586
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6590
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6594
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion(), Srid: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6598
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6602
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6606
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion(), Bitmask: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6610
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6614
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6618
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6622
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6626
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6630
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6634
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6638
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6642
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6646
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6650
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6654
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6658
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6662
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6666
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6670
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6674
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6678
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6682
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6686
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6690
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6694
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6698
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6702
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6706
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6710
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6714
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6718
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6722
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6726
		{
			yyLOCAL = &MultiPolygonExpr{PolygonParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6730
		{
			yyLOCAL = &MultiPointExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6734
		{
			yyLOCAL = &MultiLinestringExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6738
		{
			yyLOCAL = &PolygonExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6742
		{
			yyLOCAL = &LineStringExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6746
		{
			yyLOCAL = &PointExpr{XCordinate: yyDollar[3].exprUnion(), YCordinate: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6750
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6754
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6758
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6762
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6766
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6770
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6774
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6778
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6782
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateAdd, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6786
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateSub, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6790
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6794
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6804
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6808
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6812
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6816
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6821
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6825
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6831
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6835
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6839
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6843
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6847
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6852
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6856
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6860
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6864
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6868
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6872
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6877
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6881
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6885
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6889
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6896
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6900
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6906
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6910
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6914
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6918
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6924
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6928
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6932
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6936
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6940
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6944
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6948
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6953
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6957
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6963
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6967
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6971
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6975
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6979
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6983
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6987
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6991
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6995
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6999
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7003
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7007
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7011
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7015
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7019
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7023
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7027
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7031
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7035
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7039
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7045
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7049
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7053
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7057
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7061
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7065
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7069
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7073
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7077
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7081
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7085
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7089
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7093
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7097
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7101
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7105
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7109
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7113
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:7123
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:7127
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:7131
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7141
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7145
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7149
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7153
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7157
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7163
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7167
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7171
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7175
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7179
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7185
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7189
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7193
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1448:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7199
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7203
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7207
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7213
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7217
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7221
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7225
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7229
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7235
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7239
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7243
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7247
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7251
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7255
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7259
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7263
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7267
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7271
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7277
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7281
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7286
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7290
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7295
		{
			yyVAL.str = string("")
		}
	case 1471:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7299
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7305
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7309
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7315
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7320
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7324
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7330
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7334
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7338
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7342
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7348
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7352
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7358
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7367
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7371
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7376
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7380
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7385
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7389
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7395
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7401
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7405
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1493:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7410
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7414
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7419
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7423
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7429
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7435
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7439
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7445
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7450
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7454
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7458
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7463
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7467
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7473
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7477
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7481
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7486
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7490
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7494
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7498
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7502
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7509
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7513
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7517
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7521
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7527
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7531
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7535
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7539
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7544
		{
			yyVAL.str = ""
		}
	case 1523:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7548
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1524:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7552
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1525:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7556
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1526:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7561
		{
			yyVAL.str = ""
		}
	case 1527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7565
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7571
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7575
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1530:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7580
		{
			yyVAL.str = ""
		}
	case 1531:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7584
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1532:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7589
		{
			yyVAL.str = "cascaded"
		}
	case 1533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7593
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7597
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1535:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7602
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7606
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7612
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7618
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7624
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7633
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7637
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1542:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7642
		{
			yyVAL.str = ""
		}
	case 1543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7646
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7652
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7656
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7662
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7666
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7670
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7675
		{
			yyVAL.str = ""
		}
	case 1550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7679
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7683
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1552:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7688
		{
			yyVAL.str = ""
		}
	case 1553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7692
		{
			yyVAL.str = " header"
		}
	case 1554:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7697
		{
			yyVAL.str = ""
		}
	case 1555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7701
		{
			yyVAL.str = " manifest on"
		}
	case 1556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7705
		{
			yyVAL.str = " manifest off"
		}
	case 1557:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7710
		{
			yyVAL.str = ""
		}
	case 1558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7714
		{
			yyVAL.str = " overwrite on"
		}
	case 1559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7718
		{
			yyVAL.str = " overwrite off"
		}
	case 1560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7724
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1561:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7729
		{
			yyVAL.str = ""
		}
	case 1562:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7733
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7739
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7743
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7749
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1566:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7753
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1567:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7758
		{
			yyVAL.str = ""
		}
	case 1568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7762
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1569:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7768
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7772
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1571:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7778
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1572:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7782
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1573:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7786
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1574:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7791
		{
			yyVAL.str = ""
		}
	case 1575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7795
		{
			yyVAL.str = " optionally"
		}
	case 1576:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7808
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7812
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7816
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7820
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7824
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7830
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7834
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7838
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1584:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7842
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1585:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7847
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7851
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7857
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7861
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7867
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7871
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7877
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7881
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7886
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7896
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7900
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7906
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7913
		{
			yyVAL.str = "charset"
		}
	case 1601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7923
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7927
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7931
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7940
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7942
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7945
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7947
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7950
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7952
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7955
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7957
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1614:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7960
		{
			yyVAL.empty = struct{}{}
		}
	case 1615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7962
		{
			yyVAL.empty = struct{}{}
		}
	case 1616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7964
		{
			yyVAL.empty = struct{}{}
		}
	case 1617:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7968
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1618:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7973
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7977
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1620:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7982
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7984
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1622:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7988
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7994
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7998
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8005
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8011
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8015
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1629:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8021
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8025
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8032
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1633:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8037
		{
			yyVAL.str = ""
		}
	case 1634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8041
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:8046
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:8050
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1637:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL interface{}
//line sql.y:8055
		{
			escape := "\\"
			yyLOCAL = &FieldsClause{
				Terminated: "\t",
				Escaped:    escape[0],
			}
		}
		yyVAL.union = yyLOCAL
	case 1638:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL interface{}
//line sql.y:8063
		{
			escape := yyDollar[4].itemUnion().(string)
			if escape != "\\" && len(escape) > 1 {
				yylex.Error("Incorrect arguments  to ESCAPE")
				return 1
			}
			var enclosed byte
			str := yyDollar[3].itemUnion().(string)
			if len(str) > 1 {
				yylex.Error("Incorrect arguments  to ENCLOSED")
				return 1
			} else if len(str) != 0 {
				enclosed = str[0]
			}
			yyLOCAL = &FieldsClause{
				Terminated: yyDollar[2].itemUnion().(string),
				Enclosed:   enclosed,
				Escaped:    escape[0],
			}
		}
		yyVAL.union = yyLOCAL
	case 1639:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL interface{}
//line sql.y:8085
		{
			yyLOCAL = &LinesClause{Terminated: "\n"}
		}
		yyVAL.union = yyLOCAL
	case 1640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL interface{}
//line sql.y:8089
		{
			yyLOCAL = &LinesClause{Starting: yyDollar[2].itemUnion().(string), Terminated: yyDollar[3].itemUnion().(string)}
		}
		yyVAL.union = yyLOCAL
	case 1641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL interface{}
//line sql.y:8094
		{
			yyLOCAL = "\t"
		}
		yyVAL.union = yyLOCAL
	case 1642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL interface{}
//line sql.y:8098
		{
			yyLOCAL = string(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1643:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL interface{}
//line sql.y:8103
		{
			yyLOCAL = ""
		}
		yyVAL.union = yyLOCAL
	case 1644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL interface{}
//line sql.y:8107
		{
			yyLOCAL = string(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1645:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL interface{}
//line sql.y:8112
		{
			yyLOCAL = "\\"
		}
		yyVAL.union = yyLOCAL
	case 1646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL interface{}
//line sql.y:8116
		{
			yyLOCAL = string(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1647:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL interface{}
//line sql.y:8121
		{
			yyLOCAL = ""
		}
		yyVAL.union = yyLOCAL
	case 1648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL interface{}
//line sql.y:8125
		{
			yyLOCAL = string(yyDollar[3].str)

		}
		yyVAL.union = yyLOCAL
	case 1649:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL interface{}
//line sql.y:8131
		{
			yyLOCAL = "\n"
		}
		yyVAL.union = yyLOCAL
	case 1650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL interface{}
//line sql.y:8135
		{
			yyLOCAL = string(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1653:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8144
		{
			x := &LoadDataStmt{
				Action:  string(yyDollar[1].str),
				Path:    string(yyDollar[5].str),
				Table:   yyDollar[8].tableName,
				Columns: yyDollar[11].columnsUnion(),
			}
			if yyDollar[3].str != "" {
				x.IsLocal = true
			}
			if yyDollar[9].itemUnion() != nil {
				x.FieldsInfo = yyDollar[9].itemUnion().(*FieldsClause)
			}
			if yyDollar[10].itemUnion() != nil {
				x.LinesInfo = yyDollar[10].itemUnion().(*LinesClause)
			}
			yyLOCAL = x
		}
		yyVAL.union = yyLOCAL
	case 1654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8165
		{
			yyLOCAL = &Kill{Type: yyDollar[2].killTypeUnion(), ProcesslistID: convertStringToUInt64(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 1655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8171
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8175
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8179
		{
			yyLOCAL = QueryType
		}
		yyVAL.union = yyLOCAL
	case 2277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8827
		{
		}
	case 2278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8832
		{
		}
	case 2279:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8836
		{
			skipToEnd(yylex)
		}
	case 2280:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8841
		{
			skipToEnd(yylex)
		}
	case 2281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8845
		{
			skipToEnd(yylex)
		}
	case 2282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8849
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
