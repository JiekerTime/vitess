[
  {
    "comment": "scatter aggregate with non-aggregate expressions.",
    "query": "select id, count(*) from t_user",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id, count(*) from t_user",
      "Instructions": {
        "OperatorType": "Aggregate",
        "Variant": "Scalar",
        "Aggregates": "random(0) AS id, sum_count_star(1) AS count(*)",
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select id, count(*) from t_user_0 where 1 != 1",
            "Query": "select id, count(*) from t_user",
            "Table": "t_user"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "scatter aggregate order by null",
    "query": "select count(*) from t_user order by null",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select count(*) from t_user order by null",
      "Instructions": {
        "OperatorType": "Aggregate",
        "Variant": "Scalar",
        "Aggregates": "sum_count_star(0) AS count(*)",
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select count(*) from t_user_0 where 1 != 1",
            "Query": "select count(*) from t_user",
            "Table": "t_user"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "scatter aggregate symtab lookup error",
    "query": "select id, b as id, count(*) from t_user order by id",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id, b as id, count(*) from t_user order by id",
      "Instructions": {
        "OperatorType": "Sort",
        "Variant": "Memory",
        "OrderBy": "(1|3) ASC",
        "ResultColumns": 3,
        "Inputs": [
          {
            "OperatorType": "Aggregate",
            "Variant": "Scalar",
            "Aggregates": "random(0) AS id, random(1) AS id, sum_count_star(2) AS count(*), random(3)",
            "Inputs": [
              {
                "OperatorType": "TableRoute",
                "Variant": "Scatter-Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select id, b as id, count(*), weight_string(b) from t_user_0 where 1 != 1",
                "Query": "select id, b as id, count(*), weight_string(b) from t_user",
                "Table": "t_user"
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "scatter aggregate group by select col",
    "query": "select col from t_user group by col",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select col from t_user group by col",
      "Instructions": {
        "OperatorType": "Aggregate",
        "Variant": "Ordered",
        "GroupBy": "0",
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select col from t_user_0 where 1 != 1 group by col",
            "OrderBy": "0 ASC",
            "Query": "select col from t_user group by col order by col asc",
            "Table": "t_user"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "scatter aggregate multiple group by (columns)",
    "query": "select a, b, count(*) from t_user group by a, b",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select a, b, count(*) from t_user group by a, b",
      "Instructions": {
        "OperatorType": "Aggregate",
        "Variant": "Ordered",
        "Aggregates": "sum_count_star(2) AS count(*)",
        "GroupBy": "(0|3), (1|4)",
        "ResultColumns": 3,
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select a, b, count(*), weight_string(a), weight_string(b) from t_user_0 where 1 != 1 group by a, b, weight_string(a), weight_string(b)",
            "OrderBy": "(0|3) ASC, (1|4) ASC",
            "Query": "select a, b, count(*), weight_string(a), weight_string(b) from t_user group by a, b, weight_string(a), weight_string(b) order by a asc, b asc",
            "Table": "t_user"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "scatter aggregate multiple group by (numbers)",
    "query": "select a, b, count(*) from t_user group by 2, 1",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select a, b, count(*) from t_user group by 2, 1",
      "Instructions": {
        "OperatorType": "Aggregate",
        "Variant": "Ordered",
        "Aggregates": "sum_count_star(2) AS count(*)",
        "GroupBy": "(1|3), (0|4)",
        "ResultColumns": 3,
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select a, b, count(*), weight_string(b), weight_string(a) from t_user_0 where 1 != 1 group by b, a, weight_string(b), weight_string(a)",
            "OrderBy": "(1|3) ASC, (0|4) ASC",
            "Query": "select a, b, count(*), weight_string(b), weight_string(a) from t_user group by b, a, weight_string(b), weight_string(a) order by b asc, a asc",
            "Table": "t_user"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "scatter aggregate multiple group by (numbers)",
    "query": "select a, b, count(*) from t_user group by 2, 1",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select a, b, count(*) from t_user group by 2, 1",
      "Instructions": {
        "OperatorType": "Aggregate",
        "Variant": "Ordered",
        "Aggregates": "sum_count_star(2) AS count(*)",
        "GroupBy": "(1|3), (0|4)",
        "ResultColumns": 3,
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select a, b, count(*), weight_string(b), weight_string(a) from t_user_0 where 1 != 1 group by b, a, weight_string(b), weight_string(a)",
            "OrderBy": "(1|3) ASC, (0|4) ASC",
            "Query": "select a, b, count(*), weight_string(b), weight_string(a) from t_user group by b, a, weight_string(b), weight_string(a) order by b asc, a asc",
            "Table": "t_user"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "scatter aggregate group by aggregate function",
    "query": "select count(*) b from t_user group by b",
    "plan": "VT03005: cannot group on 'count(*)'"
  },
  {
    "comment": "scatter aggregate multiple group by columns inverse order",
    "query": "select a, b, count(*) from t_user group by b, a",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select a, b, count(*) from t_user group by b, a",
      "Instructions": {
        "OperatorType": "Aggregate",
        "Variant": "Ordered",
        "Aggregates": "sum_count_star(2) AS count(*)",
        "GroupBy": "(1|3), (0|4)",
        "ResultColumns": 3,
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select a, b, count(*), weight_string(b), weight_string(a) from t_user_0 where 1 != 1 group by b, a, weight_string(b), weight_string(a)",
            "OrderBy": "(1|3) ASC, (0|4) ASC",
            "Query": "select a, b, count(*), weight_string(b), weight_string(a) from t_user group by b, a, weight_string(b), weight_string(a) order by b asc, a asc",
            "Table": "t_user"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "scatter aggregate group by column number",
    "query": "select col from t_user group by 1",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select col from t_user group by 1",
      "Instructions": {
        "OperatorType": "Aggregate",
        "Variant": "Ordered",
        "GroupBy": "0",
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select col from t_user_0 where 1 != 1 group by col",
            "OrderBy": "0 ASC",
            "Query": "select col from t_user group by col order by col asc",
            "Table": "t_user"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "scatter aggregate group by invalid column number",
    "query": "select col from t_user group by 2",
    "plan": "Unknown column '2' in 'group statement'"
  },
  {
    "comment": "scatter aggregate with numbered order by columns",
    "query": "select a, b, c, d, count(*) from t_user group by 1, 2, 3 order by 1, 2, 3",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select a, b, c, d, count(*) from t_user group by 1, 2, 3 order by 1, 2, 3",
      "Instructions": {
        "OperatorType": "Aggregate",
        "Variant": "Ordered",
        "Aggregates": "random(3) AS d, sum_count_star(4) AS count(*)",
        "GroupBy": "(0|5), (1|6), (2|7)",
        "ResultColumns": 5,
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select a, b, c, d, count(*), weight_string(a), weight_string(b), weight_string(c) from t_user_0 where 1 != 1 group by a, b, c, weight_string(a), weight_string(b), weight_string(c)",
            "OrderBy": "(0|5) ASC, (1|6) ASC, (2|7) ASC",
            "Query": "select a, b, c, d, count(*), weight_string(a), weight_string(b), weight_string(c) from t_user group by a, b, c, weight_string(a), weight_string(b), weight_string(c) order by a asc, b asc, c asc",
            "Table": "t_user"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "scatter aggregate with named order by columns",
    "query": "select a, b, c, d, count(*) from t_user group by 1, 2, 3 order by a, b, c",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select a, b, c, d, count(*) from t_user group by 1, 2, 3 order by a, b, c",
      "Instructions": {
        "OperatorType": "Aggregate",
        "Variant": "Ordered",
        "Aggregates": "random(3) AS d, sum_count_star(4) AS count(*)",
        "GroupBy": "(0|5), (1|6), (2|7)",
        "ResultColumns": 5,
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select a, b, c, d, count(*), weight_string(a), weight_string(b), weight_string(c) from t_user_0 where 1 != 1 group by a, b, c, weight_string(a), weight_string(b), weight_string(c)",
            "OrderBy": "(0|5) ASC, (1|6) ASC, (2|7) ASC",
            "Query": "select a, b, c, d, count(*), weight_string(a), weight_string(b), weight_string(c) from t_user group by a, b, c, weight_string(a), weight_string(b), weight_string(c) order by a asc, b asc, c asc",
            "Table": "t_user"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "scatter aggregate with jumbled order by columns",
    "query": "select a, b, c, d, count(*) from t_user group by 1, 2, 3, 4 order by d, b, a, c",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select a, b, c, d, count(*) from t_user group by 1, 2, 3, 4 order by d, b, a, c",
      "Instructions": {
        "OperatorType": "Aggregate",
        "Variant": "Ordered",
        "Aggregates": "sum_count_star(4) AS count(*)",
        "GroupBy": "(3|5), (1|6), (0|7), (2|8)",
        "ResultColumns": 5,
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select a, b, c, d, count(*), weight_string(d), weight_string(b), weight_string(a), weight_string(c) from t_user_0 where 1 != 1 group by a, b, c, d, weight_string(d), weight_string(b), weight_string(a), weight_string(c)",
            "OrderBy": "(3|5) ASC, (1|6) ASC, (0|7) ASC, (2|8) ASC",
            "Query": "select a, b, c, d, count(*), weight_string(d), weight_string(b), weight_string(a), weight_string(c) from t_user group by a, b, c, d, weight_string(d), weight_string(b), weight_string(a), weight_string(c) order by d asc, b asc, a asc, c asc",
            "Table": "t_user"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "scatter aggregate with jumbled group by and order by columns",
    "query": "select a, b, c, d, count(*) from t_user group by 3, 2, 1, 4 order by d, b, a, c",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select a, b, c, d, count(*) from t_user group by 3, 2, 1, 4 order by d, b, a, c",
      "Instructions": {
        "OperatorType": "Aggregate",
        "Variant": "Ordered",
        "Aggregates": "sum_count_star(4) AS count(*)",
        "GroupBy": "(3|5), (1|6), (0|7), (2|8)",
        "ResultColumns": 5,
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select a, b, c, d, count(*), weight_string(d), weight_string(b), weight_string(a), weight_string(c) from t_user_0 where 1 != 1 group by c, b, a, d, weight_string(d), weight_string(b), weight_string(a), weight_string(c)",
            "OrderBy": "(3|5) ASC, (1|6) ASC, (0|7) ASC, (2|8) ASC",
            "Query": "select a, b, c, d, count(*), weight_string(d), weight_string(b), weight_string(a), weight_string(c) from t_user group by c, b, a, d, weight_string(d), weight_string(b), weight_string(a), weight_string(c) order by d asc, b asc, a asc, c asc",
            "Table": "t_user"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "scatter aggregate with some descending order by cols",
    "query": "select a, b, c, count(*) from t_user group by 3, 2, 1 order by 1 desc, 3 desc, b",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select a, b, c, count(*) from t_user group by 3, 2, 1 order by 1 desc, 3 desc, b",
      "Instructions": {
        "OperatorType": "Aggregate",
        "Variant": "Ordered",
        "Aggregates": "sum_count_star(3) AS count(*)",
        "GroupBy": "(0|4), (2|5), (1|6)",
        "ResultColumns": 4,
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select a, b, c, count(*), weight_string(a), weight_string(c), weight_string(b) from t_user_0 where 1 != 1 group by c, b, a, weight_string(a), weight_string(c), weight_string(b)",
            "OrderBy": "(0|4) DESC, (2|5) DESC, (1|6) ASC",
            "Query": "select a, b, c, count(*), weight_string(a), weight_string(c), weight_string(b) from t_user group by c, b, a, weight_string(a), weight_string(c), weight_string(b) order by a desc, c desc, b asc",
            "Table": "t_user"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "invalid order by column numner for scatter",
    "query": "select col, count(*) from t_user group by col order by 5 limit 10",
    "plan": "Unknown column '5' in 'order clause'"
  },
  {
    "comment": "aggregate with limit",
    "query": "select col, count(*) from t_user group by col limit 10",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select col, count(*) from t_user group by col limit 10",
      "Instructions": {
        "OperatorType": "Limit",
        "Count": "INT64(10)",
        "Inputs": [
          {
            "OperatorType": "Aggregate",
            "Variant": "Ordered",
            "Aggregates": "sum_count_star(1) AS count(*)",
            "GroupBy": "0",
            "Inputs": [
              {
                "OperatorType": "TableRoute",
                "Variant": "Scatter-Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select col, count(*) from t_user_0 where 1 != 1 group by col",
                "OrderBy": "0 ASC",
                "Query": "select col, count(*) from t_user group by col order by col asc",
                "Table": "t_user"
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Group by with collate operator",
    "query": "select t_user.col1 as a from t_user where t_user.id = 5 group by a collate utf8_general_ci",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select t_user.col1 as a from t_user where t_user.id = 5 group by a collate utf8_general_ci",
      "Instructions": {
        "OperatorType": "Aggregate",
        "Variant": "Ordered",
        "Aggregates": "random(0) AS a",
        "GroupBy": "(1|2)",
        "ResultColumns": 1,
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "OrderBy": "(1|2) ASC",
            "Variant": "EqualUnique-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select t_user_0.col1 as a, a collate utf8_general_ci, weight_string(a collate utf8_general_ci) from t_user_0 where 1 != 1 group by a collate utf8_general_ci, weight_string(a collate utf8_general_ci)",
            "Query": "select t_user.col1 as a, a collate utf8_general_ci, weight_string(a collate utf8_general_ci) from t_user where t_user.id = 5 group by a collate utf8_general_ci, weight_string(a collate utf8_general_ci) order by a collate utf8_general_ci asc",
            "Table": "t_user",
            "Values": [
              "INT64(5)"
            ],
            "Vindex": "user_index"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Group by invalid column number (code is duplicated from symab).",
    "query": "select id from t_user group by 1.1",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_user group by 1.1",
      "Instructions": {
        "OperatorType": "Aggregate",
        "Variant": "Ordered",
        "Aggregates": "random(0) AS id",
        "GroupBy": "1",
        "ResultColumns": 1,
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select id, 1.1 from t_user_0 where 1 != 1 group by 1.1",
            "OrderBy": "1 ASC",
            "Query": "select id, 1.1 from t_user group by 1.1 order by 1.1 asc",
            "Table": "t_user"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Group by out of range column number (code is duplicated from symab).",
    "query": "select id from t_user group by 2",
    "plan": "Unknown column '2' in 'group statement'"
  },
  {
    "comment": "aggregate query with order by aggregate column along with NULL",
    "query": "select col, count(*) k from t_user group by col order by null, k",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select col, count(*) k from t_user group by col order by null, k",
      "Instructions": {
        "OperatorType": "Sort",
        "Variant": "Memory",
        "OrderBy": "1 ASC",
        "Inputs": [
          {
            "OperatorType": "Aggregate",
            "Variant": "Ordered",
            "Aggregates": "sum_count_star(1) AS k",
            "GroupBy": "0",
            "Inputs": [
              {
                "OperatorType": "TableRoute",
                "Variant": "Scatter-Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select col, count(*) as k from t_user_0 where 1 != 1 group by col",
                "OrderBy": "0 ASC",
                "Query": "select col, count(*) as k from t_user group by col order by col asc",
                "Table": "t_user"
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "aggregate query with order by NULL",
    "query": "select col, count(*) k from t_user group by col order by null",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select col, count(*) k from t_user group by col order by null",
      "Instructions": {
        "OperatorType": "Aggregate",
        "Variant": "Ordered",
        "Aggregates": "sum_count_star(1) AS k",
        "GroupBy": "0",
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select col, count(*) as k from t_user_0 where 1 != 1 group by col",
            "OrderBy": "0 ASC",
            "Query": "select col, count(*) as k from t_user group by col order by col asc",
            "Table": "t_user"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "weight_string addition to group by",
    "query": "select lower(textcol1) as v, count(*) from t_user group by v",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select lower(textcol1) as v, count(*) from t_user group by v",
      "Instructions": {
        "OperatorType": "Aggregate",
        "Variant": "Ordered",
        "Aggregates": "sum_count_star(1) AS count(*)",
        "GroupBy": "(0|2)",
        "ResultColumns": 2,
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select lower(textcol1) as v, count(*), weight_string(lower(textcol1)) from t_user_0 where 1 != 1 group by v, weight_string(lower(textcol1))",
            "OrderBy": "(0|2) ASC",
            "Query": "select lower(textcol1) as v, count(*), weight_string(lower(textcol1)) from t_user group by v, weight_string(lower(textcol1)) order by v asc",
            "Table": "t_user"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "weight_string addition to group by when also there in order by",
    "query": "select char_length(texcol1) as a, count(*) from t_user group by a order by a",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select char_length(texcol1) as a, count(*) from t_user group by a order by a",
      "Instructions": {
        "OperatorType": "Aggregate",
        "Variant": "Ordered",
        "Aggregates": "sum_count_star(1) AS count(*)",
        "GroupBy": "(0|2)",
        "ResultColumns": 2,
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select char_length(texcol1) as a, count(*), weight_string(char_length(texcol1)) from t_user_0 where 1 != 1 group by a, weight_string(char_length(texcol1))",
            "OrderBy": "(0|2) ASC",
            "Query": "select char_length(texcol1) as a, count(*), weight_string(char_length(texcol1)) from t_user group by a, weight_string(char_length(texcol1)) order by a asc",
            "Table": "t_user"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "group by column alias",
    "query": "select ascii(val1) as a, count(*) from t_user group by a",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select ascii(val1) as a, count(*) from t_user group by a",
      "Instructions": {
        "OperatorType": "Aggregate",
        "Variant": "Ordered",
        "Aggregates": "sum_count_star(1) AS count(*)",
        "GroupBy": "(0|2)",
        "ResultColumns": 2,
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select ascii(val1) as a, count(*), weight_string(ascii(val1)) from t_user_0 where 1 != 1 group by a, weight_string(ascii(val1))",
            "OrderBy": "(0|2) ASC",
            "Query": "select ascii(val1) as a, count(*), weight_string(ascii(val1)) from t_user group by a, weight_string(ascii(val1)) order by a asc",
            "Table": "t_user"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "group_concat on single shards",
    "query": "select group_concat(user_id order by name), id from t_user group by id, col",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select group_concat(user_id order by name), id from t_user group by id, col",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select group_concat(user_id order by `name` asc), id from t_user_0 where 1 != 1 group by id, col",
        "Query": "select group_concat(user_id order by `name` asc), id from t_user group by id, col",
        "Table": "t_user"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Scatter order by is complex with aggregates in select",
    "query": "select col, count(*) from t_user group by col order by col+1",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select col, count(*) from t_user group by col order by col+1",
      "Instructions": {
        "OperatorType": "Sort",
        "Variant": "Memory",
        "OrderBy": "(2|3) ASC",
        "ResultColumns": 2,
        "Inputs": [
          {
            "OperatorType": "Aggregate",
            "Variant": "Ordered",
            "Aggregates": "sum_count_star(1) AS count(*), random(2) AS col + 1, random(3)",
            "GroupBy": "0",
            "Inputs": [
              {
                "OperatorType": "TableRoute",
                "Variant": "Scatter-Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select col, count(*), col + 1, weight_string(col + 1) from t_user_0 where 1 != 1 group by col",
                "OrderBy": "0 ASC",
                "Query": "select col, count(*), col + 1, weight_string(col + 1) from t_user group by col order by col asc",
                "Table": "t_user"
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "scatter aggregate complex order by",
    "query": "select id,col from t_user group by id,col order by id+1,col+1",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id,col from t_user group by id,col order by id+1,col+1",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id, col, id + 1, col + 1, weight_string(id + 1), weight_string(col + 1) from t_user_0 where 1 != 1 group by id, col",
        "OrderBy": "(2|4) ASC, (3|5) ASC",
        "Query": "select id, col, id + 1, col + 1, weight_string(id + 1), weight_string(col + 1) from t_user group by id, col order by id + 1 asc, col + 1 asc",
        "ResultColumns": 2,
        "Table": "t_user"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "select expression does not directly depend on grouping expression",
    "query": "select a from t_user group by a+1",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select a from t_user group by a+1",
      "Instructions": {
        "OperatorType": "Aggregate",
        "Variant": "Ordered",
        "Aggregates": "random(0) AS a",
        "GroupBy": "(1|2)",
        "ResultColumns": 1,
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select a, a + 1, weight_string(a + 1) from t_user_0 where 1 != 1 group by a + 1, weight_string(a + 1)",
            "OrderBy": "(1|2) ASC",
            "Query": "select a, a + 1, weight_string(a + 1) from t_user group by a + 1, weight_string(a + 1) order by a + 1 asc",
            "Table": "t_user"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "redundant group by columns are not added",
    "query": "select col, val, id from t_user group by col, val, id, id, val, col",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select col, val, id from t_user group by col, val, id, id, val, col",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select col, val, id from t_user_0 where 1 != 1 group by col, val, id",
        "Query": "select col, val, id from t_user group by col, val, id",
        "Table": "t_user"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "using a grouping column multiple times should be OK",
    "query": "select col, col, count(*) from t_user group by col",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select col, col, count(*) from t_user group by col",
      "Instructions": {
        "OperatorType": "Aggregate",
        "Variant": "Ordered",
        "Aggregates": "sum_count_star(2) AS count(*)",
        "GroupBy": "0",
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select col, col, count(*) from t_user_0 where 1 != 1 group by col",
            "OrderBy": "0 ASC",
            "Query": "select col, col, count(*) from t_user group by col order by col asc",
            "Table": "t_user"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "use vindex and table index group by",
    "query": "select id,col from t_user group by id,col",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id,col from t_user group by id,col",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id, col from t_user_0 where 1 != 1 group by id, col",
        "Query": "select id, col from t_user group by id, col",
        "Table": "t_user"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "use unique vindex group by, split table plan generate Aggregation",
    "query": "select id,col from t_user group by id",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id,col from t_user group by id",
      "Instructions": {
        "OperatorType": "Aggregate",
        "Variant": "Ordered",
        "Aggregates": "random(1) AS col",
        "GroupBy": "(0|2)",
        "ResultColumns": 2,
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select id, col, weight_string(id) from t_user_0 where 1 != 1 group by id, weight_string(id)",
            "OrderBy": "(0|2) ASC",
            "Query": "select id, col, weight_string(id) from t_user group by id, weight_string(id) order by id asc",
            "Table": "t_user"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "use unique vindex group by, split table plan generate Aggregation",
    "query": "select id,col from t_user group by b, id",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id,col from t_user group by b, id",
      "Instructions": {
        "OperatorType": "Aggregate",
        "Variant": "Ordered",
        "Aggregates": "random(1) AS col",
        "GroupBy": "(2|3), (0|4)",
        "ResultColumns": 2,
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select id, col, b, weight_string(b), weight_string(id) from t_user_0 where 1 != 1 group by b, id, weight_string(b), weight_string(id)",
            "OrderBy": "(2|3) ASC, (0|4) ASC",
            "Query": "select id, col, b, weight_string(b), weight_string(id) from t_user group by b, id, weight_string(b), weight_string(id) order by b asc, id asc",
            "Table": "t_user"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "use unique vindex group by, split table plan generate Aggregation",
    "query": "select id,col from t_user group by id, c",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id,col from t_user group by id, c",
      "Instructions": {
        "OperatorType": "Aggregate",
        "Variant": "Ordered",
        "Aggregates": "random(1) AS col",
        "GroupBy": "(0|2), (3|4)",
        "ResultColumns": 2,
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select id, col, weight_string(id), c, weight_string(c) from t_user_0 where 1 != 1 group by id, c, weight_string(id), weight_string(c)",
            "OrderBy": "(0|2) ASC, (3|4) ASC",
            "Query": "select id, col, weight_string(id), c, weight_string(c) from t_user group by id, c, weight_string(id), weight_string(c) order by id asc, c asc",
            "Table": "t_user"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "EqualUnique Select, split table plan generate Aggregation",
    "query": "select id,col from t_user where id = 1024 group by c",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id,col from t_user where id = 1024 group by c",
      "Instructions": {
        "OperatorType": "Aggregate",
        "Variant": "Ordered",
        "Aggregates": "random(0) AS id, random(1) AS col",
        "GroupBy": "(2|3)",
        "ResultColumns": 2,
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "EqualUnique-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select id, col, c, weight_string(c) from t_user_0 where 1 != 1 group by c, weight_string(c)",
            "OrderBy": "(2|3) ASC",
            "Query": "select id, col, c, weight_string(c) from t_user where id = 1024 group by c, weight_string(c) order by c asc",
            "Table": "t_user",
            "Values": [
              "INT64(1024)"
            ],
            "Vindex": "user_index"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "EqualUnique Select, use table index group by",
    "query": "select id,col from t_user where id = 1024 group by col",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id,col from t_user where id = 1024 group by col",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "EqualUnique-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id, col from t_user_0 where 1 != 1 group by col",
        "Query": "select id, col from t_user where id = 1024 group by col",
        "Table": "t_user",
        "Values": [
          "INT64(1024)"
        ],
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "EqualUnique Select, use table index group by",
    "query": "select id,col from t_user where id = 1024 group by c, col",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id,col from t_user where id = 1024 group by c, col",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "EqualUnique-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id, col from t_user_0 where 1 != 1 group by c, col",
        "Query": "select id, col from t_user where id = 1024 group by c, col",
        "Table": "t_user",
        "Values": [
          "INT64(1024)"
        ],
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Group By X Order By X",
    "query": "SELECT t_user.intcol FROM t_user GROUP BY t_user.intcol ORDER BY COUNT(t_user.intcol)",
    "plan": {
      "QueryType": "SELECT",
      "Original": "SELECT t_user.intcol FROM t_user GROUP BY t_user.intcol ORDER BY COUNT(t_user.intcol)",
      "Instructions": {
        "OperatorType": "Sort",
        "Variant": "Memory",
        "OrderBy": "1 ASC",
        "ResultColumns": 1,
        "Inputs": [
          {
            "OperatorType": "Aggregate",
            "Variant": "Ordered",
            "Aggregates": "sum_count(1) AS count(t_user.intcol)",
            "GroupBy": "0",
            "Inputs": [
              {
                "OperatorType": "TableRoute",
                "Variant": "Scatter-Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select t_user_0.intcol, count(t_user_0.intcol) from t_user_0 where 1 != 1 group by t_user_0.intcol",
                "OrderBy": "0 ASC",
                "Query": "select t_user.intcol, count(t_user.intcol) from t_user group by t_user.intcol order by t_user.intcol asc",
                "Table": "t_user"
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Group By X Order By X, vindex EqualUnique",
    "query": "SELECT t_user.intcol FROM t_user where id = 1536 GROUP BY t_user.intcol ORDER BY COUNT(t_user.intcol)",
    "plan": {
      "QueryType": "SELECT",
      "Original": "SELECT t_user.intcol FROM t_user where id = 1536 GROUP BY t_user.intcol ORDER BY COUNT(t_user.intcol)",
      "Instructions": {
        "OperatorType": "Sort",
        "Variant": "Memory",
        "OrderBy": "1 ASC",
        "ResultColumns": 1,
        "Inputs": [
          {
            "OperatorType": "Aggregate",
            "Variant": "Ordered",
            "Aggregates": "sum_count(1) AS count(t_user.intcol)",
            "GroupBy": "0",
            "Inputs": [
              {
                "OperatorType": "TableRoute",
                "Variant": "EqualUnique-Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select t_user_0.intcol, count(t_user_0.intcol) from t_user_0 where 1 != 1 group by t_user_0.intcol",
                "OrderBy": "0 ASC",
                "Query": "select t_user.intcol, count(t_user.intcol) from t_user where id = 1536 group by t_user.intcol order by t_user.intcol asc",
                "Table": "t_user",
                "Values": [
                  "INT64(1536)"
                ],
                "Vindex": "user_index"
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Group By X Order By X, table index EqualUnique",
    "query": "SELECT t_user.intcol FROM t_user where col = 45 GROUP BY t_user.intcol ORDER BY COUNT(t_user.intcol)",
    "plan": {
      "QueryType": "SELECT",
      "Original": "SELECT t_user.intcol FROM t_user where col = 45 GROUP BY t_user.intcol ORDER BY COUNT(t_user.intcol)",
      "Instructions": {
        "OperatorType": "Sort",
        "Variant": "Memory",
        "OrderBy": "1 ASC",
        "ResultColumns": 1,
        "Inputs": [
          {
            "OperatorType": "Aggregate",
            "Variant": "Ordered",
            "Aggregates": "sum_count(1) AS count(t_user.intcol)",
            "GroupBy": "0",
            "Inputs": [
              {
                "OperatorType": "TableRoute",
                "Variant": "Scatter-EqualUnique",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select t_user_0.intcol, count(t_user_0.intcol) from t_user_0 where 1 != 1 group by t_user_0.intcol",
                "Query": "select t_user.intcol, count(t_user.intcol) from t_user where col = 45 group by t_user.intcol order by t_user.intcol asc",
                "Table": "t_user",
                "TableValues": [
                  "INT64(45)"
                ]
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Group By X Order By X, vindex EqualUnique, table index EqualUnique",
    "query": "SELECT t_user.intcol FROM t_user where col = 45 and id = 1320 GROUP BY t_user.intcol ORDER BY COUNT(t_user.intcol)",
    "plan": {
      "QueryType": "SELECT",
      "Original": "SELECT t_user.intcol FROM t_user where col = 45 and id = 1320 GROUP BY t_user.intcol ORDER BY COUNT(t_user.intcol)",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "EqualUnique-EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select t_user_0.intcol from t_user_0 where 1 != 1 group by t_user_0.intcol",
        "Query": "select t_user.intcol from t_user where col = 45 and id = 1320 group by t_user.intcol order by count(t_user.intcol) asc",
        "Table": "t_user",
        "TableValues": [
          "INT64(45)"
        ],
        "Values": [
          "INT64(1320)"
        ],
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  }
]