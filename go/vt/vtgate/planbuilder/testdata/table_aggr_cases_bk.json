[
  {
    "comment":"here it is safe to remove the order by on the derived table since it will not influence the output of the count(*)",
    "query":"select count(*) from (select t_user.col, t_user_extra.extra from t_user join t_user_extra on t_user.id = t_user_extra.user_id order by t_user_extra.extra) a",
    "plan":"VT12001: unsupported: unable to use: *sqlparser.DerivedTable in split table"
  },
  {
    "comment":"order by inside derived tables can be ignored",
    "query":"select col from (select t_user.col, t_user_extra.extra from t_user join t_user_extra on t_user.id = t_user_extra.user_id order by t_user_extra.extra) a",
    "plan":"VT12001: unsupported: unable to use: *sqlparser.DerivedTable in split table"
  },
  {
    "comment":"here we keep the order since the column is visible on the outside, and used by the orderedAggregate",
    "query":"select col, count(*) from (select t_user.col, t_user_extra.extra from t_user join t_user_extra on t_user.id = t_user_extra.user_id order by t_user_extra.extra) a group by col",
    "plan":"VT12001: unsupported: unable to use: *sqlparser.DerivedTable in split table"
  },
  {
    "comment":"join query on sharding key with group by a unique vindex with having clause.",
    "query":"select t_user.id, count(*) c from t_user, t_user_extra where t_user.id = t_user_extra.user_id group by t_user.id having max(t_user.col) > 10",
    "plan":"VT12001: unsupported: multiple tables in split table"
  },
  {
    "comment":"correlated subquery on sharding key with group by a unique vindex with having clause.",
    "query":"select count(*) from t_user where exists (select 1 from t_user_extra where user_id = t_user.id group by user_id having max(col) > 10)",
    "plan":"VT12001: unsupported: subquery in split table"
  },
  {
    "comment":"aggregation, where and derived tables - we can push extremums",
    "query":"SELECT foo FROM (SELECT foo, max(baz) as bazo FROM (SELECT foo, baz FROM t_user) f GROUP BY foo) tt WHERE bazo BETWEEN 100 AND 200",
    "plan":"VT12001: unsupported: unable to use: *sqlparser.DerivedTable in split table"
  },
  {
    "comment":"aggregation, where and derived tables - we can't push aggregations that might need a second layer of aggregation",
    "query":"SELECT foo FROM (SELECT foo, count(baz) as bazo FROM (SELECT foo, baz FROM t_user) f GROUP BY foo) tt WHERE bazo BETWEEN 100 AND 200",
    "plan":"VT12001: unsupported: unable to use: *sqlparser.DerivedTable in split table"
  },
  {
    "comment":"grouping on data from derived table",
    "query":"select val1, count(*)  from (select id, val1 from t_user where val2 < 4 order by val1 limit 2) as x group by val1",
    "plan":"VT12001: unsupported: unable to use: *sqlparser.DerivedTable in split table"
  },
  {
    "comment":"select (select 1 from user u having count(ue.col) > 10) from user_extra ue",
    "query":"select (select 1 from t_user u having count(ue.col) > 10) from t_user_extra ue",
    "plan":"VT12001: unsupported: correlated subquery is only supported for EXISTS"
  },
  {
    "comment":"select sum(col) from (select user.col as col, 32 from user join user_extra) t",
    "query":"select sum(col) from (select t_user.col as col, 32 from t_user join t_user_extra) t",
    "plan":"VT12001: unsupported: unable to use: *sqlparser.DerivedTable in split table"
  },
  {
    "comment":"count on column from LIMIT",
    "query":"select count(city) from (select phone, id, city from t_user where id > 12 limit 10) as x",
    "plan":"VT12001: unsupported: unable to use: *sqlparser.DerivedTable in split table"
  },
  {
    "comment":"count(*) on column from LIMIT",
    "query":"select count(*) from (select phone, id, city from t_user where id > 12 limit 10) as x",
    "plan":"VT12001: unsupported: unable to use: *sqlparser.DerivedTable in split table"
  },
  {
    "comment":"select u.id from t_user u join t_user_extra ue on ue.user_id = u.id group by u.id having count(u.name) = 3",
    "query":"select u.id from t_user u join t_user_extra ue on ue.user_id = u.id group by u.id having count(u.name) = 3",
    "plan":"VT12001: unsupported: multiple tables in split table"
  },
  {
    "comment":"count distinct and sum distinct on join query pushed down - unique vindex",
    "query":"select u.col1, count(distinct m.user_id), sum(distinct m.user_id) from t_user u join t_music m group by u.col1",
    "plan":"VT12001: unsupported: statement(count(distinct m.user_id)) in split table"
  },
  {
    "comment":"aggregation on top of derived table with limit",
    "query":"select count(val2), sum(val2) from (select id, val2 from t_user where val2 is null limit 2) as x",
    "plan":"VT12001: unsupported: unable to use: *sqlparser.DerivedTable in split table"
  },
  {
    "comment":"GROUP BY inside derived table on the RHS should not be a problem",
    "query":"SELECT c.column_name FROM t_user c JOIN (SELECT table_name FROM t_user WHERE id = 143 GROUP BY 1) AS tables ON tables.table_name = c.table_name",
    "plan":"VT12001: unsupported: unable to use: *sqlparser.DerivedTable in split table"
  }
]