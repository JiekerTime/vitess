[
  {
    "comment": "No where clause",
    "query": "select id from t_user",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_user",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from t_user_0 where 1 != 1",
        "Query": "select id from t_user",
        "Table": "t_user"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Query that always return empty",
    "query": "select id from t_user where someColumn = null",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_user where someColumn = null",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "None-None",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from t_user_0 where 1 != 1",
        "Query": "select id from t_user where someColumn = null",
        "Table": "t_user"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Null Safe Equality Operator is handled correctly",
    "query": "SELECT id from t_user where someColumn <=> null",
    "plan": {
      "QueryType": "SELECT",
      "Original": "SELECT id from t_user where someColumn <=> null",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from t_user_0 where 1 != 1",
        "Query": "select id from t_user where someColumn <=> null",
        "Table": "t_user"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Composite IN clause vs equality",
    "query": "select id from t_user where (col, name) in (('aa', 'bb')) and id = 5",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_user where (col, name) in (('aa', 'bb')) and id = 5",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "EqualUnique-MultiEqual",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from t_user_0 where 1 != 1",
        "Query": "select id from t_user where (col, `name`) in (('aa', 'bb')) and id = 5",
        "Table": "t_user",
        "TableValues": [
          "(VARCHAR(\"aa\"))"
        ],
        "Values": [
          "INT64(5)"
        ],
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Composite IN: tuple inside tuple, mismiatched values",
    "query": "select id from t_user where ((col1, name), col2) in (('aa', 'bb', 'cc'), (('dd', 'ee'), 'ff'))",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_user where ((col1, name), col2) in (('aa', 'bb', 'cc'), (('dd', 'ee'), 'ff'))",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from t_user_0 where 1 != 1",
        "Query": "select id from t_user where ((col1, `name`), col2) in (('aa', 'bb', 'cc'), (('dd', 'ee'), 'ff'))",
        "Table": "t_user"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "IN clause: LHS is neither column nor composite tuple",
    "query": "select Id from t_user where 1 in ('aa', 'bb')",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select Id from t_user where 1 in ('aa', 'bb')",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "None-None",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select Id from t_user_0 where 1 != 1",
        "Query": "select Id from t_user where 1 in ('aa', 'bb')",
        "Table": "t_user"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Single table complex in clause",
    "query": "select id from t_user where name in (col, 'bb')",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_user where name in (col, 'bb')",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from t_user_0 where 1 != 1",
        "Query": "select id from t_user where `name` in (col, 'bb')",
        "Table": "t_user"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Single table unique vindex route",
    "query": "select id from t_user where t_user.id = 5",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_user where t_user.id = 5",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "EqualUnique-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from t_user_0 where 1 != 1",
        "Query": "select id from t_user where t_user.id = 5",
        "Table": "t_user",
        "Values": [
          "INT64(5)"
        ],
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Single table unique vindex route, but complex expr",
    "query": "select id from t_user where t_user.id = 5+5",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_user where t_user.id = 5+5",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "EqualUnique-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from t_user_0 where 1 != 1",
        "Query": "select id from t_user where t_user.id = 5 + 5",
        "Table": "t_user",
        "Values": [
          "INT64(10)"
        ],
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Route with multiple route constraints, SelectIN is the best constraint.",
    "query": "select id from t_user where t_user.col = 5 and t_user.id in (1, 2)",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_user where t_user.col = 5 and t_user.id in (1, 2)",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "IN-EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from t_user_0 where 1 != 1",
        "Query": "select id from t_user where t_user.col = 5 and t_user.id in ::__vals",
        "Table": "t_user",
        "TableValues": [
          "INT64(5)"
        ],
        "Values": [
          "(INT64(1), INT64(2))"
        ],
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Route with multiple route constraints and boolean, SelectIN is the best constraint.",
    "query": "select id from t_user where t_user.col = case t_user.col when 'foo' then true else false end and t_user.id in (1, 2)",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_user where t_user.col = case t_user.col when 'foo' then true else false end and t_user.id in (1, 2)",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "IN-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from t_user_0 where 1 != 1",
        "Query": "select id from t_user where t_user.col = case t_user.col when 'foo' then true else false end and t_user.id in ::__vals",
        "Table": "t_user",
        "Values": [
          "(INT64(1), INT64(2))"
        ],
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Route with multiple route constraints, SelectEqualUnique is the best constraint.",
    "query": "select id from t_user where t_user.col = 5 and t_user.id in (1, 2) and t_user.name = 'aa' and t_user.id = 1",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_user where t_user.col = 5 and t_user.id in (1, 2) and t_user.name = 'aa' and t_user.id = 1",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "EqualUnique-EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from t_user_0 where 1 != 1",
        "Query": "select id from t_user where t_user.col = 5 and t_user.id in (1, 2) and t_user.`name` = 'aa' and t_user.id = 1",
        "Table": "t_user",
        "TableValues": [
          "INT64(5)"
        ],
        "Values": [
          "INT64(1)"
        ],
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Route with multiple route constraints, SelectEqualUnique is the best constraint, order reversed.",
    "query": "select id from t_user where t_user.id = 1 and t_user.name = 'aa' and t_user.id in (1, 2) and t_user.col = 5",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_user where t_user.id = 1 and t_user.name = 'aa' and t_user.id in (1, 2) and t_user.col = 5",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "EqualUnique-EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from t_user_0 where 1 != 1",
        "Query": "select id from t_user where t_user.id = 1 and t_user.`name` = 'aa' and t_user.id in (1, 2) and t_user.col = 5",
        "Table": "t_user",
        "TableValues": [
          "INT64(5)"
        ],
        "Values": [
          "INT64(1)"
        ],
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Route with OR and AND clause, must parenthesize correctly.",
    "query": "select id from t_user where t_user.id = 1 or t_user.name = 'aa' and t_user.id in (1, 2)",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_user where t_user.id = 1 or t_user.name = 'aa' and t_user.id in (1, 2)",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "IN-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from t_user_0 where 1 != 1",
        "Query": "select id from t_user where (t_user.id = 1 or t_user.`name` = 'aa') and t_user.id in ::__vals",
        "Table": "t_user",
        "Values": [
          "(INT64(1), INT64(2))"
        ],
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "database() call in where clause.",
    "query": "select id from t_user where database()",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_user where database()",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from t_user_0 where 1 != 1",
        "Query": "select id from t_user where database()",
        "Table": "t_user"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "non unique predicate on vindex",
    "query": "select id from t_user where t_user.id > 5",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_user where t_user.id > 5",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from t_user_0 where 1 != 1",
        "Query": "select id from t_user where t_user.id > 5",
        "Table": "t_user"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "transitive closures for the win",
    "query": "select id from t_user where t_user.id = t_user.col and t_user.col = 5",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_user where t_user.id = t_user.col and t_user.col = 5",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "EqualUnique-EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from t_user_0 where 1 != 1",
        "Query": "select id from t_user where t_user.id = t_user.col and t_user.col = 5",
        "Table": "t_user",
        "TableValues": [
          "INT64(5)"
        ],
        "Values": [
          "INT64(5)"
        ],
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "deconstruct tuple equality comparisons",
    "query": "select id from t_user where (id, name) = (34, 'apa')",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_user where (id, name) = (34, 'apa')",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "EqualUnique-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from t_user_0 where 1 != 1",
        "Query": "select id from t_user where id = 34 and `name` = 'apa'",
        "Table": "t_user",
        "Values": [
          "INT64(34)"
        ],
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "optimize ORs to IN route op codes #1",
    "query": "select col from t_user where id = 1 or id = 2",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select col from t_user where id = 1 or id = 2",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "IN-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select col from t_user_0 where 1 != 1",
        "Query": "select col from t_user where id in ::__vals",
        "Table": "t_user",
        "Values": [
          "(INT64(1), INT64(2))"
        ],
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "optimize ORs to IN route op codes #2",
    "query": "select col from t_user where id = 1 or id = 2 or id = 3",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select col from t_user where id = 1 or id = 2 or id = 3",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "IN-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select col from t_user_0 where 1 != 1",
        "Query": "select col from t_user where id in ::__vals",
        "Table": "t_user",
        "Values": [
          "(INT64(1), INT64(2), INT64(3))"
        ],
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "optimize ORs to IN route op codes #3",
    "query": "select col from t_user where (id = 1 or id = 2) or (id = 3 or id = 4)",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select col from t_user where (id = 1 or id = 2) or (id = 3 or id = 4)",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "IN-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select col from t_user_0 where 1 != 1",
        "Query": "select col from t_user where id in ::__vals",
        "Table": "t_user",
        "Values": [
          "(INT64(1), INT64(2), INT64(3), INT64(4))"
        ],
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Self referencing columns in HAVING should work",
    "query": "select a+2 as a from t_user having a = 42",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select a+2 as a from t_user having a = 42",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select a + 2 as a from t_user_0 where 1 != 1",
        "Query": "select a + 2 as a from t_user where a + 2 = 42",
        "Table": "t_user"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "HAVING predicates that use table columns are safe to rewrite if we can move them to the WHERE clause",
    "query": "select t_user.col + 2 as a from t_user having a = 42",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select t_user.col + 2 as a from t_user having a = 42",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select t_user_0.col + 2 as a from t_user_0 where 1 != 1",
        "Query": "select t_user.col + 2 as a from t_user where t_user.col + 2 = 42",
        "Table": "t_user"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Single table unique vindex route hiding behind a silly OR",
    "query": "select id from t_user where (id = 5 and name ='apa') or (id = 5 and foo = 'bar')",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_user where (id = 5 and name ='apa') or (id = 5 and foo = 'bar')",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "EqualUnique-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from t_user_0 where 1 != 1",
        "Query": "select id from t_user where id = 5 and (`name` = 'apa' or foo = 'bar')",
        "Table": "t_user",
        "Values": [
          "INT64(5)"
        ],
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Single table IN vindex route hiding behind OR",
    "query": "select id from t_user where (id = 5 and name ='foo') or (id = 12 and name = 'bar')",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_user where (id = 5 and name ='foo') or (id = 12 and name = 'bar')",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "IN-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from t_user_0 where 1 != 1",
        "Query": "select id from t_user where id = 5 and `name` = 'foo' or id = 12 and `name` = 'bar'",
        "Table": "t_user",
        "Values": [
          "(INT64(5), INT64(12))"
        ],
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "two predicates that mean the same thing",
    "query": "select textcol1 from t_user where foo = 42 and t_user.foo = 42",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select textcol1 from t_user where foo = 42 and t_user.foo = 42",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select textcol1 from t_user_0 where 1 != 1",
        "Query": "select textcol1 from t_user where foo = 42",
        "Table": "t_user"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "TableRoute Equal",
    "query": "select id from t_user where t_user.col = 5",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_user where t_user.col = 5",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from t_user_0 where 1 != 1",
        "Query": "select id from t_user where t_user.col = 5",
        "Table": "t_user",
        "TableValues": [
          "INT64(5)"
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "TableRoute Equal Swap left and right positions",
    "query": "select id from t_user where 5 = col",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_user where 5 = col",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from t_user_0 where 1 != 1",
        "Query": "select id from t_user where col = 5",
        "Table": "t_user",
        "TableValues": [
          "INT64(5)"
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "TableRoute In to Equal",
    "query": "select id from t_user where t_user.col in (5)",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_user where t_user.col in (5)",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from t_user_0 where 1 != 1",
        "Query": "select id from t_user where t_user.col in (5)",
        "Table": "t_user",
        "TableValues": [
          "INT64(5)"
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "TableRoute In",
    "query": "select id from t_user where t_user.col in (5, 6, 7)",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_user where t_user.col in (5, 6, 7)",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-IN",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from t_user_0 where 1 != 1",
        "Query": "select id from t_user where t_user.col in (5, 6, 7)",
        "Table": "t_user",
        "TableValues": [
          "(INT64(5), INT64(6), INT64(7))"
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "TableRoute In & Equal PickBestAvailableTindex",
    "query": "select id from t_user where t_user.col in (5, 6, 7) and col = 9",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_user where t_user.col in (5, 6, 7) and col = 9",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from t_user_0 where 1 != 1",
        "Query": "select id from t_user where t_user.col in (5, 6, 7) and col = 9",
        "Table": "t_user",
        "TableValues": [
          "INT64(9)"
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "TableRoute is null",
    "query": "select id from t_user where t_user.col is null",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_user where t_user.col is null",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from t_user_0 where 1 != 1",
        "Query": "select id from t_user where t_user.col is null",
        "Table": "t_user",
        "TableValues": [
          "NULL"
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "TableRoute = null",
    "query": "select id from t_user where t_user.col = null",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_user where t_user.col = null",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "None-None",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from t_user_0 where 1 != 1",
        "Query": "select id from t_user where t_user.col = null",
        "Table": "t_user"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "TableRoute simplifyExpression",
    "query": "select id from t_user where not (not col = 3)",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_user where not (not col = 3)",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from t_user_0 where 1 != 1",
        "Query": "select id from t_user where col = 3",
        "Table": "t_user",
        "TableValues": [
          "INT64(3)"
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "TableRoute or to IN",
    "query": "select id from t_user where (col in (1, 5) and B or C and col in (5, 7))",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_user where (col in (1, 5) and B or C and col in (5, 7))",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-IN",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from t_user_0 where 1 != 1",
        "Query": "select id from t_user where col in (1, 5) and B or C and col in (5, 7)",
        "Table": "t_user",
        "TableValues": [
          "(INT64(1), INT64(5), INT64(7))"
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Single table unique tindex route, but complex expr",
    "query": "select id from t_user where t_user.col = 5+5",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_user where t_user.col = 5+5",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from t_user_0 where 1 != 1",
        "Query": "select id from t_user where t_user.col = 5 + 5",
        "Table": "t_user",
        "TableValues": [
          "INT64(10)"
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Single table unique tindex route, but complex expr",
    "query": "select id from t_user where id = 123 and t_user.col = 5+5",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_user where id = 123 and t_user.col = 5+5",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "EqualUnique-EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from t_user_0 where 1 != 1",
        "Query": "select id from t_user where id = 123 and t_user.col = 5 + 5",
        "Table": "t_user",
        "TableValues": [
          "INT64(10)"
        ],
        "Values": [
          "INT64(123)"
        ],
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Multi-route unique vindex constraint",
    "query": "select t_user_extra.id from t_user join t_user_extra on t_user.col = t_user_extra.col where t_user.id = 5",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select t_user_extra.id from t_user join t_user_extra on t_user.col = t_user_extra.col where t_user.id = 5",
      "Instructions": {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "R:0",
        "JoinVars": {
          "t_user_col": 0
        },
        "TableName": "t_user_t_user_extra",
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "EqualUnique-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select t_user_0.col from t_user_0 where 1 != 1",
            "Query": "select t_user.col from t_user where t_user.id = 5",
            "Table": "t_user",
            "Values": [
              "INT64(5)"
            ],
            "Vindex": "user_index"
          },
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-EqualUnique",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select t_user_extra_0.id from t_user_extra_0 where 1 != 1",
            "Query": "select t_user_extra.id from t_user_extra where t_user_extra.col = :t_user_col",
            "TableValues": [
              ":t_user_col"
            ],
            "Table": "t_user_extra"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user",
        "user.t_user_extra"
      ]
    }
  },
  {
    "comment": "Multi-route with cross-route constraint",
    "query": "select t_user_extra.id from t_user join t_user_extra on t_user.col = t_user_extra.col where t_user_extra.user_id = t_user.col",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select t_user_extra.id from t_user join t_user_extra on t_user.col = t_user_extra.col where t_user_extra.user_id = t_user.col",
      "Instructions": {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "R:0",
        "JoinVars": {
          "t_user_col": 0
        },
        "TableName": "t_user_t_user_extra",
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select t_user_0.col from t_user_0 where 1 != 1",
            "Query": "select t_user.col from t_user",
            "Table": "t_user"
          },
          {
            "OperatorType": "TableRoute",
            "Variant": "EqualUnique-EqualUnique",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select t_user_extra_0.id from t_user_extra_0 where 1 != 1",
            "Query": "select t_user_extra.id from t_user_extra where t_user_extra.user_id = :t_user_col and t_user_extra.col = :t_user_col",
            "Table": "t_user_extra",
            "Values": [
              ":t_user_col"
            ],
            "TableValues": [
              ":t_user_col"
            ],
            "Vindex": "user_index"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user",
        "user.t_user_extra"
      ]
    }
  },
  {
    "comment": "Multi-route with non-route constraint, should use first route.",
    "query": "select t_user_extra.id from t_user join t_user_extra on t_user.col = t_user_extra.col where 1 = 1",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select t_user_extra.id from t_user join t_user_extra on t_user.col = t_user_extra.col where 1 = 1",
      "Instructions": {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "R:0",
        "JoinVars": {
          "t_user_col": 0
        },
        "TableName": "t_user_t_user_extra",
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select t_user_0.col from t_user_0 where 1 != 1",
            "Query": "select t_user.col from t_user where 1 = 1",
            "Table": "t_user"
          },
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-EqualUnique",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select t_user_extra_0.id from t_user_extra_0 where 1 != 1",
            "Query": "select t_user_extra.id from t_user_extra where t_user_extra.col = :t_user_col and 1 = 1",
            "TableValues": [
              ":t_user_col"
            ],
            "Table": "t_user_extra"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user",
        "user.t_user_extra"
      ]
    }
  },
  {
    "comment": "not supported transitive closures with equality inside of an OR",
    "query": "select id from t_user, t_user_extra where t_user.id = t_user_extra.col and (t_user_extra.col = t_user_extra.user_id or t_user_extra.col2 = t_user_extra.name)",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_user, t_user_extra where t_user.id = t_user_extra.col and (t_user_extra.col = t_user_extra.user_id or t_user_extra.col2 = t_user_extra.name)",
      "Instructions": {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "R:0",
        "JoinVars": {
          "t_user_extra_col": 0
        },
        "TableName": "t_user_extra_t_user",
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select t_user_extra_0.col from t_user_extra_0 where 1 != 1",
            "Query": "select t_user_extra.col from t_user_extra where t_user_extra.col = t_user_extra.user_id or t_user_extra.col2 = t_user_extra.`name`",
            "Table": "t_user_extra"
          },
          {
            "OperatorType": "TableRoute",
            "Variant": "EqualUnique-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select id from t_user_0 where 1 != 1",
            "Query": "select id from t_user where t_user.id = :t_user_extra_col",
            "Table": "t_user",
            "Values": [
              ":t_user_extra_col"
            ],
            "Vindex": "user_index"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user",
        "user.t_user_extra"
      ]
    }
  },
  {
    "comment": "left join where clauses where we can optimize into an inner join",
    "query": "select t_user.id from t_user left join t_user_extra on t_user.col = t_user_extra.col where t_user_extra.foobar = 5",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select t_user.id from t_user left join t_user_extra on t_user.col = t_user_extra.col where t_user_extra.foobar = 5",
      "Instructions": {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "L:0",
        "JoinVars": {
          "t_user_col": 1
        },
        "TableName": "t_user_t_user_extra",
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select t_user_0.id, t_user_0.col from t_user_0 where 1 != 1",
            "Query": "select t_user.id, t_user.col from t_user",
            "Table": "t_user"
          },
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-EqualUnique",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select 1 from t_user_extra_0 where 1 != 1",
            "Query": "select 1 from t_user_extra where t_user_extra.foobar = 5 and t_user_extra.col = :t_user_col",
            "TableValues": [
              ":t_user_col"
            ],
            "Table": "t_user_extra"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user",
        "user.t_user_extra"
      ]
    }
  },
  {
    "comment": "push filter under aggregation",
    "query": "select count(*) from t_user left join t_user_extra on t_user.id = t_user_extra.bar where IFNULL(t_user_extra.collections_status, 'NOTSET') != 'collections_lock'",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select count(*) from t_user left join t_user_extra on t_user.id = t_user_extra.bar where IFNULL(t_user_extra.collections_status, 'NOTSET') != 'collections_lock'",
      "Instructions": {
        "OperatorType": "Aggregate",
        "Variant": "Scalar",
        "Aggregates": "sum_count_star(0) AS count(*)",
        "ResultColumns": 1,
        "Inputs": [
          {
            "OperatorType": "Projection",
            "Expressions": [
              "[COLUMN 0] * COALESCE([COLUMN 1], INT64(1)) as count(*)",
              "[COLUMN 2] as collections_status"
            ],
            "Inputs": [
              {
                "OperatorType": "Filter",
                "Predicate": "IFNULL(t_user_extra.collections_status, 'NOTSET') != 'collections_lock'",
                "Inputs": [
                  {
                    "OperatorType": "Join",
                    "Variant": "LeftJoin",
                    "JoinColumnIndexes": "L:0,R:0,R:1",
                    "JoinVars": {
                      "t_user_id": 1
                    },
                    "TableName": "t_user_t_user_extra",
                    "Inputs": [
                      {
                        "OperatorType": "Aggregate",
                        "Variant": "Ordered",
                        "Aggregates": "sum_count_star(0) AS count(*)",
                        "GroupBy": "(1|2)",
                        "ResultColumns": 2,
                        "Inputs": [
                          {
                            "OperatorType": "TableRoute",
                            "Variant": "Scatter-Scatter",
                            "Keyspace": {
                              "Name": "user",
                              "Sharded": true
                            },
                            "FieldQuery": "select count(*), t_user_0.id, weight_string(t_user_0.id) from t_user_0 where 1 != 1 group by t_user_0.id, weight_string(t_user_0.id)",
                            "OrderBy": "(1|2) ASC",
                            "Query": "select count(*), t_user.id, weight_string(t_user.id) from t_user group by t_user.id, weight_string(t_user.id) order by t_user.id asc",
                            "Table": "t_user"
                          }
                        ]
                      },
                      {
                        "OperatorType": "TableRoute",
                        "Variant": "Scatter-Scatter",
                        "Keyspace": {
                          "Name": "user",
                          "Sharded": true
                        },
                        "FieldQuery": "select count(*), t_user_extra_0.collections_status from t_user_extra_0 where 1 != 1 group by t_user_extra_0.collections_status",
                        "Query": "select count(*), t_user_extra.collections_status from t_user_extra where t_user_extra.bar = :t_user_id group by t_user_extra.collections_status",
                        "Table": "t_user_extra"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "user.t_user",
        "user.t_user_extra"
      ]
    }
  },
  {
    "comment": "one shard using distinct",
    "query": "select distinct col from t_user where id=123",
    "plan": "VT12001: unsupported: distinct in split table"
  },
  {
    "comment": "Single table multiple unique vindex match",
    "query": "select id from t_music where id = 5 and user_id = 4",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_music where id = 5 and user_id = 4",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "EqualUnique-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from t_music_0 where 1 != 1",
        "Query": "select id from t_music where id = 5 and user_id = 4",
        "Table": "t_music",
        "Values": [
          "INT64(4)"
        ],
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.t_music"
      ]
    }
  },
  {
    "comment": "Select with equals null",
    "query": "select id from t_music where id = null",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_music where id = null",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "None-None",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from t_music_0 where 1 != 1",
        "Query": "select id from t_music where id = null",
        "Table": "t_music"
      },
      "TablesUsed": [
        "user.t_music"
      ]
    }
  },
  {
    "comment": "SELECT with IS NULL",
    "query": "select id from t_music where id is null",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_music where id is null",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from t_music_0 where 1 != 1",
        "Query": "select id from t_music where id is null",
        "Table": "t_music"
      },
      "TablesUsed": [
        "user.t_music"
      ]
    }
  },
  {
    "comment": "SELECT with IS NOT NULL",
    "query": "select id from t_music where id is not null",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_music where id is not null",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from t_music_0 where 1 != 1",
        "Query": "select id from t_music where id is not null",
        "Table": "t_music"
      },
      "TablesUsed": [
        "user.t_music"
      ]
    }
  },
  {
    "comment": "Single table with unique vindex match and null match",
    "query": "select id from t_music where user_id = 4 and id = null",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_music where user_id = 4 and id = null",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "None-None",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from t_music_0 where 1 != 1",
        "Query": "select id from t_music where user_id = 4 and id = null",
        "Table": "t_music"
      },
      "TablesUsed": [
        "user.t_music"
      ]
    }
  },
  {
    "comment": "Single table with unique vindex match and IN (null)",
    "query": "select id from t_music where user_id = 4 and id IN (null)",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_music where user_id = 4 and id IN (null)",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "None-None",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from t_music_0 where 1 != 1",
        "Query": "select id from t_music where user_id = 4 and id in (null)",
        "Table": "t_music"
      },
      "TablesUsed": [
        "user.t_music"
      ]
    }
  },
  {
    "comment": "Single table with unique vindex match and IN (null, 1, 2)",
    "query": "select id from t_music where user_id = 4 and id IN (null, 1, 2)",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_music where user_id = 4 and id IN (null, 1, 2)",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "EqualUnique-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from t_music_0 where 1 != 1",
        "Query": "select id from t_music where user_id = 4 and id in (null, 1, 2)",
        "Table": "t_music",
        "Values": [
          "INT64(4)"
        ],
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.t_music"
      ]
    }
  },
  {
    "comment": "Single table with unique vindex match and NOT IN (null, 1, 2)",
    "query": "select id from t_music where user_id = 4 and id NOT IN (null, 1, 2)",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_music where user_id = 4 and id NOT IN (null, 1, 2)",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "None-None",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from t_music_0 where 1 != 1",
        "Query": "select id from t_music where user_id = 4 and id not in (null, 1, 2)",
        "Table": "t_music"
      },
      "TablesUsed": [
        "user.t_music"
      ]
    }
  },
  {
    "comment": "Single table with unique vindex match and NOT IN (null, 1, 2) predicates inverted",
    "query": "select id from t_music where id NOT IN (null, 1, 2) and user_id = 4",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_music where id NOT IN (null, 1, 2) and user_id = 4",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "None-None",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from t_music_0 where 1 != 1",
        "Query": "select id from t_music where id not in (null, 1, 2) and user_id = 4",
        "Table": "t_music"
      },
      "TablesUsed": [
        "user.t_music"
      ]
    }
  },
  {
    "comment": "Don't pick a vindex for an IS NULL predicate if it's a lookup vindex",
    "query": "select id from t_music where id is null and user_id in (1,2)",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_music where id is null and user_id in (1,2)",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "IN-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from t_music_0 where 1 != 1",
        "Query": "select id from t_music where id is null and user_id in ::__vals",
        "Table": "t_music",
        "Values": [
          "(INT64(1), INT64(2))"
        ],
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.t_music"
      ]
    }
  },
  {
    "comment": "Like clause evaluated on the vtgate",
    "query": "select a.textcol1 from t_user a join t_user b where a.textcol1 = b.textcol2 group by a.textcol1 having repeat(a.textcol1,sum(a.id)) like \"And%res\"",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select a.textcol1 from t_user a join t_user b where a.textcol1 = b.textcol2 group by a.textcol1 having repeat(a.textcol1,sum(a.id)) like \"And%res\"",
      "Instructions": {
        "OperatorType": "Filter",
        "Predicate": "repeat(a.textcol1, sum(a.id)) like 'And%res'",
        "ResultColumns": 1,
        "Inputs": [
          {
            "OperatorType": "Aggregate",
            "Variant": "Ordered",
            "Aggregates": "sum(1) AS sum(a.id)",
            "GroupBy": "0 COLLATE latin1_swedish_ci",
            "Inputs": [
              {
                "OperatorType": "Projection",
                "Expressions": [
                  "[COLUMN 2] as textcol1",
                  "[COLUMN 0] * [COLUMN 1] as sum(a.id)"
                ],
                "Inputs": [
                  {
                    "OperatorType": "Join",
                    "Variant": "Join",
                    "JoinColumnIndexes": "L:0,R:0,L:1",
                    "JoinVars": {
                      "a_textcol1": 1
                    },
                    "TableName": "t_user_t_user",
                    "Inputs": [
                      {
                        "OperatorType": "TableRoute",
                        "Variant": "Scatter-Scatter",
                        "Keyspace": {
                          "Name": "user",
                          "Sharded": true
                        },
                        "FieldQuery": "select sum(a.id), a.textcol1 from t_user_0 as a where 1 != 1 group by a.textcol1",
                        "OrderBy": "1 ASC COLLATE latin1_swedish_ci",
                        "Query": "select sum(a.id), a.textcol1 from t_user as a group by a.textcol1 order by a.textcol1 asc",
                        "Table": "t_user"
                      },
                      {
                        "OperatorType": "TableRoute",
                        "Variant": "Scatter-Scatter",
                        "Keyspace": {
                          "Name": "user",
                          "Sharded": true
                        },
                        "FieldQuery": "select count(*) from t_user_0 as b where 1 != 1 group by .0",
                        "Query": "select count(*) from t_user as b where b.textcol2 = :a_textcol1 group by .0",
                        "Table": "t_user"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  }
]
