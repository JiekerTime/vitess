[
  {
    "comment": "cross-shard subquery in IN clause.\n# Note the improved Underlying plan as SelectIN.",
    "query": "select id from t_user where id in (select col from t_user)",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_user where id in (select col from t_user)",
      "Instructions": {
        "OperatorType": "UncorrelatedSubquery",
        "Variant": "PulloutIn",
        "PulloutVars": [
          "__sq_has_values",
          "__sq1"
        ],
        "Inputs": [
          {
            "InputName": "SubQuery",
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select col from t_user_0 where 1 != 1",
            "Query": "select col from t_user",
            "Table": "t_user"
          },
          {
            "InputName": "Outer",
            "OperatorType": "TableRoute",
            "Variant": "IN-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select id from t_user_0 where 1 != 1",
            "Query": "select id from t_user where id in ::__vals and :__sq_has_values",
            "Table": "t_user",
            "Values": [
              "::__sq1"
            ],
            "Vindex": "user_index"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "cross-shard subquery in NOT IN clause.",
    "query": "select id from t_user where id not in (select col from t_user)",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_user where id not in (select col from t_user)",
      "Instructions": {
        "OperatorType": "UncorrelatedSubquery",
        "Variant": "PulloutNotIn",
        "PulloutVars": [
          "__sq_has_values",
          "__sq1"
        ],
        "Inputs": [
          {
            "InputName": "SubQuery",
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select col from t_user_0 where 1 != 1",
            "Query": "select col from t_user",
            "Table": "t_user"
          },
          {
            "InputName": "Outer",
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select id from t_user_0 where 1 != 1",
            "Query": "select id from t_user where id not in ::__sq1 and not :__sq_has_values",
            "Table": "t_user"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "cross-shard subquery as expression",
    "query": "select id from t_user where id = (select col from t_user)",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_user where id = (select col from t_user)",
      "Instructions": {
        "OperatorType": "UncorrelatedSubquery",
        "Variant": "PulloutValue",
        "PulloutVars": [
          "__sq1"
        ],
        "Inputs": [
          {
            "InputName": "SubQuery",
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select col from t_user_0 where 1 != 1",
            "Query": "select col from t_user",
            "Table": "t_user"
          },
          {
            "InputName": "Outer",
            "OperatorType": "TableRoute",
            "Variant": "EqualUnique-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select id from t_user_0 where 1 != 1",
            "Query": "select id from t_user where id = :__sq1",
            "Table": "t_user",
            "Values": [
              ":__sq1"
            ],
            "Vindex": "user_index"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "multi-level pullout",
    "query": "select id1 from t_user where id = (select id2 from t_user where id2 in (select id3 from t_user))",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id1 from t_user where id = (select id2 from t_user where id2 in (select id3 from t_user))",
      "Instructions": {
        "OperatorType": "UncorrelatedSubquery",
        "Variant": "PulloutValue",
        "PulloutVars": [
          "__sq1"
        ],
        "Inputs": [
          {
            "InputName": "SubQuery",
            "OperatorType": "UncorrelatedSubquery",
            "Variant": "PulloutIn",
            "PulloutVars": [
              "__sq_has_values",
              "__sq2"
            ],
            "Inputs": [
              {
                "InputName": "SubQuery",
                "OperatorType": "TableRoute",
                "Variant": "Scatter-Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select id3 from t_user_0 where 1 != 1",
                "Query": "select id3 from t_user",
                "Table": "t_user"
              },
              {
                "InputName": "Outer",
                "OperatorType": "TableRoute",
                "Variant": "Scatter-Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select id2 from t_user_0 where 1 != 1",
                "Query": "select id2 from t_user where id2 in ::__sq2 and :__sq_has_values",
                "Table": "t_user"
              }
            ]
          },
          {
            "InputName": "Outer",
            "OperatorType": "TableRoute",
            "Variant": "EqualUnique-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select id1 from t_user_0 where 1 != 1",
            "Query": "select id1 from t_user where id = :__sq1",
            "Table": "t_user",
            "Values": [
              ":__sq1"
            ],
            "Vindex": "user_index"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "subquery on other table",
    "query": "select distinct t_user.id, t_user.col from t_user where t_user.col in (select id from t_music where col2 = 'a')",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select distinct t_user.id, t_user.col from t_user where t_user.col in (select id from t_music where col2 = 'a')",
      "Instructions": {
        "OperatorType": "Aggregate",
        "Variant": "Ordered",
        "GroupBy": "(0|2), 1",
        "ResultColumns": 2,
        "Inputs": [
          {
            "OperatorType": "Subquery",
            "Variant": "PulloutIn",
            "PulloutVars": [
              "__sq_has_values1",
              "__sq1"
            ],
            "Inputs": [
              {
                "OperatorType": "TableRoute",
                "Variant": "Scatter-Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select id from t_music_0 where 1 != 1",
                "Query": "select id from t_music where col2 = 'a'",
                "Table": "t_music"
              },
              {
                "OperatorType": "TableRoute",
                "Variant": "Scatter-Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select t_user_0.id, t_user_0.col, weight_string(t_user_0.id) from t_user_0 where 1 != 1",
                "OrderBy": "(0|2) ASC, 1 ASC",
                "Query": "select t_user.id, t_user.col, weight_string(t_user.id) from t_user where :__sq_has_values1 = 1 and t_user.col in ::__sq1 order by t_user.id asc, t_user.col asc",
                "Table": "t_user"
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "user.t_music",
        "user.t_user"
      ]
    }
  },
  {
    "comment": "cross-shard subquery in EXISTS clause.",
    "query": "select id from t_user where exists (select col from t_user)",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_user where exists (select col from t_user)",
      "Instructions": {
        "OperatorType": "Subquery",
        "Variant": "PulloutExists",
        "PulloutVars": [
          "__sq_has_values1"
        ],
        "Inputs": [
          {
            "OperatorType": "Limit",
            "Count": "INT64(1)",
            "Inputs": [
              {
                "OperatorType": "TableRoute",
                "Variant": "Scatter-Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select 1 from t_user_0 where 1 != 1",
                "Query": "select 1 from t_user limit :__upper_limit",
                "Table": "t_user"
              }
            ]
          },
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select id from t_user_0 where 1 != 1",
            "Query": "select id from t_user where :__sq_has_values1",
            "Table": "t_user"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "pullout sq after pullout sq",
    "query": "select id from t_user where not id in (select t_user_extra.col from t_user_extra where t_user_extra.user_id = 42) and id in (select t_user_extra.col from t_user_extra where t_user_extra.user_id = 411)",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_user where not id in (select t_user_extra.col from t_user_extra where t_user_extra.user_id = 42) and id in (select t_user_extra.col from t_user_extra where t_user_extra.user_id = 411)",
      "Instructions": {
        "OperatorType": "UncorrelatedSubquery",
        "Variant": "PulloutIn",
        "PulloutVars": [
          "__sq_has_values1",
          "__sq2"
        ],
        "Inputs": [
          {
            "InputName": "SubQuery",
            "OperatorType": "TableRoute",
            "Variant": "EqualUnique-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select t_user_extra_0.col from t_user_extra_0 where 1 != 1",
            "Query": "select t_user_extra.col from t_user_extra where t_user_extra.user_id = 411",
            "Table": "t_user_extra",
            "Values": [
              "INT64(411)"
            ],
            "Vindex": "user_index"
          },
          {
            "InputName": "Outer",
            "OperatorType": "UncorrelatedSubquery",
            "Variant": "PulloutNotIn",
            "PulloutVars": [
              "__sq_has_values",
              "__sq1"
            ],
            "Inputs": [
              {
                "InputName": "SubQuery",
                "OperatorType": "TableRoute",
                "Variant": "EqualUnique-Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select t_user_extra_0.col from t_user_extra_0 where 1 != 1",
                "Query": "select t_user_extra.col from t_user_extra where t_user_extra.user_id = 42",
                "Table": "t_user_extra",
                "Values": [
                  "INT64(42)"
                ],
                "Vindex": "user_index"
              },
              {
                "InputName": "Outer",
                "OperatorType": "TableRoute",
                "Variant": "IN-Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select id from t_user_0 where 1 != 1",
                "Query": "select id from t_user where id not in ::__sq1 and id in ::__vals and not :__sq_has_values and :__sq_has_values1",
                "Table": "t_user",
                "Values": [
                  "::__sq2"
                ],
                "Vindex": "user_index"
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "user.t_user",
        "user.t_user_extra"
      ]
    }
  },
  {
    "comment": "SelectScatter with NOT EXISTS uncorrelated subquery",
    "query": "select u1.col from t_user as u1 where not exists (select u2.name from t_user u2 where u2.id = 5)",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select u1.col from t_user as u1 where not exists (select u2.name from t_user u2 where u2.id = 5)",
      "Instructions": {
        "OperatorType": "Subquery",
        "Variant": "PulloutExists",
        "PulloutVars": [
          "__sq_has_values1"
        ],
        "Inputs": [
          {
            "OperatorType": "Limit",
            "Count": "INT64(1)",
            "Inputs": [
              {
                "OperatorType": "TableRoute",
                "Variant": "EqualUnique-Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select 1 from t_user_0 as u2 where 1 != 1",
                "Query": "select 1 from t_user as u2 where u2.id = 5 limit :__upper_limit",
                "Table": "t_user",
                "Values": [
                  "INT64(5)"
                ],
                "Vindex": "user_index"
              }
            ]
          },
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select u1.col from t_user_0 as u1 where 1 != 1",
            "Query": "select u1.col from t_user as u1 where not :__sq_has_values1",
            "Table": "t_user"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  }
]