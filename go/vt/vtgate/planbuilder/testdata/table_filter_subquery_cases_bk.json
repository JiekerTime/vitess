[
  {
    "comment": "correlated subquery merge-able into a route of a join tree",
    "query": "select u.m from user_extra join user u where u.id in (select m2 from user where user.id = u.id) and u.id in (user_extra.col, 1)",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select u.m from user_extra join user u where u.id in (select m2 from user where user.id = u.id) and u.id in (user_extra.col, 1)",
      "Instructions": {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "R:0",
        "JoinVars": {
          "user_extra_col": 0
        },
        "TableName": "user_extra_`user`",
        "Inputs": [
          {
            "OperatorType": "Route",
            "Variant": "Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select user_extra.col from user_extra where 1 != 1",
            "Query": "select user_extra.col from user_extra",
            "Table": "user_extra"
          },
          {
            "OperatorType": "Route",
            "Variant": "IN",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select u.m from `user` as u where 1 != 1",
            "Query": "select u.m from `user` as u where u.id in (select m2 from `user` where `user`.id = u.id) and u.id in ::__vals",
            "Table": "`user`",
            "Values": [
              "(:user_extra_col, INT64(1))"
            ],
            "Vindex": "user_index"
          }
        ]
      },
      "TablesUsed": [
        "user.user",
        "user.user_extra"
      ]
    }
  },
  {
    "comment": "ensure subquery reordering gets us a better plan",
    "query": "select u.m from user_extra join user u where u.id in (select m2 from user where user.id = 5) and u.id = 5",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select u.m from user_extra join user u where u.id in (select m2 from user where user.id = 5) and u.id = 5",
      "Instructions": {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "R:0",
        "TableName": "user_extra_`user`",
        "Inputs": [
          {
            "OperatorType": "Route",
            "Variant": "Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select 1 from user_extra where 1 != 1",
            "Query": "select 1 from user_extra",
            "Table": "user_extra"
          },
          {
            "OperatorType": "Route",
            "Variant": "EqualUnique",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select u.m from `user` as u where 1 != 1",
            "Query": "select u.m from `user` as u where u.id in (select m2 from `user` where `user`.id = 5) and u.id = 5",
            "Table": "`user`",
            "Values": [
              "INT64(5)"
            ],
            "Vindex": "user_index"
          }
        ]
      },
      "TablesUsed": [
        "user.user",
        "user.user_extra"
      ]
    }
  },
  {
    "comment": "nested subquery",
    "query": "select u.m from user_extra join user u where u.id in (select m2 from user where user.id = u.id and user_extra.col = user.col and user.id in (select m3 from user_extra where user_extra.user_id = user.id)) and u.id in (user_extra.col, 1)",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select u.m from user_extra join user u where u.id in (select m2 from user where user.id = u.id and user_extra.col = user.col and user.id in (select m3 from user_extra where user_extra.user_id = user.id)) and u.id in (user_extra.col, 1)",
      "Instructions": {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "R:0",
        "JoinVars": {
          "user_extra_col": 0
        },
        "TableName": "user_extra_`user`",
        "Inputs": [
          {
            "OperatorType": "Route",
            "Variant": "Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select user_extra.col from user_extra where 1 != 1",
            "Query": "select user_extra.col from user_extra",
            "Table": "user_extra"
          },
          {
            "OperatorType": "Route",
            "Variant": "IN",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select u.m from `user` as u where 1 != 1",
            "Query": "select u.m from `user` as u where u.id in (select m2 from `user` where `user`.id = u.id and `user`.col = :user_extra_col /* INT16 */ and `user`.id in (select m3 from user_extra where user_extra.user_id = `user`.id)) and u.id in ::__vals",
            "Table": "`user`",
            "Values": [
              "(:user_extra_col, INT64(1))"
            ],
            "Vindex": "user_index"
          }
        ]
      },
      "TablesUsed": [
        "user.user",
        "user.user_extra"
      ]
    }
  },
  {
    "comment": "Correlated subquery in where clause",
    "query": "select id from user where user.col in (select user_extra.col from user_extra where user_extra.user_id = user.id)",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from user where user.col in (select user_extra.col from user_extra where user_extra.user_id = user.id)",
      "Instructions": {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from `user` where 1 != 1",
        "Query": "select id from `user` where `user`.col in (select user_extra.col from user_extra where user_extra.user_id = `user`.id)",
        "Table": "`user`"
      },
      "TablesUsed": [
        "user.user",
        "user.user_extra"
      ]
    }
  },
  {
    "comment": "outer and inner subquery route by same int val",
    "query": "select id from user where id = 5 and user.col in (select user_extra.col from user_extra where user_extra.user_id = 5)",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from user where id = 5 and user.col in (select user_extra.col from user_extra where user_extra.user_id = 5)",
      "Instructions": {
        "OperatorType": "Route",
        "Variant": "EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from `user` where 1 != 1",
        "Query": "select id from `user` where id = 5 and `user`.col in (select user_extra.col from user_extra where user_extra.user_id = 5)",
        "Table": "`user`",
        "Values": [
          "INT64(5)"
        ],
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.user",
        "user.user_extra"
      ]
    }
  },
  {
    "comment": "subquery",
    "query": "select u.m from user_extra join user u where u.id in (select m2 from user where user.id = u.id and user_extra.col = user.col) and u.id in (user_extra.col, 1)",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select u.m from user_extra join user u where u.id in (select m2 from user where user.id = u.id and user_extra.col = user.col) and u.id in (user_extra.col, 1)",
      "Instructions": {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "R:0",
        "JoinVars": {
          "user_extra_col": 0
        },
        "TableName": "user_extra_`user`",
        "Inputs": [
          {
            "OperatorType": "Route",
            "Variant": "Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select user_extra.col from user_extra where 1 != 1",
            "Query": "select user_extra.col from user_extra",
            "Table": "user_extra"
          },
          {
            "OperatorType": "Route",
            "Variant": "IN",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select u.m from `user` as u where 1 != 1",
            "Query": "select u.m from `user` as u where u.id in (select m2 from `user` where `user`.id = u.id and `user`.col = :user_extra_col /* INT16 */) and u.id in ::__vals",
            "Table": "`user`",
            "Values": [
              "(:user_extra_col, INT64(1))"
            ],
            "Vindex": "user_index"
          }
        ]
      },
      "TablesUsed": [
        "user.user",
        "user.user_extra"
      ]
    }
  },
  {
    "comment": "outer and inner subquery route by same str val",
    "query": "select id from user where id = 'aa' and user.col in (select user_extra.col from user_extra where user_extra.user_id = 'aa')",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from user where id = 'aa' and user.col in (select user_extra.col from user_extra where user_extra.user_id = 'aa')",
      "Instructions": {
        "OperatorType": "Route",
        "Variant": "EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from `user` where 1 != 1",
        "Query": "select id from `user` where id = 'aa' and `user`.col in (select user_extra.col from user_extra where user_extra.user_id = 'aa')",
        "Table": "`user`",
        "Values": [
          "VARCHAR(\"aa\")"
        ],
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.user",
        "user.user_extra"
      ]
    }
  },
  {
    "comment": "outer and inner subquery route by same val arg",
    "query": "select id from user where id = :a and user.col in (select user_extra.col from user_extra where user_extra.user_id = :a)",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from user where id = :a and user.col in (select user_extra.col from user_extra where user_extra.user_id = :a)",
      "Instructions": {
        "OperatorType": "Route",
        "Variant": "EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from `user` where 1 != 1",
        "Query": "select id from `user` where id = :a and `user`.col in (select user_extra.col from user_extra where user_extra.user_id = :a)",
        "Table": "`user`",
        "Values": [
          ":a"
        ],
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.user",
        "user.user_extra"
      ]
    }
  },
  {
    "comment": "unresolved symbol in inner subquery.",
    "query": "select id from user where id = :a and user.col in (select user_extra.col from user_extra where user_extra.user_id = :a and foo.id = 1)",
    "plan": "column 'foo.id' not found"
  },
  {
    "comment": "outer and inner subquery route by same outermost column value",
    "query": "select id2 from user uu where id in (select id from user where id = uu.id and user.col in (select user_extra.col from user_extra where user_extra.user_id = uu.id))",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id2 from user uu where id in (select id from user where id = uu.id and user.col in (select user_extra.col from user_extra where user_extra.user_id = uu.id))",
      "Instructions": {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id2 from `user` as uu where 1 != 1",
        "Query": "select id2 from `user` as uu where id in (select id from `user` where id = uu.id and `user`.col in (select user_extra.col from user_extra where user_extra.user_id = uu.id))",
        "Table": "`user`"
      },
      "TablesUsed": [
        "user.user",
        "user.user_extra"
      ]
    }
  },
  {
    "comment": "routing rules subquery merge",
    "query": "select col from user where id = (select id from route1 where route1.id = user.id)",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select col from user where id = (select id from route1 where route1.id = user.id)",
      "Instructions": {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select col from `user` where 1 != 1",
        "Query": "select col from `user` where id = (select id from `user` as route1 where route1.id = `user`.id)",
        "Table": "`user`"
      },
      "TablesUsed": [
        "user.user"
      ]
    }
  },
  {
    "comment": "routing rules subquery pullout",
    "query": "select col from user where id = (select id from route2)",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select col from user where id = (select id from route2)",
      "Instructions": {
        "OperatorType": "Subquery",
        "Variant": "PulloutValue",
        "PulloutVars": [
          "__sq_has_values1",
          "__sq1"
        ],
        "Inputs": [
          {
            "OperatorType": "Route",
            "Variant": "Unsharded",
            "Keyspace": {
              "Name": "main",
              "Sharded": false
            },
            "FieldQuery": "select id from unsharded as route2 where 1 != 1",
            "Query": "select id from unsharded as route2",
            "Table": "unsharded"
          },
          {
            "OperatorType": "Route",
            "Variant": "EqualUnique",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select col from `user` where 1 != 1",
            "Query": "select col from `user` where id = :__sq1",
            "Table": "`user`",
            "Values": [
              ":__sq1"
            ],
            "Vindex": "user_index"
          }
        ]
      },
      "TablesUsed": [
        "main.unsharded",
        "user.user"
      ]
    }
  },
  {
    "comment": "select from unsharded keyspace with uncorrelated subquery which should be merged to a single route",
    "query": "select unsharded.id from unsharded where unsharded.name in (select name from unsharded_a)",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select unsharded.id from unsharded where unsharded.name in (select name from unsharded_a)",
      "Instructions": {
        "OperatorType": "Route",
        "Variant": "Unsharded",
        "Keyspace": {
          "Name": "main",
          "Sharded": false
        },
        "FieldQuery": "select unsharded.id from unsharded where 1 != 1",
        "Query": "select unsharded.id from unsharded where unsharded.`name` in (select `name` from unsharded_a)",
        "Table": "unsharded, unsharded_a"
      },
      "TablesUsed": [
        "main.unsharded",
        "main.unsharded_a"
      ]
    }
  },
  {
    "comment": "in subquery the id will be scoped to local table as there is no qualifier associated with it.",
    "query": "select id from user where id in (select col from unsharded where col = id)",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from user where id in (select col from unsharded where col = id)",
      "Instructions": {
        "OperatorType": "Subquery",
        "Variant": "PulloutIn",
        "PulloutVars": [
          "__sq_has_values1",
          "__sq1"
        ],
        "Inputs": [
          {
            "OperatorType": "Route",
            "Variant": "Unsharded",
            "Keyspace": {
              "Name": "main",
              "Sharded": false
            },
            "FieldQuery": "select col from unsharded where 1 != 1",
            "Query": "select col from unsharded where col = id",
            "Table": "unsharded"
          },
          {
            "OperatorType": "Route",
            "Variant": "IN",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select id from `user` where 1 != 1",
            "Query": "select id from `user` where :__sq_has_values1 = 1 and id in ::__vals",
            "Table": "`user`",
            "Values": [
              "::__sq1"
            ],
            "Vindex": "user_index"
          }
        ]
      },
      "TablesUsed": [
        "main.unsharded",
        "user.user"
      ]
    }
  },
  {
    "comment": "correlated subquery with same keyspace",
    "query": "select u.id from user as u where u.col in (select ue.user_id from user_extra as ue where ue.user_id = u.id)",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select u.id from user as u where u.col in (select ue.user_id from user_extra as ue where ue.user_id = u.id)",
      "Instructions": {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select u.id from `user` as u where 1 != 1",
        "Query": "select u.id from `user` as u where u.col in (select ue.user_id from user_extra as ue where ue.user_id = u.id)",
        "Table": "`user`"
      },
      "TablesUsed": [
        "user.user",
        "user.user_extra"
      ]
    }
  },
  {
    "comment": "SelectEqualUnique with EXISTS uncorrelated subquery",
    "query": "select u1.col from user as u1 where u1.id = 5 and exists (select u2.name from user u2 where u2.id = 5)",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select u1.col from user as u1 where u1.id = 5 and exists (select u2.name from user u2 where u2.id = 5)",
      "Instructions": {
        "OperatorType": "Route",
        "Variant": "EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select u1.col from `user` as u1 where 1 != 1",
        "Query": "select u1.col from `user` as u1 where u1.id = 5 and exists (select 1 from `user` as u2 where u2.id = 5 limit 1)",
        "Table": "`user`",
        "Values": [
          "INT64(5)"
        ],
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.user"
      ]
    }
  },
  {
    "comment": "SelectEqualUnique with NOT EXISTS uncorrelated subquery",
    "query": "select u1.col from user as u1 where u1.id = 5 and not exists (select u2.name from user u2 where u2.id = 5)",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select u1.col from user as u1 where u1.id = 5 and not exists (select u2.name from user u2 where u2.id = 5)",
      "Instructions": {
        "OperatorType": "Route",
        "Variant": "EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select u1.col from `user` as u1 where 1 != 1",
        "Query": "select u1.col from `user` as u1 where u1.id = 5 and not exists (select 1 from `user` as u2 where u2.id = 5 limit 1)",
        "Table": "`user`",
        "Values": [
          "INT64(5)"
        ],
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.user"
      ]
    }
  },
  {
    "comment": "The outer and first inner are SelectEqualUnique with same Vindex value, the second inner has different Vindex value",
    "query": "select id from user where id = 5 and not id in (select user_extra.col from user_extra where user_extra.user_id = 5) and id in (select user_extra.col from user_extra where user_extra.user_id = 4)",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from user where id = 5 and not id in (select user_extra.col from user_extra where user_extra.user_id = 5) and id in (select user_extra.col from user_extra where user_extra.user_id = 4)",
      "Instructions": {
        "OperatorType": "Subquery",
        "Variant": "PulloutIn",
        "PulloutVars": [
          "__sq_has_values2",
          "__sq2"
        ],
        "Inputs": [
          {
            "OperatorType": "Route",
            "Variant": "EqualUnique",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select user_extra.col from user_extra where 1 != 1",
            "Query": "select user_extra.col from user_extra where user_extra.user_id = 4",
            "Table": "user_extra",
            "Values": [
              "INT64(4)"
            ],
            "Vindex": "user_index"
          },
          {
            "OperatorType": "Route",
            "Variant": "EqualUnique",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select id from `user` where 1 != 1",
            "Query": "select id from `user` where id = 5 and id not in (select user_extra.col from user_extra where user_extra.user_id = 5) and (:__sq_has_values2 = 1 and id in ::__sq2)",
            "Table": "`user`",
            "Values": [
              "INT64(5)"
            ],
            "Vindex": "user_index"
          }
        ]
      },
      "TablesUsed": [
        "user.user",
        "user.user_extra"
      ]
    }
  },
  {
    "comment": "The outer and second inner are SelectEqualUnique with same Vindex value, the first inner has different Vindex value",
    "query": "select id from user where id = 5 and not id in (select user_extra.col from user_extra where user_extra.user_id = 4) and id in (select user_extra.col from user_extra where user_extra.user_id = 5)",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from user where id = 5 and not id in (select user_extra.col from user_extra where user_extra.user_id = 4) and id in (select user_extra.col from user_extra where user_extra.user_id = 5)",
      "Instructions": {
        "OperatorType": "Subquery",
        "Variant": "PulloutNotIn",
        "PulloutVars": [
          "__sq_has_values1",
          "__sq1"
        ],
        "Inputs": [
          {
            "OperatorType": "Route",
            "Variant": "EqualUnique",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select user_extra.col from user_extra where 1 != 1",
            "Query": "select user_extra.col from user_extra where user_extra.user_id = 4",
            "Table": "user_extra",
            "Values": [
              "INT64(4)"
            ],
            "Vindex": "user_index"
          },
          {
            "OperatorType": "Route",
            "Variant": "EqualUnique",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select id from `user` where 1 != 1",
            "Query": "select id from `user` where id = 5 and (:__sq_has_values1 = 0 or id not in ::__sq1) and id in (select user_extra.col from user_extra where user_extra.user_id = 5)",
            "Table": "`user`",
            "Values": [
              "INT64(5)"
            ],
            "Vindex": "user_index"
          }
        ]
      },
      "TablesUsed": [
        "user.user",
        "user.user_extra"
      ]
    }
  },
  {
    "comment": "routing rules subquery merge with alias",
    "query": "select col from user where id = (select id from route1 as a where a.id = user.id)",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select col from user where id = (select id from route1 as a where a.id = user.id)",
      "Instructions": {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select col from `user` where 1 != 1",
        "Query": "select col from `user` where id = (select id from `user` as a where a.id = `user`.id)",
        "Table": "`user`"
      },
      "TablesUsed": [
        "user.user"
      ]
    }
  },
  {
    "comment": "must merge subquery with the right side of the join",
    "query": "select 1 from unsharded join user u1 where exists (select 1 from unsharded u2 where u1.bar = u2.baz)",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select 1 from unsharded join user u1 where exists (select 1 from unsharded u2 where u1.bar = u2.baz)",
      "Instructions": {
        "OperatorType": "SemiJoin",
        "JoinVars": {
          "u1_bar": 0
        },
        "ProjectedIndexes": "-2",
        "TableName": "unsharded_`user`_unsharded",
        "Inputs": [
          {
            "OperatorType": "Join",
            "Variant": "Join",
            "JoinColumnIndexes": "R:0,L:0",
            "TableName": "unsharded_`user`",
            "Inputs": [
              {
                "OperatorType": "Route",
                "Variant": "Unsharded",
                "Keyspace": {
                  "Name": "main",
                  "Sharded": false
                },
                "FieldQuery": "select 1 from unsharded where 1 != 1",
                "Query": "select 1 from unsharded",
                "Table": "unsharded"
              },
              {
                "OperatorType": "Route",
                "Variant": "Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select u1.bar from `user` as u1 where 1 != 1",
                "Query": "select u1.bar from `user` as u1",
                "Table": "`user`"
              }
            ]
          },
          {
            "OperatorType": "Route",
            "Variant": "Unsharded",
            "Keyspace": {
              "Name": "main",
              "Sharded": false
            },
            "FieldQuery": "select 1 from unsharded as u2 where 1 != 1",
            "Query": "select 1 from unsharded as u2 where u2.baz = :u1_bar",
            "Table": "unsharded"
          }
        ]
      },
      "TablesUsed": [
        "main.unsharded",
        "user.user"
      ]
    }
  },
  {
    "comment": "SelectDBA with uncorrelated subqueries",
    "query": "select t.table_schema from information_schema.tables as t where t.table_schema in (select c.column_name from information_schema.columns as c)",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select t.table_schema from information_schema.tables as t where t.table_schema in (select c.column_name from information_schema.columns as c)",
      "Instructions": {
        "OperatorType": "Route",
        "Variant": "DBA",
        "Keyspace": {
          "Name": "main",
          "Sharded": false
        },
        "FieldQuery": "select t.table_schema from information_schema.`tables` as t where 1 != 1",
        "Query": "select t.table_schema from information_schema.`tables` as t where t.table_schema in (select c.column_name from information_schema.`columns` as c)",
        "Table": "information_schema.`tables`"
      }
    }
  },
  {
    "comment": "SelectReference with uncorrelated subqueries",
    "query": "select ref.col from ref where ref.col in (select ref.col from ref)",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select ref.col from ref where ref.col in (select ref.col from ref)",
      "Instructions": {
        "OperatorType": "Route",
        "Variant": "Reference",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select ref.col from ref where 1 != 1",
        "Query": "select ref.col from ref where ref.col in (select ref.col from ref)",
        "Table": "ref"
      },
      "TablesUsed": [
        "user.ref"
      ]
    }
  },
  {
    "comment": "SelectEqualUnique with uncorrelated subqueries",
    "query": "select u1.col from user as u1 where u1.id = 5 and u1.name in (select u2.name from user u2 where u2.id = 5)",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select u1.col from user as u1 where u1.id = 5 and u1.name in (select u2.name from user u2 where u2.id = 5)",
      "Instructions": {
        "OperatorType": "Route",
        "Variant": "EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select u1.col from `user` as u1 where 1 != 1",
        "Query": "select u1.col from `user` as u1 where u1.id = 5 and u1.`name` in (select u2.`name` from `user` as u2 where u2.id = 5)",
        "Table": "`user`",
        "Values": [
          "INT64(5)"
        ],
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.user"
      ]
    }
  },
  {
    "comment": "two correlated subqueries that can be merge in a single route",
    "query": "select u.id from user as u where u.col in (select ue.user_id from user_extra as ue where ue.user_id = u.id) and u.col2 in (select ue.user_id from user_extra as ue where ue.user_id = u.id)",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select u.id from user as u where u.col in (select ue.user_id from user_extra as ue where ue.user_id = u.id) and u.col2 in (select ue.user_id from user_extra as ue where ue.user_id = u.id)",
      "Instructions": {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select u.id from `user` as u where 1 != 1",
        "Query": "select u.id from `user` as u where u.col in (select ue.user_id from user_extra as ue where ue.user_id = u.id) and u.col2 in (select ue.user_id from user_extra as ue where ue.user_id = u.id)",
        "Table": "`user`"
      },
      "TablesUsed": [
        "user.user",
        "user.user_extra"
      ]
    }
  }
]