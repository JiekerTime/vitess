[
  {
    "comment": "ORDER BY, reference col from local table with shard key",
    "query": "select predef1 from t_user where id = 5 order by predef2",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select predef1 from t_user where id = 5 order by predef2",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "EqualUnique-Scatter",
        "Vindex": "user_index",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select predef1, predef2, weight_string(predef2) from t_user_0 where 1 != 1",
        "Query": "select predef1, predef2, weight_string(predef2) from t_user where id = 5 order by predef2 asc",
        "OrderBy": "(1|2) ASC",
        "ResultColumns": 1,
        "Table": "t_user",
        "Values": [
          "INT64(5)"
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "ORDER BY, reference col from local table with shard key and split table key",
    "query": "select predef1 from t_user where id = 5 and col = 6 order by col",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select predef1 from t_user where id = 5 and col = 6 order by col",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "EqualUnique-EqualUnique",
        "Vindex": "user_index",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select predef1 from t_user_0 where 1 != 1",
        "Query": "select predef1 from t_user where id = 5 and col = 6 order by col asc",
        "Table": "t_user",
        "Values": [
          "INT64(5)"
        ],
        "TableValues": [
          "INT64(6)"
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "ORDER BY on scatter",
    "query": "select col from t_user order by col",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select col from t_user order by col",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select col from t_user_0 where 1 != 1",
        "Query": "select col from t_user order by col asc",
        "OrderBy": "0 ASC",
        "Table": "t_user"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "ORDER BY unknown type on scatter",
    "query": "select id from t_user order by id",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_user order by id",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id, weight_string(id) from t_user_0 where 1 != 1",
        "Query": "select id, weight_string(id) from t_user order by id asc",
        "OrderBy": "(0|1) ASC",
        "ResultColumns": 1,
        "Table": "t_user"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "ORDER BY column not in selectExprs",
    "query": "select col from t_user order by id",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select col from t_user order by id",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select col, id, weight_string(id) from t_user_0 where 1 != 1",
        "Query": "select col, id, weight_string(id) from t_user order by id asc",
        "OrderBy": "(1|2) ASC",
        "ResultColumns": 1,
        "Table": "t_user"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "ORDER BY uses column numbers",
    "query": "select col from t_user order by 1",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select col from t_user order by 1",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select col from t_user_0 where 1 != 1",
        "Query": "select col from t_user order by col asc",
        "OrderBy": "0 ASC",
        "Table": "t_user"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "ORDER BY column numbers",
    "query": "select id as foo from t_user order by 1",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id as foo from t_user order by 1",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id as foo, weight_string(id) from t_user_0 where 1 != 1",
        "Query": "select id as foo, weight_string(id) from t_user order by foo asc",
        "OrderBy": "(0|1) ASC",
        "ResultColumns": 1,
        "Table": "t_user"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "ORDER BY invalid col number on scatter",
    "query": "select col from t_user order by 2",
    "plan": "Unknown column '2' in 'order clause'"
  },
  {
    "comment": "ORDER BY NULL",
    "query": "select col from t_user order by null",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select col from t_user order by null",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select col from t_user_0 where 1 != 1",
        "Query": "select col from t_user order by null",
        "Table": "t_user"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Order by, '*' expression",
    "query": "select * from t_user where id = 5 and col = 6 order by a",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select * from t_user where id = 5 and col = 6 order by a",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "EqualUnique-EqualUnique",
        "Vindex": "user_index",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select * from t_user_0 where 1 != 1",
        "Query": "select * from t_user where id = 5 and col = 6 order by a asc",
        "Table": "t_user",
        "Values": [
          "INT64(5)"
        ],
        "TableValues": [
          "INT64(6)"
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Order by, qualified '*' expression",
    "query": "select t_user.* from t_user where id = 5 and col = 6 order by t_user.a",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select t_user.* from t_user where id = 5 and col = 6 order by t_user.a",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "EqualUnique-EqualUnique",
        "Vindex": "user_index",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select t_user_0.* from t_user_0 where 1 != 1",
        "Query": "select t_user.* from t_user where id = 5 and col = 6 order by t_user.a asc",
        "Table": "t_user",
        "Values": [
          "INT64(5)"
        ],
        "TableValues": [
          "INT64(6)"
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Order by, '*' expression with qualified reference",
    "query": "select * from t_user where id = 5 and col = 6 order by t_user.a",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select * from t_user where id = 5 and col = 6 order by t_user.a",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "EqualUnique-EqualUnique",
        "Vindex": "user_index",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select * from t_user_0 where 1 != 1",
        "Query": "select * from t_user where id = 5 and col = 6 order by t_user.a asc",
        "Table": "t_user",
        "Values": [
          "INT64(5)"
        ],
        "TableValues": [
          "INT64(6)"
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "ORDER BY on select t.*",
    "query": "select t.*, t.col from t_user t order by t.col",
    "plan": "VT09015: schema tracking required"
  },
  {
    "comment": "ORDER BY on select *",
    "query": "select *, col from t_user order by col",
    "plan": "VT09015: schema tracking required"
  },
  {
    "comment": "ORDER BY on select multi t.*",
    "query": "select t.*, t.name, t.*, t.col from t_user t order by t.col",
    "plan": "VT09015: schema tracking required"
  },
  {
    "comment": "ORDER BY on select multi *",
    "query": "select *, name, *, col from t_user order by col",
    "plan": "VT09015: schema tracking required"
  },
  {
    "comment": "ORDER BY on scatter with multiple columns",
    "query": "select col from t_user order by a,b",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select col from t_user order by a,b",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select col, a, weight_string(a), b, weight_string(b) from t_user_0 where 1 != 1",
        "Query": "select col, a, weight_string(a), b, weight_string(b) from t_user order by a asc, b asc",
        "OrderBy": "(1|2) ASC, (3|4) ASC",
        "ResultColumns": 1,
        "Table": "t_user"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "ORDER BY on scatter with multiple columns numbers",
    "query": "select id,col,a,b from t_user order by 2,3",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id,col,a,b from t_user order by 2,3",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id, col, a, b, weight_string(a) from t_user_0 where 1 != 1",
        "Query": "select id, col, a, b, weight_string(a) from t_user order by col asc, a asc",
        "OrderBy": "1 ASC, (2|4) ASC",
        "ResultColumns": 4,
        "Table": "t_user"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "ORDER BY RAND()",
    "query": "select col from t_user order by RAND()",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select col from t_user order by RAND()",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select col from t_user_0 where 1 != 1",
        "Query": "select col from t_user order by RAND()",
        "Table": "t_user"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Order by, qualified '*' expression, name mismatched.",
    "query": "select t_user.* from t_user where id = 5 order by e.col",
    "plan": "column 'e.col' not found"
  },
  {
    "comment": "Order by, invalid column number",
    "query": "select col from t_user where id = 5 order by 18446744073709551616",
    "plan": "error parsing column number: 18446744073709551616"
  },
  {
    "comment": "Order by, out of range column number",
    "query": "select col from t_user where id = 5 order by 2",
    "plan": "Unknown column '2' in 'order clause'"
  },
  {
    "comment": "Order by with math functions",
    "query": "select * from t_user where id = 5 and col = 6 order by -col1",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select * from t_user where id = 5 and col = 6 order by -col1",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "EqualUnique-EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select * from t_user_0 where 1 != 1",
        "Query": "select * from t_user where id = 5 and col = 6 order by -col1 asc",
        "Values": [
          "INT64(5)"
        ],
        "TableValues": [
          "INT64(6)"
        ],
        "Table": "t_user",
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Order by with string operations",
    "query": "select * from t_user where id = 5 and col = 6 order by concat(col,col1) collate utf8_general_ci desc",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select * from t_user where id = 5 and col = 6 order by concat(col,col1) collate utf8_general_ci desc",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "EqualUnique-EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select * from t_user_0 where 1 != 1",
        "Query": "select * from t_user where id = 5 and col = 6 order by concat(col, col1) collate utf8_general_ci desc",
        "Values": [
          "INT64(5)"
        ],
        "TableValues": [
          "INT64(6)"
        ],
        "Table": "t_user",
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Order by with math operations",
    "query": "select * from t_user where id = 5 and col = 6 order by id+col collate utf8_general_ci desc",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select * from t_user where id = 5 and col = 6 order by id+col collate utf8_general_ci desc",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "EqualUnique-EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select * from t_user_0 where 1 != 1",
        "Query": "select * from t_user where id = 5 and col = 6 order by id + col collate utf8_general_ci desc",
        "Values": [
          "INT64(5)"
        ],
        "TableValues": [
          "INT64(6)"
        ],
        "Table": "t_user",
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "routing rules: order by gets pushed for routes",
    "query": "select col from t_user where id = 1  and col = 6 order by col",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select col from t_user where id = 1  and col = 6 order by col",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "EqualUnique-EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select col from t_user_0 where 1 != 1",
        "Query": "select col from t_user where id = 1 and col = 6 order by col asc",
        "Values": [
          "INT64(1)"
        ],
        "TableValues": [
          "INT64(6)"
        ],
        "Table": "t_user",
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "order by column alias",
    "query": "select col as foo from t_user order by foo",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select col as foo from t_user order by foo",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select col as foo from t_user_0 where 1 != 1",
        "Query": "select col as foo from t_user order by foo asc",
        "OrderBy": "0 ASC",
        "Table": "t_user"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "column alias for a table column in order by",
    "query": "select col as foo,col2 as col from t_user order by col",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select col as foo,col2 as col from t_user order by col",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select col as foo, col2 as col, weight_string(col2) from t_user_0 where 1 != 1",
        "Query": "select col as foo, col2 as col, weight_string(col2) from t_user order by col asc",
        "OrderBy": "(1|2) ASC",
        "ResultColumns": 2,
        "Table": "t_user"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "order by with ambiguous column reference ; valid in MySQL",
    "query": "select col, col from t_user order by col",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select col, col from t_user order by col",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select col, col from t_user_0 where 1 != 1",
        "Query": "select col, col from t_user order by col asc",
        "OrderBy": "0 ASC",
        "Table": "t_user"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Order by uses cross-shard expression",
    "query": "select col from t_user order by col+1",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select col from t_user order by col+1",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select col, col + 1, weight_string(col + 1) from t_user_0 where 1 != 1",
        "Query": "select col, col + 1, weight_string(col + 1) from t_user order by col + 1 asc",
        "OrderBy": "(1|2) ASC",
        "ResultColumns": 1,
        "Table": "t_user"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Order by column number with collate",
    "query": "select t_user.col1 as a from t_user order by 1 collate utf8_general_ci",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select t_user.col1 as a from t_user order by 1 collate utf8_general_ci",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select t_user_0.col1 as a, a collate utf8_general_ci, weight_string(a collate utf8_general_ci) from t_user_0 where 1 != 1",
        "Query": "select t_user.col1 as a, a collate utf8_general_ci, weight_string(a collate utf8_general_ci) from t_user order by a collate utf8_general_ci asc",
        "OrderBy": "(1|2) ASC",
        "ResultColumns": 1,
        "Table": "t_user"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "aggregation and non-aggregations column without group by",
    "query": "select count(id), num from t_user",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select count(id), num from t_user",
      "Instructions": {
        "OperatorType": "Aggregate",
        "Variant": "Scalar",
        "Aggregates": "sum_count(0) AS count(id), any_value(1) AS num",
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select count(id), num from t_user_0 where 1 != 1",
            "Query": "select count(id), num from t_user",
            "Table": "t_user"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "aggregation and non-aggregations column with order by",
    "query": "select count(id), num from t_user order by 2",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select count(id), num from t_user order by 2",
      "Instructions": {
        "OperatorType": "Sort",
        "Variant": "Memory",
        "OrderBy": "(1|2) ASC",
        "ResultColumns": 2,
        "Inputs": [
          {
            "OperatorType": "Aggregate",
            "Variant": "Scalar",
            "Aggregates": "sum_count(0) AS count(id), any_value(1) AS num, any_value(2)",
            "Inputs": [
              {
                "OperatorType": "TableRoute",
                "Variant": "Scatter-Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select count(id), num, weight_string(num) from t_user_0 where 1 != 1",
                "Query": "select count(id), num, weight_string(num) from t_user",
                "Table": "t_user"
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "min column",
    "query": "select min(id),col from t_user",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select min(id),col from t_user",
      "Instructions": {
        "OperatorType": "Aggregate",
        "Variant": "Scalar",
        "Aggregates": "min(0|2) AS min(id), any_value(1) AS col",
        "ResultColumns": 2,
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select min(id), col, weight_string(id) from t_user_0 where 1 != 1 group by weight_string(id)",
            "Query": "select min(id), col, weight_string(id) from t_user group by weight_string(id)",
            "Table": "t_user"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "max column",
    "query": "select max(id),col from t_user",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select max(id),col from t_user",
      "Instructions": {
        "OperatorType": "Aggregate",
        "Variant": "Scalar",
        "Aggregates": "max(0|2) AS max(id), any_value(1) AS col",
        "ResultColumns": 2,
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select max(id), col, weight_string(id) from t_user_0 where 1 != 1 group by weight_string(id)",
            "Query": "select max(id), col, weight_string(id) from t_user group by weight_string(id)",
            "Table": "t_user"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "select multi aggregator func columns",
    "query": "select max(id),min(id),count(*),col from t_user",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select max(id),min(id),count(*),col from t_user",
      "Instructions": {
        "OperatorType": "Aggregate",
        "Variant": "Scalar",
        "Aggregates": "max(0|4) AS max(id), min(1|4) AS min(id), sum_count_star(2) AS count(*), any_value(3) AS col",
        "ResultColumns": 4,
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select max(id), min(id), count(*), col, weight_string(id) from t_user_0 where 1 != 1 group by weight_string(id)",
            "Query": "select max(id), min(id), count(*), col, weight_string(id) from t_user group by weight_string(id)",
            "Table": "t_user"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "aggregator func columns with single shard",
    "query": "select count(*) from t_user where id=5",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select count(*) from t_user where id=5",
      "Instructions": {
        "OperatorType": "Aggregate",
        "Variant": "Scalar",
        "Aggregates": "sum_count_star(0) AS count(*)",
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "EqualUnique-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select count(*) from t_user_0 where 1 != 1",
            "Query": "select count(*) from t_user where id = 5",
            "Table": "t_user",
            "Values": [
              "INT64(5)"
            ],
            "Vindex": "user_index"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "aggregator func columns with single shard and single table",
    "query": "select count(*) from t_user where id=5 and col=6",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select count(*) from t_user where id=5 and col=6",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "EqualUnique-EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select count(*) from t_user_0 where 1 != 1",
        "Query": "select count(*) from t_user where id = 5 and col = 6",
        "Table": "t_user",
        "TableValues": [
          "INT64(6)"
        ],
        "Values": [
          "INT64(5)"
        ],
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "aggregation and non-aggregations column with group by",
    "query": "select count(id), num from t_user group by 2",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select count(id), num from t_user group by 2",
      "Instructions": {
        "OperatorType": "Aggregate",
        "Variant": "Ordered",
        "Aggregates": "sum_count(0) AS count(id)",
        "GroupBy": "(1|2)",
        "ResultColumns": 2,
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select count(id), num, weight_string(num) from t_user_0 where 1 != 1 group by num, weight_string(num)",
            "OrderBy": "(1|2) ASC",
            "Query": "select count(id), num, weight_string(num) from t_user group by num, weight_string(num) order by num asc",
            "Table": "t_user"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "aggregation and non-aggregations column with group by and order by",
    "query": "select count(id), num from t_user group by 2 order by 1",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select count(id), num from t_user group by 2 order by 1",
      "Instructions": {
        "OperatorType": "Sort",
        "Variant": "Memory",
        "OrderBy": "0 ASC",
        "ResultColumns": 2,
        "Inputs": [
          {
            "OperatorType": "Aggregate",
            "Variant": "Ordered",
            "Aggregates": "sum_count(0) AS count(id)",
            "GroupBy": "(1|2)",
            "Inputs": [
              {
                "OperatorType": "TableRoute",
                "Variant": "Scatter-Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select count(id), num, weight_string(num) from t_user_0 where 1 != 1 group by num, weight_string(num)",
                "OrderBy": "(1|2) ASC",
                "Query": "select count(id), num, weight_string(num) from t_user group by num, weight_string(num) order by num asc",
                "Table": "t_user"
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Scatter order by and aggregation: order by column must reference column from select list",
    "query": "select col, count(*) from t_user group by col order by c1",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select col, count(*) from t_user group by col order by c1",
      "Instructions": {
        "OperatorType": "Sort",
        "Variant": "Memory",
        "OrderBy": "(2|3) ASC",
        "ResultColumns": 2,
        "Inputs": [
          {
            "OperatorType": "Aggregate",
            "Variant": "Ordered",
            "Aggregates": "sum_count_star(1) AS count(*), any_value(2) AS c1, any_value(3)",
            "GroupBy": "0",
            "Inputs": [
              {
                "OperatorType": "TableRoute",
                "Variant": "Scatter-Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select col, count(*), c1, weight_string(c1) from t_user_0 where 1 != 1 group by col",
                "OrderBy": "0 ASC",
                "Query": "select col, count(*), c1, weight_string(c1) from t_user group by col order by col asc",
                "Table": "t_user"
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "ORDER BY NULL for join",
    "query": "select t_user.col1 as a, t_user.col2, t_music.col3 from t_user join t_music on t_user.id = t_music.id where t_user.id = 1 order by null",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select t_user.col1 as a, t_user.col2, t_music.col3 from t_user join t_music on t_user.id = t_music.id where t_user.id = 1 order by null",
      "Instructions": {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "L:0,L:1,R:0",
        "JoinVars": {
          "t_user_id": 2
        },
        "TableName": "t_user_t_music",
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "EqualUnique-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select t_user_0.col1 as a, t_user_0.col2, t_user_0.id from t_user_0 where 1 != 1",
            "Query": "select t_user.col1 as a, t_user.col2, t_user.id from t_user where t_user.id = 1",
            "Table": "t_user",
            "Values": [
              "INT64(1)"
            ],
            "Vindex": "user_index"
          },
          {
            "OperatorType": "TableRoute",
            "Variant": "EqualUnique-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select t_music_0.col3 from t_music_0 where 1 != 1",
            "Query": "select t_music.col3 from t_music where t_music.id = :t_user_id",
            "Table": "t_music",
            "Values": [
              ":t_user_id"
            ],
            "Vindex": "music_user_map"
          }
        ]
      },
      "TablesUsed": [
        "user.t_music",
        "user.t_user"
      ]
    }
  },
  {
    "comment": "ORDER BY non-key column for join",
    "query": "select t_user.col1 as a, t_user.col2, t_music.col3 from t_user join t_music on t_user.id = t_music.id where t_user.id = 1 order by a",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select t_user.col1 as a, t_user.col2, t_music.col3 from t_user join t_music on t_user.id = t_music.id where t_user.id = 1 order by a",
      "Instructions": {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "L:0,L:1,R:0",
        "JoinVars": {
          "t_user_id": 2
        },
        "TableName": "t_user_t_music",
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "EqualUnique-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "OrderBy": "(0|3) ASC",
            "FieldQuery": "select t_user_0.col1 as a, t_user_0.col2, t_user_0.id, weight_string(t_user_0.col1) from t_user_0 where 1 != 1",
            "Query": "select t_user.col1 as a, t_user.col2, t_user.id, weight_string(t_user.col1) from t_user where t_user.id = 1 order by a asc",
            "Table": "t_user",
            "Values": [
              "INT64(1)"
            ],
            "Vindex": "user_index"
          },
          {
            "OperatorType": "TableRoute",
            "Variant": "EqualUnique-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select t_music_0.col3 from t_music_0 where 1 != 1",
            "Query": "select t_music.col3 from t_music where t_music.id = :t_user_id",
            "Table": "t_music",
            "Values": [
              ":t_user_id"
            ],
            "Vindex": "music_user_map"
          }
        ]
      },
      "TablesUsed": [
        "user.t_music",
        "user.t_user"
      ]
    }
  },
  {
    "comment": "ORDER BY non-key column for implicit join",
    "query": "select t_user.col1 as a, t_user.col2, t_music.col3 from t_user, t_music where t_user.id = t_music.id and t_user.id = 1 order by a",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select t_user.col1 as a, t_user.col2, t_music.col3 from t_user, t_music where t_user.id = t_music.id and t_user.id = 1 order by a",
      "Instructions": {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "L:0,L:1,R:0",
        "JoinVars": {
          "t_user_id": 2
        },
        "TableName": "t_user_t_music",
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "EqualUnique-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "OrderBy": "(0|3) ASC",
            "FieldQuery": "select t_user_0.col1 as a, t_user_0.col2, t_user_0.id, weight_string(t_user_0.col1) from t_user_0 where 1 != 1",
            "Query": "select t_user.col1 as a, t_user.col2, t_user.id, weight_string(t_user.col1) from t_user where t_user.id = 1 order by a asc",
            "Table": "t_user",
            "Values": [
              "INT64(1)"
            ],
            "Vindex": "user_index"
          },
          {
            "OperatorType": "TableRoute",
            "Variant": "EqualUnique-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select t_music_0.col3 from t_music_0 where 1 != 1",
            "Query": "select t_music.col3 from t_music where t_music.id = :t_user_id",
            "Table": "t_music",
            "Values": [
              ":t_user_id"
            ],
            "Vindex": "music_user_map"
          }
        ]
      },
      "TablesUsed": [
        "user.t_music",
        "user.t_user"
      ]
    }
  },
  {
    "comment": "ORDER BY RAND() for join",
    "query": "select t_user.col1 as a, t_user.col2, t_music.col3 from t_user join t_music on t_user.id = t_music.id where t_user.id = 1 order by RAND()",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select t_user.col1 as a, t_user.col2, t_music.col3 from t_user join t_music on t_user.id = t_music.id where t_user.id = 1 order by RAND()",
      "Instructions": {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "L:0,L:1,R:0",
        "JoinVars": {
          "t_user_id": 2
        },
        "TableName": "t_user_t_music",
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "EqualUnique-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select t_user_0.col1 as a, t_user_0.col2, t_user_0.id from t_user_0 where 1 != 1",
            "Query": "select t_user.col1 as a, t_user.col2, t_user.id from t_user where t_user.id = 1 order by RAND()",
            "Table": "t_user",
            "Values": [
              "INT64(1)"
            ],
            "Vindex": "user_index"
          },
          {
            "OperatorType": "TableRoute",
            "Variant": "EqualUnique-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select t_music_0.col3 from t_music_0 where 1 != 1",
            "Query": "select t_music.col3 from t_music where t_music.id = :t_user_id",
            "Table": "t_music",
            "Values": [
              ":t_user_id"
            ],
            "Vindex": "music_user_map"
          }
        ]
      },
      "TablesUsed": [
        "user.t_music",
        "user.t_user"
      ]
    }
  },
  {
    "comment": "limit for joins. Can't push down the limit because result\n# counts get multiplied by join operations.",
    "query": "select t_user.col from t_user join t_user_extra limit 1",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select t_user.col from t_user join t_user_extra limit 1",
      "Instructions": {
        "OperatorType": "Limit",
        "Count": "INT64(1)",
        "Inputs": [
          {
            "OperatorType": "Join",
            "Variant": "Join",
            "JoinColumnIndexes": "L:0",
            "TableName": "t_user_t_user_extra",
            "Inputs": [
              {
                "OperatorType": "TableRoute",
                "Variant": "Scatter-Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select t_user_0.col from t_user_0 where 1 != 1",
                "Query": "select t_user.col from t_user",
                "Table": "t_user"
              },
              {
                "OperatorType": "TableRoute",
                "Variant": "Scatter-Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select 1 from t_user_extra_0 where 1 != 1",
                "Query": "select 1 from t_user_extra",
                "Table": "t_user_extra"
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "user.t_user",
        "user.t_user_extra"
      ]
    }
  },
  {
    "comment": "ordering on the left side of the join",
    "query": "select name from t_user, t_music order by name",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select name from t_user, t_music order by name",
      "Instructions": {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "L:0",
        "TableName": "t_user_t_music",
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select `name`, weight_string(`name`) from t_user_0 where 1 != 1",
            "OrderBy": "(0|1) ASC",
            "Query": "select `name`, weight_string(`name`) from t_user order by `name` asc",
            "Table": "t_user"
          },
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select 1 from t_music_0 where 1 != 1",
            "Query": "select 1 from t_music",
            "Table": "t_music"
          }
        ]
      },
      "TablesUsed": [
        "user.t_music",
        "user.t_user"
      ]
    }
  },
  {
    "comment": "join order by with ambiguous column reference ; valid in MySQL",
    "query": "select name, name from t_user, t_music order by name",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select name, name from t_user, t_music order by name",
      "Instructions": {
        "OperatorType": "SimpleProjection",
        "Columns": [
          0,
          0
        ],
        "Inputs": [
          {
            "OperatorType": "Join",
            "Variant": "Join",
            "JoinColumnIndexes": "L:0",
            "TableName": "t_user_t_music",
            "Inputs": [
              {
                "OperatorType": "TableRoute",
                "Variant": "Scatter-Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select `name`, weight_string(`name`) from t_user_0 where 1 != 1",
                "OrderBy": "(0|1) ASC",
                "Query": "select `name`, weight_string(`name`) from t_user order by `name` asc",
                "Table": "t_user"
              },
              {
                "OperatorType": "TableRoute",
                "Variant": "Scatter-Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select 1 from t_music_0 where 1 != 1",
                "Query": "select 1 from t_music",
                "Table": "t_music"
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "user.t_music",
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Order by column number with coalesce with columns from both sides",
    "query": "select id from t_user, t_user_extra order by coalesce(t_user.col, t_user_extra.col)",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_user, t_user_extra order by coalesce(t_user.col, t_user_extra.col)",
      "Instructions": {
        "OperatorType": "Sort",
        "Variant": "Memory",
        "OrderBy": "(1|2) ASC",
        "ResultColumns": 1,
        "Inputs": [
          {
            "OperatorType": "Join",
            "Variant": "Join",
            "JoinColumnIndexes": "L:0,R:0,R:1",
            "JoinVars": {
              "t_user_col": 1
            },
            "TableName": "t_user_t_user_extra",
            "Inputs": [
              {
                "OperatorType": "TableRoute",
                "Variant": "Scatter-Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select id, t_user_0.col from t_user_0 where 1 != 1",
                "Query": "select id, t_user.col from t_user",
                "Table": "t_user"
              },
              {
                "OperatorType": "TableRoute",
                "Variant": "Scatter-Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select coalesce(:t_user_col, t_user_extra_0.col), weight_string(coalesce(:t_user_col, t_user_extra_0.col)) from t_user_extra_0 where 1 != 1",
                "Query": "select coalesce(:t_user_col, t_user_extra.col), weight_string(coalesce(:t_user_col, t_user_extra.col)) from t_user_extra",
                "Table": "t_user_extra"
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "user.t_user",
        "user.t_user_extra"
      ]
    }
  },
  {
    "comment": "HAVING implicitly references table col",
    "query": "select t_user.col1 from t_user having col2 = 2",
    "plan":{
      "QueryType": "SELECT",
      "Original": "select t_user.col1 from t_user having col2 = 2",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select t_user_0.col1 from t_user_0 where 1 != 1",
        "Query": "select t_user.col1 from t_user where col2 = 2",
        "Table": "t_user"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "TODO: this should be 'Column 'col1' in having clause is ambiguous'\n# non-ambiguous symbol reference",
    "query": "select t_user.col1, t_user_extra.col1 from t_user join t_user_extra having t_user_extra.col1 = 2",
    "plan":{
      "QueryType": "SELECT",
      "Original": "select t_user.col1, t_user_extra.col1 from t_user join t_user_extra having t_user_extra.col1 = 2",
      "Instructions": {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "L:0,R:0",
        "TableName": "t_user_t_user_extra",
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select t_user_0.col1 from t_user_0 where 1 != 1",
            "Query": "select t_user.col1 from t_user",
            "Table": "t_user"
          },
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select t_user_extra_0.col1 from t_user_extra_0 where 1 != 1",
            "Query": "select t_user_extra.col1 from t_user_extra where t_user_extra.col1 = 2",
            "Table": "t_user_extra"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user",
        "user.t_user_extra"
      ]
    }
  },
  {
    "comment": "HAVING multi-route",
    "query": "select t_user.col1 as a, t_user.col2, t_user_extra.col3 from t_user join t_user_extra having 1 = 1 and a = 1 and a = t_user.col2 and t_user_extra.col3 = 1",
    "plan":{
      "QueryType": "SELECT",
      "Original": "select t_user.col1 as a, t_user.col2, t_user_extra.col3 from t_user join t_user_extra having 1 = 1 and a = 1 and a = t_user.col2 and t_user_extra.col3 = 1",
      "Instructions": {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "L:0,L:1,R:0",
        "TableName": "t_user_t_user_extra",
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select t_user_0.col1 as a, t_user_0.col2 from t_user_0 where 1 != 1",
            "Query": "select t_user.col1 as a, t_user.col2 from t_user where t_user.col1 = 1 and t_user.col1 = t_user.col2 and 1 = 1",
            "Table": "t_user"
          },
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select t_user_extra_0.col3 from t_user_extra_0 where 1 != 1",
            "Query": "select t_user_extra.col3 from t_user_extra where t_user_extra.col3 = 1 and 1 = 1",
            "Table": "t_user_extra"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user",
        "user.t_user_extra"
      ]
    }
  },
  {
    "comment": "HAVING uses subquery",
    "query": "select id from t_user having id in (select col from t_user)",
    "plan":{
      "QueryType": "SELECT",
      "Original": "select id from t_user having id in (select col from t_user)",
      "Instructions": {
        "OperatorType": "UncorrelatedSubquery",
        "Variant": "PulloutIn",
        "PulloutVars": [
          "__sq_has_values",
          "__sq1"
        ],
        "Inputs": [
          {
            "InputName": "SubQuery",
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select col from t_user_0 where 1 != 1",
            "Query": "select col from t_user",
            "Table": "t_user"
          },
          {
            "InputName": "Outer",
            "OperatorType": "TableRoute",
            "Variant": "IN-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select id from t_user_0 where 1 != 1",
            "Query": "select id from t_user where id in ::__vals and :__sq_has_values",
            "Table": "t_user",
            "Values": [
              "::__sq1"
            ],
            "Vindex": "user_index"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Order by, verify outer symtab is searched according to its own context.",
    "query": "select u.id from t_user u having u.id in (select col2 from t_user where t_user.id = u.id order by u.col)",
    "plan":"VT12001: unsupported: subquery in split table"
  },
  {
    "comment": "Equal filter with hexadecimal value",
    "query": "select count(*) a from t_user having a = 0x01",
    "plan":{
      "QueryType": "SELECT",
      "Original": "select count(*) a from t_user having a = 0x01",
      "Instructions": {
        "OperatorType": "Filter",
        "Predicate": "count(*) = 0x01",
        "Inputs": [
          {
            "OperatorType": "Aggregate",
            "Variant": "Scalar",
            "Aggregates": "sum_count_star(0) AS a",
            "Inputs": [
              {
                "OperatorType": "TableRoute",
                "Variant": "Scatter-Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select count(*) as a from t_user_0 where 1 != 1",
                "Query": "select count(*) as a from t_user",
                "Table": "t_user"
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "having filter with %",
    "query": "select a.tcol1 from t_user a join t_music b where a.tcol1 = b.tcol2 group by a.tcol1 having repeat(a.tcol1,min(a.id)) like \"A\\%B\" order by a.tcol1",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select a.tcol1 from t_user a join t_music b where a.tcol1 = b.tcol2 group by a.tcol1 having repeat(a.tcol1,min(a.id)) like \"A\\%B\" order by a.tcol1",
      "Instructions": {
        "OperatorType": "Filter",
        "Predicate": "repeat(a.tcol1, min(a.id)) like 'A\\%B'",
        "ResultColumns": 1,
        "Inputs": [
          {
            "OperatorType": "Aggregate",
            "Variant": "Ordered",
            "Aggregates": "min(1|3) AS min(a.id)",
            "GroupBy": "(0|2)",
            "Inputs": [
              {
                "OperatorType": "Join",
                "Variant": "Join",
                "JoinColumnIndexes": "L:1,L:0,L:2,L:3",
                "JoinVars": {
                  "a_tcol1": 1
                },
                "TableName": "t_user_t_music",
                "Inputs": [
                  {
                    "OperatorType": "TableRoute",
                    "Variant": "Scatter-Scatter",
                    "Keyspace": {
                      "Name": "user",
                      "Sharded": true
                    },
                    "FieldQuery": "select min(a.id), a.tcol1, weight_string(a.tcol1), weight_string(a.id) from t_user_0 as a where 1 != 1 group by a.tcol1, weight_string(a.tcol1), weight_string(a.id)",
                    "OrderBy": "(1|2) ASC",
                    "Query": "select min(a.id), a.tcol1, weight_string(a.tcol1), weight_string(a.id) from t_user as a group by a.tcol1, weight_string(a.tcol1), weight_string(a.id) order by a.tcol1 asc",
                    "Table": "t_user"
                  },
                  {
                    "OperatorType": "TableRoute",
                    "Variant": "Scatter-Scatter",
                    "Keyspace": {
                      "Name": "user",
                      "Sharded": true
                    },
                    "FieldQuery": "select 1 from t_music_0 as b where 1 != 1 group by .0",
                    "Query": "select 1 from t_music as b where b.tcol2 = :a_tcol1 group by .0",
                    "Table": "t_music"
                  }
                ]
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "user.t_music",
        "user.t_user"
      ]
    }
  },
  {
    "comment": "ORDER BY on scatter with text column",
    "query": "select a, textcol1, b from t_user order by a, textcol1, b",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select a, textcol1, b from t_user order by a, textcol1, b",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select a, textcol1, b, weight_string(a), weight_string(b) from t_user_0 where 1 != 1",
        "OrderBy": "(0|3) ASC, 1 ASC COLLATE latin1_swedish_ci, (2|4) ASC",
        "Query": "select a, textcol1, b, weight_string(a), weight_string(b) from t_user order by a asc, textcol1 asc, b asc",
        "ResultColumns": 3,
        "Table": "t_user"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "ORDER BY on scatter with text column, qualified name TODO: can plan better",
    "query": "select a, t_user.textcol1, b from t_user order by a, textcol1, b",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select a, t_user.textcol1, b from t_user order by a, textcol1, b",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select a, t_user_0.textcol1, b, weight_string(a), weight_string(b) from t_user_0 where 1 != 1",
        "OrderBy": "(0|3) ASC, 1 ASC COLLATE latin1_swedish_ci, (2|4) ASC",
        "Query": "select a, t_user.textcol1, b, weight_string(a), weight_string(b) from t_user order by a asc, textcol1 asc, b asc",
        "ResultColumns": 3,
        "Table": "t_user"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "ORDER BY on scatter with multiple text columns",
    "query": "select a, textcol1, b, textcol2 from t_user order by a, textcol1, b, textcol2",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select a, textcol1, b, textcol2 from t_user order by a, textcol1, b, textcol2",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select a, textcol1, b, textcol2, weight_string(a), weight_string(b) from t_user_0 where 1 != 1",
        "OrderBy": "(0|4) ASC, 1 ASC COLLATE latin1_swedish_ci, (2|5) ASC, 3 ASC COLLATE latin1_swedish_ci",
        "Query": "select a, textcol1, b, textcol2, weight_string(a), weight_string(b) from t_user order by a asc, textcol1 asc, b asc, textcol2 asc",
        "ResultColumns": 4,
        "Table": "t_user"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "ORDER BY column offset",
    "query": "select id as foo from t_music order by 1",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id as foo from t_music order by 1",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id as foo, weight_string(id) from t_music_0 where 1 != 1",
        "OrderBy": "(0|1) ASC",
        "Query": "select id as foo, weight_string(id) from t_music order by foo asc",
        "ResultColumns": 1,
        "Table": "t_music"
      },
      "TablesUsed": [
        "user.t_music"
      ]
    }
  },
  {
    "comment": "ORDER BY after pull-out subquery",
    "query": "select col from t_user where col in (select col2 from t_user) order by col",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select col from t_user where col in (select col2 from t_user) order by col",
      "Instructions": {
        "OperatorType": "UncorrelatedSubquery",
        "Variant": "PulloutIn",
        "PulloutVars": [
          "__sq_has_values",
          "__sq1"
        ],
        "Inputs": [
          {
            "InputName": "SubQuery",
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select col2 from t_user_0 where 1 != 1",
            "Query": "select col2 from t_user",
            "Table": "t_user"
          },
          {
            "InputName": "Outer",
            "OperatorType": "TableRoute",
            "Variant": "Scatter-IN",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select col from t_user_0 where 1 != 1",
            "OrderBy": "0 ASC",
            "Query": "select col from t_user where col in ::__sq1 and :__sq_has_values order by col asc",
            "Table": "t_user",
            "TableValues": [
              "::__sq1"
            ]
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "ORDER BY NULL after pull-out subquery",
    "query": "select col from t_user where col in (select col2 from t_user) order by null",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select col from t_user where col in (select col2 from t_user) order by null",
      "Instructions": {
        "OperatorType": "UncorrelatedSubquery",
        "Variant": "PulloutIn",
        "PulloutVars": [
          "__sq_has_values",
          "__sq1"
        ],
        "Inputs": [
          {
            "InputName": "SubQuery",
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select col2 from t_user_0 where 1 != 1",
            "Query": "select col2 from t_user",
            "Table": "t_user"
          },
          {
            "InputName": "Outer",
            "OperatorType": "TableRoute",
            "Variant": "Scatter-IN",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select col from t_user_0 where 1 != 1",
            "Query": "select col from t_user where col in ::__sq1 and :__sq_has_values",
            "Table": "t_user",
            "TableValues": [
              "::__sq1"
            ]
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "ORDER BY RAND() after pull-out subquery",
    "query": "select col from t_user where col in (select col2 from t_user) order by rand()",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select col from t_user where col in (select col2 from t_user) order by rand()",
      "Instructions": {
        "OperatorType": "UncorrelatedSubquery",
        "Variant": "PulloutIn",
        "PulloutVars": [
          "__sq_has_values",
          "__sq1"
        ],
        "Inputs": [
          {
            "InputName": "SubQuery",
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select col2 from t_user_0 where 1 != 1",
            "Query": "select col2 from t_user",
            "Table": "t_user"
          },
          {
            "InputName": "Outer",
            "OperatorType": "TableRoute",
            "Variant": "Scatter-IN",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select col from t_user_0 where 1 != 1",
            "Query": "select col from t_user where col in ::__sq1 and :__sq_has_values order by rand()",
            "Table": "t_user",
            "TableValues": [
              "::__sq1"
            ]
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "LIMIT",
    "query": "select col1 from t_user where id = 1 limit 1",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select col1 from t_user where id = 1 limit 1",
      "Instructions": {
        "OperatorType": "Limit",
        "Count": "INT64(1)",
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "EqualUnique-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select col1 from t_user_0 where 1 != 1",
            "Query": "select col1 from t_user where id = 1 limit :__upper_limit",
            "Table": "t_user",
            "Values": [
              "INT64(1)"
            ],
            "Vindex": "user_index"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "limit for scatter",
    "query": "select col from t_user limit 1",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select col from t_user limit 1",
      "Instructions": {
        "OperatorType": "Limit",
        "Count": "INT64(1)",
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select col from t_user_0 where 1 != 1",
            "Query": "select col from t_user limit :__upper_limit",
            "Table": "t_user"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "limit for scatter with bind var",
    "query": "select col from t_user limit :a",
    "plan":{
      "QueryType": "SELECT",
      "Original": "select col from t_user limit :a",
      "Instructions": {
        "OperatorType": "Limit",
        "Count": ":a",
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select col from t_user_0 where 1 != 1",
            "Query": "select col from t_user limit :__upper_limit",
            "Table": "t_user"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "scatter limit after pullout subquery",
    "query": "select col from t_user where col in (select col1 from t_user) limit 1",
    "plan":{
      "QueryType": "SELECT",
      "Original": "select col from t_user where col in (select col1 from t_user) limit 1",
      "Instructions": {
        "OperatorType": "Limit",
        "Count": "INT64(1)",
        "Inputs": [
          {
            "OperatorType": "UncorrelatedSubquery",
            "Variant": "PulloutIn",
            "PulloutVars": [
              "__sq_has_values",
              "__sq1"
            ],
            "Inputs": [
              {
                "InputName": "SubQuery",
                "OperatorType": "TableRoute",
                "Variant": "Scatter-Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select col1 from t_user_0 where 1 != 1",
                "Query": "select col1 from t_user",
                "Table": "t_user"
              },
              {
                "InputName": "Outer",
                "OperatorType": "TableRoute",
                "Variant": "Scatter-IN",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select col from t_user_0 where 1 != 1",
                "Query": "select col from t_user where col in ::__sq1 and :__sq_has_values",
                "Table": "t_user",
                "TableValues": [
                  "::__sq1"
                ]
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "arithmetic limit",
    "query": "select id from t_user limit 1+1",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_user limit 1+1",
      "Instructions": {
        "OperatorType": "Limit",
        "Count": "INT64(2)",
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select id from t_user_0 where 1 != 1",
            "Query": "select id from t_user limit :__upper_limit",
            "Table": "t_user"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  }
]
