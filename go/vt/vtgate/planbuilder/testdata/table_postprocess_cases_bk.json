[
  {
    "comment": "ambiguous symbol reference",
    "query": "select user.col1, user_extra.col1 from user join user_extra having col1 = 2",
    "v3-plan": "VT03021: ambiguous column reference: col1",
    "gen4-plan": "Column 'col1' in field list is ambiguous"
  },
  {
    "comment": "ORDER BY works for select * from authoritative table",
    "query": "select * from authoritative order by user_id",
    "v3-plan": {
      "QueryType": "SELECT",
      "Original": "select * from authoritative order by user_id",
      "Instructions": {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select user_id, col1, col2, weight_string(user_id) from authoritative where 1 != 1",
        "OrderBy": "(0|3) ASC",
        "Query": "select user_id, col1, col2, weight_string(user_id) from authoritative order by user_id asc",
        "ResultColumns": 3,
        "Table": "authoritative"
      }
    },
    "gen4-plan": {
      "QueryType": "SELECT",
      "Original": "select * from authoritative order by user_id",
      "Instructions": {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select user_id, col1, col2, weight_string(user_id) from authoritative where 1 != 1",
        "OrderBy": "(0|3) ASC",
        "Query": "select user_id, col1, col2, weight_string(user_id) from authoritative order by user_id asc",
        "ResultColumns": 3,
        "Table": "authoritative"
      },
      "TablesUsed": [
        "user.authoritative"
      ]
    }
  },
  {
    "comment": "ORDER BY works for select * from authoritative table",
    "query": "select * from authoritative order by col1",
    "v3-plan": {
      "QueryType": "SELECT",
      "Original": "select * from authoritative order by col1",
      "Instructions": {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select user_id, col1, col2, weight_string(col1) from authoritative where 1 != 1",
        "OrderBy": "(1|3) ASC",
        "Query": "select user_id, col1, col2, weight_string(col1) from authoritative order by col1 asc",
        "ResultColumns": 3,
        "Table": "authoritative"
      }
    },
    "gen4-plan": {
      "QueryType": "SELECT",
      "Original": "select * from authoritative order by col1",
      "Instructions": {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select user_id, col1, col2 from authoritative where 1 != 1",
        "OrderBy": "1 ASC COLLATE latin1_swedish_ci",
        "Query": "select user_id, col1, col2 from authoritative order by col1 asc",
        "Table": "authoritative"
      },
      "TablesUsed": [
        "user.authoritative"
      ]
    }
  },
  {
    "comment": "Order by, '*' expression in a subquery",
    "query": "select u.id, e.id from user u join user_extra e where u.col = e.col and u.col in (select * from user where user.id = u.id order by col)",
    "v3-plan": {
      "QueryType": "SELECT",
      "Original": "select u.id, e.id from user u join user_extra e where u.col = e.col and u.col in (select * from user where user.id = u.id order by col)",
      "Instructions": {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "L:0,R:0",
        "JoinVars": {
          "u_col": 1
        },
        "TableName": "`user`_user_extra",
        "Inputs": [
          {
            "OperatorType": "Route",
            "Variant": "Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select u.id, u.col from `user` as u where 1 != 1",
            "Query": "select u.id, u.col from `user` as u where u.col in (select * from `user` where `user`.id = u.id order by col asc)",
            "Table": "`user`"
          },
          {
            "OperatorType": "Route",
            "Variant": "Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select e.id from user_extra as e where 1 != 1",
            "Query": "select e.id from user_extra as e where e.col = :u_col",
            "Table": "user_extra"
          }
        ]
      }
    },
    "gen4-plan": {
      "QueryType": "SELECT",
      "Original": "select u.id, e.id from user u join user_extra e where u.col = e.col and u.col in (select * from user where user.id = u.id order by col)",
      "Instructions": {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "L:1,R:0",
        "JoinVars": {
          "u_col": 0
        },
        "TableName": "`user`_user_extra",
        "Inputs": [
          {
            "OperatorType": "Route",
            "Variant": "Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select u.col, u.id from `user` as u where 1 != 1",
            "Query": "select u.col, u.id from `user` as u where u.col in (select * from `user` where `user`.id = u.id order by col asc)",
            "Table": "`user`"
          },
          {
            "OperatorType": "Route",
            "Variant": "Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select e.id from user_extra as e where 1 != 1",
            "Query": "select e.id from user_extra as e where e.col = :u_col",
            "Table": "user_extra"
          }
        ]
      },
      "TablesUsed": [
        "user.user",
        "user.user_extra"
      ]
    }
  },
  {
    "comment": "Order by, '*' expression with qualified reference and using collate",
    "query": "select * from user where id = 5 order by user.col collate utf8_general_ci",
    "v3-plan": {
      "QueryType": "SELECT",
      "Original": "select * from user where id = 5 order by user.col collate utf8_general_ci",
      "Instructions": {
        "OperatorType": "Route",
        "Variant": "EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select * from `user` where 1 != 1",
        "Query": "select * from `user` where id = 5 order by `user`.col collate utf8_general_ci asc",
        "Table": "`user`",
        "Values": [
          "INT64(5)"
        ],
        "Vindex": "user_index"
      }
    },
    "gen4-plan": {
      "QueryType": "SELECT",
      "Original": "select * from user where id = 5 order by user.col collate utf8_general_ci",
      "Instructions": {
        "OperatorType": "Route",
        "Variant": "EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select * from `user` where 1 != 1",
        "Query": "select * from `user` where id = 5 order by `user`.col collate utf8_general_ci asc",
        "Table": "`user`",
        "Values": [
          "INT64(5)"
        ],
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.user"
      ]
    }
  },
  {
    "comment": "Order by derived table column",
    "query": "select * from user u join (select user_id from user_extra where user_id = 5) eu on u.id = eu.user_id where u.id = 5 order by eu.user_id",
    "v3-plan": {
      "QueryType": "SELECT",
      "Original": "select * from user u join (select user_id from user_extra where user_id = 5) eu on u.id = eu.user_id where u.id = 5 order by eu.user_id",
      "Instructions": {
        "OperatorType": "Route",
        "Variant": "EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select * from `user` as u join (select user_id from user_extra where 1 != 1) as eu on u.id = eu.user_id where 1 != 1",
        "Query": "select * from `user` as u join (select user_id from user_extra where user_id = 5) as eu on u.id = eu.user_id where u.id = 5 order by eu.user_id asc",
        "Table": "`user`, user_extra",
        "Values": [
          "INT64(5)"
        ],
        "Vindex": "user_index"
      }
    },
    "gen4-plan": {
      "QueryType": "SELECT",
      "Original": "select * from user u join (select user_id from user_extra where user_id = 5) eu on u.id = eu.user_id where u.id = 5 order by eu.user_id",
      "Instructions": {
        "OperatorType": "Route",
        "Variant": "EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select * from `user` as u, (select user_id from user_extra where 1 != 1) as eu where 1 != 1",
        "Query": "select * from `user` as u, (select user_id from user_extra where user_id = 5) as eu where u.id = 5 and u.id = eu.user_id order by eu.user_id asc",
        "Table": "`user`, user_extra",
        "Values": [
          "INT64(5)"
        ],
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.user",
        "user.user_extra"
      ]
    }
  },
  {
    "comment": "cross-shard expression in parenthesis with limit",
    "query": "select * from user where (id1 = 4 AND name1 ='abc') limit 5",
    "v3-plan": {
      "QueryType": "SELECT",
      "Original": "select * from user where (id1 = 4 AND name1 ='abc') limit 5",
      "Instructions": {
        "OperatorType": "Limit",
        "Count": "INT64(5)",
        "Inputs": [
          {
            "OperatorType": "Route",
            "Variant": "Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select * from `user` where 1 != 1",
            "Query": "select * from `user` where id1 = 4 and name1 = 'abc' limit :__upper_limit",
            "Table": "`user`"
          }
        ]
      }
    },
    "gen4-plan": {
      "QueryType": "SELECT",
      "Original": "select * from user where (id1 = 4 AND name1 ='abc') limit 5",
      "Instructions": {
        "OperatorType": "Limit",
        "Count": "INT64(5)",
        "Inputs": [
          {
            "OperatorType": "Route",
            "Variant": "Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select * from `user` where 1 != 1",
            "Query": "select * from `user` where id1 = 4 and name1 = 'abc' limit :__upper_limit",
            "Table": "`user`"
          }
        ]
      },
      "TablesUsed": [
        "user.user"
      ]
    }
  },
  {
    "comment": "limit on reference table",
    "query": "select col from ref limit 1",
    "v3-plan": {
      "QueryType": "SELECT",
      "Original": "select col from ref limit 1",
      "Instructions": {
        "OperatorType": "Route",
        "Variant": "Reference",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select col from ref where 1 != 1",
        "Query": "select col from ref limit 1",
        "Table": "ref"
      }
    },
    "gen4-plan": {
      "QueryType": "SELECT",
      "Original": "select col from ref limit 1",
      "Instructions": {
        "OperatorType": "Route",
        "Variant": "Reference",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select col from ref where 1 != 1",
        "Query": "select col from ref limit 1",
        "Table": "ref"
      },
      "TablesUsed": [
        "user.ref"
      ]
    }
  },
  {
    "comment": "Order by has subqueries",
    "query": "select id from unsharded order by (select id from unsharded)",
    "v3-plan": "VT12001: unsupported: subqueries disallowed in sqlparser.OrderBy",
    "gen4-plan": {
      "QueryType": "SELECT",
      "Original": "select id from unsharded order by (select id from unsharded)",
      "Instructions": {
        "OperatorType": "Route",
        "Variant": "Unsharded",
        "Keyspace": {
          "Name": "main",
          "Sharded": false
        },
        "FieldQuery": "select id from unsharded where 1 != 1",
        "Query": "select id from unsharded order by (select id from unsharded) asc",
        "Table": "unsharded"
      },
      "TablesUsed": [
        "main.unsharded"
      ]
    }
  }
]
