[
  {
    "comment": "No column referenced",
    "query": "select 1 from t_user",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select 1 from t_user",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select 1 from t_user_0 where 1 != 1",
        "Query": "select 1 from t_user",
        "Table": "t_user"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "'*' expression for simple route",
    "query": "select t_user.* from t_user",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select t_user.* from t_user",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select t_user_0.* from t_user_0 where 1 != 1",
        "Query": "select t_user.* from t_user",
        "Table": "t_user"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "unqualified '*' expression for simple route",
    "query": "select * from t_user",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select * from t_user",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select * from t_user_0 where 1 != 1",
        "Query": "select * from t_user",
        "Table": "t_user"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "qualified '*' expression for simple route",
    "query": "select t_user.* from t_user",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select t_user.* from t_user",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select t_user_0.* from t_user_0 where 1 != 1",
        "Query": "select t_user.* from t_user",
        "Table": "t_user"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "fully qualified '*' expression for simple route",
    "query": "select user.t_user.* from user.t_user",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select user.t_user.* from user.t_user",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select t_user_0.* from t_user_0 where 1 != 1",
        "Query": "select t_user.* from t_user",
        "Table": "t_user"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "select * from authoritative table",
    "query": "select * from t_authoritative",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select * from t_authoritative",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select user_id, col1, col2 from t_authoritative_0 where 1 != 1",
        "Query": "select user_id, col1, col2 from t_authoritative",
        "Table": "t_authoritative"
      },
      "TablesUsed": [
        "user.t_authoritative"
      ]
    }
  },
  {
    "comment": "select * from qualified authoritative table",
    "query": "select a.* from t_authoritative a",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select a.* from t_authoritative a",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select a.user_id, a.col1, a.col2 from t_authoritative_0 as a where 1 != 1",
        "Query": "select a.user_id, a.col1, a.col2 from t_authoritative as a",
        "Table": "t_authoritative"
      },
      "TablesUsed": [
        "user.t_authoritative"
      ]
    }
  },
  {
    "comment": "sharded limit offset",
    "query": "select user_id from t_music order by user_id limit 10, 20",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select user_id from t_music order by user_id limit 10, 20",
      "Instructions": {
        "OperatorType": "Limit",
        "Count": "INT64(20)",
        "Offset": "INT64(10)",
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select user_id, weight_string(user_id) from t_music_0 where 1 != 1",
            "OrderBy": "(0|1) ASC",
            "Query": "select user_id, weight_string(user_id) from t_music order by user_id asc limit :__upper_limit",
            "ResultColumns": 1,
            "Table": "t_music"
          }
        ]
      },
      "TablesUsed": [
        "user.t_music"
      ]
    }
  },
  {
    "comment": "Sharding Key Condition in Parenthesis",
    "query": "select * from t_user where name ='abc' AND (id = 4) and (col = 123) limit 5",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select * from t_user where name ='abc' AND (id = 4) and (col = 123) limit 5",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "EqualUnique-EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select * from t_user_0 where 1 != 1",
        "Query": "select * from t_user where `name` = 'abc' and id = 4 and col = 123 limit 5",
        "Table": "t_user",
        "TableValues": [
          "INT64(123)"
        ],
        "Values": [
          "INT64(4)"
        ],
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Multiple parenthesized expressions",
    "query": "select * from t_user where (id = 4) AND (name ='abc') AND (col = 'abc') limit 5",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select * from t_user where (id = 4) AND (name ='abc') AND (col = 'abc') limit 5",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "EqualUnique-EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select * from t_user_0 where 1 != 1",
        "Query": "select * from t_user where id = 4 and `name` = 'abc' and col = 'abc' limit 5",
        "Table": "t_user",
        "TableValues": [
          "VARCHAR(\"abc\")"
        ],
        "Values": [
          "INT64(4)"
        ],
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Multiple parenthesized expressions",
    "query": "select * from t_user where (id = 4 AND name ='abc' AND col = 'abc') limit 5",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select * from t_user where (id = 4 AND name ='abc' AND col = 'abc') limit 5",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "EqualUnique-EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select * from t_user_0 where 1 != 1",
        "Query": "select * from t_user where id = 4 and `name` = 'abc' and col = 'abc' limit 5",
        "Table": "t_user",
        "TableValues": [
          "VARCHAR(\"abc\")"
        ],
        "Values": [
          "INT64(4)"
        ],
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Column Aliasing with Table.Column",
    "query": "select user0_.col as col0_ from t_user user0_ where id = 1 and col = 3 order by user0_.col desc limit 2",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select user0_.col as col0_ from t_user user0_ where id = 1 and col = 3 order by user0_.col desc limit 2",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "EqualUnique-EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select user0_.col as col0_ from t_user_0 as user0_ where 1 != 1",
        "Query": "select user0_.col as col0_ from t_user as user0_ where id = 1 and col = 3 order by user0_.col desc limit 2",
        "Table": "t_user",
        "TableValues": [
          "INT64(3)"
        ],
        "Values": [
          "INT64(1)"
        ],
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Column Aliasing with Column",
    "query": "select user0_.col as col0_ from t_user user0_ where id = 1 and col = 12 order by col0_ desc limit 3",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select user0_.col as col0_ from t_user user0_ where id = 1 and col = 12 order by col0_ desc limit 3",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "EqualUnique-EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select user0_.col as col0_ from t_user_0 as user0_ where 1 != 1",
        "Query": "select user0_.col as col0_ from t_user as user0_ where id = 1 and col = 12 order by col0_ desc limit 3",
        "Table": "t_user",
        "TableValues": [
          "INT64(12)"
        ],
        "Values": [
          "INT64(1)"
        ],
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Column Aliasing with Table.Column,splitTable Limit",
    "query": "select user0_.col as col0_ from t_user user0_ where id = 1 order by user0_.col desc limit 2",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select user0_.col as col0_ from t_user user0_ where id = 1 order by user0_.col desc limit 2",
      "Instructions": {
        "OperatorType": "Limit",
        "Count": "INT64(2)",
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "EqualUnique-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select user0_.col as col0_ from t_user_0 as user0_ where 1 != 1",
            "OrderBy": "0 DESC",
            "Query": "select user0_.col as col0_ from t_user as user0_ where id = 1 order by user0_.col desc limit :__upper_limit",
            "Table": "t_user",
            "Values": [
              "INT64(1)"
            ],
            "Vindex": "user_index"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Column Aliasing with Column,splitTable Limit",
    "query": "select user0_.col as col0_ from t_user user0_ where id = 1 order by col0_ desc limit 3",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select user0_.col as col0_ from t_user user0_ where id = 1 order by col0_ desc limit 3",
      "Instructions": {
        "OperatorType": "Limit",
        "Count": "INT64(3)",
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "EqualUnique-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select user0_.col as col0_ from t_user_0 as user0_ where 1 != 1",
            "OrderBy": "0 DESC",
            "Query": "select user0_.col as col0_ from t_user as user0_ where id = 1 order by col0_ desc limit :__upper_limit",
            "Table": "t_user",
            "Values": [
              "INT64(1)"
            ],
            "Vindex": "user_index"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Booleans and parenthesis",
    "query": "select * from t_user where (id = 1) and (col = 12) AND name = true limit 5",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select * from t_user where (id = 1) and (col = 12) AND name = true limit 5",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "EqualUnique-EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select * from t_user_0 where 1 != 1",
        "Query": "select * from t_user where id = 1 and col = 12 and `name` = true limit 5",
        "Table": "t_user",
        "TableValues": [
          "INT64(12)"
        ],
        "Values": [
          "INT64(1)"
        ],
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Column as boolean-ish",
    "query": "select * from t_user where (id = 1) and (col = 12) AND name limit 5",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select * from t_user where (id = 1) and (col = 12) AND name limit 5",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "EqualUnique-EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select * from t_user_0 where 1 != 1",
        "Query": "select * from t_user where id = 1 and col = 12 and `name` limit 5",
        "Table": "t_user",
        "TableValues": [
          "INT64(12)"
        ],
        "Values": [
          "INT64(1)"
        ],
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "PK as fake boolean, and column as boolean-ish",
    "query": "select * from t_user where (id = 5) and (col = 12) AND name = true limit 5",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select * from t_user where (id = 5) and (col = 12) AND name = true limit 5",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "EqualUnique-EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select * from t_user_0 where 1 != 1",
        "Query": "select * from t_user where id = 5 and col = 12 and `name` = true limit 5",
        "Table": "t_user",
        "TableValues": [
          "INT64(12)"
        ],
        "Values": [
          "INT64(5)"
        ],
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "group by with non aggregated columns and table alias",
    "query": "select u.id, u.age, u.col from t_user u group by u.id, u.col",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select u.id, u.age, u.col from t_user u group by u.id, u.col",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select u.id, u.age, u.col from t_user_0 as u where 1 != 1 group by u.id, u.col",
        "Query": "select u.id, u.age, u.col from t_user as u group by u.id, u.col",
        "Table": "t_user"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Auto-resolve should work if unique vindex columns are referenced",
    "query": "select id, user_id from t_user join t_user_extra",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id, user_id from t_user join t_user_extra",
      "Instructions": {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "L:0,R:0",
        "TableName": "t_user_t_user_extra",
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select id from t_user_0 where 1 != 1",
            "Query": "select id from t_user",
            "Table": "t_user"
          },
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select user_id from t_user_extra_0 where 1 != 1",
            "Query": "select user_id from t_user_extra",
            "Table": "t_user_extra"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user",
        "user.t_user_extra"
      ]
    }
  },
  {
    "comment": "RHS TableRoute referenced",
    "query": "select t_user_extra.id from t_user join t_user_extra",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select t_user_extra.id from t_user join t_user_extra",
      "Instructions": {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "R:0",
        "TableName": "t_user_t_user_extra",
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select 1 from t_user_0 where 1 != 1",
            "Query": "select 1 from t_user",
            "Table": "t_user"
          },
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select t_user_extra_0.id from t_user_extra_0 where 1 != 1",
            "Query": "select t_user_extra.id from t_user_extra",
            "Table": "t_user_extra"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user",
        "user.t_user_extra"
      ]
    }
  },
  {
    "comment": "Both TableRoutes referenced",
    "query": "select t_user.col, t_user_extra.id from t_user join t_user_extra",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select t_user.col, t_user_extra.id from t_user join t_user_extra",
      "Instructions": {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "L:0,R:0",
        "TableName": "t_user_t_user_extra",
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select t_user_0.col from t_user_0 where 1 != 1",
            "Query": "select t_user.col from t_user",
            "Table": "t_user"
          },
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select t_user_extra_0.id from t_user_extra_0 where 1 != 1",
            "Query": "select t_user_extra.id from t_user_extra",
            "Table": "t_user_extra"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user",
        "user.t_user_extra"
      ]
    }
  },
  {
    "comment": "Expression with single-TableRoute reference",
    "query": "select t_user.col, t_user_extra.id + t_user_extra.col from t_user join t_user_extra",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select t_user.col, t_user_extra.id + t_user_extra.col from t_user join t_user_extra",
      "Instructions": {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "L:0,R:0",
        "TableName": "t_user_t_user_extra",
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select t_user_0.col from t_user_0 where 1 != 1",
            "Query": "select t_user.col from t_user",
            "Table": "t_user"
          },
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select t_user_extra_0.id + t_user_extra_0.col from t_user_extra_0 where 1 != 1",
            "Query": "select t_user_extra.id + t_user_extra.col from t_user_extra",
            "Table": "t_user_extra"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user",
        "user.t_user_extra"
      ]
    }
  },
  {
    "comment": "Jumbled references",
    "query": "select t_user.col, t_user_extra.id, t_user.col2 from t_user join t_user_extra",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select t_user.col, t_user_extra.id, t_user.col2 from t_user join t_user_extra",
      "Instructions": {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "L:0,R:0,L:1",
        "TableName": "t_user_t_user_extra",
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select t_user_0.col, t_user_0.col2 from t_user_0 where 1 != 1",
            "Query": "select t_user.col, t_user.col2 from t_user",
            "Table": "t_user"
          },
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select t_user_extra_0.id from t_user_extra_0 where 1 != 1",
            "Query": "select t_user_extra.id from t_user_extra",
            "Table": "t_user_extra"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user",
        "user.t_user_extra"
      ]
    }
  },
  {
    "comment": "Comments",
    "query": "select /* comment */ t_user.col from t_user join t_user_extra",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select /* comment */ t_user.col from t_user join t_user_extra",
      "Instructions": {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "L:0",
        "TableName": "t_user_t_user_extra",
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select t_user_0.col from t_user_0 where 1 != 1",
            "Query": "select /* comment */ t_user.col from t_user",
            "Table": "t_user"
          },
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select 1 from t_user_extra_0 where 1 != 1",
            "Query": "select /* comment */ 1 from t_user_extra",
            "Table": "t_user_extra"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user",
        "user.t_user_extra"
      ]
    }
  },
  {
    "comment": "Case preservation",
    "query": "select t_user.Col, t_user_extra.Id from t_user join t_user_extra",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select t_user.Col, t_user_extra.Id from t_user join t_user_extra",
      "Instructions": {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "L:0,R:0",
        "TableName": "t_user_t_user_extra",
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select t_user_0.Col from t_user_0 where 1 != 1",
            "Query": "select t_user.Col from t_user",
            "Table": "t_user"
          },
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select t_user_extra_0.Id from t_user_extra_0 where 1 != 1",
            "Query": "select t_user_extra.Id from t_user_extra",
            "Table": "t_user_extra"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user",
        "user.t_user_extra"
      ]
    }
  },
  {
    "comment": "select expression having dependencies on both sides of a join",
    "query": "select t_user.id * user_id as amount from t_user, t_user_extra",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select t_user.id * user_id as amount from t_user, t_user_extra",
      "Instructions": {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "R:0",
        "JoinVars": {
          "t_user_id": 0
        },
        "TableName": "t_user_t_user_extra",
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select t_user_0.id from t_user_0 where 1 != 1",
            "Query": "select t_user.id from t_user",
            "Table": "t_user"
          },
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select :t_user_id * user_id as amount from t_user_extra_0 where 1 != 1",
            "Query": "select :t_user_id * user_id as amount from t_user_extra",
            "Table": "t_user_extra"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user",
        "user.t_user_extra"
      ]
    }
  },
  {
    "comment": "use output column containing data from both sides of the join",
    "query": "select t_user_extra.col + t_user.col from t_user join t_user_extra on t_user.id = t_user_extra.id",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select t_user_extra.col + t_user.col from t_user join t_user_extra on t_user.id = t_user_extra.id",
      "Instructions": {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "R:0",
        "JoinVars": {
          "t_user_extra_col": 0,
          "t_user_extra_id": 1
        },
        "TableName": "t_user_extra_t_user",
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select t_user_extra_0.col, t_user_extra_0.id from t_user_extra_0 where 1 != 1",
            "Query": "select t_user_extra.col, t_user_extra.id from t_user_extra",
            "Table": "t_user_extra"
          },
          {
            "OperatorType": "TableRoute",
            "Variant": "EqualUnique-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select :t_user_extra_col + t_user_0.col from t_user_0 where 1 != 1",
            "Query": "select :t_user_extra_col + t_user.col from t_user where t_user.id = :t_user_extra_id",
            "Table": "t_user",
            "Values": [
              ":t_user_extra_id"
            ],
            "Vindex": "user_index"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user",
        "user.t_user_extra"
      ]
    }
  },
  {
    "comment": "Single table sharded scatter",
    "query": "select col from t_user for update",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select col from t_user for update",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select col from t_user_0 where 1 != 1",
        "Query": "select col from t_user for update",
        "Table": "t_user"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "join push down using shard key",
    "query": "select u.name from t_user u join t_user_extra ue on u.id = ue.user_id ",
    "plan": "VT12001: unsupported: multiple tables in split table"
  },
  {
    "comment": ",join push down using shard key",
    "query": "select t_user.name,t_user_extra.col from t_user,t_user_extra where t_user.id=t_user_extra.user_id",
    "plan": "VT12001: unsupported: multiple tables in split table"
  },
  {
    "comment": "multiple tables",
    "query": "select count(*) from t_user,t_user_extra where t_user.id=t_user_extra.user_id",
    "plan": "VT12001: unsupported: multiple tables in split table"
  },
  {
    "comment": "for update",
    "query": "select t_user.col from t_user join t_user_extra for update",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select t_user.col from t_user join t_user_extra for update",
      "Instructions": {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "L:0",
        "TableName": "t_user_t_user_extra",
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select t_user_0.col from t_user_0 where 1 != 1",
            "Query": "select t_user.col from t_user for update",
            "Table": "t_user"
          },
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select 1 from t_user_extra_0 where 1 != 1",
            "Query": "select 1 from t_user_extra for update",
            "Table": "t_user_extra"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user",
        "user.t_user_extra"
      ]
    }
  },
  {
    "comment": "Hex number is not treated as a simple value",
    "query": "select * from t_user where id = 0x04",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select * from t_user where id = 0x04",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "EqualUnique-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select * from t_user_0 where 1 != 1",
        "Query": "select * from t_user where id = 0x04",
        "Table": "t_user",
        "Values": [
          "VARBINARY(\"\\x04\")"
        ],
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "select t_user.id, trim(leading 'x' from t_user.name) from t_user",
    "query": "select t_user.id, trim(leading 'x' from t_user.name) from t_user",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select t_user.id, trim(leading 'x' from t_user.name) from t_user",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select t_user_0.id, trim(leading 'x' from t_user_0.`name`) from t_user_0 where 1 != 1",
        "Query": "select t_user.id, trim(leading 'x' from t_user.`name`) from t_user",
        "Table": "t_user"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "json utility functions",
    "query": "select jcol, JSON_STORAGE_SIZE(jcol), JSON_STORAGE_FREE(jcol), JSON_PRETTY(jcol) from t_user",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select jcol, JSON_STORAGE_SIZE(jcol), JSON_STORAGE_FREE(jcol), JSON_PRETTY(jcol) from t_user",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select jcol, json_storage_size(jcol), json_storage_free(jcol), json_pretty(jcol) from t_user_0 where 1 != 1",
        "Query": "select jcol, json_storage_size(jcol), json_storage_free(jcol), json_pretty(jcol) from t_user",
        "Table": "t_user"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Json extract and json unquote shorthands",
    "query": "SELECT a->\"$[4]\", a->>\"$[3]\" from t_user",
    "plan": {
      "QueryType": "SELECT",
      "Original": "SELECT a->\"$[4]\", a->>\"$[3]\" from t_user",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select a -> '$[4]', a ->> '$[3]' from t_user_0 where 1 != 1",
        "Query": "select a -> '$[4]', a ->> '$[3]' from t_user",
        "Table": "t_user"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "insert function using column names as arguments",
    "query": "select insert(tcol1, id, 3, tcol2) from t_user",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select insert(tcol1, id, 3, tcol2) from t_user",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select insert(tcol1, id, 3, tcol2) from t_user_0 where 1 != 1",
        "Query": "select insert(tcol1, id, 3, tcol2) from t_user",
        "Table": "t_user"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "(OR 1 = 0) doesn't cause unnecessary scatter",
    "query": "select * from t_user where id = 1 or 1 = 0",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select * from t_user where id = 1 or 1 = 0",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "EqualUnique-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select * from t_user_0 where 1 != 1",
        "Query": "select * from t_user where id = 1",
        "Table": "t_user",
        "Values": [
          "INT64(1)"
        ],
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "(OR 2 < 1) doesn't cause unnecessary scatter",
    "query": "select * from t_user where id = 1 or 2 < 1",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select * from t_user where id = 1 or 2 < 1",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "EqualUnique-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select * from t_user_0 where 1 != 1",
        "Query": "select * from t_user where id = 1",
        "Table": "t_user",
        "Values": [
          "INT64(1)"
        ],
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "allow last_insert_id with argument",
    "query": "select last_insert_id(id) from t_user",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select last_insert_id(id) from t_user",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "Scatter-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select last_insert_id(id) from t_user_0 where 1 != 1",
        "Query": "select last_insert_id(id) from t_user",
        "Table": "t_user"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  }
]