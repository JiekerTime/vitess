[
  {
    "comment": "join on having clause",
    "query": "select e.col, u.id uid, e.id eid from t_user u join t_user_extra e having uid = eid",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select e.col, u.id uid, e.id eid from t_user u join t_user_extra e having uid = eid",
      "Instructions": {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "L:0,R:0,L:1",
        "JoinVars": {
          "e_id": 1
        },
        "TableName": "t_user_extra_t_user",
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select e.col, e.id as eid from t_user_extra_0 as e where 1 != 1",
            "Query": "select e.col, e.id as eid from t_user_extra as e",
            "Table": "t_user_extra"
          },
          {
            "OperatorType": "TableRoute",
            "Variant": "EqualUnique-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select u.id as uid from t_user_0 as u where 1 != 1",
            "Query": "select u.id as uid from t_user as u where u.id = :e_id",
            "Table": "t_user",
            "Values": [
              ":e_id"
            ],
            "Vindex": "user_index"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user",
        "user.t_user_extra"
      ]
    }
  },
  {
    "comment": "bind var already in use",
    "query": "select e.col, u.id uid, e.id eid from t_user u join t_user_extra e having uid = eid and e.col = :uid",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select e.col, u.id uid, e.id eid from t_user u join t_user_extra e having uid = eid and e.col = :uid",
      "Instructions": {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "L:0,R:0,L:1",
        "JoinVars": {
          "e_id": 1
        },
        "TableName": "t_user_extra_t_user",
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-EqualUnique",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select e.col, e.id as eid from t_user_extra_0 as e where 1 != 1",
            "Query": "select e.col, e.id as eid from t_user_extra as e where e.col = :uid",
            "Table": "t_user_extra",
            "TableValues": [
              ":uid"
            ]
          },
          {
            "OperatorType": "TableRoute",
            "Variant": "EqualUnique-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select u.id as uid from t_user_0 as u where 1 != 1",
            "Query": "select u.id as uid from t_user as u where u.id = :e_id",
            "Table": "t_user",
            "Values": [
              ":e_id"
            ],
            "Vindex": "user_index"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user",
        "user.t_user_extra"
      ]
    }
  },
  {
    "comment": "wire-up join with join, going left",
    "query": "select u1.id from t_user u1 join t_user u2 join t_user u3 where u3.col = u1.col",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select u1.id from t_user u1 join t_user u2 join t_user u3 where u3.col = u1.col",
      "Instructions": {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "R:0",
        "TableName": "t_user_t_user_t_user",
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select 1 from t_user_0 as u2 where 1 != 1",
            "Query": "select 1 from t_user as u2",
            "Table": "t_user"
          },
          {
            "OperatorType": "Join",
            "Variant": "Join",
            "JoinColumnIndexes": "L:0",
            "JoinVars": {
              "u1_col": 1
            },
            "TableName": "t_user_t_user",
            "Inputs": [
              {
                "OperatorType": "TableRoute",
                "Variant": "Scatter-Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select u1.id, u1.col from t_user_0 as u1 where 1 != 1",
                "Query": "select u1.id, u1.col from t_user as u1",
                "Table": "t_user"
              },
              {
                "OperatorType": "TableRoute",
                "Variant": "Scatter-EqualUnique",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select 1 from t_user_0 as u3 where 1 != 1",
                "Query": "select 1 from t_user as u3 where u3.col = :u1_col",
                "Table": "t_user",
                "TableValues": [
                  ":u1_col"
                ]
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "wire-up join with join, going left, then right",
    "query": "select u1.id from t_user u1 join t_user u2 join t_user u3 where u3.col = u2.col",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select u1.id from t_user u1 join t_user u2 join t_user u3 where u3.col = u2.col",
      "Instructions": {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "L:0",
        "TableName": "t_user_t_user_t_user",
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select u1.id from t_user_0 as u1 where 1 != 1",
            "Query": "select u1.id from t_user as u1",
            "Table": "t_user"
          },
          {
            "OperatorType": "Join",
            "Variant": "Join",
            "JoinVars": {
              "u2_col": 0
            },
            "TableName": "t_user_t_user",
            "Inputs": [
              {
                "OperatorType": "TableRoute",
                "Variant": "Scatter-Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select u2.col from t_user_0 as u2 where 1 != 1",
                "Query": "select u2.col from t_user as u2",
                "Table": "t_user"
              },
              {
                "OperatorType": "TableRoute",
                "Variant": "Scatter-EqualUnique",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select 1 from t_user_0 as u3 where 1 != 1",
                "Query": "select 1 from t_user as u3 where u3.col = :u2_col",
                "Table": "t_user",
                "TableValues": [
                  ":u2_col"
                ]
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "wire-up join with join, reuse existing result from a lower join",
    "query": "select u1.id from t_user u1 join t_user u2 on u2.col = u1.col join t_user u3 where u3.col = u1.col",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select u1.id from t_user u1 join t_user u2 on u2.col = u1.col join t_user u3 where u3.col = u1.col",
      "Instructions": {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "R:0",
        "JoinVars": {
          "u3_col": 0
        },
        "TableName": "t_user_t_user_t_user",
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select u3.col from t_user_0 as u3 where 1 != 1",
            "Query": "select u3.col from t_user as u3",
            "Table": "t_user"
          },
          {
            "OperatorType": "Join",
            "Variant": "Join",
            "JoinColumnIndexes": "L:0",
            "JoinVars": {
              "u1_col": 1
            },
            "TableName": "t_user_t_user",
            "Inputs": [
              {
                "OperatorType": "TableRoute",
                "Variant": "Scatter-EqualUnique",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select u1.id, u1.col from t_user_0 as u1 where 1 != 1",
                "Query": "select u1.id, u1.col from t_user as u1 where u1.col = :u3_col",
                "Table": "t_user",
                "TableValues": [
                  ":u3_col"
                ]
              },
              {
                "OperatorType": "TableRoute",
                "Variant": "Scatter-EqualUnique",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select 1 from t_user_0 as u2 where 1 != 1",
                "Query": "select 1 from t_user as u2 where u2.col = :u1_col",
                "Table": "t_user",
                "TableValues": [
                  ":u1_col"
                ]
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "wire-up join with join, reuse existing result from a lower join.\n# You need two levels of join nesting to test this: when u3 requests\n# col from u1, the u1-u2 joins exports the column to u2-u3. When\n# u4 requests it, it should be reused from the u1-u2 join.",
    "query": "select u1.id from t_user u1 join t_user u2 join t_user u3 on u3.id = u1.col join t_user u4 where u4.col = u1.col",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select u1.id from t_user u1 join t_user u2 join t_user u3 on u3.id = u1.col join t_user u4 where u4.col = u1.col",
      "Instructions": {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "R:0",
        "TableName": "t_user_t_user_t_user_t_user",
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select 1 from t_user_0 as u2 where 1 != 1",
            "Query": "select 1 from t_user as u2",
            "Table": "t_user"
          },
          {
            "OperatorType": "Join",
            "Variant": "Join",
            "JoinColumnIndexes": "R:0",
            "JoinVars": {
              "u4_col": 0
            },
            "TableName": "t_user_t_user_t_user",
            "Inputs": [
              {
                "OperatorType": "TableRoute",
                "Variant": "Scatter-Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select u4.col from t_user_0 as u4 where 1 != 1",
                "Query": "select u4.col from t_user as u4",
                "Table": "t_user"
              },
              {
                "OperatorType": "Join",
                "Variant": "Join",
                "JoinColumnIndexes": "L:0",
                "JoinVars": {
                  "u1_col": 1
                },
                "TableName": "t_user_t_user",
                "Inputs": [
                  {
                    "OperatorType": "TableRoute",
                    "Variant": "Scatter-EqualUnique",
                    "Keyspace": {
                      "Name": "user",
                      "Sharded": true
                    },
                    "FieldQuery": "select u1.id, u1.col from t_user_0 as u1 where 1 != 1",
                    "Query": "select u1.id, u1.col from t_user as u1 where u1.col = :u4_col",
                    "Table": "t_user",
                    "TableValues": [
                      ":u4_col"
                    ]
                  },
                  {
                    "OperatorType": "TableRoute",
                    "Variant": "EqualUnique-Scatter",
                    "Keyspace": {
                      "Name": "user",
                      "Sharded": true
                    },
                    "FieldQuery": "select 1 from t_user_0 as u3 where 1 != 1",
                    "Query": "select 1 from t_user as u3 where u3.id = :u1_col",
                    "Table": "t_user",
                    "Values": [
                      ":u1_col"
                    ],
                    "Vindex": "user_index"
                  }
                ]
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Test reuse of join var already being supplied to the right of a node.",
    "query": "select u1.id from t_user u1 join (t_user u2 join t_user u3) where u2.id = u1.col and u3.id = u1.col",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select u1.id from t_user u1 join (t_user u2 join t_user u3) where u2.id = u1.col and u3.id = u1.col",
      "Instructions": {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "L:0",
        "JoinVars": {
          "u1_col": 1
        },
        "TableName": "t_user_t_user_t_user",
        "Inputs": [
          {
            "OperatorType": "Join",
            "Variant": "Join",
            "JoinColumnIndexes": "L:0,L:1",
            "JoinVars": {
              "u1_col": 1
            },
            "TableName": "t_user_t_user",
            "Inputs": [
              {
                "OperatorType": "TableRoute",
                "Variant": "Scatter-Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select u1.id, u1.col from t_user_0 as u1 where 1 != 1",
                "Query": "select u1.id, u1.col from t_user as u1",
                "Table": "t_user"
              },
              {
                "OperatorType": "TableRoute",
                "Variant": "EqualUnique-Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select 1 from t_user_0 as u2 where 1 != 1",
                "Query": "select 1 from t_user as u2 where u2.id = :u1_col",
                "Table": "t_user",
                "Values": [
                  ":u1_col"
                ],
                "Vindex": "user_index"
              }
            ]
          },
          {
            "OperatorType": "TableRoute",
            "Variant": "EqualUnique-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select 1 from t_user_0 as u3 where 1 != 1",
            "Query": "select 1 from t_user as u3 where u3.id = :u1_col",
            "Table": "t_user",
            "Values": [
              ":u1_col"
            ],
            "Vindex": "user_index"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "wire-up with limit primitive",
    "query": "select u.id, e.id from t_user u join t_user_extra e where e.id = u.col limit 10",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select u.id, e.id from t_user u join t_user_extra e where e.id = u.col limit 10",
      "Instructions": {
        "OperatorType": "Limit",
        "Count": "INT64(10)",
        "Inputs": [
          {
            "OperatorType": "Join",
            "Variant": "Join",
            "JoinColumnIndexes": "L:0,R:0",
            "JoinVars": {
              "u_col": 1
            },
            "TableName": "t_user_t_user_extra",
            "Inputs": [
              {
                "OperatorType": "TableRoute",
                "Variant": "Scatter-Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select u.id, u.col from t_user_0 as u where 1 != 1",
                "Query": "select u.id, u.col from t_user as u",
                "Table": "t_user"
              },
              {
                "OperatorType": "TableRoute",
                "Variant": "Scatter-Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select e.id from t_user_extra_0 as e where 1 != 1",
                "Query": "select e.id from t_user_extra as e where e.id = :u_col",
                "Table": "t_user_extra"
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "user.t_user",
        "user.t_user_extra"
      ]
    }
  },
  {
    "comment": "Wire-up in underlying primitive after pullout",
    "query": "select u.id, e.id, (select col from t_user) from t_user u join t_user_extra e where e.id = u.col limit 10",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select u.id, e.id, (select col from t_user) from t_user u join t_user_extra e where e.id = u.col limit 10",
      "Instructions": {
        "OperatorType": "Limit",
        "Count": "INT64(10)",
        "Inputs": [
          {
            "OperatorType": "Subquery",
            "Variant": "PulloutValue",
            "PulloutVars": [
              "__sq1"
            ],
            "Inputs": [
              {
                "OperatorType": "TableRoute",
                "Variant": "Scatter-Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select col from t_user_0 where 1 != 1",
                "Query": "select col from t_user",
                "Table": "t_user"
              },
              {
                "OperatorType": "Join",
                "Variant": "Join",
                "JoinColumnIndexes": "L:1,R:0,L:2",
                "JoinVars": {
                  "u_col": 0
                },
                "TableName": "t_user_t_user_extra",
                "Inputs": [
                  {
                    "OperatorType": "TableRoute",
                    "Variant": "Scatter-Scatter",
                    "Keyspace": {
                      "Name": "user",
                      "Sharded": true
                    },
                    "FieldQuery": "select u.col, u.id, :__sq1 from t_user_0 as u where 1 != 1",
                    "Query": "select u.col, u.id, :__sq1 from t_user as u",
                    "Table": "t_user"
                  },
                  {
                    "OperatorType": "TableRoute",
                    "Variant": "Scatter-Scatter",
                    "Keyspace": {
                      "Name": "user",
                      "Sharded": true
                    },
                    "FieldQuery": "select e.id from t_user_extra_0 as e where 1 != 1",
                    "Query": "select e.id from t_user_extra as e where e.id = :u_col",
                    "Table": "t_user_extra"
                  }
                ]
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "user.t_user",
        "user.t_user_extra"
      ]
    }
  },
  {
    "comment": "Invalid value in IN clause",
    "query": "select id from t_user where id in (18446744073709551616, 1)",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select id from t_user where id in (18446744073709551616, 1)",
      "Instructions": {
        "OperatorType": "TableRoute",
        "Variant": "IN-Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from t_user_0 where 1 != 1",
        "Query": "select id from t_user where id in ::__vals",
        "Table": "t_user",
        "Values": [
          "(DECIMAL(18446744073709551616), INT64(1))"
        ],
        "Vindex": "user_index"
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Invalid value in IN clause from LHS of join",
    "query": "select u1.id from t_user u1 join t_user u2 where u1.id = 18446744073709551616",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select u1.id from t_user u1 join t_user u2 where u1.id = 18446744073709551616",
      "Instructions": {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "L:0",
        "TableName": "t_user_t_user",
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "EqualUnique-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select u1.id from t_user_0 as u1 where 1 != 1",
            "Query": "select u1.id from t_user as u1 where u1.id = 18446744073709551616",
            "Table": "t_user",
            "Values": [
              "DECIMAL(18446744073709551616)"
            ],
            "Vindex": "user_index"
          },
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select 1 from t_user_0 as u2 where 1 != 1",
            "Query": "select 1 from t_user as u2",
            "Table": "t_user"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  },
  {
    "comment": "Invalid value in IN clause from RHS of join",
    "query": "select u1.id from t_user u1 join t_user u2 where u2.id = 18446744073709551616",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select u1.id from t_user u1 join t_user u2 where u2.id = 18446744073709551616",
      "Instructions": {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "L:0",
        "TableName": "t_user_t_user",
        "Inputs": [
          {
            "OperatorType": "TableRoute",
            "Variant": "Scatter-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select u1.id from t_user_0 as u1 where 1 != 1",
            "Query": "select u1.id from t_user as u1",
            "Table": "t_user"
          },
          {
            "OperatorType": "TableRoute",
            "Variant": "EqualUnique-Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select 1 from t_user_0 as u2 where 1 != 1",
            "Query": "select 1 from t_user as u2 where u2.id = 18446744073709551616",
            "Table": "t_user",
            "Values": [
              "DECIMAL(18446744073709551616)"
            ],
            "Vindex": "user_index"
          }
        ]
      },
      "TablesUsed": [
        "user.t_user"
      ]
    }
  }
]
